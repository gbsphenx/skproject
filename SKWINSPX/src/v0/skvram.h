
#ifndef _SKCODE_VRAM_H_
#define _SKCODE_VRAM_H_

#include <sktypes.h>


class SkVRAM
{
private:
	X8* VRAM;
	X8* xVGAPalette;

	UINT VRAM_SCREEN_WIDTH;
	UINT VRAM_SCREEN_HEIGHT;

public:
	SkVRAM();
	virtual ~SkVRAM();

	X8* GET_VIDEO_ARRAY();
	X8* GET_PALETTE();
	UINT GET_VRAM_WIDTH() { return VRAM_SCREEN_WIDTH ; };
	UINT GET_VRAM_HEIGHT() { return VRAM_SCREEN_HEIGHT ; };

	UINT COPY_VRAM_DATA(X8* xSourceVRAMData);

	UINT INIT_GREYSCALE_PALETTE();
	UINT INIT_VGA_PALETTE();
	UINT SET_VGA_PALETTE_BMP8(X8 *xBMPPalette);
	UINT SET_VGA_PALETTE_3RGB(X8 *xRGBPalette);
	UINT SET_VGA_PALETTE_3RGB6(X8 *xRGBPalette);

	UINT SET_TEST_TITLE();
	UINT SET_TEST_VRAM_STATIC();
	UINT SET_TEST_VRAM_GRADIENT();
};

//int SKVRAM_();
/*
int SKVRAM_UPDATE_VRAM_TEST_TITLE();
int SKVRAM_SET_VRAM(X8* pVRAM);
int SKVRAM_SET_VGAPAL(X8* pVGAPAL);
*/
#endif // _SKCODE_VRAM_H_