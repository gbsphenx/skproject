#include "addon.h"
#include "driver.h" // DRVW_mousevisicnt
#include "dm2global.h"
#include "dm2data.h"
#include "mdata.h"
#include "src/c_alloc.h"
#include "src/c_dballoc.h"
#include "src/c_mouse.h"
#include "src/c_gfx_pal.h"
#include "src/c_gfx_stretch.h"
#include "src/c_gfx_misc.h"
#include "src/c_gfx_blit.h"
#include "src/c_gfx_str.h"
#include "src/c_gfx_fill.h"
#include "src/c_gfx_decode.h"
#include "src/c_savegame.h"
#include "calls.h"

#include "../skwin/defines.h"

#include "dm2debug.h"

// BUGS: resume-button after party died
// Spell-damage, moving backwards to new level!
// set enable_video = false during certain palette-operations?
// TODO: SKW_3e74_5673, check if 1st arg really needs to be a long
// TODO: some more BUGS. check stop=1 for them.

// TODO: original BUG: here is a chance for an uninitialized wordrg5.
//  It cannot be the incoming, because that is a pointer,
// but here it is no pointer (compare is wordwise).
// For that I set a preinit of 0.
// (The only caller is SKW_QUERY_PICST_IT - eaxpimg given to RG5P
// TODO: There is more odd with RG1Bhi!
void SKW_44c8_2351(t_gfxdata* eaxpg, x16 ebxw, x16 ecxw, t_gfxdata* edxpg, x16 argw0, x16 argw1)
{
  x16 wordrg5 = con(0x0); // TODO: BUGFIX original problem???
  ddata.srcbmp = eaxpg;
  ddata.destbmp = edxpg;
  x16 vw_04 = (ebxw << con(0x7)) / argw0;
  x16 vw_10 = (ecxw << con(0x7)) / argw1;
  x16 vw_08 = vw_10 / 2;
  x16 vw_0c = con(0x0);
  for(;;)
  {
    x16 wordrg4 = vw_0c;
    if (wordrg4 >= argw1)
      return;
    x16 wordrg1 = urshift(vw_08, con(0x7));
    x16 vw_18 = wordrg1;
    if (wordrg5 != wordrg1 || wordrg4 == con(0x0))
    {
      x16 wordrg3 = argw0;
      x16 wordrg11 = vw_04;
      t_gfxdata* gptrrg6 = &edxpg[argw0 * vw_0c];
      wordrg5 = vw_18 * ebxw;
      t_gfxdata* gptrrg5 = &eaxpg[wordrg5]; // index was + rg2l, which was unsignedlong(RG1Bhi), and this was set by unsignedlong(vw_04), so 0 
      x8 byterg4h = CUTX8(wordrg11);
      wordrg11 *= 2;
      x8 byterg4 = CUTX8(wordrg11);
      x8 byterg2 = CUTX8(wordrg11 >> con(0x8)); // was RG1Bhi; RG1W was doubled, so this one can be nonzero
      do
      {
        *gptrrg6++ = *gptrrg5;
        ui16 tmp = unsignedword(byterg4h) + unsignedword(byterg4);
        byterg4h += byterg4;
        gptrrg5 += byterg2 + ((tmp & 0xff00) != con(0x0) ? 1 : 0);
      } while (--wordrg3 != con(0x0));
    }
    else
    {
      ddata.srcbmp = edxpg;
//                            srcofs               width         destofs
      DM2_blit8pppixel((vw_0c - con(0x1)) * argw0, argw0, wordrg4 * argw0);
      ddata.srcbmp = eaxpg;
    }
    wordrg5 = vw_18;
    vw_08 += vw_10;
    vw_0c++;
  }
}

x16 SKW_48ae_05ae(x16 eaxw, x16 ebxw, x16 ecxw, x8 edxb, x16 argw0, x16 argw1)
{
  x16 vw_0c;
  x16 vw_14;

  x16 vw_10 = ebxw;
  x8 byterg2 = SKW_GET_ITEMTYPE_OF_ITEMSPEC_ACTUATOR(eaxw);
  x16 wordrg5 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(SKW_QUERY_ITEMDB_FROM_DISTINCTIVE_ITEMTYPE(eaxw), con(0xb), con(0x2), byterg2); // BUGFIX 4.1/2014
  s_x40bytes*  ptrrg6 = UPCAST(s_x40bytes, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x40)));
  x16 wordrg22 = vw_10 * con(0x3) + con(0x12);
  vw_14 = SKW_QUERY_GDAT_CREATURE_WORD_VALUE(edxb, CUTX8(vw_10) * con(0x3) + con(0xffffffa2));
  if (vw_14 != con(0x0) && SKW_QUERY_CREATURES_ITEM_MASK(edxb, ptrrg6, false, CUTX8(wordrg22)))
    if (((con(0x1) << (eaxw & con(0x7))) & ptrrg6->barr_00[eaxw >> con(0x3)]) != con(0x0)) // BUGFIX 4.1/2014
      wordrg5 = vw_14 * wordrg5 / con(0x64);
  x16 wordrg21 = vw_10 * con(0x3) + con(0x11);
  vw_0c = SKW_QUERY_GDAT_CREATURE_WORD_VALUE(edxb, CUTX8(vw_10) * con(0x3) + con(0xffffffa1));
  if (vw_0c != con(0x0))
    if (SKW_QUERY_CREATURES_ITEM_MASK(edxb, ptrrg6, false, CUTX8(wordrg21))) // BUGFIX 2 / 2014
      if (((con(0x1) << (eaxw & con(0x7))) & ptrrg6->barr_00[ulrshift(eaxw, con(0x10), con(0x13))]) != con(0x0))
        wordrg5 = vw_0c * wordrg5 / con(0x64);
  DM2_DEALLOC_LOBIGPOOL(con(0x40));
  if (argw1 < con(0x0))
    argw1 = unsignedword(SKW_GET_MAX_CHARGE(SKW_GET_ITEMDB_OF_ITEMSPEC_ACTUATOR(eaxw) << con(0xa))); // BUGFIX 4.1/2014
  wordrg5 += DM2_QUERY_GDAT_ENTRY_DATA_INDEX(SKW_QUERY_ITEMDB_FROM_DISTINCTIVE_ITEMTYPE(eaxw), con(0xb), con(0x35), SKW_GET_ITEMTYPE_OF_ITEMSPEC_ACTUATOR(eaxw)) * argw1;
  if (argw0 != con(0x0))
  {
    x16 wordrg11 = SKW_QUERY_GDAT_CREATURE_WORD_VALUE(edxb, CUTX8(vw_10) * con(0x3) + con(0xffffffa0));
    if (wordrg11 == con(0x0))
      wordrg11 = con(0xa);
    wordrg11 *= wordrg5;
    wordrg11 /= con(0x64);
    if (ecxw == con(0x0))
    {
      if (wordrg5 > con(0x1))
        wordrg5 -= DM2_MAX(wordrg11, con(0x1));
    }
    else
      wordrg5 += wordrg11;
  }
  return wordrg5;
}

void SKW_12b4_023f(x16 eaxw, x16* ebxpw, x16* ecxpw, x16 edxw, x16 argw0, x16 argw1)
{
  x16 vwa_08[0xa];

  argw1 += argw0 + con(0x2);
  *ebxpw = vwa_08[0x0] = SKW_2c1d_028c(eaxw, argw1 & con(0x3), edxw);
  *ecxpw = vwa_08[0x1] = SKW_2c1d_028c(eaxw, (argw1 + con(0x1)) & con(0x3), edxw);
  if (vwa_08[0x0] == vwa_08[0x1])
    vwa_08[0x1] = con(0xffffffff);
  for (x16 wordrg6 = con(0x0); wordrg6 < con(0x2); wordrg6++)
    if (vwa_08[wordrg6] >= con(0x0))
      if (SKW_WOUND_PLAYER(vwa_08[wordrg6], con(0x18), con(0x2), con(0x1)) != con(0x0))
        SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x8a), con(0xfe), ddata.hero[vwa_08[wordrg6]].b101, eaxw, edxw, con(0x1), con(0x64), con(0xc8));
}

bool SKW_12b4_0953(c_record* eaxprec, x16 edxw)
{
  x16 wordrg2 = (ulrshift(eaxprec->ue.w, con(0x6), con(0xe)) + edxw) & con(0x3);
  if (wordrg2 == con(0x1) || wordrg2 == con(0x3))
    if (((SKW_QUERY_CREATURE_5x5_POS(eaxprec, wordrg2) % con(0x5)) - con(0x2)) != con(0x0))
      return true;
  return false;
}

void SKW_LOAD_NEWMAP(x16 eaxw, x16 ebxw, bool ecxbool, x16 edxw)
{
  if (!dm2_dballochandler.v1e0a84)
  {
    SKW_FIRE_HIDE_MOUSE_CURSOR();
    if (ecxbool)
      SKW_3a15_38b6(false);
  }
  SKW_LOAD_LOCALLEVEL_GRAPHICS_TABLE(eaxw, ebxw, edxw);
  SKW_LOAD_LOCALLEVEL_DYN();
  if (!dm2_dballochandler.v1e0a84)
  {
    SKW_3a15_38b6(true);
    SKW_FILL_CAII_CUR_MAP();
    ddata.v1e0390.b0 |= con(0x2);
    SKW_CHECK_RECOMPUTE_LIGHT();
    if (dm2_dballochandler.v1e13fe[0] == con(0x0)) // TODO: v1e13fe probably a bool-array
      SKW_1031_098e();
    SKW_FIRE_SHOW_MOUSE_CURSOR();
  }
}

c_350* SKW_13e4_0004(x16 eaxw, x8 ebxb, x16 ecxw, x8 edxb)
{
  c_350* ptrrg5 = NULL;
  x16 vw_00 = ddata.v1d3248;
  ddata.v1d3248 = con(0xffffffff);
  SKW_1c9a_0648(vw_00);
  ddata.v1e08a8 = con(0xffffffff);
  if (ddata.s350.v1e07ea != con(0x0))
  {
    ptrrg5 = UPCAST(c_350, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x350)));
    SKW_COPY_MEMORY(DOWNCAST(c_350, &ddata.s350), con(0x350), DOWNCAST(c_350, ptrrg5));
  }
  ddata.s350.v1e07ea = con(0x1);
  ddata.s350.v1e07eb = con(0x0);
  ddata.s350.v1e054c = eaxw;
  c_record* recoptrrg3 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  ddata.s350.v1e054e = recoptrrg3;
  s_d556* sd5ptrrg2;
  if (recoptrrg3->u4.b.b1 == con(0xffffffff))
    sd5ptrrg2 = NULL;
  else
    sd5ptrrg2 = &ddata.v1e089c[recoptrrg3->u4.b.b1];
  ddata.s350.v1e0556 = sd5ptrrg2;
  ddata.s350.v1e0552 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg3->u4.b.b0);
  ddata.s350.v1e055e = SKW_1c9a_02c3(recoptrrg3, ddata.s350.v1e0552);
  ddata.s350.v1e0571 = CUTX8(vw_00);
  ddata.s350.v1e0562.un.l_00 = (signedlong(vw_00) << con(0x18)) | ddata.longmallocx;
  ddata.s350.v1e0562.b_05 = recoptrrg3->u4.b.b0;
  ddata.s350.v1e0562.b_04 = CUTX8(ecxw);
  ddata.s350.v1e0562.u.b.b_06 = edxb;
  ddata.s350.v1e0562.u.b.b_07 = ebxb;
  ddata.s350.v1e055a = NULL;
  ddata.s350.v1e0570 = con(0x0);
  ddata.s350.v1e0584 = con(0xffffffff);
  if (ecxw == con(0x22))
  {
    ddata.s350.v1e0572 = con(0x0);
    ddata.s350.v1e0574 = con(0x0);
    x8 byterg1 = sd5ptrrg2->u.v.b1a;
    if (byterg1 == con(0xffffffff))
      byterg1 = con(0x0);
    ddata.s350.v1e056e = byterg1;
    DM2_ZERO_MEMORY(DOWNCAST(x16, &sd5ptrrg2->u.v.u18.w), con(0xa)); // okay, fills the rest of the struct
    sd5ptrrg2->u.v.b1a = con(0xffffffff);
  }
  return ptrrg5;
}

void SKW_13e4_01a3(void)
{
  if (ddata.s350.v1e07eb == con(0x0))
  {
    ddata.s350.v1e07eb = con(0x1);
    c_aispec* aiptrrg2 = ddata.s350.v1e0552;
    c_record* recoptrrg3 = ddata.s350.v1e054e;
    if (ddata.s350.v1e0584 == con(0xffffffff))
      ddata.s350.v1e0584 = SKW_QUERY_GDAT_CREATURE_WORD_VALUE(recoptrrg3->u4.b.b0, con(0x1));
    ddata.s350.v1e0576 = aiptrrg2->wa;
    ddata.s350.v1e0578 = aiptrrg2->we;
    ddata.s350.v1e057a = aiptrrg2->w10;
    ddata.s350.v1e057c = aiptrrg2->wc;
    ddata.s350.v1e057e = aiptrrg2->w12;
    if (SKW_1c9a_08bd(recoptrrg3))
      ddata.s350.v1e0576 &= con(0x7fff);
    ddata.s350.v1e058c = con(0x1);
    DM2_ZERO_MEMORY(ddata.s350.v1e07ee, con(0xa8));
    ddata.s350.v1e0898 = NULL;
    ddata.s350.v1e0896 = con(0x4);
    ddata.s350.v1e07ec = con(0x0);
    ddata.s350.v1e0582 = SKW_QUERY_GDAT_CREATURE_WORD_VALUE(recoptrrg3->u4.b.b0, con(0x7));
    x16 wordrg3 = signedword(CUTLX8(ddata.longmallocx) - ddata.s350.v1e0556->barr04[con(0x0)]);
    if (wordrg3 < con(0x0))
      wordrg3 += con(0x100); // mod
    x16 wordrg2 = 2 * (con(0xf) - (aiptrrg2->w16 & con(0xf)));
    x32 rg1l = con(0x1837a7); // TODO: O_O BUG? because it's compared against 0 only
    x16 wordrg4 = (rg1l == con(0x0)) ? con(0x0) : (signedlong(wordrg2) / 4);
    wordrg2++;
    wordrg4 += SKW_RAND16(wordrg2);
    ddata.s350.v1e058d = (wordrg4 <= wordrg3) ? 1 : 0;
    x16 vw_00;
    if (SKW_3e74_5673(UI32CAST(ddata.s350.v1e054c & con(0x3ff)) | con(0x20000000), con(0x0), &vw_00) != con(0x0))
      SKW_COPY_MEMORY(DOWNCAST(t_gfxdata, SKW_3e74_5817(vw_00)), con(0xe), DOWNCAST(c_bbbbwwwp, &ddata.s350.v1e07d8)); // TODO: ATTENTION destination type
    else
    {
      DM2_ZERO_MEMORY(DOWNCAST(c_bbbbwwwp, &ddata.s350.v1e07d8), con(0xe));
      ddata.s350.v1e07d8.b3 = con(0xffffffff);
      ddata.s350.v1e07d8.w8 = con(0xffffffff);
    }
  }
}

void SKW_13e4_0360(x16 eaxw, x16 ebxw, x8 ecxb, x16 edxw, bool argbool0)
{
  x16 wordrg1 = eaxw;
  if (wordrg1 == con(0xffffffff))
  {
    wordrg1 = SKW_GET_CREATURE_AT(edxw, ebxw);
    if (wordrg1 == con(0xffffffff))
      return;
  }
  x16 wordrg4 = wordrg1;
  x8 byterg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg4)->u4.b.b1;
  if (byterg1 != con(0xffffffff))
  {
    s_d556* sd5ptrrg1 = &ddata.v1e089c[byterg1];
    if (sd5ptrrg1->u.v.barr16[con(0x1)] != con(0x13) && sd5ptrrg1->u.v.b1a != con(0x13))
    {
      sd5ptrrg1->u.v.barr16[con(0x1)] = ecxb;
      if (argbool0)
      {
        if ((table1d613a[sd5ptrrg1->u.v.b1a] & con(0x10)) == con(0x0))
        {
          SKW_1c9a_0db0(wordrg4);
          SKW_1c9a_0cf7(edxw, ebxw);
        }
        else
          sd5ptrrg1->u.v.b21 = con(0x1);
      }
    }
  }
}

void SKW_13e4_071b(void)
{
  x16* wptrrg2 = ddata.s350.v1e055e;
  if ((wptrrg2[con(0x1)] & con(0xe03f)) != con(0x8001))
  {
    x16 wordrg3 = R_4EA8(ddata.s350.v1e054e->u4.b.b0, wptrrg2[con(0x0)]);
    x16 wordrg5 = wptrrg2[con(0x1)] & con(0xfc0);
    x16 wordrg4 = (unsignedlong(wordrg5) + ddata.longmallocx) % wordrg3;
    if (wordrg4 != con(0x0))
    {
      wptrrg2[con(0x1)] = wordrg5 | con(0xc000) | wordrg3;
      SKW_1c9a_0db0(ddata.s350.v1e054c);
      x32 longrg4 = signedlong(wordrg3) - signedlong(wordrg4) + ddata.longmallocx;
      longrg4 |= unsignedlong(ddata.s350.v1e0571) << con(0x18);
      ddata.s350.v1e0562.un.l_00 = longrg4;
      ddata.s350.v1e0556->w02 = SKW_QUEUE_TIMER(&ddata.s350.v1e0562);
    }
    else
      wptrrg2[con(0x1)] = wordrg5 | con(0x8001);
  }
}

void SKW_13e4_0806(void)
{
  x16* wptrrg2 = ddata.s350.v1e055e;
  if ((wptrrg2[con(0x1)] & con(0xe000)) == con(0x8000) && (wptrrg2[con(0x1)] & con(0x3f)) > con(0x1))
    return;
  x16 wordrg3 = R_4EA8(ddata.s350.v1e054e->u4.b.b0, wptrrg2[con(0x0)]);
  x16 wordrg5 = wptrrg2[con(0x1)] & con(0xfc0);
  x16 wordrg4 = (unsignedlong(wordrg5) + ddata.longmallocx) % wordrg3;
  x16 wordrg1 = wordrg3 | wordrg5;
  if (wordrg4 != con(0x0))
  {
    wordrg1 |= con(0xa000);
    wptrrg2[con(0x1)] = wordrg1;
    SKW_1c9a_0db0(ddata.s350.v1e054c);
    x32 longrg4 = signedlong(wordrg3) - signedlong(wordrg4) + ddata.longmallocx;
    longrg4 |= unsignedlong(ddata.s350.v1e0571) << con(0x18);
    ddata.s350.v1e0562.un.l_00 = longrg4;
    ddata.s350.v1e0556->w02 = SKW_QUEUE_TIMER(&ddata.s350.v1e0562);
  }
  else
  {
    wordrg1 |= con(0x8000);
    wptrrg2[con(0x1)] = wordrg1;
  }
}

// was SKW_13e4_08ff
void SKW_ANIMATE_CREATURE(x16 eaxw, bool ebxbool, x16 edxw)
{
  x16 vw_04 = SKW_GET_CREATURE_AT(eaxw, edxw);
  if (vw_04 != con(0xffffffff))
  {
    x16 wordrg3 = vw_04;
    if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg3) & con(0x1)) != con(0x0) && SKW_GET_ADDRESS_OF_RECORD(wordrg3)->u4.b.b1 == con(0xffffffff))
      SKW_ALLOC_CAII_TO_CREATURE(wordrg3, edxw, eaxw);
    c_350* ptrrg4 = SKW_13e4_0004(vw_04, CUTX8(edxw), con(0x21), CUTLX8(eaxw));
    if (ddata.s350.v1e0556 != NULL)
    {
      if (ebxbool)
        SKW_13e4_0806();
      else
        SKW_13e4_071b();
    }
    SKW_13e4_0329(ptrrg4);
  }
}

void SKW_14cd_0276(c_sizex16* eaxpsx16)
{
  x16 wordrg1 = DM2_MAX(con(0x0), signedword(eaxpsx16->s_00.b_06));
  ddata.s350.v1e07d8.b1 = CUTX8(wordrg1);
  ddata.s350.v1e07d8.b0 = CUTX8(wordrg1);
  ddata.s350.v1e07d8.w8 = eaxpsx16->s_00.u_04.w;
  ddata.s350.v1e07d8.b3 = eaxpsx16->s_00.b_07;
  ddata.s350.v1e07d8.w4 = eaxpsx16->u_08.w;
  ddata.s350.v1e07d8.w6 = eaxpsx16->u_0a.w;
  ddata.s350.v1e07d8.b2 = eaxpsx16->b_0e[con(0x3)];
  ddata.s350.v1e07d8.phe_a = eaxpsx16->ps_12;
  t_gfxdata* gptrrg5 = NULL;
  if (wordrg1 > con(0x0))
  {
    x32 longrg3 = 2 * signedlong(wordrg1);
    x16 vw_00;
    x32 longrg1 = SKW_3e74_5673(UI32CAST(ddata.s350.v1e054c & con(0x3ff)) | con(0x30000000), con(0x1), &vw_00);
    if (longrg1 >= longrg3)
      gptrrg5 = SKW_3e74_5817(vw_00);
    else
    {
      if (longrg1 == con(0x0))
        gptrrg5 = UPCAST(t_gfxdata, DOWNCAST(s_xmalloc, SKW_ALLOC_CPXHEAP_MEM(vw_00, longrg3)));
      else
        gptrrg5 = UPCAST(t_gfxdata, DOWNCAST(s_xmalloc, SKW_3e74_5788(vw_00, longrg3)));
      SKW_3e74_585a(vw_00, true);
    }
    SKW_COPY_MEMORY(DOWNCAST(u_bbw, ddata.s350.v1e060e), longrg3, DOWNCAST(t_gfxdata, gptrrg5)); // TODO: special
  }
  ddata.s350.v1e07e6 = UPCAST(x16, gptrrg5); // TODO: special
}

x8 SKW_14cd_0389(void)
{
  x8 vb_00;
  bool boolrg1 = false;
  if (ddata.s350.v1e07d8.b0 != con(0x0) && ddata.s350.v1e07d8.b1 != con(0x0) && ddata.s350.v1e07d8.b3 != con(0xffffffff))
  {
    ddata.s350.v1e0674 = con(0x0);
    if (ddata.s350.v1e0556->u.v.b12 != con(0xffffffff))
    {
      vb_00 = ddata.s350.v1e0556->u.v.b12;
      x8 byterg41 = ddata.s350.v1e0556->u.v.b13;
      const s_seven* tmpp = table1d5f82[vb_00];
      x8 byterg4 = tmpp[byterg41].b0[con(0x6)];
      SKW_14cd_0f0a(tmpp[byterg4].b0[con(0x5)], vb_00, ddata.s350.v1e07d8.phe_a, byterg4);
    }
    if (ddata.s350.v1e0674 != con(0x0))
    {
      boolrg1 = SKW_1c9a_38a8();
      if (boolrg1)
        ddata.s350.v1e0556->u.v.u18.w = ddata.s350.v1e0678[0].s_00.u_02.w;
    }
    else
      boolrg1 = false;
  }
  return (!boolrg1) ? con(0xffffffff) : vb_00; // BUGFIX 4/2014
}

x8 SKW_14cd_062e(void)
{
  x8 byterg4 = con(0x0);
  x8 byterg4h = ddata.s350.v1e0556->u.v.b12;
  if (byterg4h != con(0xffffffff))
  {
    const s_seven* s7ptrrg4 = table1d5f82[byterg4h];
    const s_seven* s7ptrrg1 = &s7ptrrg4[ddata.s350.v1e0556->u.v.b13];
    byterg4 = s7ptrrg1->b0[con(0x5)] & con(0xffffffe0);
    if ((s7ptrrg1->b0[con(0x5)] & con(0x60)) == con(0x40))
      if (ddata.s350.v1e0571 != ddata.v1e08d6)
        byterg4 = con(0x0);
  }
  return byterg4;
}

x8 SKW_DECIDE_NEXT_XACT(void)
{
  x8 vb_00 = ddata.s350.v1e0556->u.v.b12;
  x8 byterg4h = ddata.s350.v1e0556->u.v.b13;
  const s_seven* s7ptrrg6 = table1d5f82[vb_00];
  const s_seven* s7ptrrg1;
  for(;;)
  {
    s7ptrrg1 = &s7ptrrg6[byterg4h];
    x8 byterg4 = s7ptrrg1->b0[con(0x0)];
    if (byterg4 >= con(0x0))
      break;
    if (byterg4 == con(0xfffffff6))
    {
      byterg4 = s7ptrrg1->b0[con(0x1)];
      if (byterg4 >= con(0x0) && byterg4 < con(0x2))
        ddata.s350.v1e0556->u.arr.w0e[byterg4] = signedword(s7ptrrg1->b0[con(0x2)]);
    }
    byterg4h++;
  }
  ddata.s350.v1e0556->u.v.b12 = vb_00;
  ddata.s350.v1e0556->u.v.b13 = byterg4h;
  x8 byterg42 = s7ptrrg1->b0[con(0x0)];
  ddata.s350.v1e0572 = signedword(s7ptrrg1->b0[con(0x3)]);
  ddata.s350.v1e0574 = signedword(s7ptrrg1->b0[con(0x4)]);
  return byterg42;
}

bool SKW_14cd_08f5(x8 eaxb)
{
  bool boolrg2 = false;
  x8 vb_00 = ddata.s350.v1e0556->u.v.b12;
  x8 byterg1h = ddata.s350.v1e0556->u.v.b13;
  const s_seven* s7ptrrg6 = table1d5f82[vb_00];
  x8 byterg1;
  if (eaxb != con(0xfffffffe))
    byterg1 = s7ptrrg6[byterg1h].b0[con(0x2)];
  else
    byterg1 = s7ptrrg6[byterg1h].b0[con(0x1)];
  if (byterg1 == con(0xfffffffe) || byterg1 == con(0xfffffffd))
  {
    ddata.s350.v1e0556->u.v.b12 = con(0xffffffff);
    ddata.s350.v1e0556->u.v.b13 = con(0x0);
    return true;
  }
  if (byterg1 > con(0xfffffffb) || byterg1 < con(0xfffffff8))
  {
    boolrg2 = byterg1h != byterg1;
    byterg1h = byterg1;
  }
  else
  {
    if (byterg1 != con(0xfffffff9))
    {
      if (byterg1 != con(0xfffffff8))
        byterg1h += byterg1 != con(0xfffffffb) ? con(0xffffffff) : con(0x1);
      else
        byterg1h += con(0x2);
      boolrg2 = true;
    }
  }
  ddata.s350.v1e0556->u.v.b12 = vb_00;
  ddata.s350.v1e0556->u.v.b13 = byterg1h;
  return boolrg2;
}

void SKW_14cd_0f0a(x8 eaxb, x8 ebxb, s_hexe* ecxphe, x8 edxb)
{
  ddata.s350.v1e0580 = con(0xffffffff);
  switch (eaxb & con(0x1f))
  {
    case 0:
      SKW_14cd_18cc(edxb, ecxphe, ebxb);
    break;

    case 1:
      SKW_14cd_19a4(edxb, ecxphe, ebxb);
    break;

    case 2:
      SKW_14cd_1a3c(edxb, ecxphe, ebxb);
    break;

    case 3:
      SKW_14cd_1a5a(edxb, ecxphe, ebxb);
    break;

    case 4:
      SKW_14cd_1b74(edxb, ecxphe, ebxb);
    break;

    case 5:
      SKW_14cd_1b90(edxb, ecxphe, ebxb);
    break;

    case 6:
      SKW_14cd_1c27(edxb, ecxphe, ebxb);
    break;

    case 7:
      SKW_14cd_1c45(edxb, ecxphe, ebxb);
    break;

    case 8:
      SKW_14cd_1c63(ecxphe, ebxb);
    break;

    case 9:
      SKW_14cd_1c8d(edxb, ecxphe, ebxb);
    break;

    case 10:
      SKW_14cd_1cec(ecxphe, ebxb);
    break;

    case 11:
      SKW_14cd_1d42(ecxphe, ebxb);
    break;

    case 12:
      SKW_14cd_1e36(edxb, ecxphe, ebxb);
    break;

    case 13:
      SKW_14cd_1e52(edxb, ecxphe, ebxb);
    break;

    case 14:
      SKW_14cd_1e6e(edxb, ecxphe, ebxb);
    break;

    case 15:
      SKW_14cd_1f8b(edxb, ecxphe, ebxb);
    break;

    case 16:
      SKW_14cd_1fa7(ecxphe, ebxb);
    break;

    default: throw(THROW_DMABORT);
  }
}

void SKW_14cd_0f3c(x8 eaxb, const s_hexe* ebxphe, x8 ecxb, s_hexe* edxphe, x8 argb0, x16 argw1, x8 argb2, x8 argb3)
{
  x8 byterg2 = argb0;
  if (ebxphe != NULL && edxphe != NULL && ddata.s350.v1e0674 < con(0x10))
  {
    x8 byterg13 = ebxphe->b_08;
    if ((unsignedword(ddata.s350.v1e0571) != ddata.v1e08d6) && (byterg13 > con(0x0)))
      if ((ddata.s350.v1e0552->u0.b.b1 & con(0x40)) == con(0x0))
      {
        byterg13 >>= con(0x2);
        byterg2 >>= con(0x2);
      }
    x16 byterg4 = CUTX8(DM2_BETWEEN_VALUE(con(0xffffffff), con(0x7f), signedword(byterg13) + signedword(byterg2)));
    if (byterg4 >= con(0x0))
    {
      c_sizex16* sx16ptrrg1 = &ddata.s350.v1e0678[ddata.s350.v1e0674++];
      sx16ptrrg1->b_0e[con(0x0)] = argb2;
      sx16ptrrg1->b_0e[con(0x1)] = argb3;
      sx16ptrrg1->w_0c = argw1;
      sx16ptrrg1->s_00.b_00 = byterg4;
      sx16ptrrg1->s_00.b_01 = ebxphe->b_09;
      sx16ptrrg1->s_00.b_07 = eaxb;
      sx16ptrrg1->u_08.w = ebxphe->w_04;
      sx16ptrrg1->u_0a.w = ebxphe->w_06 & ddata.s350.v1e0580;
      sx16ptrrg1->b_0e[con(0x3)] = ecxb;
      sx16ptrrg1->ps_12 = edxphe;
    }
  }
}

void SKW_14cd_18f2(x8 eaxb, s_hexe* ebxphe, x8 ecxb, x8 edxb, x16 argw0)
{
  x8 vb_18 = eaxb;
  if (ebxphe != NULL)
  {
    if (eaxb < con(0x0))
      vb_18 = -vb_18;
    s_hexe* sheptrrg3;
    s_hexe vhe_00;
    do
    {
      if (ebxphe->b_0c == vb_18)
        if (SKW_14cd_1316(ebxphe->b_01, edxb, ebxphe->u_02.w))
        {
          SKW_COPY_MEMORY(DOWNCAST(s_hexe, ebxphe), sizeof(s_hexe), DOWNCAST(s_hexe, &vhe_00));
          if (eaxb < con(0x0))
          {
            vhe_00.b_08 = con(0x0);
            vhe_00.b_09 = con(0x0);
          }
          SKW_14cd_0f3c(ebxphe->b_00, &vhe_00, vb_18, ebxphe, ecxb, argw0, edxb, vb_18);
        }
      sheptrrg3 = ebxphe++;
    } while (sheptrrg3->b_0d != con(0x0));
  }
}

void SKW_14cd_19c2(x8 eaxb, s_hexe* ebxphe, x8 ecxb, x8 edxb, x8 argb0)
{
  if (ebxphe != NULL && ddata.s350.v1e058d != con(0x0))
  {
    s_hex20* sptrrg1 = SKW_14cd_10d2(ebxphe, argb0);
    if (sptrrg1->sarr_04[con(0x0)].barr_00[con(0x1)] <= con(0x0))
      ddata.s350.v1e0580 &= con(0xfffffff7);
    if (ddata.s350.v1e0578 != con(0x0))
    {
      if (eaxb != con(0x0))
        ecxb = -ecxb;
      SKW_14cd_18f2(ecxb, ebxphe, con(0x0), edxb, con(0xffff));
    }
  }
}

void SKW_14cd_1a78(x8 eaxb, s_hexe* ebxphe, x8 ecxb, x8 edxb)
{
  if (ebxphe != NULL)
  {
    s_hex20* sptrrg1 = SKW_14cd_10d2(ebxphe, ecxb);
    if (sptrrg1->sarr_04[con(0x0)].barr_00[con(0x3)] != con(0x0))
    {
      s_4bytearray* p4ba_10 = sptrrg1->sarr_04;
      s_hexe vhe_00;
      s_hexe* sheptrrg1;
      do
      {
        if (ebxphe->b_0c == ecxb)
        {
          if (ebxphe->w_04 != con(0xffffffff))
            if (SKW_14cd_1316(ebxphe->b_01, edxb, ebxphe->u_02.w))
            {
              x8 byterg1 = CUTX8(-DM2_MIN(ebxphe->b_08, signedword(p4ba_10->barr_00[con(0x0)])));
              SKW_COPY_MEMORY(DOWNCAST(s_hexe, ebxphe), sizeof(s_hexe), DOWNCAST(s_hexe, &vhe_00));
              if (eaxb != con(0x0))
              {
                vhe_00.b_08 = con(0x0);
                vhe_00.b_09 = con(0x0);
                byterg1 = con(0x0);
              }
              SKW_14cd_0f3c(ebxphe->b_00, &vhe_00, ecxb, ebxphe, byterg1, con(0xffff), edxb, eaxb);
            }
          p4ba_10++;
        }
        sheptrrg1 = ebxphe;
        ebxphe++;
      } while (sheptrrg1->b_0d != con(0x0));
    }
  }
}

void SKW_14cd_1bac(x8 eaxb, s_hexe* ebxphe, x8 ecxb, x8 edxb, x8 argb0)
{
  if ((ebxphe != NULL) && (ddata.s350.v1e058d != con(0x0)))
  {
    s_hex20* sptrrg1 = SKW_14cd_10d2(ebxphe, argb0);
    if ((ddata.s350.v1e0578 & con(0x8)) != con(0x0))
      if (sptrrg1->sarr_04[con(0x0)].barr_00[con(0x1)] <= con(0x0))
        ddata.s350.v1e0580 &= con(0xfffffff7);
    if (ddata.s350.v1e0578 != con(0x0))
    {
      if (eaxb != con(0x0))
        ecxb = -ecxb;
      SKW_14cd_18f2(ecxb, ebxphe, con(0x0), edxb, con(0xffff));
    }
  }
}

void SKW_14cd_1c8d(x8 eaxb, s_hexe* ebxphe, x8 edxb)
{
  if ((eaxb != con(0x0)) && (unsignedword(ddata.s350.v1e0562.u.b.b_06) == (ddata.s350.v1e054e->uc.w & con(0x1f))))
    if (unsignedword(ddata.s350.v1e0562.u.b.b_07) == ulrshift(ddata.s350.v1e054e->uc.w, con(0x6), con(0xb)))
      if (unsignedword(ddata.s350.v1e0571) == urshift(ddata.s350.v1e054e->uc.w, con(0xa)))
        return;
  SKW_14cd_18f2(con(0x6), ebxphe, con(0x0), edxb, con(0xffff));
}

void SKW_14cd_1cec(s_hexe* ebxphe, x8 edxb)
{
  c_record* recoptrrg1 = SKW_GET_MISSILE_REF_OF_MINION(ddata.s350.v1e054c, con(0xffff));
  if (recoptrrg1 != NULL)
    if (urshift(recoptrrg1->u2.w & con(0x3c00), con(0xa)) == con(0x9))
      SKW_14cd_18f2(con(0x7), ebxphe, con(0x0), edxb, SKW_GET_ADDRESS_OF_RECORD(recoptrrg1->u2.w)->u6.w);
}

void SKW_14cd_1eec(x8 eaxb, s_hexe* ebxphe, x8 ecxb, x8 edxb)
{
  if (ebxphe != NULL)
  {
    s_hexe vhe_00;
    s_hexe* sheptrrg4;
    do
    {
      if (ebxphe->b_0c == ecxb && SKW_14cd_1316(ebxphe->b_01, edxb, ebxphe->u_02.w))
      {
        SKW_COPY_MEMORY(DOWNCAST(s_hexe, ebxphe), sizeof(s_hexe), DOWNCAST(s_hexe, &vhe_00));
        vhe_00.w_06 = ddata.s350.v1e054e->w8;
        if (eaxb != con(0x0))
        {
          vhe_00.b_08 = con(0x0);
          vhe_00.b_09 = con(0x0);
        }
        SKW_14cd_0f3c(ebxphe->b_00, &vhe_00, ecxb, ebxphe, con(0x0), con(0xffff), edxb, eaxb);
      }
      sheptrrg4 = ebxphe;
      ebxphe++;
    } while (sheptrrg4->b_0d != con(0x0));
  }
}

// was SKW_14cd_2162
x8 SKW_PROCEED_XACT_75(void)
{
  s_hex20* sptrrg4 = SKW_14cd_10d2(ddata.s350.v1e07d8.phe_a, ddata.s350.v1e07d8.b2);
  x8 byterg1 = ddata.s350.v1e07d8.b3;
  if (byterg1 != con(0x8))
  {
    if (byterg1 != con(0x9))
      byterg1 = con(0x0);
    else
      byterg1 = con(0x3);
  }
  else
    byterg1 = con(0x2);
  ddata.s350.v1e0556->u.v.b1e = CUTX8(ddata.s350.v1e07d8.w4);
  x16 wordrg5 = ddata.s350.v1e0578;
  if ((wordrg5 & con(0x8)) != con(0x0))
    if (sptrrg4->sarr_04[con(0x0)].barr_00[con(0x1)] <= con(0x0))
      ddata.s350.v1e0578 &= con(0xfffffff7);
  ddata.s350.v1e0578 &= ddata.s350.v1e07d8.w6;
  byterg1 |= con(0xffffff80);
  SKW_19f0_0891(byterg1, unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.s350.v1e0556->u.v.u18.w & con(0x1f), unsignedword(ddata.s350.v1e0562.u.b.b_06), ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb)), con(0xffffffff));
  ddata.s350.v1e0578 = wordrg5;
  return ddata.s350.v1e056f;
}

// was SKW_14cd_22a3
void SKW_PROCEED_XACT_57(void)
{
  x16 vw_00;
  if (SKW_RAND01() == con(0x0))
    vw_00 = con(0xffffffff);
  else
    vw_00 = con(0x1);
  x16 wordrg6 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  x16 wordrg5 = (vw_00 + wordrg6) & con(0x3);
  if (!SKW_CREATURE_GO_THERE(con(0x80), unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0xffffffff), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0xffffffff), wordrg5))
    if (!SKW_CREATURE_GO_THERE(con(0x80), unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0xffffffff), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0xffffffff), (wordrg6 - vw_00) & con(0x3)))
      SKW_19f0_0559(wordrg5);
}

// was SKW_14cd_232b
x8 SKW_PROCEED_XACT_59_76(void)
{
  x16 wordrg3 = ddata.s350.v1e0572;
  if (wordrg3 == con(0xffffffff))
    wordrg3 = ddata.s350.v1e07d8.w4;
  if (ddata.s350.v1e0574 != con(0x0))
    if (SKW_1c9a_0732(wordrg3, con(0xff), ddata.s350.v1e054e->u2.w) != con(0xfffffffe))
      return con(0xfffffffe);
  SKW_19f0_2165(con(0x80), unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.s350.v1e0556->u.v.u18.w & con(0x1f), unsignedword(ddata.s350.v1e0562.u.b.b_06), ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb)), con(0xffffffff), wordrg3);
  return ddata.s350.v1e056f;
}

// was SKW_14cd_2398
void SKW_PROCEED_XACT_69(void)
{
  x16 wordrg4 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  x16 wordrg21 = (unsignedword(ddata.s350.v1e0562.u.b.b_06) + table1d27fc[wordrg4]) & con(0x1f);
  ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
  x16 wordrg5 = ddata.s350.v1e0556->u.v.u18.w | wordrg21;
  ddata.s350.v1e0556->u.v.u18.w = wordrg5;
  x16 wordrg22 = ((unsignedword(ddata.s350.v1e0562.u.b.b_07) + table1d2804[wordrg4]) & con(0x1f)) << con(0x5);
  ddata.s350.v1e0556->u.v.u18.w = (wordrg5 & con(0xfffffc1f)) | wordrg22;
  x8 byterg4 = CUTX8(ddata.s350.v1e0572);
  ddata.s350.v1e0556->u.v.b1d = byterg4;
  ddata.s350.v1e0556->u.v.b1a = ((byterg4 == con(0x1)) ? 1 : 0) + con(0x15);
}

// was SKW_14cd_240e
x8 SKW_PROCEED_XACT_64(void)
{
  c_record* recoptrrg3 = ddata.s350.v1e054e;
  if (recoptrrg3->u2.w == con(0xfffffffe))
    return con(0xfffffffd);
  x16 wordrg5 = ddata.s350.v1e057c;
  if ((wordrg5 & con(0x8)) == con(0x0))
    return con(0xfffffffd);
  x16 wordrg1 = ddata.s350.v1e0572;
  if (wordrg1 == con(0xffffffff))
    wordrg1 = con(0x3f);
  x16 wordrg3 = wordrg1;
  if (SKW_1c9a_0732(wordrg3, con(0xff), ddata.s350.v1e054e->u2.w) == con(0xfffffffe))
    return con(0xfffffffd);
  ddata.s350.v1e057c &= con(0x8);
  SKW_19f0_2165(con(0x81), unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0xffffffff), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0xffffffff), ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)), wordrg3);
  ddata.s350.v1e057c = wordrg5;
  return ddata.s350.v1e056f;
}

// was SKW_14cd_248d
x8 SKW_PROCEED_XACT_70(void)
{
  x8 byterg2 = con(0xfffffffd);
  x16 vw_00 = ddata.s350.v1e0572;
  if (ddata.s350.v1e0572 == con(0xffffffff))
    vw_00 = con(0x3f);
  ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
  x16 wordrg6 = ddata.s350.v1e0556->u.v.u18.w | (unsignedword(ddata.s350.v1e0562.u.b.b_06) & con(0x1f));
  ddata.s350.v1e0556->u.v.u18.w = wordrg6;
  ddata.s350.v1e0556->u.v.u18.w = (wordrg6 & con(0xfffffc1f)) | ((unsignedword(ddata.s350.v1e0562.u.b.b_07) & con(0x1f)) << con(0x5));
  ddata.s350.v1e0556->u.v.b1c = CUTX8((ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) + con(0x2)) & con(0x3));
  ddata.s350.v1e0556->u.v.b1e = CUTX8(vw_00);
  x16 wordrg42 = ddata.s350.v1e0556->u.v.u18.w & con(0x1f);
  wordrg42 += table1d27fc[ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe))];
  wordrg42 &= con(0x1f);
  ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
  ddata.s350.v1e0556->u.v.u18.w |= wordrg42;
  x16 wordrg41 = ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb));
  x16 wordrg5 = (ddata.s350.v1e0556->u.v.u18.w & con(0xfffffc1f)) | (((table1d2804[ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe))] + wordrg41) & con(0x1f)) << con(0x5));
  ddata.s350.v1e0556->u.v.u18.w = wordrg5;
  x16 wordrg1 = SKW_GET_CREATURE_AT(wordrg5 & con(0x1f), ulrshift(wordrg5, con(0x6), con(0xb)));
  if (wordrg1 != con(0xffffffff))
  {
    byterg2 = ddata.s350.v1e0556->u.v.b1c;
    if (SKW_1c9a_0732(vw_00, byterg2, SKW_GET_ADDRESS_OF_RECORD(wordrg1)->u2.w) != con(0xfffffffe))
    {
      ddata.s350.v1e0556->u.v.b1a = con(0x18);
      byterg2 = con(0xfffffffc);
    }
    else
      byterg2 = con(0xfffffffe);
  }
  return byterg2;
}

// was SKW_14cd_25b8
x8 SKW_PROCEED_XACT_63(void)
{
  x8 byterg3 = con(0xfffffffd);
  x16 vw_00 = ddata.s350.v1e0572;
  if (ddata.s350.v1e0572 != con(0xffffffff))
  {
    x16 wordrg42 = unsignedword(ddata.s350.v1e0562.u.b.b_06);
    x16 wordrg5 = unsignedword(ddata.s350.v1e0562.u.b.b_07);
    x8 byterg2 = CUTX8(ddata.s350.v1e0574);
    if (byterg2 != con(0xffffffff))
      byterg2 = CUTX8((unsignedword(byterg2) + ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) + con(0x2)) & con(0x3));
    x16 wordrg11 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
    wordrg42 += table1d27fc[wordrg11];
    wordrg5 += table1d2804[wordrg11];
    x16 wordrg41 = SKW_GET_CREATURE_AT(wordrg42, wordrg5);
    if (wordrg41 != con(0xffffffff))
      if (SKW_1c9a_0732(vw_00, byterg2, SKW_GET_ADDRESS_OF_RECORD(wordrg41)->u2.w) != con(0xfffffffe))
        byterg3 = con(0xfffffffe);
  }
  return byterg3;
}

// used as plugin too
bool SKW_14cd_2807(x16* eaxpw, x16* edxpw)
{
  if (SKW_1c9a_0006(*eaxpw, edxpw[con(0x1)]) != con(0x0))
  {
    if (edxpw[con(0x0)] == con(0xffffffff))
      edxpw[con(0x0)] = con(0x0);
    x16 wordrg1;
    if (edxpw[con(0x4)] == con(0x0))
      wordrg1 = con(0xffffffff);
    else
      wordrg1 = SKW_ADD_ITEM_CHARGE(*eaxpw, con(0x0));
    edxpw[con(0x0)] += SKW_48ae_05ae(SKW_GET_DISTINCTIVE_ITEMTYPE(*eaxpw), ddata.s350.v1e054e->w8, edxpw[con(0x2)], ddata.s350.v1e054e->u4.b.b0, edxpw[con(0x3)], wordrg1);
  }
  return false;
}

// was SKW_14cd_2f07
x8 SKW_PROCEED_XACT_68(void)
{
  t_gfxdata vga_00[0x14];

  x8 vb_28 = con(0xfffffffd);
  x16 vw_14 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  if (!SKW_14cd_2662((CUTX8(ddata.s350.v1e0572) + con(0x2)) & con(0x3)))
  {
    x16 wordrg13 = SKW_GET_CREATURE_AT(unsignedword(ddata.s350.v1e0562.u.b.b_06) + table1d27fc[vw_14], unsignedword(ddata.s350.v1e0562.u.b.b_07) + table1d2804[vw_14]);
    if (wordrg13 != con(0xffffffff))
    {
      x16* wptrrg5 = &SKW_GET_ADDRESS_OF_RECORD(wordrg13)->u2.w;
      x8 bytev14 = CUTX8(vw_14 + ddata.s350.v1e0572) & con(0x3);
      x8 byterg6 = (bytev14 + con(0x2)) & con(0x3);
      x16 vw_24; // result not needed
      x16 wordrg12 = SKW_48ae_0767(SKW_14cd_2886(wptrrg5, byterg6, con(0x1), con(0x10), con(0x1), con(0x0)), vga_00, &vw_24, con(0x12));
      x16 vw_20 = wordrg12;
      x16 vw_1c = SKW_14cd_2886(wptrrg5, byterg6, con(0x0), con(0x7), con(0x0), con(0x0));
      if (vw_1c == con(0xffffffff))
        vw_1c = con(0x0);
      else
        vw_20 = wordrg12 + vw_1c;
      x16 wordrg6 = SKW_14cd_2886(wptrrg5, bytev14, con(0x0), con(0x10), con(0x0), con(0x0));
      x16 wordrg11 = SKW_14cd_2886(wptrrg5, bytev14, con(0x0), con(0x7), con(0x0), con(0x0));
      if (wordrg6 == con(0xffffffff))
        wordrg6 = con(0x0);
      if (wordrg11 != con(0xffffffff))
        wordrg6 += wordrg11;
      if (wordrg6 >= (vw_1c + ddata.s350.v1e0556->u.v.w0e))
      {
        if (wordrg6 != ddata.s350.v1e0556->u.v.w10)
        {
          ddata.s350.v1e0556->u.v.b1a = con(0x1c);
          ddata.s350.v1e0556->u.v.w10 = wordrg6;
        }
        wordrg6 -= vw_20;
        ddata.s350.v1e0556->u0c.w = DM2_MAX(con(0x0), wordrg6);
        vb_28 = con(0xfffffffe);
      }
      else
        ddata.s350.v1e0556->u.v.b1a = con(0x1b);
    }
  }
  else
  {
    vb_28 = con(0xfffffffd);
    ddata.s350.v1e0556->u.v.b1a = con(0x1f);
  }
  return vb_28;
}

// was SKW_14cd_33e1
x8 SKW_PROCEED_XACT_77(void)
{
  ddata.s350.v1e0674 = con(0x0);
  s_hexe* sheptrrg5 = ddata.s350.v1e07d8.phe_a;
  if (sheptrrg5 != NULL)
  {
    s_hexe* sheptrrg1;
    do
    {
      if (sheptrrg5->b_0c == con(0x11) && sheptrrg5->w_04 != con(0xffffffff))
        SKW_14cd_0f3c(con(0x14), sheptrrg5, sheptrrg5->b_0c, sheptrrg5, con(0x0), con(0xffff), con(0xff), con(0x0));
      sheptrrg1 = sheptrrg5;
      sheptrrg5++;
    } while (sheptrrg1->b_0d != con(0x0));
    if (ddata.s350.v1e0674 != con(0x0))
    {
      ddata.s350.v1e0675 = SKW_1c9a_1bd8(unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x3), unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.s350.v1e0674, ddata.s350.v1e0678, ddata.s350.v1e060e);
      if (ddata.s350.v1e0675 != con(0xffffffff))
        return con(0xfffffffe);
    }
  }
  return con(0xfffffffd);
}

// was SKW_14cd_3474
x8 SKW_PROCEED_XACT_78(void)
{
  ddata.s350.v1e056f = con(0xfffffffd);
  if (ddata.v1d3248 == ddata.v1e08d6)
  {
    x16 wordrg5 = SKW_CALC_VECTOR_DIR(unsignedword(ddata.s350.v1e0562.u.b.b_06), signedword(ddata.v1e08d8), ddata.v1e08d4, unsignedword(ddata.s350.v1e0562.u.b.b_07));
    if (((SKW_0cee_04e5(wordrg5, con(0x0), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x1), unsignedword(ddata.s350.v1e0562.u.b.b_07)) & con(0xff)) >> con(0x5)) != con(0x0))
      SKW_19f0_0559(wordrg5);
  }
  return ddata.s350.v1e056f;
}

// was SKW_14cd_34d3
x8 SKW_PROCEED_XACT_80(void)
{
  x16 wordrg4 = ddata.s350.v1e0572;
  x8 byterg3 = (wordrg4 != con(0x0)) ? con(0x6) : con(0x0);
  x16 wordrg5 = ddata.s350.v1e0576;
  ddata.s350.v1e0576 = wordrg5 | con(0x1800);
  SKW_CREATURE_GO_THERE(byterg3 | con(0xffffff80), unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0xffffffff), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0xffffffff), (ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) + wordrg4) & con(0x3));
  ddata.s350.v1e0576 = wordrg5;
  return ddata.s350.v1e056f;
}

// was SKW_14cd_38c2
x8 SKW_PROCEED_XACT_83(void)
{
  x8 byterg3 = con(0xfffffffe);
  if ((ddata.s350.v1e054e->ua.w & con(0x80)) != con(0x0) || (ddata.s350.v1e0572 != con(0x0)))
  {
    ddata.s350.v1e0556->u.v.b1a = CUTX8(DM2_BETWEEN_VALUE(con(0x0), con(0x2), ddata.s350.v1e0572)) + con(0x23);
    if ((ddata.s350.v1e054e->ua.w & con(0x80)) != con(0x0))
      if (ddata.s350.v1e0572 == con(0x1))
        byterg3 = con(0xfffffffc);
  }
  else
    byterg3 = con(0xfffffffd);
  return byterg3;
}

// was SKW_14cd_3b69
x8 SKW_PROCEED_XACT_91(void)
{
  if (SKW_1c9a_0732(ddata.s350.v1e0572, con(0xff), ddata.s350.v1e054e->u2.w) != con(0xfffffffe))
    return con(0xfffffffe);
  if (SKW_1c9a_0732(ddata.s350.v1e0574, con(0xff), ddata.s350.v1e054e->u2.w) == con(0xfffffffe))
    return con(0xfffffffd);
  return con(0xfffffffe);
}

bool SKW_CREATURE_WALK_NOW(void)
{
  if ((ddata.s350.v1e0552->u0.b.b1 & con(0x1)) != con(0x0))
  {
    ddata.s350.v1e0556->u.v.b1a = con(0x26);
    ddata.s350.v1e0556->u.v.b1c = con(0x4);
    SKW_CREATURE_ATTACKS_PARTY();
  }
  if (SKW_CREATURE_GO_THERE(ddata.s350.v1e0556->u.v.b20 | con(0xffffff80), unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.v1e08a6, unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.v1e08a4, signedword(ddata.s350.v1e0556->u.v.b1b)) && (UI8CAST(table1d613a[ddata.s350.v1e0556->u.v.b1a] & con(0x4)) != con(0x0)))
  {
    x8 byterg6 = ddata.s350.v1e0552->barr06[con(0x3)] & con(0x40);
    if (byterg6 != con(0x0))
      SKW_OPERATE_PIT_TELE_TILE(unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x1), unsignedword(ddata.s350.v1e0562.u.b.b_07));
    if (SKW_MOVE_RECORD_TO(ddata.s350.v1e054c, unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.s350.v1e0556->u.v.u18.w & con(0x1f), unsignedword(ddata.s350.v1e0562.u.b.b_06), ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb))) == con(0x0))
    {
      ddata.s350.v1e0562.u.b.b_06 = CUTX8(ddata.v1e102a);
      ddata.s350.v1e0562.u.b.b_07 = CUTX8(ddata.v1e1028);
      ddata.s350.v1e0571 = CUTX8(ddata.v1e102c);
      SKW_1c9a_0648(unsignedword(ddata.s350.v1e0571));
      if (byterg6 != con(0x0))
        SKW_OPERATE_PIT_TELE_TILE(unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x0), unsignedword(ddata.s350.v1e0562.u.b.b_07));
      if (ddata.s350.v1e07d8.b1 != con(0x0))
        ddata.s350.v1e07d8.b1--;
    }
    else
      ddata.s350.v1e0570 = con(0x1);
    return false;
  }
  return true;
}

void SKW_1887_05aa(void)
{
  x16 wordrg4 = unsignedword(ddata.s350.v1e0556->u.v.b1d);
  if (((ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) - wordrg4) & con(0x3)) == con(0x2))
  {
    wordrg4 += CUTX16(SKW_RAND()) & con(0x2);
    wordrg4++;
  }
  wordrg4 &= con(0x3);
  ddata.s350.v1e054e->ue.b.b1 &= con(0xfffffffc);
  wordrg4 <<= con(0x8);
  ddata.s350.v1e054e->ue.w |= wordrg4;
}

bool SKW_1887_0c75(void)
{
  if (SKW_19f0_0d10(UI8CAST(ddata.s350.v1e0556->u.v.b20 | con(0xffffff80)), unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.v1e08a6, unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.v1e08a4, ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe))))
    if (ddata.s350.v1e0556->u.v.b1a == con(0xb))
    {
      SKW_INVOKE_MESSAGE(ddata.v1e08a6, con(0x0), con(0x2), ddata.v1e08a4, ddata.longmallocx);
      return false;
    }
  return true;
}

bool SKW_1887_0eca(void)
{
  x16 wordrg5 = SKW_1c9a_0732(signedword(ddata.s350.v1e0556->u.v.b1e), con(0xff), unsignedword(ddata.s350.v1e054e->u2.w));
  if (wordrg5 == con(0xfffffffe))
    return true;
  SKW_CUT_RECORD_FROM(wordrg5, con(0xffffffff), con(0x0), &ddata.s350.v1e054e->u2.w);
  x16 wordrg4 = unsignedword(ddata.s350.v1e0552->barr06[con(0x0)]) / 4 + con(0x1);
  wordrg4 += SKW_RAND16(wordrg4);
  wordrg4 += SKW_RAND16(wordrg4);
  SKW_SHOOT_ITEM(wordrg5, unsignedword(ddata.s350.v1e0562.u.b.b_07), unsignedword(ddata.s350.v1e0556->u.v.b1c), unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.s350.v1e0556->u.v.b1b, CUTX8(DM2_BETWEEN_VALUE(con(0x14), con(0xff), wordrg4) & con(0xff)), ddata.s350.v1e0552->barr06[con(0x2)], con(0x8));
  return false;
}

void SKW_1887_126d(void)
{
  x16 vw_00 = unsignedword(ddata.s350.v1e0562.u.b.b_06);
  x16 wordrg6 = unsignedword(ddata.s350.v1e0562.u.b.b_07);
  x8 byterg1 = ddata.s350.v1e0556->u.v.b1f;
  x8 vb_04 = byterg1;
  byterg1++;
  ddata.s350.v1e0556->u.v.b1f = byterg1;
  if (ddata.s350.v1e0556->u.v.b1a != con(0x3b))
  {
    SKW_CREATE_CLOUD(con(0xffa8), vw_00, wordrg6, con(0xff), con(0xff));
    SKW_QUEUE_NOISE_GEN1(con(0x3), con(0x81), con(0x6c), con(0x0), con(0xc8), vw_00, wordrg6, con(0x1));
    return;
  }
  x16 wordrg5 = SKW_RAND02() + con(0x1);
  for(;;)
  {
    wordrg5--;
    if (wordrg5 == con(0xffffffff))
    {
      if (vb_04 >= con(0x1))
        SKW_CREATE_CLOUD(con(0xffa8), vw_00, wordrg6, signedword(vb_04) * con(0x55), con(0xff));
      if (vb_04 < con(0x3))
      {
        SKW_QUEUE_NOISE_GEN1(con(0x3), con(0x8b), con(0x6c), con(0x0), con(0xc8), vw_00, wordrg6, con(0x1));
        return;
      }
      ddata.s350.v1e0556->u.v.b1a = con(0x3c);
      ddata.s350.v1e0556->u.v.b1f = con(0x0);
      ddata.s350.v1e054e->ua.w = con(0x0);
      ddata.s350.v1e054e->u4.b.b0 = ddata.s350.v1e0556->u.v.b1e;
      ddata.s350.v1e0552 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(ddata.s350.v1e0556->u.v.b1e);
      wordrg5 = ddata.s350.v1e0552->w4;
      wordrg5 += SKW_RAND16(wordrg5 / 8 + con(0x1));
      ddata.s350.v1e054e->u6.w = wordrg5;
      SKW_GET_CREATURE_ANIMATION_FRAME(ddata.s350.v1e054e->u4.b.b0, ddata.s350.v1e055e, &ddata.s350.v1e055e[con(0x1)], signedword(ddata.s350.v1e0556->u.v.b1a), &ddata.s350.v1e055a, con(0x0));
      if (!SKW_IS_CREATURE_ALLOWED_ON_LEVEL(ddata.s350.v1e054c, unsignedword(ddata.s350.v1e0571)))
      {
        SKW_DELETE_CREATURE_RECORD(vw_00, con(0x0), con(0x1), wordrg6);
        ddata.s350.v1e0570 = con(0x1);
      }
      SKW_QUEUE_NOISE_GEN1(con(0x3), con(0x81), con(0x6c), con(0x0), con(0xc8), vw_00, wordrg6, con(0x1));
      return;
    }
    x8 byterg1h = CUTX8(SKW_RAND16(con(0x5)));
    if (byterg1h == con(0x4))
      byterg1h = con(0xffffffff);
    SKW_CREATE_CLOUD(con(0xff83), vw_00, wordrg6, SKW_RAND16(con(0x9c)) + con(0x64), unsignedword(byterg1h));
  }
}

bool SKW_1887_141c(void)
{
  x8 byterg4 = ddata.s350.v1e0556->u.v.b20;
  if (byterg4 != con(0x0))
  {
    if (byterg4 != con(0x1))
    {
      if (byterg4 == con(0x2))
      {
        ddata.s350.v1e0556->u.v.b1a = con(0x11);
        ddata.s350.v1e0556->u.v.b1f = con(0x0);
        ddata.s350.v1e054e->u4.b.b0 = ddata.s350.v1e0556->u.v.b1e;
        ddata.s350.v1e0552 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(ddata.s350.v1e0556->u.v.b1e);
        x16 wordrg42 = ddata.s350.v1e0552->w4;
        wordrg42 += SKW_RAND16(wordrg42 / 8 + con(0x1));
        ddata.s350.v1e054e->u6.w = wordrg42;
        SKW_GET_CREATURE_ANIMATION_FRAME(ddata.s350.v1e054e->u4.b.b0, ddata.s350.v1e055e, &ddata.s350.v1e055e[con(0x1)], signedword(ddata.s350.v1e0556->u.v.b1a), &ddata.s350.v1e055a, con(0x0));
        if (!SKW_IS_CREATURE_ALLOWED_ON_LEVEL(ddata.s350.v1e054c, unsignedword(ddata.s350.v1e0571)))
        {
          SKW_DELETE_CREATURE_RECORD(unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x0), con(0x1), unsignedword(ddata.s350.v1e0562.u.b.b_07));
          ddata.s350.v1e0570 = con(0x1);
        }
      }
    }
    else if (SKW_CREATE_MINION(signedword(ddata.s350.v1e0556->u.v.b1e), SKW_RAND02(), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x7), unsignedword(ddata.s350.v1e0562.u.b.b_07), unsignedword(ddata.s350.v1e0571), con(0xffff), CUTX8(ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)))) == con(0xffffffff))
      return true;
  }
  else
  {
    x16 wordrg41 = unsignedword(ddata.s350.v1e0552->barr06[con(0x0)]) / 4 + con(0x1);
    wordrg41 += SKW_RAND16(wordrg41);
    wordrg41 += SKW_RAND16(wordrg41);
    SKW_CREATE_CLOUD(con(0xff80), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), DM2_BETWEEN_VALUE(con(0x14), con(0xff), wordrg41), con(0xff));
    if (ddata.s350.v1e0556->u.v.b1e != con(0x0))
      SKW_1887_0df7();
  }
  return false;
}

// adress given to a functionpointer
bool R_1BA1B(x16 eaxw, x16 edxw)
{
  x8 vb_00 = SKW_GET_TILE_VALUE(eaxw, edxw);
  x8 byterg4 = ubrshift(vb_00, con(0x5));
  if (byterg4 != con(0x4))
  {
    if (byterg4 == con(0x0) || byterg4 == con(0x7))
      return true;
    if (byterg4 != con(0x6))
      return false;
    return (vb_00 & con(0x4)) == con(0x0);
  }
  return ((vb_00 & con(0x7)) == byterg4 && SKW_GET_GRAPHICS_FOR_DOOR(SKW_IS_REBIRTH_ALTAR(SKW_GET_ADDRESS_OF_TILE_RECORD(eaxw, edxw))) == con(0x0));
}

void SKW_19f0_045a(x16 eaxw, x16 edxw)
{
  if (eaxw == ddata.v1e08a8 && edxw == ddata.v1e08aa && ddata.v1d3248 == ddata.v1e08ac)
    return;
  ddata.v1e08ac = ddata.v1d3248;
  ddata.v1e08aa = edxw;
  ddata.v1e08a8 = eaxw;
  ddata.v1e08ae = unsignedword(SKW_GET_TILE_VALUE(eaxw, edxw));
  x16 wordrg1 = (((ddata.v1e08ae & con(0x10)) != con(0x0)) ? 1 : 0) + con(0xfffe);
  ddata.v1e08b4 = wordrg1;
  ddata.v1e08b2 = wordrg1;
  ddata.v1e08b0 = wordrg1;
  ddata.v1e08b6 = con(0x0);
  ddata.v1e08b7 = con(0x0);
  ddata.v1e08be = con(0xffffffff);
  ddata.v1e08c4 = con(0x1);
}

x16 SKW_19f0_04bf(void)
{
  if (ddata.v1e08b2 != con(0xffffffff))
    return ddata.v1e08b2;
  x16 wordrg1 = ddata.v1e08b0;
  if (wordrg1 == con(0xffffffff))
  {
    wordrg1 = SKW_GET_TILE_RECORD_LINK(ddata.v1e08a8, ddata.v1e08aa);
    ddata.v1e08b0 = wordrg1;
  }
  for(;;)
  {
    if (wordrg1 == con(0xfffffffe))
      break;
    if (urshift(wordrg1 & con(0x3c00), con(0xa)) > con(0x3))
      break;
    wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg1);
  }
  ddata.v1e08b2 = wordrg1;
  return wordrg1;
}

x16 SKW_19f0_050f(void)
{
  if (ddata.v1e08b4 != con(0xffffffff))
    return ddata.v1e08b4;
  x16 wordrg1 = SKW_19f0_04bf();
  for(;;)
  {
    if (wordrg1 == con(0xfffffffe))
      break;
    if (urshift(wordrg1 & con(0x3c00), con(0xa)) == con(0x4))
      break;
    wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg1);
  }
  ddata.v1e08b4 = wordrg1;
  return wordrg1;
}

void SKW_1c9a_0247(x16 eaxw)
{
  x16 vw_00;
  if (SKW_3e74_5673(UI32CAST(eaxw & con(0x3ff)) | UI32CAST(ddata.s350.v1e054c & con(0x3ff)) | con(0x20000000), con(0x0), &vw_00) != con(0x0))
    SKW_3e74_58a3(vw_00);
  if (SKW_3e74_5673(UI32CAST(eaxw & con(0x3ff)) | UI32CAST(ddata.s350.v1e054c & con(0x3ff)) | con(0x30000000), con(0x0), &vw_00) != con(0x0))
    SKW_3e74_58a3(vw_00);
}

x16 SKW_GET_CREATURE_AT(x16 eaxw, x16 edxw)
{
  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(eaxw, edxw);
  while (wordrg1 != con(0xfffffffe))
  {
    if (urshift(wordrg1 & con(0x3c00), con(0xa)) == con(0x4))
      return wordrg1;
    wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg1);
  }
  return con(0xffff);
}

// TODO: argument typelengths may be shorter, not checked because routine not referenced at all
bool R_1FE74(x32 eaxl, x32 ebxl, x32 ecxl, x32 edxl, x16 argw0)
{
  x16 wordrg1 = CUTX16(eaxl - ebxl);
  x16 wordrg4 = CUTX16(edxl - ecxl);
  if ((argw0 & con(0x1)) == con(0x0))
  {
    if (wordrg1 != con(0x0))
      return false;
    bool boolrg11;
    if (argw0 != con(0x2))
      boolrg11 = wordrg4 >= con(0x0);
    else
      boolrg11 = wordrg4 <= con(0x0);
    return boolrg11;
  }
  if (wordrg4 != con(0x0))
    return false;
  bool boolrg1;
  if (argw0 != con(0x1))
    boolrg1 = wordrg1 >= con(0x0);
  else
    boolrg1 = wordrg1 <= con(0x0);
  return boolrg1;
}

void SKW_1c9a_0cf7(x16 eaxw, x16 edxw)
{
  c_tim vtim_04;

  x16 wordrg2 = SKW_GET_CREATURE_AT(eaxw, edxw);
  c_record* recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg2);
  if (ddata.v1e089c[recoptrrg4->u4.b.b1].w02 != con(0xffffffff))
    SKW_1c9a_0db0(wordrg2);
  vtim_04.un.l_00 = (ddata.longmallocx + 1) | (signedlong(ddata.v1d3248) << con(0x18));
  vtim_04.b_04 = ((recoptrrg4->w8 != con(0xffffffff)) ? 1 : 0) + con(0x21);
  vtim_04.b_05 = recoptrrg4->u4.b.b0;
  vtim_04.u.b.b_06 = CUTX8(eaxw);
  vtim_04.u.b.b_07 = CUTX8(edxw);
  ddata.v1e089c[recoptrrg4->u4.b.b1].w02 = SKW_QUEUE_TIMER(&vtim_04);
}

void SKW_1c9a_0db0(x16 eaxw)
{
  if (urshift(eaxw & con(0x3c00), con(0xa)) == con(0x4))
  {
    x8 byterg4 = SKW_GET_ADDRESS_OF_RECORD(eaxw)->u4.b.b1;
    if (byterg4 != con(0xffffffff))
      if (ddata.v1e089c[byterg4].w02 >= con(0x0))
      {
        SKW_DELETE_TIMER(ddata.v1e089c[byterg4].w02);
        ddata.v1e089c[byterg4].w02 = con(0xffffffff);
      }
  }
}

// TODO: make argument unsigned
void SKW_1c9a_0fcb(x16 eaxw)
{
  if (eaxw <= ddata.v1e08a0)
  {
    s_d556* sd5ptrrg4 = &ddata.v1e089c[eaxw];
    if (sd5ptrrg4->w00 >= con(0x0))
    {
      s_d556* sd5ptrrg2 = sd5ptrrg4;
      x16 wordrg5 = sd5ptrrg4->w00 | con(0x1000);
      c_record* recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(wordrg5);
      bool boolrg3;
      if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg5) & con(0x1)) != con(0x0) || sd5ptrrg4->u.v.b1a != con(0x13))
        boolrg3 = false;
      else
        boolrg3 = true;
      x16 vw_00;
      x16 vw_04;
      if (boolrg3)
      {
        if (sd5ptrrg2->w02 != con(0xffffffff))
        {
          c_tim* timptrrg1 = &ddata.savegametimarrp[sd5ptrrg2->w02];
          vw_00 = unsignedword(timptrrg1->u.b.b_06);
          vw_04 = unsignedword(timptrrg1->u.b.b_07);
        }
        else
          boolrg3 = false;
      }
      sd5ptrrg2->u.v.b1a = con(0x0);
      SKW_1c9a_0db0(wordrg5);
      ddata.v1d4020--;
      recoptrrg6->u4.b.b1 = con(0xffffffff);
      sd5ptrrg2->w00 = con(0xffffffff);
      if (boolrg3)
        SKW_DELETE_CREATURE_RECORD(vw_00, con(0x0), con(0x1), vw_04);
    }
  }
}

void SKW_DELETE_CREATURE_RECORD(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 vw_14 = SKW_GET_CREATURE_AT(eaxw, edxw);
  if (vw_14 != con(0xffffffff))
  {
    c_record* recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(vw_14);
    if ((SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg6->u4.b.b0)->u0.b.b0 & con(0x1)) == con(0x0))
    {
      if ((table1d607e[SKW_QUERY_GDAT_CREATURE_WORD_VALUE(recoptrrg6->u4.b.b0, con(0x1))].u.b[0] & con(0x4)) == con(0x0))
      {
        x16 vw_10 = ddata.v1d3248;
        SKW_CHANGE_CURRENT_MAP_TO(urshift(recoptrrg6->uc.w, con(0xa)));
        x16 wordrg4 = ulrshift(recoptrrg6->uc.w, con(0x6), con(0xb));
        SKW_INVOKE_MESSAGE(recoptrrg6->uc.w & con(0x1f), con(0x0), con(0x0), wordrg4, ddata.longmallocx + con(0x1));
        SKW_CHANGE_CURRENT_MAP_TO(vw_10);
      }
      if (recoptrrg6->u4.b.b1 != con(0xffffffff))
        ddata.v1e089c[recoptrrg6->u4.b.b1].u.v.b1a = con(0x0);
    }
    SKW_MOVE_RECORD_TO(vw_14, edxw, con(0xfffffffc), eaxw, con(0x0));
    SKW_DROP_CREATURE_POSSESSION(vw_14, edxw, ebxw, eaxw, ecxw);
    SKW_1c9a_0247(vw_14);
    SKW_DEALLOC_RECORD(vw_14);
  }
}

bool SKW_1c9a_17c7(x16 eaxw, x16 ebxw, x16 edxw)
{
  if (ebxw != ddata.v1e08d6 || ddata.v1e0238 || ddata.v1e0976 != con(0x0))
    return false;
  if (DM2_ABS(ddata.v1e08d8 - eaxw) == DM2_ABS(ddata.v1e08d4 - edxw))
    return false;
  if (SKW_CALC_VECTOR_DIR(ddata.v1e08d8, eaxw, edxw, ddata.v1e08d4) != ddata.v1e08da)
    return false;
  if (DM2_ABS(ddata.v1e08d8 - eaxw) > con(0x2))
    return false;
  if (DM2_ABS(ddata.v1e08d4 - edxw) > con(0x2))
    return false;
  return true;
}

// was SKW_1c9a_198e
x16 SKW_APPLY_CREATURE_POISON_RESISTANCE(x16 eaxw, x16 edxw)
{
  if (edxw != con(0x0))
  {
    x16 wordrg2 = urshift(SKW_QUERY_CREATURE_AI_SPEC_FROM_TYPE(eaxw)->u18.w, con(0x8)) & con(0xf);
    if (wordrg2 != con(0xf))
    {
      wordrg2 += con(0x2);
      return ((edxw + SKW_RAND02()) << con(0x3)) / wordrg2;
    }
  }
  return con(0x0);
}

void SKW_1c9a_19d4(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  ui16 uwordrg3 = ecxw & con(0x7fff);
  if (uwordrg3 > con(0x5) && uwordrg3 <= con(0x15))
  {
    x16 wordrg1 = uwordrg3 - con(0x6);
    if ((ecxw & con(0x8000)) != con(0x0))
      wordrg1 |= con(0x8000);
    SKW_ATTACK_CREATURE(eaxw, ebxw, wordrg1, edxw, con(0x64), con(0x0));
  }
}

// was SKW_1c9a_37be
void SKW___SET_CURRENT_THINKING_CREATURE_WALK_PATH(void)
{
  ddata.s350.v1e07e6 = NULL;
  if (ddata.s350.v1e0556 != NULL && ddata.s350.v1e07d8.b0 != con(0x0))
  {
    x16 vw_00;
    if (SKW_3e74_5673(UI32CAST(ddata.s350.v1e054c & con(0x3ff)) | con(0x30000000), con(0x0), &vw_00) != con(0x0))
      ddata.s350.v1e07e6 = UPCAST(x16, SKW_3e74_5817(vw_00)); // TODO: special
    else
    {
      ddata.s350.v1e07d8.b1 = con(0x0);
      ddata.s350.v1e07d8.b0 = con(0x0);
    }
  }
}

x16 SKW_1c9a_381c(void)
{
  x16 wordrg4 = con(0x0);
  SKW___SET_CURRENT_THINKING_CREATURE_WALK_PATH();
  if (ddata.s350.v1e07d8.b0 != con(0x0) && ddata.s350.v1e07d8.b1 != con(0x0))
  {
    wordrg4 = unsignedword(ddata.s350.v1e07d8.b1);
    ddata.s350.v1e0556->u.v.b1b = CUTX8(ddata.s350.v1e07e6[unsignedword(ddata.s350.v1e07d8.b0) - wordrg4]) & con(0x7);
  }
  else
  {
    if (unsignedword(ddata.s350.v1e0571) == urshift(ddata.s350.v1e07d8.w8, con(0xa)))
      if (unsignedword(ddata.s350.v1e0562.u.b.b_06) == (ddata.s350.v1e07d8.w8 & con(0x1f)))
        if (unsignedword(ddata.s350.v1e0562.u.b.b_07) == ulrshift(ddata.s350.v1e07d8.w8, con(0x6), con(0xb)))
          ddata.s350.v1e07d8.w8 = con(0xffffffff);
  }
  return wordrg4;
}

void SKW_FILL_ORPHAN_CAII(void)
{
  x16 wordrg3 = ddata.v1d3248;
  x16 wordrg2 = unsignedword(CUTX8(ddata.savegamep4->w0[2]));
  for (x16 wordrg4 = con(0x0); wordrg4 < wordrg2; wordrg4++)
  {
    SKW_CHANGE_CURRENT_MAP_TO(wordrg4);
    SKW_FILL_CAII_CUR_MAP();
  }
  SKW_CHANGE_CURRENT_MAP_TO(wordrg3);
}

void SKW_1c9a_3c30(void)
{
  ddata.v1e08a0 = con(0x0);
  c_record* recoptrrg4 = ddata.savegameparr5[4];
  x16 wordrg2 = ddata.savegamep4->w0[con(0xa)];
  for(;;)
  {
    if (--wordrg2 == con(0xffffffff))
    {
      x16 wordrg1 = DM2_MIN(ddata.v1e08a0 + con(0x64), ddata.savegamep4->w0[con(0xa)]);
      ddata.v1e08a0 = wordrg1;
      ddata.v1e089c = UPCAST(s_d556, DM2_ALLOC_FREEPOOL_MEMORY(34 * unsignedlong(wordrg1)));
      ddata.v1e08cc = UPCAST(s_32bytes, DM2_ALLOC_FREEPOOL_MEMORY(con(0x400)));
      ddata.v1e08c8 = UPCAST(s_32bytes, DM2_ALLOC_FREEPOOL_MEMORY(con(0x400)));
      return;
    }
    if (recoptrrg4->w0 != con(0xffffffff))
      if ((SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg4->u4.b.b0)->u0.b.b0 & con(0x1)) == con(0x0))
        ddata.v1e08a0++;
    recoptrrg4++;
  }
}

bool SKW_2066_1f37(x16 eaxw, x16* ebxpw, x16 edxw)
{
  x16 wordrg3 = eaxw;
  bool boolrg5 = false;
  for(;;)
  {
    x16 wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg3);
    wordrg3 = wordrg1;
    if (wordrg1 == con(0xfffffffe))
      break;
    if (urshift(wordrg1 & con(0x3c00), con(0xa)) == con(0x3))
    {
      c_record* recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg1);
      if ((recoptrrg1->u2.w & con(0x7f)) == con(0x27))
      {
        boolrg5 = true;
        if ((recoptrrg1->u2.w & con(0xffffff80)) == con(0x0))
        {
          x16 wordrg21 = ((edxw + con(0x1)) & con(0x1ff)) << con(0x7);
          recoptrrg1->u2.w = (recoptrrg1->u2.w & con(0x7f)) | wordrg21;
          *ebxpw += con(0x1);
        }
      }
    }
  }
  return boolrg5;
}

// was SKW_2066_3697
void SKW__OPEN_DIALOG_PANEL(x8 eaxb, x16 edxw)
{
  t_text t_00[0x50];
  c_rect rc_50;

  ddata.savegamep1 = UPCAST(c_hex2a, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x1a4)));
  t_text* tp_58 = SKW_QUERY_GDAT_TEXT(con(0x1a), con(0x0), t_00, eaxb);
  t_text* tptrrg2 = SKW_QUERY_GDAT_TEXT(con(0x1a), con(0x1), &t_00[con(0x28)], eaxb);
  t_gfxdata* gptrrg4 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x1a), con(0x0), eaxb);
  t_palette* gptrrg3;
  if (!dm2_dballochandler.gfxalloc_done)
    gptrrg3 = &gptrrg4[SKW_CALC_IMAGE_BYTE_LENGTH(gptrrg4)];
  else
    gptrrg3 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x1a), con(0x0), eaxb);
//                             srcbmp                     palette
  SKW_DRAW_DIALOGUE_PARTS_PICT(gptrrg4, con(0xffffffff), gptrrg3, SKW_QUERY_EXPANDED_RECT(con(0x4), &rc_50));
  SKW_FREE_PICT_ENTRY(gptrrg4);
  SKW_FIRE_FADE_SCREEN(true);
  SKW_DRAW_VP_RC_STR(con(0x1c2), v1d10eb, unsignedword(ddata.paletteptr1[con(0xc)]));
  SKW_DRAW_VP_RC_STR(con(0x1d2), tp_58, unsignedword(ddata.paletteptr1[con(0xb)]));
  SKW_DRAW_VP_RC_STR(con(0x1d3), tptrrg2, unsignedword(ddata.paletteptr1[con(0xb)]));
  SKW_2066_38d9();
  ddata.v1e0204 = edxw;
  SKW_1031_0675(con(0x4));
  ddata.v1e092a = con(0x0);
  while (ddata.mouse_visibility > con(0x0))
  {
    SKW_FIRE_SHOW_MOUSE_CURSOR();
    ddata.v1e092a++;
  }
}

void SKW_2066_3820(t_text* eaxt, bool edxbool)
{
  c_rect rc_00;

  SKW_QUERY_EXPANDED_RECT(con(0x1c5), &rc_00);
//                                   srcbmp                                                       srcofs     destbmp                                            palette
  SKW_DRAW_DIALOGUE_PICT(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x1a), con(0x0), con(0x81)), &rc_00, rc_00.x, ddata.bitmapptr, rc_00.y, con(0xffff), SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x1a), con(0x0), con(0x81)));
  x16 wordrg2 = unsignedword(ddata.paletteptr1[con(0xf)]);
  SKW_DRAW_VP_STR(rc_00.x, wordrg2, eaxt, rc_00.y + con(0x4));
  if (edxbool)
  {
    x16 wordrg4 = C_strmetrics.charwidth;
    rc_00.x += SKW_SK_STRLEN(eaxt) * wordrg4;
    rc_00.w = wordrg4;
    rc_00.h -= con(0x4);
    SKW_FIRE_FILL_BACKBUFF_RECT(&rc_00, ddata.paletteptr1[con(0xb)]);
  }
  SKW_DRAW_GAMELOAD_DIALOGUE_TO_SCREEN();
}

void SKW_2066_398a(x16 eaxw)
{
  c_rect rc_04;

  SKW_QUERY_EXPANDED_RECT(con(0x1c3), &rc_04);
  x16 wordrg6 = rc_04.y + con(0x4);
  for (x16 wordrg5 = con(0x0); wordrg5 < con(0xa); wordrg5++)
  {
    x16 wordrg2;
    if (wordrg5 != eaxw)
      wordrg2 = unsignedword(ddata.paletteptr1[con(0xb)]);
    else
      wordrg2 = unsignedword(ddata.paletteptr1[con(0xf)]);
    SKW_DRAW_VP_STR(rc_04.x, wordrg2, ddata.savegamep1[wordrg5].s_02.t_00, wordrg6);
    wordrg6 += ddata.strxplus;
  }
}

// was SKW_2405_005e
t_text* SKW_GET_ITEM_NAME(x16 eaxw)
{
  x8 byterg2 = SKW_QUERY_CLS1_FROM_RECORD(eaxw);
  x8 byterg1 = SKW_QUERY_CLS2_FROM_RECORD(eaxw);
  ddata.v1e098c = con(0xffffffff);
  if (byterg2 == con(0x15) && byterg1 == con(0x0))
  {
    x16 wordrg1 = urshift(SKW_GET_ADDRESS_OF_RECORD(eaxw)->u2.w, con(0xe));
    if (wordrg1 >= con(0x0) && wordrg1 < ddata.savegamew2)
      ddata.v1e098c = wordrg1;
  }
  return SKW_QUERY_GDAT_ITEM_NAME(byterg2, byterg1);
}

// was SKW_2405_02e8
// TODO: make ebxb bool?
void SKW_DRAW_ITEM_ICON(x16 eaxw, x8 ebxb, bool ecxbool, x16 edxw, bool argbool0)
{
  c_rect rc_00;

  x8 vb_10;
  x8 vb_14;
  x8 vb_18;
  if (eaxw != con(0xffffffff))
  {
    x16 wordrg3 = eaxw;
    vb_14 = SKW_QUERY_CLS1_FROM_RECORD(wordrg3);
    vb_10 = SKW_QUERY_CLS2_FROM_RECORD(wordrg3);
    x16 wordrg1;
    if (edxw >= con(0x8))
      wordrg1 = edxw - con(0x8);
    else
      wordrg1 = edxw & con(0x1);
    vb_18 = SKW_2405_014a(wordrg3, true, wordrg1);
  }
  else
  {
    vb_14 = con(0x7);
    vb_10 = con(0x0);
    vb_18 = ddata.v1d653c[edxw].b2 + ebxb;
  }
  x16 vw_0c = ddata.v1d653c[edxw].w0;
  if (edxw < con(0x26))
  {
    SKW_QUERY_EXPANDED_RECT(vw_0c, &rc_00);
    if (edxw >= con(0x8))
//                                  srcbmp                                                           srcofs    destbmp                                         palette
      SKW_DRAW_DIALOGUE_PICT(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x7), con(0x0), con(0x0)), &rc_00, rc_00.x, ddata.bitmapptr, rc_00.y, con(0xffff), SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x7), con(0x0), con(0x0)));
    else
//                                  srcbmp                                                                                                                                                                                              palette
      SKW_DRAW_ICON_PICT_BUFF(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x1), con(0x0), con(0x2)), &rc_00, rc_00.x - ddata.v1d69d4.s_00.rc_02.x, &ddata.v1d69d4, rc_00.y - ddata.v1d69d4.s_00.rc_02.y, con(0xffff), con(0x0), SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x1), con(0x0), con(0x2)));
  }
  if (argbool0 && edxw < con(0xe))
  {
    SKW_2405_011f(vw_0c, &rc_00);
    x8 byterg1;
    if (!ecxbool)
    {
      if (ebxb == con(0x0))
        byterg1 = con(0x4);
      else
        byterg1 = con(0x5);
    }
    else
      byterg1 = con(0x6);
    t_gfxdata* gptrrg6 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x1), byterg1, con(0x2));
    t_gfxdata* gptrrg1 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x1), byterg1, con(0x2));
    if (edxw >= con(0x8))
//                                 srcbmp              palette
      SKW_DRAW_DIALOGUE_PARTS_PICT(gptrrg6, con(0xc), gptrrg1, &rc_00);
    else
//                             srcbmp                                                                  palette
      SKW_DRAW_ICON_PICT_BUFF(gptrrg6, &rc_00, con(0x0), &ddata.v1d69d4, con(0x0), con(0xc), con(0x0), gptrrg1);
  }
  if (vb_18 != con(0xffffffff))
  {
    if (edxw >= con(0x8))
      SKW_DRAW_STATIC_PIC(vb_14, vb_18, vw_0c, vb_10, con(0xc));
    else
      SKW_DRAW_ICON_PICT_ENTRY(vb_14, vb_18, &ddata.v1d69d4, unsignedword(vb_10), vw_0c, con(0xc));
  }
}

// id: 0x287A6
// was SKW_2481_007d, SKW_MENU_SCREEN
void SKW_SHOW_MENU_SCREEN(void)
{
SPX_DEBUG_PUSH_FUNCTION_INFO("SKW_SHOW_MENU_SCREEN");
  ddata.v1e0950 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x5), con(0x1), con(0x0));		// Credit screen (tombstone)
  if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x5), con(0x7), con(0x4), con(0x0)) == con(0xffffffff))	// Main screen is raw form (0x07), PCDOS does not have it, but rather a localized image
  {
    ddata.v1e0954 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x5), con(0x4), con(0x0));
    s_gfxdatatail* ptrbeforerg11 = getprevious(ddata.v1e0954);
    //if (ptrbeforerg11->b0 != con(0x8))
	if (ptrbeforerg11 != NULL && ptrbeforerg11->b0 != con(0x8))	// SPX : add mem check
    {
      x16 wordrg41;
      if (ptrbeforerg11->b0 != con(0x4))
        wordrg41 = ptrbeforerg11->w2;
      else
        wordrg41 = ((ptrbeforerg11->w2 + con(0x1)) & con(0xfffffffe)) >> con(0x1);
      t_gfxdata* gptrrg11 = ddata.v1e0954;
      s_gfxdatatail* ptrbeforerg12 = getprevious(ddata.v1e0954);
      wordrg41 *= ptrbeforerg12->w4;
      gptrrg11 += wordrg41;
      ddata.v1d66f4 = gptrrg11;
    }
  }
  else
  {
    ddata.v1d66f8 = true;
    ddata.v1e0954 = UPCAST(t_gfxdata, SKW_QUERY_GDAT_ENTRY_DATA_PTR(con(0x5), con(0x7), con(0x4), con(0x0)));
  }
  s_gfxdatatail* ptrbeforerg13 = getprevious(ddata.v1e0950);
  x16 wordrg4;
  //if (ptrbeforerg13->b0 != con(0x8))
  if (ptrbeforerg13 != NULL && ptrbeforerg13->b0 != con(0x8)) 	// SPX : add mem check
  {
    if (ptrbeforerg13->b0 != con(0x4))
      wordrg4 = ptrbeforerg13->w2;
    else
      wordrg4 = ((ptrbeforerg13->w2 + con(0x1)) & con(0xfffffffe)) / 2;
    t_gfxdata* gptrrg12 = ddata.v1e0950;
    s_gfxdatatail* ptrbeforerg14 = getprevious(ddata.v1e0950);
    wordrg4 *= ptrbeforerg14->w4;
    gptrrg12 += wordrg4;
    ddata.v1e0958 = gptrrg12;
  }
  else
    ddata.v1e0958 = NULL;
  DM2_GRAPHICS_DATA_CLOSE();
  SKW_1031_0541(con(0x0));
  do
  {
    SKW_2481_0002();	// seems to be the one to draw title image
    SKW_FIRE_SHOW_MOUSE_CURSOR();
    SKW_1031_098e();
    ddata.savegamew8 = con(0x63);
    do
    {
      SKW_EVENT_LOOP();
    } while (ddata.savegamew8 == con(0x63));
  } while (ddata.savegamew8 == con(0xda));
  SKW_FIRE_HIDE_MOUSE_CURSOR();
  if (!ddata.v1d66f8)
    SKW_FREE_PICT_ENTRY(ddata.v1e0954);
  else
    DM2_DEALLOC_BIGPOOL_STRUCT_BEFORE(UPCAST(s_malloctail, DOWNCAST(t_gfxdata, ddata.v1e0954)));
  SKW_FREE_PICT_ENTRY(ddata.v1e0950);
SPX_DEBUG_POP;
}

// was SKW_24a5_069b
void SKW_BURN_PLAYER_LIGHTING_ITEMS(void)
{
  bool boolrg6 = false;
  x16 vw_00 = ddata.savegamew2;
  if (ddata.v1e0288 != con(0x0))
    vw_00 -= con(0x1);
  c_hero* heroptrrg5 = ddata.hero;
  for(;;)
  {
    if (--vw_00 == con(0xffffffff))
    {
      if (boolrg6)
        SKW_RECALC_LIGHT_LEVEL();
      return;
    }
    x16 wordrg3 = con(0x2);
    for(;;)
    {
      if (--wordrg3 == con(0xffffffff))
        break;
      x16 wordrg2 = heroptrrg5->warrc3[wordrg3];
      if (((SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg2, con(0x0)) & con(0x10)) != con(0x0)) && SKW_ADD_ITEM_CHARGE(wordrg2, con(0x0)) != con(0x0))
      {
        if (SKW_ADD_ITEM_CHARGE(wordrg2, con(0xffffffff)) == con(0x0))
          SKW_SET_ITEM_IMPORTANCE(wordrg2, con(0x0));
        boolrg6 = true;
      }
    }
    heroptrrg5++;
  }
}

void SKW_24a5_0732(x16 eaxw, t_text* ebxt, x16 edxw)
{
  t_text t_00[0xcc];

  x16 vw_d0;
  x16 vw_cc = con(0x0);
  if (C_strmetrics.SKW_QUERY_STR_METRICS(ebxt, OO vw_cc, OO vw_d0))
  {
    x16 wordrg2;
    t_text textrg1;
    for (x16 wordrg4 = con(0x0); ; wordrg4++)
    {
      wordrg2 = wordrg4;
      textrg1 = ebxt[wordrg2];
      if (textrg1 == con(0x0))
        break;
      wordrg2 = unsignedword(textrg1);
      if (wordrg2 < con(0x41) || wordrg2 > con(0x5a))
      {
        wordrg2 = unsignedword(textrg1);
        if (wordrg2 >= con(0x7b))
          textrg1 -= con(0x60);
      }
      else
        textrg1 -= con(0x40);
      wordrg2 = wordrg4;
      t_00[wordrg2] = textrg1;
    }
    t_00[wordrg2] = textrg1;
    SKW_DRAW_VP_STR(eaxw - (vw_d0 >> con(0x1)), unsignedword(ddata.paletteptr1[con(0x0)]), t_00, edxw);
  }
}

void SKW_DRAW_SCROLL_TEXT(x16 eaxw)
{
  t_text t_00[0xc8];
  t_text t_c8[0xc8];
  c_rect rc_190;

  t_text* tptrrg5 = t_c8;
  SKW_QUERY_MESSAGE_TEXT(t_c8, con(0xffff8002), eaxw);
  ddata.v1d66fc = con(0x5);
  SKW_DRAW_STATIC_PIC(con(0x7), con(0x1), con(0x1ee), con(0x0), con(0xffffffff));
  SKW_DRAW_STATIC_PIC(con(0x12), con(0x10), con(0x1ee), con(0x0), con(0xc));
  x16 wordrg3 = con(0x0);
  x16 wordrg1;
  for(;;)
  {
    wordrg1 = wordrg3 + con(0x1);
    if (*tptrrg5 == NULLBYTE)
      break;
    if (*tptrrg5 == con(0xa))
      wordrg3 = wordrg1;
    tptrrg5++;
  }
  t_text textrg4 = *(tptrrg5 - con(0x1));
  if (textrg4 == con(0xa))
  {
    if (*(tptrrg5 - con(0x2)) == textrg4)
      wordrg3--;
  }
  else
    wordrg3 = wordrg1;
  x16 vw_19c; // y0
  x16 vw_1a0; // x0
  SKW_QUERY_TOPLEFT_OF_RECT(con(0x230), &vw_1a0, &vw_19c);
  SKW_QUERY_EXPANDED_RECT(con(0x1ee), &rc_190);
  x16 wordrg5 = ddata.strxplus;
  vw_19c -= (wordrg3 * wordrg5 - C_strmetrics.yofs - con(0x1)) / 2 - C_strmetrics.height;
  x16 vw_198 = con(0x0);
  for(;;)
  {
    if (t_c8[vw_198] == con(0x0))
      return;
    SKW_3929_04e2(t_c8, &vw_198, rc_190.w, t_00);
    SKW_24a5_0732(vw_1a0, t_00, vw_19c);
    vw_19c += wordrg5;
    if (t_c8[vw_198] == con(0xa))
      vw_198++;
  }
}

// was SKW_24a5_0990
void SKW__CHECK_ROOM_FOR_CONTAINER(x16 eaxw, c_record* edxprec)
{
  if (eaxw != con(0xffffffff) && eaxw != ddata.v1d6700)
  {
    x16 vw_04 = con(0x0);
    x16 wordrg6 = con(0x0);
    while ((edxprec->u2.w != con(0xfffffffe)) && ++vw_04 <= con(0x8))
    {
      ddata.v1e095c[wordrg6] = edxprec->u2.w;
      wordrg6++;
      SKW_CUT_RECORD_FROM(edxprec->u2.w, con(0xffffffff), con(0x0), &edxprec->u2.w);
    }
    for(;;)
    {
      if (wordrg6 >= con(0x8))
        return;
      ddata.v1e095c[wordrg6] = con(0xffff);
      wordrg6++;
    }
    ddata.v1d6700 = eaxw;
  }
}

// SKW_24a5_0a06
void SKW_MONEY_BOX_SURVEY(x16 eaxw)
{
  x16 vwa_04[0xa];
  t_text t_18[0xc];

  x32 longrg7 = con(0x0);
  SKW_COUNT_BY_COIN_TYPES(eaxw, vwa_04);
  x16 wordrg3 = con(0x26a);
  for (x16 wordrg5 = con(0x0); wordrg5 < con(0xa); wordrg5++)
  {
    x16 wordrg1 = SKW_GET_ITEM_ORDER_IN_CONTAINER(eaxw, wordrg5);
    if (wordrg1 >= con(0x0))
    {
      x32 longrg2 = signedlong(vwa_04[wordrg1]);
      longrg7 += signedlong(ddata.v1e03ac[wordrg1]) * longrg2;
      SKW_DRAW_VP_RC_STR(wordrg3++, SKW_SK_LTOA10(longrg2, t_18), unsignedword(ddata.paletteptr1[con(0xd)]));
    }
  }
  SKW_DRAW_VP_RC_STR(con(0x239), SKW_SK_LTOA10(longrg7, t_18), unsignedword(ddata.paletteptr1[con(0xd)]));
}

void SKW_24a5_0e82(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, bool argbool1)
{
  c_rect rc_00;
  c_rect rc_08;
  c_rect rc_10;

  x16 wordrg6;
  if (eaxw >= con(0xfffffe00))
  {
    if (eaxw >= con(0x0))
      wordrg6 = ebxw;
    else
      wordrg6 = con(0xb);
  }
  else
    wordrg6 = con(0x8);
  if (SKW_SCALE_RECT(edxw, (eaxw - ecxw) * con(0x2710) / (argw0 - ecxw), con(0x2710), &rc_08) != NULL)
  {
    if (!argbool1)
      SKW_COPY_RECT(&rc_08, &rc_10);
    else
    {
      SKW_QUERY_EXPANDED_RECT(edxw, &rc_00);
      SKW_COPY_RECT(&rc_00, &rc_10);
      if ((rc_08.x + rc_08.w - con(0x1)) != (rc_00.x + rc_00.w - con(0x1)))
      {
        rc_00.w = rc_00.x + rc_00.w - (rc_08.x + rc_08.w);
        rc_00.x = rc_08.x + rc_08.w;
      }
      else
        argbool1 = false;
    }
    rc_10.x += ddata.v1d2748;
    rc_10.y += ddata.v1d2748;
    SKW_FIRE_FILL_BACKBUFF_RECT(&rc_10, ddata.paletteptr1[con(0x0)]);
    SKW_FIRE_FILL_BACKBUFF_RECT(&rc_08, ddata.paletteptr1[wordrg6]);
    if (argbool1)
      SKW_FIRE_FILL_BACKBUFF_RECT(&rc_00, ddata.paletteptr1[con(0x1)]);
  }
}

void SKW_24a5_1532(void)
{
  t_text t_00[0x80];

  x16 vw_80; // x0 rectB
  x16 vw_84; // y0 rectB, y0 rectA
  x16 vw_8c; // x0 rectA
  x16 vw_98 = ddata.v1e0976 - con(0x1);
  c_hero* heroptrrg6 = &ddata.hero[ddata.v1e0976 - con(0x1)];
  ddata.v1d66fc = con(0x2);
  SKW_DRAW_STATIC_PIC(con(0x7), con(0x1), con(0x1ee), con(0x0), con(0xffffffff));
  SKW_QUERY_TOPLEFT_OF_RECT(con(0x22d), &vw_8c, &vw_84);
  x16 vw_90 = con(0x0);
  for(;;)
  {
    x16 wordrg5 = vw_90;
    if (wordrg5 > con(0x3))
    {
      SKW_QUERY_TOPLEFT_OF_RECT(con(0x22f), &vw_80, &vw_84);
      vw_90 = con(0x1);
      for(;;)
      {
        wordrg5 = vw_90;
        if (wordrg5 > con(0x6))
          return;
        SKW_DRAW_VP_STR(vw_8c, unsignedword(ddata.paletteptr1[con(0xd)]), SKW_QUERY_GDAT_TEXT(con(0x7), CUTX8(vw_90 + con(0x20)), t_00, con(0x0)), vw_84);
        x16 wordrg3 = SKW_GET_PLAYER_ABILITY(heroptrrg6, con(0x0), wordrg5);
        x16 vw_94 = wordrg3;
        x16 vw_88 = SKW_GET_PLAYER_ABILITY(heroptrrg6, con(0x1), wordrg5);
        if (wordrg3 >= vw_88)
        {
          if (wordrg3 <= vw_88)
            wordrg3 = con(0xd);
          else
            wordrg3 = con(0x7);
        }
        else
          wordrg3 = con(0x8);
        SKW_DRAW_VP_STR(vw_80, unsignedword(ddata.paletteptr1[wordrg3]), SKW_FMT_NUM(vw_94, con(0x3), con(0x1)), vw_84);
        SKW_SK_STRCPY(t_00, v1d10f2);
        SKW_SK_STRCAT(t_00, SKW_FMT_NUM(vw_88, con(0x3), con(0x1)));
        SKW_DRAW_VP_STR(C_strmetrics.charwidth * con(0x3) + vw_80, unsignedword(ddata.paletteptr1[con(0xd)]), t_00, vw_84);
        vw_84 += ddata.strxplus;
        vw_90++;
      }
    }
    x16 wordrg12 = DM2_MIN(con(0x10), SKW_QUERY_PLAYER_SKILL_LV(vw_98, true, wordrg5));
    if (wordrg12 != con(0x1))
    {
      ddata.v1e0994 = wordrg5;
      SKW_QUERY_GDAT_TEXT(con(0x7), table1d6712[wordrg12 + 4], t_00, con(0x0)); // EVIL index shifted, was 0x1d6716
      x16 wordrg11;
      if (ddata.v1e0ffa[4 * vw_98 + wordrg5 + 2] == con(0x0)) // EVIL offset shifted by 2, was 1e0ffc
        wordrg11 = con(0xd);
      else
        wordrg11 = con(0x7);
      SKW_DRAW_VP_STR(vw_8c, unsignedword(ddata.paletteptr1[wordrg11]), t_00, vw_84);
      ddata.v1e096c[vw_90] = ddata.v1e0ffa[4 * vw_98 + vw_90 + con(0x2)]; // EVIL offset shifted by 2, was 0x1e0ffc
      vw_84 += ddata.strxplus;
    }
    vw_90++;
  }
}

t_text* SKW_QUERY_GDAT_TEXT(x8 eaxb, x8 ebxb, t_text* ecxt, x8 edxb)
{
  *ecxt = NULLBYTE;
  t_text* tp_00 = UPCAST(t_text, SKW_QUERY_GDAT_ENTRY_DATA_BUFF(eaxb, con(0x5), ebxb, edxb));
  if (tp_00 != NULL)
  {
    x16 wordrg3 = CUTX16(SKW_QUERY_GDAT_ENTRY_DATA_LENGTH(eaxb, con(0x5), ebxb, edxb));
    x16 vw_0c = wordrg3;
    t_text* tp_08 = UPCAST(t_text, DM2_ALLOC_LOBIGPOOL_MEMORY(signedlong(wordrg3)));
    SKW_COPY_MEMORY(DOWNCAST(t_text, tp_00), signedlong(wordrg3), DOWNCAST(t_text, tp_08));
    if (ddata.v1e0984 != con(0x0))
    {
      t_text* tptrrg1 = tp_08;
      x8 byterg4 = con(0x0);
      for(;;)
      {
        if (--wordrg3 == con(0xffffffff))
          break;
        *tptrrg1++ = (tptrrg1[con(0x0)] ^ con(0xffffffff)) - byterg4++;
      }
    }
    SKW_FORMAT_SKSTR(tp_08, ecxt);
    DM2_DEALLOC_LOBIGPOOL(signedlong(vw_0c));
  }
  return ecxt;
}

void R_2F5DE(t_gfxdata* eaxp, t_gfxdata* edxp)
{
  s_gfxdatatail* ptrbeforerg1 = getprevious(eaxp);
  s_gfxdatatail* ptrbeforerg6 = getprevious(edxp);
  x16 wordrg2;
  if (ptrbeforerg1->b0 != con(0x4))
    wordrg2 = ptrbeforerg1->w2;
  else
    wordrg2 = ((ptrbeforerg1->w2 + con(0x1)) & con(0xfffffffe)) >> con(0x1);
  SKW_COPY_MEMORY(DOWNCAST(s_gfxdatatail, ptrbeforerg1), lextended(wordrg2 * ptrbeforerg1->w4) + con(0x6), DOWNCAST(s_gfxdatatail, ptrbeforerg6));
}

void SKW_QUERY_GDAT_IMAGE_METRICS(x8 eaxb, x8 ebxb, x16* ecxpw, x8 edxb, x16* argpw0)
{
  if (!dm2_ulp.islen(unsignedlong(DM2_QUERY_GDAT_ENTRY_DATA_INDEX(eaxb, con(0x1), ebxb, edxb))))
  {
    s_2w* sptrrg1 = UPCAST(s_2w, SKW_QUERY_GDAT_ENTRY_DATA_PTR(eaxb, con(0x1), ebxb, edxb));
    *ecxpw = sptrrg1->w0[con(0x0)] & con(0x3ff);
    *argpw0 = sptrrg1->w0[con(0x1)] & con(0x3ff);
  }
  else
  {
    s_gfxdatatail* ptrbeforerg1 = getprevious(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(eaxb, ebxb, edxb));
    *ecxpw = ptrbeforerg1->w2;
    *argpw0 = ptrbeforerg1->w4;
  }
}

ui16 SKW_QUERY_CMDSTR_TEXT(t_text* eaxt, const t_text* edxt)
{
  t_text* tptrrg1 = eaxt;
  x16 wordrg3 = con(0x0);
  for(;;)
  {
    tptrrg1 = SKW_SK_STRSTR(tptrrg1, edxt);
    if (tptrrg1 == NULL)
      break;
    tptrrg1 += signedlong(SKW_SK_STRLEN(edxt));
    if (*tptrrg1 == '=')
      tptrrg1++;
    bool boolrg6 = false;
    if (*tptrrg1 == '-')
    {
      boolrg6 = true;
      tptrrg1 += con(0x1);
    }
    for(;;)
    {
      t_text textrg2 = *tptrrg1;
      if (textrg2 < '0' || textrg2 > '9')
        break;
      wordrg3 *= con(0xa);
      wordrg3 += unsignedword(textrg2 - '0');
      tptrrg1++;
    }
    if (boolrg6)
      wordrg3 = -wordrg3;
  }
  return wordrg3;
}

ui16 SKW_QUERY_CMDSTR_ENTRY(x8 eaxb, x8 ebxb, x16 ecxw, x8 edxb)
{
  t_text t_00[0x80];

  if (ecxw >= con(0x12))
    return con(0x0);
 t_text* tptrrg1 = SKW_QUERY_GDAT_TEXT(eaxb, ebxb, t_00, edxb);
  if (*tptrrg1 != NULLBYTE)
    return SKW_QUERY_CMDSTR_TEXT(tptrrg1, table1d6912[ecxw]);
  return con(0x0);
}

// ebx is a textcharacter
bool SKW_2759_01fe(x16 ebxw, x16 edxw)
{
  if (edxw == con(0xffffffff))
    return false;
  if (urshift(edxw & con(0x3c00), con(0xa)) != con(0x9))
    return true;
  c_record* recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(edxw);
  x16 wordrg11 = recoptrrg2->u4.w & con(0x6);
  if (wordrg11 != con(0x2))
    return true;
  ui16 uwordrg3 = urshift(recoptrrg2->u4.w, con(0xd));
  if (uwordrg3 < con(0x1) || uwordrg3 > wordrg11)
    return false;
  if (SKW_GET_MISSILE_REF_OF_MINION(recoptrrg2->u2.w, edxw) == NULL)
  {
    if (ebxw == con(0x2f) || ebxw == con(0x2c))
      return true;
    if (recoptrrg2->u6.w == con(0xffffffff))
      return false;
    if (ebxw == con(0x2d))
      return true;
    return ebxw == con(0x2e);
  }
  if (ebxw == con(0x30))
    return true;
  if (uwordrg3 != con(0x2))
    return false;
  x8 byterg1 = SKW_GET_ADDRESS_OF_RECORD(recoptrrg2->u2.w)->u4.b.b0;
  if (byterg1 != con(0x33))
  {
    if (byterg1 != con(0x32))
      return false;
    return ebxw == con(0x2e);
  }
  return ebxw == con(0x2d);
}

bool SKW_IS_MISSILE_VALID_TO_LAUNCHER(x16 eaxw, x16 ebxw, x16 edxw)
{
  if (ebxw != con(0xffffffff))
    if (ddata.hero[eaxw].warrc3[edxw] != con(0xffffffff))
    {
      x16 wordrg3 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(ebxw, con(0x5));
      if ((wordrg3 & con(0x8000)) != con(0x0))
      {
        x16 wordrg1 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(ebxw, con(0x5));
        if ((wordrg1 & con(0x8000)) == con(0x0))
          if ((wordrg3 & (wordrg1 & con(0x7fff))) != con(0x0))
            return true;
      }
    }
  return false;
}

// was SKW_2759_0f39
void SKW_ADJUST_HAND_COOLDOWN(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_hero* heroptrrg6 = &ddata.hero[eaxw];
  ui16 uwordrg4 = edxw + edxw / 4;
  x16 wordrg2 = ebxw;
  x16 wordrg3;
  if (ebxw != con(0xffffffff))
    wordrg3 = con(0x1);
  else
  {
    wordrg3 = con(0x3);
    wordrg2 = con(0x0);
  }
  if (ddata.savegames1.b4 != con(0x0))
    uwordrg4 = urshift(uwordrg4, con(0x2));
  uwordrg4 += con(0x2);
  for(;;)
  {
    ui16 uwordrg1 = unsignedword(heroptrrg6->b2a[wordrg2]);
    x16 wordrg5;
    if (uwordrg4 <= uwordrg1)
      wordrg5 = uwordrg4 / 2;
    else
    {
      wordrg5 = uwordrg1 / 2;
      uwordrg1 = uwordrg4;
    }
    uwordrg1 += wordrg5;
    if (uwordrg1 > con(0xff))
      uwordrg1 = con(0xff);
    heroptrrg6->b2a[wordrg2] = CUTX8(uwordrg1);
    wordrg2++;
    if (--wordrg3 == con(0x0))
      return;
  }
}

bool R_30DEA(x16 eaxw)
{
  x16 wordrg1 = SKW_QUERY_CMDSTR_ENTRY(ddata.v1e0b7f, ddata.v1e0b7e, con(0x8), ddata.v1e0b80);
  if (wordrg1 == con(0x10))
    wordrg1 = con(0xf);
  if (wordrg1 != con(0x11) && wordrg1 != con(0x12))
  {
    wordrg1 = -wordrg1;
    SKW_ADD_ITEM_CHARGE(ddata.v1e0b50, wordrg1);
  }
  bool flag = SKW_ADD_ITEM_CHARGE(ddata.v1e0b50, con(0x0)) == con(0x0); // logic negated
  if (flag)
    if ((SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(ddata.v1e0b50, con(0x0)) & con(0x800)) != con(0x0))
    {
      SKW_REMOVE_POSSESSION(eaxw, ddata.v1e0b76);
      SKW_DEALLOC_RECORD(ddata.v1e0b50);
    }
  return flag;
}

// was SKW_2759_1204
x32 SKW_PROCEED_COMMAND_SLOT(x16 eaxw)
{
  x32 longrg3 = con(0x0);
  if (ddata.v1e0b74 != con(0x0))
  {
    x16 wordrg2 = ddata.v1e0b74 - con(0x1);
    x16 wordrg1 = wordrg2;
    c_hero* heroptrrg4 = &ddata.hero[wordrg1];
    if (eaxw != con(0xffffffff))
    {
      heroptrrg4->u32.b.b1 |= con(0x8);
      longrg3 = SKW_ENGAGE_COMMAND(wordrg1, eaxw);
      s_size8* sptrrg4;
      bool flag;
      if (ddata.v1e0b76 == con(0x1) || ddata.v1e0b76 == con(0x0))
      {
        sptrrg4 = &ddata.v1e0adc[wordrg2][ddata.v1e0b76]; // BUGFIX 3/2014
        flag = false;
      }
      else
      {
        sptrrg4 = NULL;
        flag = true;
      }
      if (flag || sptrrg4->w2 == con(0x0) || (sptrrg4->b4 != con(0x0) && SKW_RAND16(sptrrg4->w0 + con(0x1)) == con(0x0)))
      {
        if (R_30DEA(wordrg2) && sptrrg4 != NULL)
        {
          sptrrg4->w0 = con(0x0);
          sptrrg4->w2 = con(0x0);
          sptrrg4->b4 = con(0x0);
        }
      }
    }
    else
      ddata.v1e0b62 = con(0x0);
    if (ddata.v1e0b62 == con(0x0))
      SKW_DISPLAY_RIGHT_PANEL_SQUAD_HANDS();
    else
      ddata.v1e0b62 &= con(0xfffffbff);
    SKW_UPDATE_RIGHT_PANEL(false);
  }
  return longrg3;
}

bool SKW_CONFUSE_CREATURE(x16 eaxw, x16 ebxw, x16 edxw)
{
  if (ddata.v1e0b4c != con(0xffffffff))
  {
    ui16 uwordrg2 = (unsignedlong(SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(SKW_GET_ADDRESS_OF_RECORD(ddata.v1e0b4c)->u4.b.b0)->w16) >> 4) & con(0xf);
    if (uwordrg2 <= SKW_RAND16(eaxw) && uwordrg2 != con(0xf))
    {
      SKW_ATTACK_CREATURE(ddata.v1e0b4c, ebxw, con(0x2005), edxw, con(0x64), con(0x0));
      return true;
    }
  }
  return false;
}

x16 SKW_FIND_HAND_WITH_EMPTY_FLASK(c_hero* eaxphero)
{
  x16 wordrg4 = con(0x2);
  for(;;)
  {
    wordrg4--;
    if (wordrg4 < con(0x0))
      return wordrg4;
    x16 wordrg1 = eaxphero->warrc3[wordrg4];
    if (urshift(wordrg1 & con(0x3c00), con(0xa)) != con(0x8))
      continue;
    if (SKW_QUERY_CLS2_FROM_RECORD(wordrg1) == con(0x14))
      return wordrg4;
  }
}

bool SKW_TRY_CAST_SPELL(void)
{
  x16 wordrg5 = ddata.v1e0b74 - con(0x1);
  c_hero* heroptrrg3 = &ddata.hero[wordrg5];
  s_802* sptrrg1 = SKW_FIND_SPELL_BY_RUNES(heroptrrg3->t22);
  x16 wordrg4;
  if (sptrrg1 != NULL)
    wordrg4 = SKW_2759_222e(wordrg5, unsignedword(heroptrrg3->t22[con(0x0)]) - con(0x5f), sptrrg1);
  else
    wordrg4 = con(0x20);
  bool boolrg5 = wordrg4 != con(0x0);
  if (boolrg5)
    SKW_PROCEED_SPELL_FAILURE(wordrg4);
  wordrg4 &= con(0xf0);
  if (wordrg4 != con(0x30))
  {
    heroptrrg3->t22[con(0x0)] = wordrg4 >> con(0x8);
    heroptrrg3->b1e = wordrg4 >> con(0x8);
    SKW_DISPLAY_RIGHT_PANEL_SQUAD_HANDS();
  }
  return boolrg5;
}

// TODO: evil offsets inside
void SKW_ADD_RUNE_TO_TAIL(x16 eaxw)
{
  x16 wordrg3 = eaxw;
  c_hero* heroptrrg4 = &ddata.hero[ddata.v1e0b74 - con(0x1)];
  ui16 uwordrg1 = unsignedword(table1d67e0[heroptrrg4->b1e][wordrg3]);
  x8 byterg2 = heroptrrg4->b1e;
  if (byterg2 != con(0x0))
  {
    //RG5L = unsignedlong(table1d6797[heroptrrg4->t22[con(0x20]) + 1]); // EVIL offset was 0x1d6798
    // TODO !
    int a = (heroptrrg4->t22[con(0x0)] + 0x1d6798 - 0x1d67e0) / 6;
    int b = (heroptrrg4->t22[con(0x0)] + 0x1d6798 - 0x1d67e0) % 6;
    uwordrg1 = urshift(uwordrg1 * table1d67e0[a][b], con(0x3)); // table: EVIL offset was 0x1d6798
  }
  bool boolrg5 = false;
  if (uwordrg1 <= heroptrrg4->w3e)
  {
    heroptrrg4->w3e -= uwordrg1;
    heroptrrg4->u32.b.b1 |= con(0x8);
    t_text textrg3 = CUTX8(wordrg3); // TODO: would be enough if eaxw is a byte only
    textrg3 += byterg2 * con(0x6) + con(0x60);
    heroptrrg4->t22[byterg2] = textrg3;
    byterg2++;
    heroptrrg4->b1e = byterg2;
    heroptrrg4->t22[byterg2] = con(0x0);
    boolrg5 = true;
  }
  ddata.v1e0b6c = con(0x1);
  SKW_UPDATE_RIGHT_PANEL(false);
  R_107B0();
  if (boolrg5)
    SKW_REFRESH_PLAYER_STAT_DISP(ddata.v1e0b74 - con(0x1));
}

void SKW_29ee_000f(void)
{
  c_c5rects vs_00;

  x8 vb_34 = (!ddata.v1e03a8) ? con(0x2) : con(0xe);
  SKW_0b36_0c52(&vs_00, true, con(0x9));
  SKW_FILL_ENTIRE_PICT(SKW_3e74_5817(vs_00.s_00.w_00), ddata.paletteptr1[con(0x0)]);
  for (x16 wordrg5 = con(0x28); wordrg5 < con(0x2e); wordrg5++)
  {
    SKW_DRAW_ICON_PICT_ENTRY(con(0x1), vb_34, &vs_00, con(0x3), wordrg5, con(0xffff));
    vb_34 += con(0x2);
  }
  SKW_0b36_0cbe(&vs_00, true);
  SKW_1031_0541(ddata.v1e03a8 ? con(0x6) : con(0x5));
}

// was SKW_29ee_026c
// TODO: ebxb bool?
void SKW_DRAW_HAND_ACTION_ICONS(x16 eaxw, x8 ebxb, x16 edxw)
{
  c_hex18 vh18_08;
  c_rect rc_20;
  c_rect rc_28;

  SKW_29ee_00a3(false);
  c_hero* heroptrrg6 = &ddata.hero[eaxw];
  x16 wordrg1;
  if (edxw != con(0x1))
    wordrg1 = con(0x4a);
  else
    wordrg1 = con(0x46);
  wordrg1 += (unsignedword(heroptrrg6->b1d) + con(0x4) - ddata.v1e0258) & con(0x3);
  SKW_QUERY_EXPANDED_RECT(wordrg1, &rc_28);
  if (heroptrrg6->w36 != con(0x0))
  {
    SKW_DRAW_ICON_PICT_ENTRY(con(0x1), 2 * CUTX8(edxw) + con(0x2) + ebxb, &ddata.v1d694c, con(0x4), wordrg1, con(0xffff));
    t_gfxdata* gptrrg5 = SKW_DRAW_ITEM_ON_WOOD_PANEL(eaxw, &vh18_08, edxw);
    s_gfxdatatail* ptrbeforerg5 = getprevious(gptrrg5);
    if (gptrrg5 != NULL)
    {
      SKW_CALC_CENTERED_RECT_IN_RECT(&rc_20, ptrbeforerg5->w2, ptrbeforerg5->w4, &rc_28);
//                             srcbmp                                                                                                   palette
      SKW_DRAW_ICON_PICT_BUFF(gptrrg5, &rc_20, con(0x0), &ddata.v1d694c, con(0x0), unsignedword(ddata.paletteptr1[con(0x8)]), con(0x0), NULL);
      SKW_0b36_01cd(&vh18_08);
    }
    if ((heroptrrg6->b2a[edxw] != con(0x0)) || (ddata.v1e0238))
      SKW_0b36_105b(&ddata.v1d694c, con(0x0), &rc_28);
  }
  else
    SKW_FILL_RECT_SUMMARY(&ddata.v1d694c, ddata.paletteptr1[0], &rc_28);
}

void SKW_29ee_0396(void)
{
  c_image vs_00;
  t_gfxdata vcarr_13c[PAL16];
  c_rect rc_14c;

  SKW_29ee_00a3(false);
  SKW_DRAW_ICON_PICT_ENTRY(con(0x8), con(0xf5), &ddata.v1d694c, ddata.v1d67d6, con(0x2f), con(0xffff));
  t_gfxdata* gptrrg6 = SKW_ALLOC_PICT_BUFF(CUTLX8(ddata.v1d272c), BIGPOOL_LO, con(0x4), ddata.v1d272e);
  for (x16 vw_15c = con(0x0); vw_15c < ddata.savegamew2; vw_15c++)
  {
    x16 wordrg2 = (unsignedword(ddata.hero[vw_15c].b1d) + con(0x4) - ddata.v1e0258) & con(0x3);
    if (ddata.hero[vw_15c].w36 != con(0x0))
    {
      if (ddata.v1e00b8 != (wordrg2 + con(0x1)))
      {
        x16 vw_158 = con(0x0);
        x16 vw_154 = con(0x0);
        wordrg2 += con(0x35);
        if (SKW_QUERY_BLIT_RECT(gptrrg6, wordrg2, &vw_154, &rc_14c, &vw_158, con(0xffffffff)) != NULL)
        {
          if (ddata.savegames1.b4 != con(0x0))
          {
            x16 wordrg12 = SKW_RAND02();
            if (wordrg12 != con(0x0))
            {
              wordrg12 -= con(0x2);
              rc_14c.y += wordrg12;
              x16 wordrg11 = SKW_RAND02();
              if (wordrg11 != con(0x0))
              {
                wordrg11 -= con(0x2);
                rc_14c.x += wordrg11;
              }
            }
          }
//                                         srcbmp                                                                                                      palette
          SKW_DRAW_ICON_PICT_BUFF(SKW_QUERY_GDAT_SQUAD_ICON(gptrrg6, vcarr_13c, vw_15c), &rc_14c, vw_154, &ddata.v1d694c, vw_158, con(0xc), con(0x0), vcarr_13c);
          if (ddata.hero[vw_15c].w103 != con(0x0))
          {
            SKW_QUERY_PICST_IT(SKW_QUERY_GDAT_SUMMARY_IMAGE(&vs_00, con(0x7), ddata.hero[vw_15c].b102, con(0x1)));
            vs_00.s_00.w_04 |= con(0x10);
            vs_00.s_00.w_12 >>= con(0x2);
            vs_00.s_00.w_0e = vs_00.s_00.w_12 * ((unsignedword(ddata.hero[vw_15c].b1c) + con(0x4) - ddata.v1e0258) & con(0x3));
            vs_00.s_00.w_14 >>= con(0x2);
            vs_00.s_00.w_10 = CUTX16(ddata.longmallocx) & con(0x3) * vs_00.s_00.w_14;
            SKW_0b36_11c0(&vs_00, wordrg2, con(0xc), &ddata.v1d694c);
          }
        }
      }
    }
  }
  SKW_FREE_PICT_BUFF(gptrrg6);
  if (ddata.v1e0238)
    SKW_0b36_105b(&ddata.v1d694c, con(0x0), SKW_QUERY_EXPANDED_RECT(con(0x2f), &rc_14c));
}

void SKW_DRAW_PLAYER_NAME_AT_CMDSLOT(void)
{
  SKW_DRAW_ICON_PICT_ENTRY(con(0x1), con(0x14), &ddata.v1d694c, con(0x4), con(0x3c), con(0xffff));
  SKW_DRAW_ICON_PICT_ENTRY(con(0x1), con(0xe), &ddata.v1d694c, con(0x4), con(0x3b), con(0xffff));
  x16 wordrg2 = ddata.v1e0b74 - con(0x1);
  SKW_DRAW_NAME_STR(&ddata.v1d694c, unsignedword(ddata.paletteptr1[(wordrg2 != ddata.mouse_unk0e) ? con(0xf) : con(0x9)]), unsignedword(ddata.paletteptr1[con(0xc)]) | con(0x4000), con(0x3d), ddata.hero[wordrg2].t00);
}

void SKW_DRAW_PLAYER_ATTACK_DIR(void)
{
  c_image vs_00;
  t_gfxdata vcarr_13c[PAL16];
  c_rect rc_14c;

  SKW_29ee_00a3(false);
  SKW_DRAW_ICON_PICT_ENTRY(con(0x8), con(0xf6), &ddata.v1d694c, ddata.v1d67d6, con(0x5d), con(0xffff));
  t_gfxdata* gptrrg6 = SKW_ALLOC_PICT_BUFF(ddata.v1d272c, BIGPOOL_LO, con(0x4), ddata.v1d272e);
  x16 vw_154 = con(0x0);
  x16 vw_158 = con(0x0);
  if (SKW_QUERY_BLIT_RECT(gptrrg6, con(0x5e), &vw_158, &rc_14c, &vw_154, con(0xffffffff)) != NULL)
  {
    if (ddata.savegames1.b4 != con(0x0))
    {
      x16 wordrg11 = SKW_RAND02(); // BUGFIX 4/2014
      if (wordrg11 != con(0x0))
      {
        wordrg11 -= con(0x2);
        rc_14c.y += wordrg11;
        x16 wordrg12 = SKW_RAND02();
        if (wordrg12 != con(0x0))
        {
          wordrg12 -= con(0x2);
          rc_14c.x += wordrg12;
        }
      }
    }
    x16 wordrg5 = ddata.v1e0b74 - con(0x1);
    SKW_QUERY_GDAT_SQUAD_ICON(gptrrg6, vcarr_13c, wordrg5);
//                           srcbmp                                                               palette
    SKW_DRAW_ICON_PICT_BUFF(gptrrg6, &rc_14c, vw_158, &ddata.v1d694c, vw_154, con(0xc), con(0x0), vcarr_13c);
    if (ddata.hero[wordrg5].w103 != con(0x0))
    {
      SKW_QUERY_PICST_IT(SKW_QUERY_GDAT_SUMMARY_IMAGE(&vs_00, con(0x7), ddata.hero[wordrg5].b102, con(0x1)));
      vs_00.s_00.w_04 |= con(0x10);
      vs_00.s_00.w_12 >>= con(0x2);
      vs_00.s_00.w_0e = ((unsignedword(ddata.hero[wordrg5 / 263].b1c) + con(0x4) - ddata.v1e0258) & con(0x3)) * vs_00.s_00.w_12;
      vs_00.s_00.w_14 >>= con(0x2);
      vs_00.s_00.w_10 = (CUTX16(ddata.longmallocx) & con(0x3)) * vs_00.s_00.w_14;
      SKW_0b36_11c0(&vs_00, con(0x5e), con(0xc), &ddata.v1d694c);
    }
  }
  SKW_FREE_PICT_BUFF(gptrrg6);
  SKW_DRAW_ICON_PICT_ENTRY(con(0x1), con(0x10), &ddata.v1d694c, con(0x4), con(0x60), con(0xffff));
  SKW_DRAW_ICON_PICT_ENTRY(con(0x1), con(0x12), &ddata.v1d694c, con(0x4), con(0x61), con(0xffff));
}

// was SKW_29ee_093e
void SKW_DRAW_SPELL_TO_BE_CAST(bool eaxbool)
{
  t_text t_04[0x4]; // TODO probably just t_04[0x2]

  SKW_29ee_00a3(false);
  if (eaxbool)
    SKW_DRAW_ICON_PICT_ENTRY(con(0x1), con(0x9), &ddata.v1d694c, con(0x5), con(0xfc), con(0xffff));
  c_hero* heroptrrg7 = &ddata.hero[ddata.v1e0b74 - con(0x1)];
  t_04[0x1] = NULLBYTE;
  x16 wordrg6 = con(0x105);
  for (ui16 uwordrg5 = con(0x0); uwordrg5 < UI16CAST(SKW_SK_STRLEN(heroptrrg7->t22)); uwordrg5++)
  {
    t_04[0x0] = heroptrrg7->t22[uwordrg5];
    SKW_DRAW_SIMPLE_STR(&ddata.v1d694c, unsignedword(ddata.paletteptr1[con(0x0)]), unsignedword(ddata.paletteptr1[con(0xd)]) | con(0x4000), wordrg6++, t_04);
  }
}

void SKW_DRAW_CMD_SLOT(x16 eaxw, bool edxbool)
{
  SKW_29ee_00a3(false);
  if (ddata.v1e0b62 != con(0x0))
    SKW_DRAW_ICON_PICT_ENTRY(con(0x14), 2 * (ddata.v1e0b40[eaxw].b2 - con(0x8)) + con(0x41) + (edxbool ? 1 : 0), &ddata.v1d694c, ddata.v1e0ba4, eaxw + con(0x6e), con(0xffff));
  else
  {
    SKW_DRAW_ICON_PICT_ENTRY(con(0x1), (edxbool ? 1 : 0) + con(0x15), &ddata.v1d694c, con(0x4), eaxw + con(0x3f), con(0xffff));
    SKW_DRAW_NAME_STR(&ddata.v1d694c, unsignedword(ddata.paletteptr1[con(0xf)]), unsignedword(ddata.paletteptr1[con(0x0)]) | con(0x4000), eaxw + con(0x42), SKW_QUERY_CMDSTR_NAME(ddata.v1e0b40[eaxw].b0, ddata.v1e0b40[eaxw].b2, ddata.v1e0b40[eaxw].b1)); // BUGFIX 3/2014
  }
}

void SKW_DRAW_CHIP_OF_MAGIC_MAP(t_gfxdata* eaxpg, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, t_gfxdata* argpg1)
{
  c_rect rc_00;

  if (eaxpg != NULL)
  {
    SKW_SET_SRECT(&rc_00, ebxw, ecxw, ddata.v1d274a, ddata.v1d274c);
    x16 vw_08;
    x16 vw_0c;
    if (SKW_UNION_RECT(&rc_00, &vw_0c, &vw_08, &ddata.v1e0b9c) != NULL)
    {
      if (ddata.v1d274a != rc_00.w)
        if ((argw0 & con(0x1)) != con(0x0))
        {
          if (vw_0c == con(0x0))
            vw_0c = ddata.v1d274a - rc_00.w;
          else
            vw_0c = con(0x0);
        }
      if (ddata.v1d274c != rc_00.h)
        if ((argw0 & con(0x2)) != con(0x0))
        {
          if (vw_08 == con(0x0))
            vw_08 = (ddata.v1d274c - rc_00.h);
          else
            vw_08 = con(0x0);
        }
//                            srcbmp                                                                               palette
      SKW_DRAW_ICON_PICT_BUFF(eaxpg, &rc_00, edxw * ddata.v1d274a + vw_0c, &ddata.v1d694c, vw_08, con(0xa), argw0, argpg1);
    }
  }
}

void SKW_DRAW_MONEYBOX(x16 eaxw)
{
  x16 vwa_04[0xa];
  c_rect rc_18;
  c_rect rc_20;

  SKW_DRAW_ICON_PICT_ENTRY(con(0x14), con(0x10), &ddata.v1d694c, SKW_QUERY_CLS2_FROM_RECORD(eaxw), con(0x5c), con(0xffff));
  SKW_COUNT_BY_COIN_TYPES(eaxw, vwa_04);
  for (x16 vw_38 = con(0x0); vw_38 < con(0xa); vw_38++)
  {
    x16 wordrg1 = SKW_GET_ITEM_ORDER_IN_CONTAINER(eaxw, vw_38);
    if (wordrg1 >= con(0x0))
    {
      x16 wordrg5 = vwa_04[wordrg1];
      if (wordrg5 > con(0x0))
      {
        x16 wordrg11 = ddata.v1e0394[wordrg1];
        x8 vb_2c = SKW_GET_ITEMTYPE_OF_ITEMSPEC_ACTUATOR(wordrg11);
        x8 byterg1 = SKW_QUERY_ITEMDB_FROM_DISTINCTIVE_ITEMTYPE(wordrg11);
        t_gfxdata* gptrrg6 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(byterg1, con(0x18), vb_2c);
        t_gfxdata* pg_28 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(byterg1, con(0x18), vb_2c);
        x16 vw_30 = con(0x0);
        x16 vw_34 = con(0x0);
        SKW_QUERY_BLIT_RECT(gptrrg6, vw_38 + con(0xdd), &vw_34, &rc_18, &vw_30, con(0xffffffff));
        rc_20.w = rc_18.w;
        rc_20.h = rc_18.h;
        x16 wordrg6 = vw_38 << con(0x3);
        wordrg6 += DM2_MAX(con(0x0), wordrg5 - con(0x20));
        wordrg5 = DM2_MIN(con(0x20), wordrg5);
        do
        {
          wordrg6++;
          wordrg6 &= con(0x1f);
          rc_20.x = rc_18.x + signedword(table1d275a[wordrg6][0]);
          rc_20.y = rc_18.y + signedword(table1d275a[wordrg6][1]);
          SKW_UNION_RECT(&rc_20, &vw_34, &vw_30, &ddata.v1d694c.s_00.rc_02);
//                                 srcbmp                                                           palette
          SKW_DRAW_ICON_PICT_BUFF(gptrrg6, &rc_20, vw_34, &ddata.v1d694c, vw_30, con(0xc), con(0x0), pg_28);
          wordrg5--;
        } while (wordrg5 > con(0x0));
      }
    }
  }
}

// was SKW_29ee_21d8
void SKW_DRAW_CONTAINER_PANEL(x16 eaxw, bool edxbool)
{
  c_rect rc_00;
  c_rect rc_08;

  x8 vb_18 = SKW_QUERY_CLS2_FROM_RECORD(eaxw);
  if (edxbool)
  {
    SKW_DRAW_ICON_PICT_ENTRY(con(0x14), con(0x10), &ddata.v1d694c, vb_18, con(0x5c), con(0xffff));
    SKW_DRAW_ICON_PICT_ENTRY(con(0x14), con(0x12), &ddata.v1d694c, vb_18, con(0xe3), con(0xa));
  }
  if (!edxbool)
    SKW_QUERY_EXPANDED_RECT(con(0x5c), &rc_08);
  for (x16 wordrg5 = con(0x0); wordrg5 < con(0x8); wordrg5++)
  {
    x16 vw_10 = ddata.v1e095c[wordrg5];
    if (vw_10 != con(0xffffffff))
    {
      x16 vw_14 = wordrg5 + con(0xe5);
      if (!edxbool)
      {
        SKW_QUERY_EXPANDED_RECT(vw_14, &rc_00);
//                                        srcbmp                                                                                                                                                            palette
        SKW_DRAW_ICON_PICT_BUFF(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x14), con(0x10), vb_18), &rc_00, rc_00.x - rc_08.x, &ddata.v1d694c, rc_00.y - rc_08.y, con(0xffff), edxbool ? 1 : 0, SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x14), con(0x10), vb_18));
      }
      x8 byterg2 = SKW_2405_014a(vw_10, true, wordrg5 + con(0x1e));
      SKW_DRAW_ICON_PICT_ENTRY(SKW_QUERY_CLS1_FROM_RECORD(vw_10), byterg2, &ddata.v1d694c, SKW_QUERY_CLS2_FROM_RECORD(vw_10), vw_14, con(0xc));
    }
  }
}

bool SKW_2c1d_0186(c_hero* eaxphero, x16 ebxw, x16 ecxw, x8 edxb)
{
  x16 wordrg2 = ebxw;
  x16 wordrg3 = ecxw;
  bool boolrg5 = true;
  if (wordrg3 != con(0x0))
  {
    if (eaxphero->w3e == con(0x0))
      return false;
    wordrg3 = eaxphero->w3e;
    if (wordrg3 >= con(0x4))
      eaxphero->w3e -= con(0x4);
    else
    {
      wordrg2 = urshift(wordrg2, con(0x1));
      eaxphero->w3e = con(0x0);
      boolrg5 = false;
    }
  }
  SKW_2c1d_0009(con(0xf), wordrg3 >> con(0x5), wordrg2, edxb);
  return boolrg5;
}

x16 SKW_GET_PLAYER_AT_POSITION(x16 eaxw)
{
  c_hero* heroptrrg1 = ddata.hero;
  for (ui16 uwordrg4 = con(0x0); uwordrg4 < ddata.savegamew2; uwordrg4++, heroptrrg1++)
    if (unsignedword(heroptrrg1->b1d) == eaxw)
      if (heroptrrg1->w36 != con(0x0))
        return uwordrg4;
  return con(0xffffffff);
}

void SKW_2c1d_0300(c_hero* eaxphero, x16 ebxw, x16 edxw)
{
  x8* bptrrg3 = &eaxphero->b4a[2 * edxw];
  x16 wordrg1 = unsignedword(*bptrrg3) + ebxw - unsignedword(*(bptrrg3 + 1));
  x16 wordrg2 = ebxw;
  if (wordrg1 < con(0x0) == ebxw < con(0x0))
  {
    wordrg1 = DM2_ABS(wordrg1);
    for(;;)
    {
      if (wordrg1 <= con(0x14))
        break;
      wordrg2 -= wordrg2 / 4;
      wordrg1 -= con(0x14);
    }
  }
  *bptrrg3 = CUTX8(DM2_BETWEEN_VALUE(con(0xa), con(0xdc), unsignedword(*bptrrg3) + wordrg2));
}

void SKW_TAKE_OBJECT(x16 eaxw, bool edxbool)
{
  if (eaxw != con(0xffffffff))
  {
    x16 wordrg2 = eaxw & con(0x3fff);
    x16 wordrg3 = wordrg2;
    ddata.savegamewpc.w18 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg3, con(0x0));
    ddata.savegamewpc.w1a = SKW_QUERY_ITEM_WEIGHT(wordrg3);
    ddata.savegamewpc.w0 = wordrg2;
    SKW_DRAW_ITEM_IN_HAND(&ddata.savegamewpc);
    SKW_FIRE_HIDE_MOUSE_CURSOR();
    SKW_DISPLAY_TAKEN_ITEM_NAME(wordrg3);
    if (!edxbool)
      SKW_443c_0434();
    else
      ddata.v1e0254 = con(0x1);
    SKW_FIRE_SHOW_MOUSE_CURSOR();
    SKW_PROCESS_ITEM_BONUS(ddata.mouse_unk0e, con(0xffffffff), con(0x1), wordrg2);
    R_3CE7D(ddata.v1e0270, con(0xffff), true, ddata.v1e0272, true, false);
  }
}

// TODO: offsetproblem
x16 SKW_REMOVE_POSSESSION(x16 eaxw, x16 edxw)
{
  c_hero* heroptrrg6 = &ddata.hero[eaxw];
  x16 wordrg5;
  if (edxw < con(0x1e))
  {
    wordrg5 = heroptrrg6->warrc3[edxw];
    heroptrrg6->warrc3[edxw] = con(0xffffffff);
  }
  else
  {
    wordrg5 = ddata.v1e095c[edxw - 0x3c / 2]; // EVIL! offsetproblem1 TODO
    ddata.v1e095c[edxw - 0x3c / 2] = con(0xffffffff); // EVIL! offsetproblem1 TODO
  }
  if (wordrg5 != con(0xffffffff))
  {
    if (eaxw == (ddata.v1e0b74 - con(0x1)))
      if (edxw <= con(0x1))
        if (edxw == ddata.v1e0b76)
          SKW_DISPLAY_RIGHT_PANEL_SQUAD_HANDS();
    SKW_PROCESS_ITEM_BONUS(eaxw, edxw, con(0xffffffff), wordrg5);
  }
  return wordrg5;
}

// TODO: offsetproblem
void SKW_EQUIP_ITEM_TO_HAND(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 wordrg4 = edxw;
  if (wordrg4 != con(0xffffffff))
  {
    c_hero* heroptrrg6 = &ddata.hero[eaxw];
    wordrg4 &= con(0x3fff);
    if (ebxw < con(0x1e))
      heroptrrg6->warrc3[ebxw] = wordrg4;
    else
      ddata.v1e095c[ebxw - 0x3c / 2] = wordrg4; // EVIL! offsetproblem1 TODO
    SKW_PROCESS_ITEM_BONUS(eaxw, ebxw, con(0x1), wordrg4);
  }
}

ui16 SKW_QUERY_PLAYER_SKILL_LV(x16 eaxw, bool ebxbool, x16 edxw)
{
  if (ddata.v1e0238)
    return con(0x1);
  c_hero* heroptrrg2 = &ddata.hero[eaxw];
  x16 wordrg4 = edxw;
  ui32 ulongrg1 = heroptrrg2->l5f[wordrg4];
  if (wordrg4 > con(0x3))
  {
    x32 longrg4;
    if (!ebxbool)
      longrg4 = con(0x1);
    else
    {
      wordrg4 -= con(0x4);
      wordrg4 >>= con(0x2);
      longrg4 = signedlong(heroptrrg2->baf[wordrg4]) + con(0x1);
    }
    longrg4 *= heroptrrg2->l5f[(edxw - con(0x4)) / 4];
    ulongrg1 += longrg4;
    ulongrg1 >>= con(0x1);
  }
  ui16 uwordrg41 = con(0x1);
  while (ulongrg1 >= con(0x200))
  {
    ulongrg1 >>= con(0x1);
    uwordrg41++;
  }
  if (ebxbool)
  {
    uwordrg41 += signedword(heroptrrg2->baf[edxw]);
    uwordrg41 = DM2_MAX(con(0x1), uwordrg41);
  }
  return uwordrg41;
}

x16 SKW_GET_PLAYER_ABILITY(c_hero* eaxphero, x16 ebxw, x16 edxw)
{
  x16 wordrg4 = eaxphero->b4a[2 * edxw + ebxw];
  if (ebxw == con(0x0)) // BUGFIX 3/2014
  {
    x16 wordrg1 = eaxphero->w103;
    if (wordrg1 != con(0x0) && eaxphero->b102 >= con(0x3) && eaxphero->b102 <= con(0x6) && (eaxphero->b102 -= con(0x2), edxw == unsignedword(eaxphero->b102))) // BUGFIX 3/2014
    {
      if (wordrg1 > con(0x64))
        wordrg1 = con(0x64);
      wordrg4 += SKW_RAND16(((wordrg1 * wordrg4) >> con(0x7)) + con(0x1)) + con(0x4);
    }
  }
  return DM2_BETWEEN_VALUE(con(0xa), con(0xdc), signedword(eaxphero->b58[edxw]) + wordrg4); // BUGFIX 4/2014
}

// TODO: make edxw unsigned
// was SKW_2c1d_0f67
bool SKW_USE_LUCK_ATTRIBUTE(c_hero* eaxphero, x16 edxw)
{
  if (SKW_RAND01() != con(0x0) && SKW_RAND16(con(0x64)) > UI16CAST(edxw))
    return true;
  bool boolrg6 = SKW_RAND16((2 * SKW_GET_PLAYER_ABILITY(eaxphero, con(0x0), con(0x0)))) > UI16CAST(edxw);
  x16 wordrg2 = DM2_MIN(con(0xdc), SKW_GET_PLAYER_ABILITY(eaxphero, con(0x1), con(0x0)));
  x16 wordrg1;
  if (!boolrg6)
    wordrg1 = con(0x2);
  else
    wordrg1 = con(0xfffffffe);
  wordrg1 += unsignedword(eaxphero->b4a[con(0x0)]);
  eaxphero->b4a[con(0x0)] = CUTX8(DM2_BETWEEN_VALUE(con(0xa), wordrg2, wordrg1));
  return boolrg6;
}

x16 SKW_MAX_LOAD(c_hero* eaxphero)
{
  x16 wordrg1 = SKW_STAMINA_ADJUSTED_ATTR(eaxphero, 8 * SKW_GET_PLAYER_ABILITY(eaxphero, con(0x0), con(0x1)) + con(0x64));
  x16 wordrg4 = eaxphero->w34;
  if (wordrg4 != con(0x0))
  {
    wordrg4 &= con(0x10);
    wordrg1 -= wordrg1 >> (((wordrg4 == con(0x0)) ? 1 : 0) + con(0x2));
  }
  wordrg1 += con(0x9);
  return wordrg1 - (wordrg1 % con(0xa));
}

x16 SKW_CALC_PLAYER_WALK_DELAY(x16 eaxw)
{
  x16 wordrg1;
  if (ddata.savegames1.b4 == con(0x0))
  {
    c_hero* heroptrrg2 = &ddata.hero[eaxw];
    ui16 uwordrg3 = SKW_MAX_LOAD(heroptrrg2);
    x16 wordrg12 = SKW_GET_PLAYER_WEIGHT(eaxw);
    x16 wordrg41;
    x16 wordrg11;
    if (uwordrg3 <= wordrg12)
    {
      wordrg11 = 4 * (wordrg12 - uwordrg3) / uwordrg3 + con(0x4);
      wordrg41 = con(0x2);
    }
    else
    {
      wordrg11 = con(0x2);
      x16 wordrg6 = 8 * wordrg11;
      if (wordrg6 > (5 * uwordrg3))
        wordrg11 = con(0x3);
      wordrg41 = con(0x1);
    }
    if ((heroptrrg2->w34 & con(0x20)) != con(0x0))
      wordrg11 += wordrg41;
    wordrg11 -= signedword(heroptrrg2->b105[con(0x0)]);
    wordrg1 = DM2_MAX(con(0x1), wordrg11);
    if (wordrg1 > con(0x2))
    {
      wordrg1++;
      wordrg1 &= con(0xfffffffe);
    }
  }
  else
    wordrg1 = con(0x1);
  return wordrg1;
}

// was SKW_2c1d_111e
x16 SKW_USE_DEXTERITY_ATTRIBUTE(x16 eaxw)
{
  c_hero* heroptrrg3 = &ddata.hero[eaxw];
  x16 wordrg2 = (CUTX16(SKW_RAND()) & con(0x7)) + SKW_GET_PLAYER_ABILITY(heroptrrg3, con(0x0), con(0x2));
  x16 wordrg3 = SKW_MAX_LOAD(heroptrrg3);
  wordrg2 -= (wordrg2 / 2) * SKW_GET_PLAYER_WEIGHT(eaxw) / wordrg3;
  x16 wordrg21 = DM2_MAX(con(0x2), wordrg2);
  if (ddata.v1e0238)
    wordrg21 >>= con(0x1);
  return DM2_BETWEEN_VALUE((SKW_RAND() & con(0x7)) + con(0x1), con(0x64) - CUTX16(SKW_RAND() & con(0x7)), wordrg21 / 2);
}

x16 SKW_2c1d_132c(x16 eaxw, x16 edxw)
{
  x16 wordrg1 = unsignedword(CUTX8(eaxw));
  if (edxw != con(0x0))
    wordrg1 = SKW_0cd5_0176(wordrg1, urshift(eaxw & con(0x700), con(0x8)) + con(0x4), con(0x3));
  return wordrg1;
}

x16 SKW_2c1d_135d(x16 eaxw, x16 edxw)
{
  x16 vw_00 = edxw;
  c_hero* heroptrrg7 = &ddata.hero[eaxw];
  x16 vw_0c = vw_00 & con(0x8000);
  if (vw_0c != con(0x0))
    vw_00 &= con(0x7fff);
  x16 vw_08 = con(0x0);
  for (x16 wordrg5 = con(0x0); wordrg5 <= con(0x1); wordrg5++)
  {
    x16 wordrg1 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(heroptrrg7->warrc3[wordrg5], con(0xb));
    x16 wordrg6 = wordrg1;
    wordrg1 &= con(0x8000);
    if (wordrg1 != con(0x0))
    {
      x16 wordrg2 = SKW_COMPUTE_PLAYER_ATTACK_OR_THROW_STRENGTH(eaxw, con(0x7), wordrg5);
      vw_08 += ((SKW_2c1d_132c(wordrg6, vw_0c) + wordrg2) * table1d69aa[vw_00]) >> (((wordrg5 != vw_00) ? 1 : 0) + con(0x4));
    }
  }
  x16 wordrg51 = SKW_RAND16(((SKW_GET_PLAYER_ABILITY(heroptrrg7, con(0x0), con(0x4))) / 8 + con(0x1)));
  if (vw_0c != con(0x0))
    wordrg51 >>= con(0x1);
  if (ddata.hero[eaxw].b102 == con(0x2))
    wordrg51 += ddata.hero[eaxw].w103;
  wordrg51 += signedword(heroptrrg7->b42[con(0x1)]) + signedword(heroptrrg7->b42[con(0x0)]) + vw_08;
  if (vw_00 > con(0x1))
    wordrg51 += SKW_2c1d_132c(SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(heroptrrg7->warrc3[vw_00], con(0xb)), vw_0c);
  if (((con(0x1) << CUTX8(vw_00)) & heroptrrg7->w34) != con(0x0))
    wordrg51 -= SKW_RAND02() + con(0x8);
  if (ddata.v1e0238)
    wordrg51 >>= con(0x1);
  return DM2_BETWEEN_VALUE(con(0x0), con(0x64), wordrg51 / 2);
}

// TODO: return not needed
x8 SKW_DROP_PLAYER_ITEMS(x16 eaxw)
{
  x16 vw_00 = unsignedword(ddata.hero[eaxw].b1d);
  for (x8 byterg5 = con(0x0); byterg5 < con(0x1e); byterg5++)
  {
    x16 wordrg1 = SKW_REMOVE_POSSESSION(eaxw, table1d69b0[byterg5]);
    if (wordrg1 != con(0xffffffff))
    {
      wordrg1 &= con(0x3fff);
      SKW_MOVE_RECORD_TO((vw_00 << con(0xe)) | wordrg1, con(0x0), ddata.v1e0270, con(0xffffffff), ddata.v1e0272);
    }
  }
  return con(0x1e);
}

void SKW_PROCESS_PLAYERS_DAMAGE(void)
{
  c_tim vtim_00;

  c_hero* heroptrrg4 = ddata.hero;
  for (ui16 uwordrg3 = con(0x0); uwordrg3 < UI16CAST(ddata.savegamew2); uwordrg3++, heroptrrg4++)
  {
    heroptrrg4->w34 |= ddata.v1e0ba8[uwordrg3];
    ddata.v1e0ba8[uwordrg3] = con(0x0);
    x16 wordrg5 = ddata.v1e0bb0[uwordrg3];
    if (wordrg5 != con(0x0))
    {
      ddata.v1e0bb0[uwordrg3] = con(0x0);
      x16 wordrg1 = heroptrrg4->w36;
      if (wordrg1 != con(0x0))
      {
        wordrg1 -= wordrg5;
        if (wordrg1 > con(0x0))
        {
          heroptrrg4->w36 = wordrg1;
          heroptrrg4->w30 = wordrg5;
          heroptrrg4->u32.b.b1 |= con(0x8);
          x16 wordrg51 = heroptrrg4->w2e;
          x32 longrg2 = ddata.longmallocx + con(0x5);
          if (wordrg51 != con(0xffffffff))
          {
            ddata.savegametimarrp[wordrg51].un.l_00 = (signedlong(ddata.v1e0266) << con(0x18)) | longrg2;
            SKW_3a15_05f7(wordrg51);
          }
          else
          {
            vtim_00.b_04 = con(0xc);
            longrg2 |= signedlong(ddata.v1e0266) << con(0x18);
            vtim_00.un.l_00 = longrg2;
            vtim_00.b_05 = CUTX8(uwordrg3);
            heroptrrg4->w2e = SKW_QUEUE_TIMER(&vtim_00);
          }
        }
        else
          SKW_PLAYER_DEFEATED(uwordrg3);
      }
    }
  }
}

void SKW_ADJUST_STAMINA(x16 eaxw, x16 edxw)
{
  if (eaxw != con(0xffffffff))
  {
    c_hero* heroptrrg5 = &ddata.hero[eaxw];
    x16 wordrg4 = heroptrrg5->w3a - edxw;
    heroptrrg5->w3a = wordrg4;
    if (wordrg4 > con(0x0))
    {
      if (wordrg4 > heroptrrg5->u3c.w)
        heroptrrg5->w3a = heroptrrg5->u3c.w;
    }
    else
    {
      heroptrrg5->w3a = con(0x0);
      SKW_WOUND_PLAYER(eaxw, con(0x0), con(0x0), -wordrg4 / 2);
    }
    if (DM2_ABS(edxw) >= con(0xa))
      heroptrrg5->u32.b.b1 |= con(0x8);
  }
}

// was SKW_2c1d_1cf3
void SKW_SHOOT_CHAMPION_MISSILE(c_hero* eaxphero, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  x16 wordrg6 = unsignedword(eaxphero->b1c);
  SKW_SHOOT_ITEM(edxw, ddata.v1e0272, wordrg6 + (((unsignedword(eaxphero->b1d) - wordrg6 + con(0x1)) & con(0x2)) >> con(0x1)) & con(0x3), ddata.v1e0270, CUTX8(wordrg6), CUTX8(DM2_MIN(ebxw, con(0xff))), CUTX8(DM2_MIN(ecxw, con(0xff))), CUTX8(DM2_MIN(argw0, con(0xff))));
  ddata.v1e025e = con(0x4);
  ddata.v1e0274 = wordrg6;
}

// was SKW_2c1d_1d64
bool SKW_CAST_CHAMPION_MISSILE_SPELL(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  c_hero* heroptrrg5 = &ddata.hero[eaxw];
  if (heroptrrg5->w3e < ecxw)
    return false;
  heroptrrg5->w3e -= ecxw;
  heroptrrg5->u32.b.b1 |= con(0x8);
  x16 wordrg4 = con(0xa) - (DM2_MIN(con(0x6), heroptrrg5->w40 >> con(0x5)));
  x16 wordrg1 = wordrg4;
  wordrg4 <<= con(0x2);
  x16 wordrg2 = ebxw;
  if (wordrg2 < wordrg4)
  {
    wordrg2 += con(0x4);
    wordrg1 = wordrg2 / 4;
  }
  SKW_SHOOT_CHAMPION_MISSILE(heroptrrg5, wordrg2, con(0x5a), edxw, wordrg1);
  return true;
}

// TODO: maybe returns a word, but byte is enough
x8 R_37BEA(x16 eaxw)
{
  if (ddata.hero[eaxw].w36 == con(0x0))
    return con(0x0);
  x16 wordrg3 = ddata.hero[eaxw].u32.w & con(0x10);
  if ((SKW_GET_PLAYER_WEIGHT(eaxw) / con(0xa) + wordrg3) != con(0x0))
    return con(0x32);
  return con(0x28);
}

// was SKW_2c1d_201d
x16 SKW_GET_PARTY_SPECIAL_FORCE(void)
{
  x16 wordrg2 = con(0x0);
  for (x16 wordrg4 = con(0x0); wordrg4 < ddata.savegamew2; wordrg4++)
    wordrg2 += signedword(R_37BEA(wordrg4));
  return wordrg2;
}

t_gfxdata* SKW_QUERY_GDAT_SQUAD_ICON(t_gfxdata* eaxpg, t_gfxdata* ebxpg, x16 edxw)
{
  x16 wordrg3 = (unsignedword(ddata.hero[edxw].b1c) + con(0x4) - ddata.v1e0258) & con(0x3);
  x16 wordrg1;
  if (ddata.savegames1.b2 == con(0x0))
    wordrg1 = con(0x0);
  else
    wordrg1 = con(0x4);
  wordrg3 += wordrg1;
  x16 vw_00 = ddata.v1d272c * wordrg3;
  SKW_COPY_MEMORY(DOWNCAST(t_gfxdata, SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x1), CUTX8(edxw), con(0x6))), PAL16, DOWNCAST(t_gfxdata, ebxpg));
  c_rect* recoptrrg6 = SKW_ALLOC_TEMP_ORIGIN_RECT(ddata.v1d272c, ddata.v1d272e);
//                               srcbmp                                                                srcofs destbmp                   palette
  SKW_DRAW_DIALOGUE_PICT(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x1), CUTX8(edxw), con(0x6)), recoptrrg6, vw_00, eaxpg, con(0x0), con(0x2), NULL);
  return eaxpg;
}

void SKW_DRAW_PLAYER_3STAT_PANE(x16 eaxw, bool edxbool)
{
  x16 wordrg3 = eaxw;
  if (ddata.v1d69d4.s_00.w_00 == con(0xffffffff))
  {
    x16 wordrg2 = wordrg3;
  x8 vb_00;
    if (ddata.hero[wordrg2].w36 != con(0x0))
    {
      wordrg2++;
      vb_00 = (ddata.v1e0976 != wordrg2) ? con(0x0) : con(0x9);
    }
    else
      vb_00 = con(0x1);
    wordrg3 += con(0xa1);
    SKW_0b36_0c52(&ddata.v1d69d4, edxbool, wordrg3);
    SKW_DRAW_ICON_PICT_ENTRY(con(0x1), vb_00, &ddata.v1d69d4, con(0x2), wordrg3, con(0xffff));
    if (!edxbool)
      ddata.v1d69d4.s_00.w_0a = con(0x0);
  }
}

void SKW_DRAW_PLAYER_3STAT_HEALTH_BAR(x16 eaxw)
{
  x16 vwa_04[0x6];
  c_rect rc_10;
  c_rect rc_18;

  SKW_0b36_0d67(&ddata.v1d69d4, SKW_QUERY_EXPANDED_RECT(eaxw + con(0xb9), &rc_18));
  c_hero* heroptrrg4 = &ddata.hero[eaxw];
  vwa_04[0x0] = heroptrrg4->w36;
  vwa_04[0x1] = heroptrrg4->w38;
  vwa_04[0x2] = heroptrrg4->w3a;
  vwa_04[0x3] = heroptrrg4->u3c.w;
  vwa_04[0x4] = heroptrrg4->w3e; // BUGFIX 2/2014
  vwa_04[0x5] = DM2_MAX(heroptrrg4->w40, heroptrrg4->w3e);
  x16 wordrg6 = eaxw + con(0xc1);
  for (x16 wordrg5 = con(0x0); wordrg5 < con(0x3); wordrg5++)
  {
    x16 wordrg1 = 2 * wordrg5;
    if (vwa_04[0x1 + wordrg1] != con(0x0))
    {
      x32 longrg2 = signedlong(vwa_04[0x1 + wordrg1]);
      x16 wordrg11 = signedlong(vwa_04[0x0 + wordrg1]) * con(0x2710) / longrg2;
      if (SKW_SCALE_RECT(wordrg6, con(0x2710), wordrg11, &rc_18) != NULL)
      {
        SKW_COPY_RECT(&rc_18, &rc_10);
        rc_10.x += ddata.v1d2728;
        rc_10.y += ddata.v1d272a;
        SKW_FILL_RECT_SUMMARY(&ddata.v1d69d4, ddata.paletteptr1[0], &rc_10);
        SKW_FILL_RECT_SUMMARY(&ddata.v1d69d4, ddata.paletteptr1[table1d69d0[eaxw]], &rc_18);
      }
    }
    wordrg6 += con(0x4);
  }
}

void SKW_2e62_0cfa(bool eaxbool)
{
  for (ui16 uwordrg4 = con(0x0); uwordrg4 < ddata.savegamew2; uwordrg4++)
    if ((uwordrg4 + con(0x1)) != ddata.v1e0976)
      SKW_REFRESH_PLAYER_STAT_DISP(uwordrg4);
  if (ddata.v1e0976 != con(0x0))
  {
    c_hero* heroptrrg1 = &ddata.hero[ddata.v1e0976 - con(0x1)];
    if ((heroptrrg1->w103 != con(0x0)) && (heroptrrg1->b102 >= con(0x3) && heroptrrg1->b102 <= con(0x6)))
      heroptrrg1->u32.w |= (!ddata.v1e0228 || ddata.savegamewpc.w0 != con(0xffffffff)) ? con(0x1000) : con(0x3000);
    SKW_REFRESH_PLAYER_STAT_DISP(ddata.v1e0976 - con(0x1));
  }
  SKW_UPDATE_RIGHT_PANEL(eaxbool);
}

// was SKW_2e62_0d82
void SKW_GLOBAL_UPDATE_UNKNOW1(void)
{
  if (ddata.savegamewpc.w0 != con(0xffffffff) && (SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(ddata.savegamewpc.w0, con(0x0)) & con(0x8000)) != con(0x0))
  {
    x8 byterg1 = SKW_2405_014a(ddata.savegamewpc.w0, true, con(0xffffffff));
    if (byterg1 != ddata.savegamewpc.b16)
    {
      SKW_DRAW_ITEM_IN_HAND(&ddata.savegamewpc);
      SKW_443c_0434();
      ddata.savegamewpc.b16 = byterg1;
    }
  }
}

// was SKW_2f3f_06fe
void SKW_BRING_CHAMPION_TO_LIFE(x16 eaxw)
{
  c_hero* heroptrrg2 = &ddata.hero[eaxw];
  R_36EFE(eaxw);
  heroptrrg2->wff = con(0x0);
  for (x16 wordrg4 = con(0x0); wordrg4 < con(0x1e); wordrg4++)
    heroptrrg2->warrc3[wordrg4] = con(0xffffffff);
  x16 wordrg11 = DM2_MAX(con(0x19), heroptrrg2->w38 - urshift(heroptrrg2->w38, con(0x6)) - con(0x1));
  heroptrrg2->w38 = wordrg11;
  heroptrrg2->w36 = wordrg11 / 2;
  heroptrrg2->u32.b.b1 |= con(0x40);
  heroptrrg2->b102 = con(0x0);
  heroptrrg2->w103 = con(0x0);
  R_107B0();
  SKW_443c_040e();
}

void SKW_ROTATE_CREATURE(x16 eaxw, x16 ebxw, bool edxbool)
{
  c_record* recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  x16 wordrg1 = ulrshift(recoptrrg4->ue.w, con(0x6), con(0xe));
  x16 wordrg2 = ebxw;
  if (!edxbool)
  {
    wordrg2 += wordrg1;
    wordrg2 &= con(0x3);
  }
  x16 wordrg5 = (wordrg2 - wordrg1) & con(0x3);
  wordrg2 &= con(0x3);
  recoptrrg4->ue.b.b1 &= con(0xfffffffc);
  wordrg2 <<= con(0x8);
  recoptrrg4->ue.w |= wordrg2;
  if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(eaxw) & con(0x1)) != con(0x0))
  {
    x16* wptrrg1 = &recoptrrg4->u2.w;
    while (*wptrrg1 != con(0xfffffffe))
    {
      x16 wordrg4 = *wptrrg1;
      x16 wordrg21 = (((wordrg4 >> con(0xe)) + wordrg5) & con(0x3)) << con(0xe);
      wordrg4 &= con(0x3fff);
      wordrg4 |= wordrg21;
      *wptrrg1 = wordrg4;
      wptrrg1 = &SKW_GET_ADDRESS_OF_RECORD(wordrg4)->w0;
    }
  }
}

x16 SKW_ROTATE_RECORD_BY_TELEPORTER(c_record* eaxprec, x16 edxw)
{
  x16 wordrg1 = edxw;
  x16 wordrg4 = ddata.v1e1024;
  x16 wordrg3 = ulrshift(eaxprec->u2.w, con(0x4), con(0xe));
  if ((eaxprec->u2.b.b1 & con(0x10)) == con(0x0))
  {
    wordrg4 += wordrg3;
    wordrg4 &= con(0x3);
    x16 wordrg2 = wordrg1;
    wordrg1 = ((wordrg3 + (wordrg2 >> con(0xe))) & con(0x3)) << con(0xe);
    wordrg2 &= con(0x3fff);
    wordrg1 |= wordrg2;
  }
  else
    wordrg4 = wordrg3;
  ddata.v1e1024 = wordrg4;
  return wordrg1;
}

bool SKW_IS_OBJECT_FLOATING(x16 eaxw)
{
  x16 wordrg4 = urshift(eaxw & con(0x3c00), con(0xa));
  if (wordrg4 == con(0x4))
    return SKW_IS_CREATURE_FLOATING(eaxw);
  return wordrg4 == con(0xe) || wordrg4 == con(0xf);
}

void SKW_SET_MINION_RECENT_OPEN_DOOR_LOCATION(x16 eaxw, x16 ebxw, x16 ecxw, x8 edxb, bool argbool0)
{
  x16 wordrg4 = SKW_GET_ADDRESS_OF_RECORD(eaxw)->u2.w;
  while (wordrg4 != con(0xfffffffe))
  {
    if (urshift(wordrg4 & con(0x3c00), con(0xa)) == con(0xe))
    {
      c_record* recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg4);
      recoptrrg1->u4.b.b0 &= con(0xffffffe0);
      recoptrrg1->u4.w |= unsignedword(edxb) & con(0x1f);
      recoptrrg1->u4.w &= con(0xfffffc1f);
      recoptrrg1->u4.w |= (ebxw & con(0x1f)) << con(0x5);
      recoptrrg1->u4.b.b1 &= con(0x3);
      recoptrrg1->u4.w |= (ecxw & con(0x3f)) << con(0xa);
      recoptrrg1->u6.b.b0 &= con(0xfffffffe);
      recoptrrg1->u6.w |= argbool0 ? 1 : 0;
    }
    wordrg4 = SKW_GET_NEXT_RECORD_LINK(wordrg4);
  }
}

// like other 2fcf-routines arguments are stored as byte, but given as words
void SKW_2fcf_01c5(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  c_tim vtim_04;

  vtim_04.un.l_00 = (ddata.longmallocx + con(0x5)) | (signedlong(ecxw) << con(0x18));
  vtim_04.b_04 = ((argw0 != con(0x0)) ? 1 : 0) + con(0x3c);
  vtim_04.b_05 = con(0x0);
  vtim_04.u.b.b_06 = CUTX8(edxw);
  vtim_04.u.b.b_07 = CUTX8(ebxw);
  vtim_04.v.w_08 = eaxw;
  SKW_SET_MINION_RECENT_OPEN_DOOR_LOCATION(eaxw, ebxw, ecxw, CUTX8(edxw), true);
  SKW_QUEUE_TIMER(&vtim_04);
}

void SKW_INVOKE_ACTUATOR(c_record* eaxprec, x16 ebxw, x16 edxw)
{
  SKW_INVOKE_MESSAGE(ulrshift(eaxprec->u6.w, con(0x5), con(0xb)), CUTX8(ulrshift(eaxprec->u6.w, con(0xa), con(0xe))), edxw, urshift(eaxprec->u6.w, con(0xb)), signedlong(ebxw) + unsignedlong(ulrshift(eaxprec->u4.w, con(0x5), con(0xc))) + ddata.longmallocx);
}

bool SKW_2fcf_164e(x16 eaxw, x16 edxw)
{
  x16 wordrg4 = urshift(eaxw & con(0x3c00), con(0xa));
  if (wordrg4 != con(0x9) || ((SKW_QUERY_CLS2_FROM_RECORD(eaxw) & con(0xff)) >= con(0x8)))
    return false;
  x16 wordrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg4)->u2.w;
  for (;;)
  {
    if (wordrg1 == con(0xfffffffe))
      return false;
    x16 wordrg2 = wordrg1;
    if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg2) == edxw)
      return true;
    if (SKW_2fcf_164e(wordrg2, edxw))
      return true;
    wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg2);
  }
}

x16 SKW_FIND_DISTINCTIVE_ITEM_ON_TILE(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 wordrg1 = SKW_GET_WALL_TILE_ANYITEM_RECORD(eaxw, edxw);
  for(;;)
  {
    x16 wordrg4 = wordrg1;
    if (wordrg4 == con(0xfffffffe))
      return con(0xffff);
    x16 wordrg2 = wordrg4;
    if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg2) == ecxw)
    {
      if (ebxw == con(0xffffffff))
        return wordrg4;
      wordrg2 >>= con(0xe);
      if (wordrg2 == ebxw)
        return wordrg4;
    }
    wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg4);
  }
}

void R_3BF83(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  bool boolrg4 = ebxw != ddata.v1e0266;
  if (boolrg4)
    SKW_CHANGE_CURRENT_MAP_TO(ebxw);
  if (eaxw < con(0x0) || eaxw >= ddata.savegamewa || edxw < con(0x0) || edxw >= ddata.savegamewb)
  {
    if (boolrg4)
      SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e0266);
  }
  else
  {
    x16 wordrg2;
    x16 wordrg4;
    if (!boolrg4)
    {
      wordrg2 = ddata.v1e0272;
      wordrg4 = ddata.v1e0270;
    }
    else
    {
      SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e0266);
      SKW_MOVE_RECORD_TO(con(0xffff), ddata.v1e0272, con(0xffffffff), ddata.v1e0270, con(0x0));
      SKW_LOAD_NEWMAP(eaxw, ebxw, true, edxw);
      wordrg2 = con(0x0);
      wordrg4 = con(0xffffffff);
    }
    SKW_MOVE_RECORD_TO(con(0xffff), wordrg2, eaxw, wordrg4, edxw);
    SKW_ROTATE_SQUAD(ecxw);
  }
}

x16 SKW_QUERY_CREATURE_5x5_POS(c_record* eaxprec, x16 edxw)
{
  s_8bytearray vs_00;

  x16 wordrg1;
  if (SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0xf), con(0x7), con(0xfd), eaxprec->u4.b.b0))
  {
    x16* wptrrg1 = SKW_1c9a_02c3(eaxprec, SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(eaxprec->u4.b.b0));
    R_4DA3(eaxprec->u4.b.b0, wptrrg1 + con(0x1), &vs_00, *wptrrg1);
    wordrg1 = SKW_ROTATE_5x5_POS(vs_00.barr_00[0x4], t_rotate(edxw));
  }
  else
    wordrg1 = con(0xc);
  return wordrg1;
}

bool R_3DC4C(x16 eaxw)
{
  return (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x65), CUTX8(ulrshift(ddata.v1e03c8[eaxw].we, con(0x8), con(0xc)))) & con(0x20)) == con(0x0);
}

bool SKW_32cb_00f1(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 wordrg31 = eaxw;
  x16 wordrg5 = edxw;
  if (!SKW_PT_IN_RECT(&ddata.v1e118e.rc_24, eaxw, edxw))
    return false;
  if ((ddata.v1e118e.w_32 & con(0x1)) == con(0x0))
  {
    wordrg31 -= ddata.v1e118e.rc_24.x;
    wordrg31 += ddata.v1e118e.w_20;
  }
  else
    wordrg31 = ddata.v1e118e.w_20 + ddata.v1e118e.rc_24.x + ddata.v1e118e.rc_24.w - con(0x1) - wordrg31;
  wordrg5 += ddata.v1e118e.w_22 - ddata.v1e118e.rc_24.y;
  t_gfxdata* gptrrg1 = SKW_QUERY_PICT_BITMAP(&ddata.v1e118e.s_00);
  s_gfxdatatail* ptrbeforerg1 = getprevious(gptrrg1);
  x16 wordrg1 = signedlong(ptrbeforerg1->w2) / 2;
  ddata.v1e12da = 100 * ((wordrg31 - ddata.v1e118e.s_00.w_0e) - wordrg1) / wordrg1;
  x16 wordrg32 = ptrbeforerg1->w4 / 2;
  ddata.v1e12d8 = 100 * (wordrg5 - wordrg32) / wordrg32;
  x16 wordrg11 = SKW_0b36_1446(&ddata.v1e118e.s_00, wordrg5, ebxw, wordrg31);
  if (wordrg11 != con(0xffffffff) && wordrg11 != con(0x1))
    return true;
  return false;
}

t_gfxdata* SKW_32cb_0649(x8 eaxb, x8 ebxb, x16 ecxw, x8 edxb)
{
  t_palette* gptrrg1 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(eaxb, ebxb, edxb);
  x16 vw_00;
  if (gptrrg1 != NULL)
  {
    SKW_COPY_MEMORY(DOWNCAST(t_gfxdata, gptrrg1), PAL16, DOWNCAST(t_gfxdata, ddata.v1e12dc));
    vw_00 = con(0x10);
  }
  else
  {
    if (ddata.v1e12d2 == con(0x3f))
      return NULL;
    vw_00 = con(0x0);
  }
  return R_B073(ddata.v1e12dc, ecxw, con(0xffffffff), CUTX8(ddata.v1e12d2), &vw_00);
}

// TODO: check built-in, there was a problem
void SKW_32cb_0804(t_gfxdata* eaxpg, x16 ebxw, x16 ecxw, x16 edxw, x16* argpw0)
{
  x16 vw_00 = edxw;
  x16 vw_04;
  if (ddata.v1e025c == con(0x0))
    vw_04 = signedword(table1d6c10[vw_00]);
  else
  {
    if (edxw >= con(0x0))
    {
      vw_04 = signedword(table1d6c0b[vw_00]);
      vw_00 += con(0x9);
    }
    else
    {
if ((-vw_00-1) < 0)
  int stop=1;
      vw_04 = DM2_MAX(-ddata.v1e12d2, signedword(table1d6c06[-vw_00 - con(0x1)])); // EVIL offset corrected, was 0x1d6c05, vw_00 must be negative here
      vw_00 = con(0x1);
    }
  }
  if (SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x8), con(0x7), CUTX8(vw_00), ddata.v1d6c02))
    SKW_0b36_037e(eaxpg, ddata.v1d6c02, CUTX8(vw_00), con(0x8), CUTX8(ddata.v1e12d2), ebxw, ecxw, argpw0);
  else
    R_B073(eaxpg, ebxw, ecxw, CUTX8(con(0x40) - (((con(0x40) - vw_04) * (con(0x40) - ddata.v1e12d2)) >> con(0x6))), argpw0); // BUGFIX 4/2014 0x6 instead of 0x8
}

// was SKW_32cb_0b11
void SKW_DRAW_RAIN(void)
{
  c_rect rc_00;

  if (ddata.v1e1482 != con(0x0) && table1d6b76[4 * ddata.v1e1472 + 0x72] != con(0x0))
  {
    x16 vw_10 = ddata.vx1d270a;
    x16 vw_08 = ddata.vx1d270c;
    if (SKW_QUERY_BLIT_RECT(NULL, con(0x2be), &vw_10, &rc_00, &vw_08, con(0xffffffff)) != NULL)
    {
      x16 vw_0c;
      x8 vb_14;
      SKW_QUERY_RAINFALL_PARAM(&vb_14, &vw_0c);
      t_gfxdata* gptrrg5 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x17), vb_14, ddata.v1d6c02);
      s_gfxdatatail* ptrbeforerg3 = getprevious(gptrrg5);
      SKW_3e74_58bf(con(0x17), vb_14, ddata.v1d6c02);
      x16 wordrg6;
      if (vw_0c == con(0x1))
      {
        wordrg6 = SKW_3e74_5888();
        SKW_ALLOC_NEW_PICT(wordrg6, ptrbeforerg3->w4, con(0x4), ptrbeforerg3->w2);
        SKW_DRAW_MIRRORED_PIC(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x17), vb_14, ddata.v1d6c02), SKW_3e74_5817(wordrg6));
        gptrrg5 = SKW_3e74_5817(wordrg6);
      }
      s_gfxdatatail* ptrbefore = getprevious(ddata.bitmapptr);
      s_gfxdatatail* ptrbeforerg5 = getprevious(gptrrg5);
      SKW_44c8_20a4(gptrrg5, NULL, &rc_00, UPCAST(t_gfxdata, ddata.bitmapptr), (ptrbeforerg5->w4 * ptrbeforerg5->w2) - con(0x28) - CUTX16(SKW_RAND() & con(0x1f)), unsignedword(CUTX8(SKW_RAND())), ptrbefore->w2, con(0x0), SKW_32cb_0649(con(0x17), vb_14, con(0x0), ddata.v1d6c02));
      if (vw_0c == con(0x1))
        SKW_3e74_58a3(wordrg6);
      SKW_3e74_5992(con(0x17), vb_14, ddata.v1d6c02);
    }
  }
}

void SKW_32cb_0c7d(c_image* eaxpimg, x16 ebxw, x16 edxw)
{
  if (ddata.v1e1482 != con(0x0))
  {
    x16 vw_04;
    x8 vb_1c;
    SKW_QUERY_RAINFALL_PARAM(&vb_1c, &vw_04);
    x16 vw_0c;
    x16 vw_14;
    SKW_QUERY_GDAT_IMAGE_METRICS(con(0x17), vb_1c, &vw_14, ddata.v1d6c02, &vw_0c);
    x16 vw_18 = SKW_3e74_5888();
    SKW_ALLOC_NEW_PICT(vw_18, vw_0c, con(0x4), eaxpimg->rc_24.w);
    x16 wordrg31 = (eaxpimg->rc_24.w + con(0x1)) & con(0xfffffffe);
    t_gfxdata* srcbmp = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x17), vb_1c, ddata.v1d6c02); // was gptrrg61
    s_gfxdatatail* ptrbeforerg61 = getprevious(srcbmp);
//                        srcbmp                                                          srcofs  destbmp                                                                                                        srcbits     destbits
    SKW_FIRE_BLIT_PICTURE(srcbmp, SKW_ALLOC_TEMP_ORIGIN_RECT(wordrg31, ptrbeforerg61->w4), 0, SKW_3e74_5817(vw_18), con(0x0), ptrbeforerg61->w2, wordrg31, con(0xffff), (signedlong(vw_04) == con(0x1)) ? 1 : 0, E_BITRES4, E_BITRES4);
    t_gfxdata* gptrrg62 = SKW_3e74_5817(vw_18);
    s_gfxdatatail* ptrbeforerg62 = getprevious(gptrrg62);
    t_gfxdata* parpg13 = SKW_32cb_0649(con(0x17), vb_1c, con(0x0), ddata.v1d6c02);
    parpg13[0x0] = (eaxpimg->w_38 > con(0x0)) ? eaxpimg->carr_3a[ebxw] : CUTX8(ebxw);
    x16 wordrg3 = ptrbeforerg62->w2 * ptrbeforerg62->w4;
    SKW_44c8_20a4(gptrrg62, NULL, &eaxpimg->rc_24, UPCAST(t_gfxdata, SKW_3e74_5817(edxw)), wordrg3 - CUTX16(SKW_RAND() & con(0x1f)) - con(0x10), SKW_RAND16(wordrg3 - con(0x3c)), eaxpimg->s_00.w_12, con(0xffff), parpg13);
    SKW_3e74_58a3(vw_18);
  }
  else
  {
    x8 byterg1;
    if (eaxpimg->w_38 > con(0x0))
      byterg1 = unsignedlong(eaxpimg->carr_3a[ebxw]);
    else
      byterg1 = CUTX8(ebxw);
    SKW_FILL_ENTIRE_PICT(SKW_3e74_5817(edxw), byterg1);
  }
}

void SKW_DRAW_TEXT_TO_BACKBUFF(x16 eaxw, t_text* ebxt, x16 edxw)
{
  t_gfxdata vcarr_00[PAL16];

  x16 vw_10 = con(0x10);
  x16 vw_14;
  x16 vw_18;
  if (C_strmetrics.SKW_QUERY_STR_METRICS(ebxt, OO vw_18, OO vw_14))
  {
    SKW_COPY_MEMORY(DOWNCAST(t_gfxdata, ddata.paletteptr1), PAL16, DOWNCAST(t_gfxdata, vcarr_00));
    R_B073(vcarr_00, con(0xffffffff), con(0xffffffff), CUTX8(ddata.v1e12d2), &vw_10);
    s_gfxdatatail* ptrbefore = getprevious(ddata.bitmapptr);
    SKW_DRAW_STRONG_TEXT(ddata.bitmapptr, eaxw - (vw_14 >> con(0x1)), edxw, ptrbefore->w2, unsignedword(vcarr_00[0xf]), unsignedword(vcarr_00[0x0]) | con(0x4000), ebxt);
  }
}

// was SKW_32cb_2367
void SKW_DRAW_PIT_ROOF(ui16 eaxuw)
{
  x8 vb_0c = ddata.v1d6c02;
  x16 vw_08 = ddata.v1d6c00;
  if (eaxuw <= con(0x8) && (ddata.v1e12d6 & con(0x1)) != con(0x0))
  {
    s_hex12* h12ptrrg4 = &ddata.v1e1044[eaxuw];
    x16 vw_00 = signedword(h12ptrrg4->b_00);
    x16 vw_04 = signedword(h12ptrrg4->b_01);
    x16 wordrg11 = SKW_LOCATE_OTHER_LEVEL(ddata.v1d3248, &vw_00, &vw_04, con(0xffffffff), NULL);
    if (wordrg11 >= con(0x0))
    {
      x8** hlpptr1 = ddata.v1e03cc[wordrg11];
      x8* hlpptr2 = hlpptr1[vw_00];
      x8 byterg4 = hlpptr2[vw_04];
      if (urshift(unsignedword(byterg4), con(0x5)) == con(0x2))
        if ((byterg4 & con(0x8)) != con(0x0))
        {
          x16 wordrg1 = unsignedword(table1d6c67[eaxuw]);
          if (eaxuw == con(0x0))
            wordrg1 = SKW_SET_GRAPHICS_FLIP_FROM_POSITION(con(0x20), ddata.v1e12cc, ddata.v1e12ca, ddata.v1e12c8) != con(0x0) ? 1 : 0;
          SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), table1d6c5e[eaxuw], table1d6c4c[eaxuw], vb_0c, vw_08, wordrg1);
        }
    }
  }
}

// was SKW_32cb_245a
void SKW_DRAW_PIT_TILE(ui16 eaxuw)
{
  x8 vb_04 = ddata.v1d6c02;
  x16 vw_00 = ddata.v1d6c00;
  x16 wordrg6 = table1d6c70[eaxuw];
  if (wordrg6 < con(0x0))
    return;
  if (eaxuw >= con(0xb))
    if (ddata.v1e1044[eaxuw].s_02.warr_00[con(0x3)] != con(0x0))
      return;
  x16 wordrg1 = unsignedword(table1d6c90[eaxuw]);
  if (eaxuw == con(0x0))
    wordrg1 = SKW_SET_GRAPHICS_FLIP_FROM_POSITION(con(0x1), ddata.v1e12cc, ddata.v1e12ca, ddata.v1e12c8) != con(0x0) ? 1 : 0;
  x8 byterg1;
  if (ddata.v1e1044[eaxuw].s_02.warr_00[con(0x3)] == con(0x0))
    byterg1 = table1d6cb0[eaxuw];
  else
    byterg1 = table1d6ca0[eaxuw];
  SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), byterg1, wordrg6, vb_04, vw_00, wordrg1);
}

// was SKW_32cb_24fb
void SKW_DRAW_TELEPORTER_TILE(x16 eaxw, x8 ebxb, x8 edxb)
{
  const s_4bytearray* s4baptrrg5;
  t_gfxdata* srcbmp; // was gptrrg6
  t_gfxdata* destbmp; // was gptrrg7
  c_hex18 vh18_00;
  c_rect rc_18;
  x16 vw_24;
  x16 vw_28;
  x16 vw_2c;
  x16 vw_30;
  x16 vw_34;
  x16 vw_38;
  x16 vw_3c;
  x8 vb_40;
  x8 vb_44;
  x8 vb_48;

  vb_44 = edxb;
  vb_48 = ebxb;
  if (eaxw > con(0xf))
    return;
  s4baptrrg5 = &table1d6ce0[eaxw];
  x16 wordrg4 = table1d6cc0[eaxw];
  vw_2c = con(0x0);
  vb_40 = s4baptrrg5->barr_00[con(0x1)] & con(0x7f);
  vw_30 = ((s4baptrrg5->barr_00[con(0x1)] & con(0xffffff80)) != con(0x0)) ? 1 : 0;
  vw_24 = unsignedword(s4baptrrg5->barr_00[con(0x2)]);
  vw_28 = unsignedword(s4baptrrg5->barr_00[con(0x3)]);
  if (SKW_QUERY_BLIT_RECT(NULL, wordrg4, &vw_24, &rc_18, &vw_28, con(0xffffffff)) != NULL)
  {
    if (s4baptrrg5->barr_00[con(0x1)] != con(0xffffffff))
    {
      vh18_00.b_08 = vb_44;
      vh18_00.b_09 = vb_48;
      vh18_00.b_0b = vb_40;
      srcbmp = SKW_QUERY_PICST_IMAGE(&vh18_00);
      s_gfxdatatail* ptrbeforerg4 = getprevious(srcbmp);
      SKW_0b36_018f(&vh18_00);
      if (vw_30 != con(0x0))
      {
        vw_34 = SKW_3e74_5888();
        vw_38 = ptrbeforerg4->w4;
        vw_3c = ptrbeforerg4->w2;
        destbmp = SKW_ALLOC_NEW_PICT(vw_34, vw_38, con(0x4), vw_3c);
        srcbmp = SKW_QUERY_PICT_BITMAP(&vh18_00);
        s_gfxdatatail* ptrbeforerg41 = getprevious(srcbmp);
        x16 wordrg1 = ptrbeforerg41->w2 & con(0x1);
        if (wordrg1 != con(0x0))
          wordrg1 = con(0x2) - wordrg1;
        wordrg1 = vw_3c - wordrg1;
//                            srcbmp                                            srcofs destbmp                                               srcbits    destbits
        SKW_FIRE_BLIT_PICTURE(srcbmp, SKW_ALLOC_TEMP_ORIGIN_RECT(wordrg1, vw_38), 0, destbmp, con(0x0), vw_3c, vw_3c, con(0xffff), con(0x1), E_BITRES4, E_BITRES4);
        SKW_0b36_01cd(&vh18_00);
        SKW_0b36_00c3(vw_34, &vh18_00);
        SKW_0b36_018f(&vh18_00);
      }
    }
    else
      srcbmp = NULL;
    destbmp = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(vb_44, con(0x14), vb_48);
    if (s4baptrrg5->barr_00[con(0x1)] != con(0xffffffff))
      srcbmp = SKW_QUERY_PICT_BITMAP(&vh18_00);
    s_gfxdatatail* ptrbefore = getprevious(ddata.bitmapptr);
    SKW_44c8_20a4(destbmp, srcbmp, &rc_18, UPCAST(t_gfxdata, ddata.bitmapptr), 16 * (SKW_RAND01() + unsignedword(s4baptrrg5->barr_00[con(0x0)])), unsignedword(CUTX8(SKW_RAND())), ptrbefore->w2, CUTLX8(vw_2c), SKW_32cb_0649(vb_44, con(0x14), vw_2c, vb_48));
    if (s4baptrrg5->barr_00[con(0x1)] != con(0xffffffff))
      SKW_0b36_01cd(&vh18_00);
  }
}

bool SKW_SUMMARY_DRAW_CREATURE(x16 eaxw, x32 ebxl, x16 edxw)
{
  s_d556* sd5ptrrg3;
  c_aispec* aiptrrg7;
  c_record* recoptrrg5;
  x16 vw_08;

  x16 wordrg6 = eaxw;
  x16 vw_0c = edxw;
  x32 vl_04 = ebxl;
  bool vbool_00 = false;
  if (ddata.v1e025c == con(0x0) || vw_0c != con(0x0))
  {
    vw_08 = signedword(table1d6b15[vw_0c]);
    while (wordrg6 != con(0xfffffffe))
    {
      if (urshift(wordrg6 & con(0x3c00), con(0xa)) == con(0x4))
      {
        recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
        if (recoptrrg5->u4.b.b1 != con(0xffffffff))
          sd5ptrrg3 = &ddata.v1e089c[recoptrrg5->u4.b.b1];
        else
          sd5ptrrg3 = NULL;
        aiptrrg7 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg5->u4.b.b0);
        if ((vl_04 & con(0x40000000)) == con(0x0) || (aiptrrg7->u0.b.b0 & con(0x1)) != con(0x0))
        {
          vbool_00 = true;
          SKW_QUERY_CREATURE_PICST(vw_0c, recoptrrg5, sd5ptrrg3, vw_08, wordrg6);
          SKW_DRAW_TEMP_PICST();
          x16 wordrg1 = aiptrrg7->u0.w & con(0x1);
          if (wordrg1 == con(0x0))
            recoptrrg5->ua.b.b0 |= con(0x2);
          if ((wordrg1 != con(0x0) && ((aiptrrg7->u1e.b.b0 & con(0xf)) != con(0x0))) && (vw_08 < con(0x4)))
          {
            if (ddata.v1e1044[vw_0c].s_02.warr_00[con(0x0)] == con(0x11))
              vl_04 = con(0x3ff);
            SKW_32cb_3e08(recoptrrg5->u2.w, vl_04, recoptrrg5, vw_0c);
          }
        }
      }
      wordrg6 = SKW_GET_NEXT_RECORD_LINK(wordrg6);
    }
  }
  return vbool_00;
}

// was SKW_32cb_347f
void SKW_MAKE_PUT_DOWN_ITEM_CLICKABLE_ZONE(x16 eaxw, x8 ebxb, x8 ecxb, x16 edxw)
{
  c_rect* rptrrg3 = &ddata.v1e02f0[eaxw].r0;
  if (ddata.v1e02f0[eaxw].w8 != con(0xffffffff))
  {
    x16 wordrg2 = DM2_MAX(rptrrg3->x + rptrrg3->w, ddata.v1e118e.rc_24.x + ddata.v1e118e.rc_24.w);
    rptrrg3->x = DM2_MIN(rptrrg3->x, ddata.v1e118e.rc_24.x);
    wordrg2 -= rptrrg3->x;
    rptrrg3->w = wordrg2;
    x16 wordrg21 = DM2_MAX(rptrrg3->y + rptrrg3->h, ddata.v1e118e.rc_24.y + ddata.v1e118e.rc_24.h);
    rptrrg3->y = DM2_MIN(rptrrg3->y, ddata.v1e118e.rc_24.y);
    wordrg21 -= rptrrg3->y;
    rptrrg3->h = wordrg21;
  }
  else
  {
    SKW_COPY_RECT(&ddata.v1e118e.rc_24, rptrrg3);
    if (rptrrg3->h < con(0xf))
    {
      if (rptrrg3->h < con(0xb))
        rptrrg3->h = con(0xb);
      rptrrg3->y += rptrrg3->h / 2 - con(0x7);
    }
    if (rptrrg3->w < con(0xe))
    {
      rptrrg3->w = con(0xe);
      rptrrg3->x += rptrrg3->w / 2 - con(0x7);
    }
  }
  ddata.v1e02f0[eaxw].bb = ecxb;
  ddata.v1e02f0[eaxw].w8 = edxw;
  ddata.v1e02f0[eaxw].ba = ebxb;
}

// was SKW_32cb_4e1c
void SKW_DRAW_STAIRS_FRONT(ui16 eaxuw)
{
  x8 byterg5;
  x16 vw_00;
  x16 vw_04;

  x8 byterg4 = ddata.v1d6c02;
  vw_04 = ddata.v1d6c00;
  x16 wordrg6 = (ddata.v1e1044[eaxuw].s_02.warr_00[con(0x3)] != con(0x0)) ? 1 : 0;
  vw_00 = table1d6f9c[wordrg6 + 2 * eaxuw];
  if (vw_00 >= con(0x0))
  {
    wordrg6 += 2 * eaxuw;
    x8 byterg7 = table1d6f5c[wordrg6];
    byterg5 = byterg4;
    if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x8), con(0x1), byterg7, byterg5))
    {
      SKW_QUERY_TEMP_PICST(con(0x1), con(0x40), con(0x0), con(0x40), con(0x0), con(0x0), vw_00, con(0xffffffff), vw_04, con(0xffff), con(0x8), byterg5, table1d6f7c[wordrg6]); // BUGFIX 3/2014
      SKW_DRAW_TEMP_PICST();
    }
    else
      SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), byterg7, vw_00, byterg5, vw_04, con(0x0));
  }
}

// was SKW_32cb_4ecc
void SKW_DRAW_STAIRS_SIDE(ui16 eaxuw)
{
  x8 vb_00;

  vb_00 = ddata.v1d6c02;
  x16 wordrg3 = ddata.v1d6c00;
  if (eaxuw <= con(0x8))
  {
    x16 wordrg21 = (ddata.v1e1044[eaxuw].s_02.warr_00[con(0x3)] != con(0x0)) ? 1 : 0;
    x8 byterg4 = table1d6fdc[2 * eaxuw + wordrg21];
    if (byterg4 != con(0xffffffff))
      SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), byterg4, table1d6fee[2 * eaxuw + wordrg21], vb_00, wordrg3, con(0x0));
  }
}

void SKW_38c8_0002(void)
{
  if (!ddata.v1e13f0 && !ddata.dialog2)
  {
    ddata.v1e13f0 = true;
    if (ddata.v1e00b8 != con(0x0))
    {
      SKW_CHAMPION_SQUAD_RECOMPUTE_POSITION();
      SKW_UPDATE_RIGHT_PANEL(false);
    }
    SKW_1031_04F5();
    SKW_FIRE_HIDE_MOUSE_CURSOR();
    SKW_12b4_0092();
    if (ddata.v1e0976 == con(0x0))
      SKW_FIRE_FILL_HALFTONE_RECTI(con(0x9), con(0x0));
    SKW_FIRE_FILL_HALFTONE_RECTI(con(0xb), con(0x0));
    SKW_FIRE_SHOW_MOUSE_CURSOR();
  }
}

void SKW_38c8_0060(void)
{
  if (ddata.v1e13f0 && !ddata.dialog2)
  {
    if (ddata.v1e0238)
    {
      SKW_DRAW_WAKE_UP_TEXT();
      SKW_CHANGE_VIEWPORT_TO_INVENTORY(false);
      return;
    }
    ddata.v1e13f0 = ddata.dialog2;
    if (ddata.v1e0b74 != con(0x0))
      ddata.v1e0b6c = con(0x1);
    else
      ddata.v1e0b30 = true;
    x16 wordrg1 = ddata.v1e0976;
    if (wordrg1 != con(0x0))
    {
      ddata.v1e0976 = con(0x0);
      SKW_24a5_1798(wordrg1 - con(0x1));
      return;
    }
    SKW_INIT_BACKBUFF();
    SKW_29ee_000f();
  }
}

// id: 0x453C1
// was SKW_38c8_04aa
void SKW_INIT(void)
{
	SPX_DEBUG_PUSH_FUNCTION_INFO("SKW_INIT");

  x8* bptrrg5;
  DM2_2636_03d4();
  SKW_READ_GRAPHICS_STRUCTURE();
  SKW_482b_0004();
  bptrrg5 = UPCAST(x8, DM2_ALLOC_HIBIGPOOL_MEMORY(con(0x400)));
DEBUG_DUMP_ULP();
  SKW_LOAD_GDAT_ENTRY_DATA_TO(con(0x1), con(0x9), con(0xfe), con(0x0), bptrrg5);
DEBUG_DUMP_BIN_DATA((unsigned char*) bptrrg5, 1024, 16);	// SPX: dump the IRGB palette
  SKW_44c8_1baf(bptrrg5);
  DM2_DEALLOC_HIBIGPOOL(con(0x400));
  SKW_LOAD_GDAT_INTERFACE_00_02();
  ddata.paletteptr1 = UPCAST(t_gfxdata, SKW_QUERY_GDAT_ENTRY_DATA_PTR(con(0x1), con(0xd), con(0xfe), con(0x0)));
  SKW_098d_1208();
  SKW_38c8_00c8();
  SKW_3929_0e16();
  ddata.v1e0984 = ddata.v1e0ad0 & con(0x8);
  SKW_2405_0009();
  SKW_443c_0380();
  ddata.v1d70cb = true;
  SKW_1031_07d6();
  ddata.v1e0414[0x11] = SKW_3e74_2439(con(0xf), con(0xb));
  x16 wordrg1 = (unsignedword(ddata.v1e0414[0x11]) + con(0x1)) * con(0x3);
  ddata.v1e02ec = UPCAST(x8, DM2_ALLOC_FREEPOOL_MEMORY(unsignedlong(wordrg1)));
  SKW_FILL_STR(ddata.v1e02ec, con(0xff), con(0x1), wordrg1);
  for(;;)
  {
    SKW_SHOW_MENU_SCREEN();
    if (SKW_GAME_LOAD() == con(0x1))
      break;
    DM2_GRAPHICS_DATA_OPEN();
  }
  DM2_GRAPHICS_DATA_OPEN();
  R_5BFB(ddata.v1d26a0, con(0x0));
  R_5BFB(ddata.v1d26a2, con(0xa));
  SKW_1c9a_3c30();
  SKW_ALLOC_CPX_SETUP(table1d70b4);
  SKW__INIT_GAME_38c8_03ad();
  DM2_GRAPHICS_DATA_CLOSE();
  if (ddata.savegamew8 != con(0x0))
    SKW_MOVE_RECORD_TO(con(0xffff), con(0x0), ddata.v1e0270, con(0xffffffff), ddata.v1e0272);
  SKW_FIRE_SHOW_MOUSE_CURSOR();
  SKW_1031_098e();

	SPX_DEBUG_POP;
}

void SKW_3929_07e1(x16 eaxw, x16 edxw)
{
  x16 wordrg1 = eaxw;
  if (wordrg1 < con(0x0))
    wordrg1 = con(0x0);
  wordrg1 *= C_strmetrics.charwidth;
  ddata.v1d70ea = DM2_MIN(wordrg1, ddata.v1d2744 - C_strmetrics.charwidth);
  x16 wordrg2 = edxw;
  if (wordrg2 >= con(0x0))
  {
    if (wordrg2 >= con(0x3))
      wordrg2 = con(0x2);
  }
  else
    wordrg2 = con(0x0);
  ddata.v1e141e = wordrg2;
  ddata.v1e1420 = con(0x0);
}

x16 SKW_3929_0826(void)
{
  SKW_FIRE_HIDE_MOUSE_CURSOR();
  SKW_FIRE_FILL_SCREEN_RECT(con(0xf), ddata.paletteptr1[con(0x0)]);
  SKW_FIRE_SHOW_MOUSE_CURSOR();
  SKW_3929_07e1(con(0x0), con(0x2));
  for (x16 wordrg1 = con(0x0); ; wordrg1++)
  {
    if (wordrg1 >= con(0x3))
      return wordrg1;
    ddata.v1e1408[wordrg1] = con(0xffffffff);
  }
}

void SKW_3929_086f(void)
{
  c_rect rc_00;

  SKW_QUERY_EXPANDED_RECT(con(0xf), &rc_00);
  x16 wordrg5 = rc_00.y; // adj
  for (x16 wordrg3 = con(0x0); wordrg3 < con(0x3); wordrg3++)
  {
    ui32 ulongrg1 = ddata.v1e1408[wordrg3];
    if (ulongrg1 != con(0xffffffff) && ulongrg1 <= UI32CAST(ddata.longmallocx))
    {
      rc_00.y = ddata.v1e141c + ddata.strxplus * wordrg3 + wordrg5;
      rc_00.h = C_strmetrics.height;
      SKW_FIRE_HIDE_MOUSE_CURSOR();
      SKW_44c8_1dfc(&rc_00, ddata.paletteptr1[0]);
      SKW_FIRE_SHOW_MOUSE_CURSOR();
      ddata.v1e1408[wordrg3] = con(0xffffffff);
    }
  }
}

void SKW_3929_0914(void)
{
  if (ddata.v1e141e != con(0x2))
  {
    ddata.v1e1420 = con(0x0);
    ddata.v1e141e++;
    return;
  }
  if (ddata.v1e1420 != con(0x0))
    SKW_44c8_1c99();
  SKW_FILL_ENTIRE_PICT(ddata.v1e1414, ddata.paletteptr1[0]);
  ddata.v1e1420 = con(0x1);
  x16 wordrg4 = con(0x0);
  for(;;)
  {
    if (wordrg4 >= con(0x2))
    {
      ddata.v1e1408[2] = con(0xffffffff);
      return;
    }
    ddata.v1e1408[wordrg4] = ddata.v1e1408[wordrg4 + con(0x1)];
    wordrg4++;
  }
}

void SKW_3929_0929(x16 eaxw, t_text* edxt)
{
  c_rect rc_00;

  SKW_QUERY_EXPANDED_RECT(con(0xf), &rc_00);
  if (ddata.v1e1420 == con(0x0))
  {
    SKW_FIRE_HIDE_MOUSE_CURSOR();
    SKW_PRINT_SYSERR_TEXT(signedlong(I16CAST(rc_00.x + ddata.v1d70ea)), eaxw, unsignedword(ddata.paletteptr1[con(0x0)]), ddata.v1e141e * ddata.strxplus + rc_00.y + C_strmetrics.height - C_strmetrics.yofs - con(0x1) + ddata.v1e141c, edxt);
    SKW_FIRE_SHOW_MOUSE_CURSOR();
  }
  else
//                     destbmp
    SKW_DRAW_STRING(ddata.v1e1414, ddata.v1d70ea, ddata.strxplus - C_strmetrics.yofs - con(0x2), ddata.v1d2744, eaxw, unsignedword(ddata.paletteptr1[con(0x0)]), edxt);
  ddata.v1e1408[ddata.v1e141e] = ddata.longmallocx + con(0x5a);
}

// was SKW_3929_09fb
void SKW_DISPLAY_HINT_TEXT(x16 eaxw, const t_text* edxt)
{
  t_text t_00[0x64];
  x16 vw_64;

  if (ddata.v1e1420 != con(0x0))
  {
    SKW_44c8_1c99();
    SKW_FILL_ENTIRE_PICT(ddata.v1e1414, ddata.paletteptr1[con(0x0)]);
    ddata.v1e1420 = con(0x0);
  }
  x16 wordrg6 = unsignedword(ddata.paletteptr1[eaxw]);
  vw_64 = con(0x0);
  for(;;)
  {
    if (edxt[vw_64] == con(0x0))
    {
      if (ddata.v1e1420 != con(0x0))
      {
        SKW_44c8_1c99();
        SKW_FILL_ENTIRE_PICT(ddata.v1e1414, ddata.paletteptr1[0]);
        ddata.v1e1420 = con(0x0);
      }
      return;
    }
    x16 wordrg1 = SKW_3929_04e2(edxt, &vw_64, ddata.v1d2744 - ddata.v1d70ea, t_00);
    if (edxt[vw_64] != con(0xa))
    {
      if (edxt[vw_64] == con(0x0))
      {
        SKW_3929_0929(wordrg6, t_00);
        ddata.v1d70ea += wordrg1;
      }
      else
      {
        SKW_3929_0929(wordrg6, t_00);
        SKW_3929_0914();
        ddata.v1d70ea = con(0xc);
      }
    }
    else
    {
      SKW_3929_0914();
      SKW_3929_0929(wordrg6, t_00);
      ddata.v1d70ea = con(0x0);
      vw_64++;
    }
  }
}

void SKW_3929_0e16(void)
{
  c_rect rc_00;

  SKW_3929_07e1(con(0x0), con(0x2));
  ddata.v1e1414 = SKW_ALLOC_PICT_BUFF(ddata.v1d2744, FREEPOOL, con(0x8), ddata.v1d2746);
  C_font.allocate();
  for (x16 wordrg1 = con(0x0); wordrg1 < con(0x3); wordrg1++)
    ddata.v1e1408[wordrg1] = con(0xffffffff);
  SKW_QUERY_EXPANDED_RECT(con(0xf), &rc_00);
  ddata.v1e141c = (rc_00.h - (3 * ddata.strxplus - ddata.v1d2736)) / 2;
  ddata.v1d70dc = true;
}

void SKW_REARRANGE_TIMERLIST(void)
{
  x16 wordrg5;

  ddata.savegamew9 = con(0x0);
  ddata.v1e142a = con(0xffffffff); // forces wordrg5 to be initialized
  for (x16 wordrg1 = con(0x0); wordrg1 < ddata.v1e142c; wordrg1++)
  {
    if (ddata.savegametimarrp[wordrg1].b_04 != con(0x0))
      ddata.savegamew9 = wordrg1 + con(0x1);
    else
    {
      if (ddata.v1e142a != con(0xffffffff))
        ddata.savegametimarrp[wordrg5].un.w_00 = wordrg1;
      else
        ddata.v1e142a = wordrg1;
      ddata.savegametimarrp[wordrg1].un.w_00 = con(0xffffffff);
      wordrg5 = wordrg1;
    }
  }
}

bool SKW_3a15_0381(c_tim* eaxptim, c_tim* edxptim)
{
  ui32 ulongrg2 = eaxptim->un.l_00 & con(0xffffff);
  ui32 ulongrg3 = edxptim->un.l_00 & con(0xffffff);
  if (ulongrg2 < ulongrg3 || (ulongrg2 == ulongrg3 && (UI8CAST(eaxptim->b_04) > UI8CAST(edxptim->b_04) || (eaxptim->b_04 == edxptim->b_04 && (UI8CAST(eaxptim->b_05) > UI8CAST(edxptim->b_05) || (eaxptim->b_05 == edxptim->b_05 && eaxptim <= edxptim))))))
    return true;
  return false;
}

// was SKW_3a15_061a
void SKW_DELETE_TIMER(x16 eaxw)
{
  x16* wptrrg3;
  bool flag;

  if (ddata.v1e1428 >= con(0x0))
    SKW_3a15_0486(ddata.v1e1428);
  x16 wordrg2 = eaxw;
  ddata.savegametimarrp[wordrg2].b_04 = con(0x0);
  ddata.savegametimarrp[wordrg2].un.w_00 = ddata.v1e142a;
  ddata.v1e142a = eaxw;
  x16 wordrg3 = ddata.savegamew5;
  flag = --wordrg3 == con(0x0);
  ddata.savegamew5 = wordrg3;
  if (!flag)
  {
    x16 wordrg1 = SKW_GET_TIMER_NEW_INDEX(wordrg2);
    if (wordrg1 != wordrg3)
    {
      wptrrg3 = &ddata.v1e1424[wordrg3];
      ddata.v1e1428 = wordrg1;
      ddata.v1e1424[wordrg1] = *wptrrg3;
    }
  }
}

x16 SKW_QUEUE_TIMER(c_tim* eaxptim)
{
  if (eaxptim->b_04 == con(0x0))
    return con(0xffffffff);
  if (ddata.savegamew5 == ddata.v1e142c)
    SKW_RAISE_SYSERR(con(0x2d));
  x16 wordrg4 = ddata.v1e142a;
  ddata.v1e142a = ddata.savegametimarrp[wordrg4].un.w_00;
  SKW_COPY_TIMER(eaxptim, &ddata.savegametimarrp[wordrg4]);
  if (wordrg4 >= ddata.savegamew9)
    ddata.savegamew9 = wordrg4 + con(0x1);
  x16 wordrg1 = ddata.v1e1428;
  if (wordrg1 < con(0x0))
    wordrg1 = ddata.savegamew5;
  ddata.v1e1428 = con(0xffffffff);
  ddata.savegamew5++;
  ddata.v1e1424[wordrg1] = wordrg4;
  SKW_3a15_0486(wordrg1);
  return wordrg4;
}

void SKW_ACTUATE_TRICKWALL(c_tim* eaxptim)
{
  x8* bptrrg3;
  x8** bpptrrg4;

  bool boolrg5 = false;
  x16 wordrg6 = unsignedword(eaxptim->u.b.b_06);
  bpptrrg4 = ddata.savegamepp1;
  x16 wordrg42 = unsignedword(eaxptim->u.b.b_07);
  bptrrg3 = bpptrrg4[eaxptim->u.b.b_06] + eaxptim->u.b.b_07;
  x16 wordrg1 = unsignedword(eaxptim->v.b.b_09);
  if (wordrg1 == con(0x2))
    wordrg1 = ((*bptrrg3 & con(0x4))) ? con(0x1) : con(0x0);
  if (wordrg1 != con(0x1))
    *bptrrg3 |= con(0x4);
  else
  {
    if (ddata.v1d3248 == ddata.v1e0282 && wordrg6 == ddata.v1e0280)
      if (wordrg42 == ddata.v1e027e)
        boolrg5 = true;
    x16 wordrg41 = SKW_GET_CREATURE_AT(wordrg6, wordrg42);
    if (wordrg41 != con(0xffffffff))
      if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg41) & con(0x20)) == con(0x0))
        boolrg5 = true;
    if (!boolrg5)
      *bptrrg3 &= con(0xfffffffb);
    else
    {
      eaxptim->un.l_00 += con(0x1);
      SKW_QUEUE_TIMER(eaxptim);
    }
  }
  if (ddata.v1d3248 == ddata.v1e0266)
    ddata.v1e0390.l0 = con(0x3);
}

void SKW_3a15_0d5c(c_tim* eaxptim, c_record* edxprec)
{
  if ((((edxprec->u4.b.b0 & con(0x20)) == con(0x0)) && (eaxptim->v.b.b_09 == con(0x0))) || (((edxprec->u4.b.b0 & con(0x20)) != con(0x0)) && (eaxptim->v.b.b_09 == con(0x1))))
  {
    x16 wordrg42 = urshift(edxprec->u6.w, con(0xb));
    x16 wordrg41 = SKW_GET_CREATURE_AT(ulrshift(edxprec->u6.w, con(0x5), con(0xb)), wordrg42);
    if (wordrg41 != con(0xffffffff))
      SKW_ROTATE_CREATURE(wordrg41, urshift(edxprec->u2.w, con(0x7)) & con(0x3), true);
  }
}

void SKW_TRY_ORNATE_NOISE(c_record* eaxprec, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, bool argbool1)
{
  c_tim vtim_00;
  x8 vb_14;
  x8 vb_18;

  x16 vw_10 = ebxw;
  x16 vw_0c = ecxw;
  if ((eaxprec->u4.b.b0 & con(0x40)) != con(0x0))
  {
    if ((urshift(eaxprec->u2.w, con(0x7)) & con(0x100)) == con(0x0))
    {
      if (!argbool1)
      {
        vb_14 = con(0xa);
        vb_18 = SKW_GET_FLOOR_DECORATION_OF_ACTUATOR(eaxprec);
      }
      else
      {
        vb_14 = con(0x9);
        vb_18 = SKW_GET_WALL_DECORATION_OF_ACTUATOR(eaxprec);
      }
      x32 longrg11 = (unsignedlong(DM2_QUERY_GDAT_ENTRY_DATA_INDEX(vb_14, con(0xb), con(0x88), vb_18))) + ddata.longmallocx + unsignedlong(CUTX8(urshift(eaxprec->u2.w, con(0x7))));
      x16 wordrg4 = longrg11 % argw0;
      x32 longrg1 = lextended(argw0 - wordrg4) + ddata.longmallocx; // extension necessary!
      longrg1 |= signedlong(ddata.v1d3248) << con(0x18);
      vtim_00.un.l_00 = longrg1;
      vtim_00.b_04 = con(0x5a);
      vtim_00.b_05 = con(0x0);
      vtim_00.v.w_08 = edxw;
      vtim_00.u.b.b_06 = CUTX8(vw_10);
      vtim_00.u.b.b_07 = CUTX8(vw_0c);
      SKW_QUEUE_TIMER(&vtim_00);
      x16 wordrg11 = eaxprec->u2.w;
      x16 wordrg2 = (urshift(wordrg11, con(0x7)) & con(0xff)) | con(0x100);
      wordrg11 &= con(0x7f);
      eaxprec->u2.w = wordrg11;
      eaxprec->u2.w |= wordrg2 << con(0x7);
      if (wordrg4 == con(0x0))
      {
        if (argbool1)
        {
          x16 wordrg5 = edxw >> con(0xe);
          x16 wordrg41 = vw_10 + table1d27fc[wordrg5];
          x16 wordrg1 = vw_0c + table1d2804[wordrg5];
          if (ddata.v1d3248 != ddata.v1e0282 || wordrg41 != ddata.v1e0280 || wordrg1 != ddata.v1e027e)
          {
            vw_10 = wordrg41;
            vw_0c = wordrg1;
          }
        }
        SKW_QUEUE_NOISE_GEN2(vb_14, con(0x88), con(0xfe), vb_18, signedlong(vw_10), vw_0c, con(0x1), con(0x8c), con(0x80));
      }
    }
  }
}

void SKW_ACTIVATE_CONTINUOUS_ORNATE_ANIMATOR(x16 eaxw, c_record* ebxprec, bool ecxbool, c_tim* edxptim)
{
  x16 vw_00;
  c_tim vtim_04;
  x16 vw_10;

  vw_00 = eaxw;
  x16 wordrg2 = ulrshift(ebxprec->u4.w, con(0xd), con(0xf));
  ebxprec->u4.b.b0 &= con(0xfffffffb);
  x16 wordrg4 = ebxprec->u4.w | (4 * (SKW_3a15_1da8(unsignedword(edxptim->v.b.b_09), wordrg2) & con(0x1)));
  ebxprec->u4.w = wordrg4;
  if (wordrg2 != ulrshift(wordrg4, con(0xd), con(0xf)))
  {
    x16 wordrg23 = SKW_GET_ORNATE_ANIM_LEN(ebxprec, ecxbool);
    vw_10 = wordrg23;
    if ((ebxprec->u4.b.b0 & con(0x4)) == con(0x0))
    {
      x16 wordrg46 = (unsignedlong(CUTX8(urshift(ebxprec->u2.w, con(0x7)))) + ddata.longmallocx) % wordrg23;
      if (wordrg46 != con(0x0))
      {
        wordrg23 -= wordrg46;
        x32 longrg4 = ddata.longmallocx + signedlong(wordrg23);
        longrg4 |= signedlong(ddata.v1d3248) << con(0x18);
        vtim_04.un.l_00 = longrg4;
        vtim_04.b_04 = con(0x59);
        vtim_04.b_05 = con(0x0);
        vtim_04.v.w_08 = vw_00;
        SKW_QUEUE_TIMER(&vtim_04);
      }
      else
      {
        if (ddata.v1d3248 == ddata.v1e0266)
        {
          ddata.v1e0390.b0 |= con(0x1);
        }
        ebxprec->u4.b.b0 &= con(0xfffffffe);
      }
    }
    else
    {
      if ((ebxprec->u4.b.b0 & con(0x1)) == con(0x0))
      {
        ebxprec->u4.b.b0 |= con(0x1);
        if (ddata.v1d3248 == ddata.v1e0266)
        {
          ddata.v1e0390.b0 |= con(0x1);
        }
        x16 wordrg24 = ((vw_10 - (ddata.longmallocx % vw_10)) % vw_10) & con(0xff);
        x16 wordrg48 = ebxprec->u2.w;
        x16 wordrg1 = urshift(wordrg48, con(0x7)) & con(0x100);
        wordrg1 = (wordrg1 | wordrg24) & con(0x1ff);
        wordrg48 &= con(0xffff007f);
        wordrg1 <<= con(0x7);
        ebxprec->u2.w = wordrg48 | wordrg1;
        SKW_TRY_ORNATE_NOISE(ebxprec, unsignedword(edxptim->u.b.b_06), unsignedword(edxptim->u.b.b_07), vw_00, vw_10, ecxbool);
      }
    }
  }
  if ((ebxprec->u4.b.b0 & con(0x20)) != con(0x0))
  {
    if ((ebxprec->u4.w & con(0x18)) == con(0x18))
    {
      SKW_INVOKE_ACTUATOR(ebxprec, con(0x0), unsignedword(edxptim->v.b.b_09));
    }
  }
}

void SKW_ACTIVATE_ORNATE_ANIMATOR(c_tim* eaxptim, x16 ebxw, x32 ecxl, c_record* edxprec)
{
  x8 byterg4h;
  c_tim vtim_00;
  x16 vw_10;
  x16 vw_14;

  vw_14 = unsignedword(eaxptim->u.b.b_06);
  vw_10 = unsignedword(eaxptim->u.b.b_07);
  if ((edxprec->u4.b.b0 & con(0x1)) == con(0x0))
  {
    edxprec->u4.b.b0 |= con(0x1);
    edxprec->u2.w &= con(0x7f);
    vtim_00.un.l_00 = (ddata.longmallocx + 1) | (signedlong(ddata.v1d3248) << con(0x18));
    vtim_00.b_04 = con(0x55);
    vtim_00.b_05 = con(0x0);
    vtim_00.u.w_06 = ebxw;
    vtim_00.v.l_08 = ecxl;
    SKW_QUEUE_TIMER(&vtim_00);
    if ((edxprec->u4.b.b0 & con(0x40)) != con(0x0))
    {
      x8 byterg4;
      if (ecxl == con(0x0))
      {
        byterg4h = con(0xa);
        byterg4 = SKW_GET_FLOOR_DECORATION_OF_ACTUATOR(edxprec);
      }
      else
      {
        byterg4h = con(0x9);
        byterg4 = SKW_GET_WALL_DECORATION_OF_ACTUATOR(edxprec);
        x16 wordrg3 = vw_14 + table1d27fc[eaxptim->v.b.b_09];
        x16 wordrg1 = vw_10 + table1d2804[eaxptim->v.b.b_09]; // BUGFIX 4/2014
        if ((ddata.v1d3248 != ddata.v1e0282 || wordrg3 != ddata.v1e0280) || wordrg1 != ddata.v1e027e)
        {
          vw_14 = wordrg3;
          vw_10 = wordrg1;
        }
      }
      SKW_QUEUE_NOISE_GEN2(byterg4h, con(0x88), con(0xfe), byterg4, vw_14, vw_10, DM2_QUERY_GDAT_ENTRY_DATA_INDEX(byterg4h, con(0xb), con(0x88), byterg4) + con(0x1), con(0x8c), con(0x80));
    }
  }
  if ((edxprec->u4.b.b0 & con(0x4)) != con(0x0))
    SKW_ACTIVATE_RELAY2(eaxptim, con(0x0), edxprec);
}

void SKW_ACTIVATE_RELAY1(c_tim* eaxptim, bool ebxbool, c_record* edxprec)
{
  x32 longrg5;

  if ((((edxprec->u4.b.b0 & con(0x4)) == con(0x0)) || (((edxprec->u4.b.b0 & con(0x20)) == con(0x0)) && (eaxptim->v.b.b_09 == con(0x0)))) || (((edxprec->u4.b.b0 & con(0x20)) != con(0x0)) && (eaxptim->v.b.b_09 == con(0x1))))
  {
    x32 parl00;
    if (!ebxbool)
    {
      longrg5 = ddata.longmallocx + unsignedlong(urshift(edxprec->u2.w, con(0x7)));
      parl00 = unsignedlong(ulrshift(edxprec->u4.w, con(0x5), con(0xc))) + longrg5;
    }
    else
    {
      longrg5 = unsignedlong(urshift(edxprec->u2.w, con(0x7)));
      longrg5 <<= CUTX8(ulrshift(edxprec->u4.w, con(0x5), con(0xc)));
      parl00 = longrg5 + ddata.longmallocx;
    }
    x16 wordrg1;
    if ((edxprec->u4.b.b0 & con(0x4)) == con(0x0))
      wordrg1 = unsignedword(eaxptim->v.b.b_09);
    else
      wordrg1 = unsignedword(CUTX8(ulrshift(edxprec->u4.w, con(0xb), con(0xe))));
    SKW_INVOKE_MESSAGE(ulrshift(edxprec->u6.w, con(0x5), con(0xb)), CUTX8(ulrshift(edxprec->u6.w, con(0xa), con(0xe))), wordrg1, urshift(edxprec->u6.w, con(0xb)), parl00);
  }
}

// was SKW_3a15_15d8
void SKW_ACTIVATE_INVERSE_FLAG(c_tim* eaxptim, c_record* edxprec)
{
  x16 wordrg11;
  if ((edxprec->u4.b.b0 & con(0x20)) == con(0x0))
    wordrg11 = con(0x0);
  else
    wordrg11 = con(0x3);
  x16 wordrg2 = unsignedword(eaxptim->v.b.b_09) + wordrg11;
  SKW_UPDATE_GLOB_VAR(urshift(edxprec->u2.w, con(0x7)), wordrg2, true);
  x16 wordrg1;
  if ((edxprec->u4.b.b0 & con(0x4)) == con(0x0))
    wordrg1 = unsignedword(eaxptim->v.b.b_09);
  else
    wordrg1 = ulrshift(edxprec->u4.w, con(0xb), con(0xe));
  SKW_INVOKE_ACTUATOR(edxprec, con(0x0), wordrg1);
}

// was SKW_3a15_1650
void SKW_ACTIVATE_TEST_FLAG(c_tim* eaxptim, c_record* edxprec)
{
  x16 wordrg41 = unsignedword(eaxptim->v.b.b_09);
  x16 wordrg1 = (SKW_GET_GLOB_VAR(urshift(edxprec->u2.w, con(0x7))) != con(0x0)) ? 1 : 0;
  x16 wordrg5 = ulrshift(edxprec->u4.w, con(0xa), con(0xf));
  if (wordrg1 == wordrg5 || (wordrg41 != con(0x0) && wordrg41 != con(0x2)))
  {
    if (wordrg1 != wordrg5 || wordrg41 != con(0x1))
      return;
  }
  x16 wordrg45;
  if ((edxprec->u4.b.b0 & con(0x4)) == con(0x0))
    wordrg45 = unsignedword(eaxptim->v.b.b_09);
  else
    wordrg45 = ulrshift(edxprec->u4.w, con(0xb), con(0xe));
  SKW_INVOKE_ACTUATOR(edxprec, con(0x0), wordrg45);
}

x16 SKW_3a15_1da8(x16 eaxw, x16 edxw)
{
  if (eaxw < con(0x1))
    return eaxw == con(0x0);
  if (eaxw == con(0x1))
    return con(0x0);
  if (eaxw != con(0x2))
    return con(0x0);
  return edxw ^ con(0x1);
}

void SKW_ACTUATE_TELEPORTER(c_tim* eaxptim)
{
  x8* bptrrg3;
  x8* bptrrg1;

  x16 wordrg6 = unsignedword(eaxptim->u.b.b_06);
  x16 wordrg5 = unsignedword(eaxptim->u.b.b_07);
  bptrrg1 = ddata.savegamepp1[eaxptim->u.b.b_06];
  bptrrg3 = bptrrg1 + eaxptim->u.b.b_07;
  if ((SKW_GET_ADDRESS_OF_TILE_RECORD(wordrg6, wordrg5)->u4.w & con(0x6)) != con(0x6))
  {
    x8 byterg1 = eaxptim->v.b.b_09;
    if (byterg1 == con(0x2))
      byterg1 = ((*bptrrg3 & con(0x8)) != con(0x0)) ? 1 : 0;
    if (byterg1 != con(0x0))
      *bptrrg3 &= con(0xfffffff7);
    else
    {
      *bptrrg3 |= con(0x8);
      SKW_ADVANCE_TILES_TIME(wordrg6, wordrg5);
    }
  }
  SKW_ACTUATE_FLOOR_MECHA(eaxptim);
}

void SKW_ACTUATE_PITFALL(c_tim* eaxptim)
{
  x8* bptrrg1;
  x8* bptrrg12;

  x16 wordrg6 = unsignedword(eaxptim->u.b.b_06);
  bptrrg1 = ddata.savegamepp1[eaxptim->u.b.b_06];
  x16 wordrg5 = unsignedword(eaxptim->u.b.b_07);
  bptrrg12 = bptrrg1 + eaxptim->u.b.b_07;
  x16 wordrg4 = unsignedword(eaxptim->v.b.b_09);
  if (eaxptim->v.b.b_09 == con(0x2))
    wordrg4 = ((*bptrrg12 & con(0x8)) != con(0x0)) ? 1 : 0;
  if (wordrg4 != con(0x0))
    *bptrrg12 &= con(0xfffffff7);
  else
  {
    *bptrrg12 |= con(0x8);
    SKW_ADVANCE_TILES_TIME(wordrg6, wordrg5);
  }
  SKW_ACTUATE_FLOOR_MECHA(eaxptim);
}

// was SKW_3a15_316c
void SKW_PROCESS_TIMER_LIGHT(c_tim* eaxptim)
{
  c_tim vtim_00;

  x16 wordrg11 = eaxptim->u.w_06;
  if (wordrg11 != con(0x0))
  {
    bool boolrg3 = wordrg11 < con(0x0);
    if (boolrg3)
      wordrg11 = -wordrg11;
    x16 wordrg4 = wordrg11 - con(0x1);
    x16 wordrg1 = signedword(table1d6702[wordrg11]) - signedword(table1d6702[wordrg4]);
    if (!boolrg3)
      wordrg1 *= 2;
    else
    {
      wordrg1 = -wordrg1;
      wordrg4 = -wordrg4;
    }
    ddata.savegames1.w0 += wordrg1;
    if (wordrg4 != con(0x0))
    {
      vtim_00.b_04 = con(0x46);
      vtim_00.u.w_06 = wordrg4;
      vtim_00.un.l_00 = (ddata.longmallocx + con(0x8)) | (signedlong(ddata.v1e0266) << con(0x18));
      vtim_00.b_05 = con(0x0);
      SKW_QUEUE_TIMER(&vtim_00);
    }
  }
}

// return never requested
x16 SKW_CONTINUE_ORNATE_ANIMATOR(c_tim* eaxptim)
{
  c_record* recoptrrg2;

  eaxptim->un.l_00 += con(0x1);
  recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(eaxptim->u.w_06);
  x16 wordrg41 = SKW_GET_ORNATE_ANIM_LEN(recoptrrg2, eaxptim->v.l_08 != con(0x0));
  x16 wordrg5 = (urshift(recoptrrg2->u2.w, con(0x7)) + con(0x1)) & con(0x1ff);
  recoptrrg2->u2.w &= con(0xffff007f);
  recoptrrg2->u2.w |= wordrg5 << con(0x7);
  x16 wordrg42 = wordrg5 % wordrg41;
  wordrg5 /= wordrg41;
  if (wordrg42 == con(0x0))
  {
    recoptrrg2->u4.b.b0 &= con(0xfffffffe);
    return wordrg5;
  }
  return SKW_QUEUE_TIMER(eaxptim);
}

// was SKW_3a15_3766
void SKW_PROCESS_TIMER_59(c_tim* eaxptim)
{
  c_record* recoptrrg4;

  recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(eaxptim->v.w_08);
  if ((recoptrrg4->u4.b.b0 & con(0x4)) == con(0x0))
  {
    if (ddata.v1d3248 == ddata.v1e0266)
      ddata.v1e0390.b0 |= con(0x1);
    recoptrrg4->u4.b.b0 &= con(0xfffffffe);
  }
}

void SKW_3df7_0037(bool eaxbool)
{
  if (!eaxbool)
  {
    SKW_UPDATE_GLOB_VAR(con(0x40), con(0x6), false);
    ddata.longv1e1434 = ddata.longmallocx + con(0x555);
    ddata.v1e1480 = con(0x0);
    ddata.v1e147f = con(0x0);
    x16 wordrg41;
    if (!ddata.v1d7188)
    {
      wordrg41 = SKW_RAND16(con(0x1f40)) + con(0x1f4);
      ddata.v1e1478 = CUTX8(SKW_RAND02());
      ddata.v1e1484 = CUTX8(SKW_RAND16(con(0x3)) + con(0x1));
    }
    else
    {
      ddata.v1e147d = con(0x0);
      wordrg41 = SKW_RAND16(con(0x1f4));
      ddata.v1e1478 = con(0x3);
      ddata.v1e1484 = con(0x1);
    }
    ddata.v1e147e = con(0x1);
    ddata.v1e1482 = con(0x0);
    ddata.v1e1474 = con(0x0);
    ddata.v1e146e = con(0x0);
    ddata.v1e147b = con(0x0);
    ddata.v1e1483 = CUTX8(SKW_RAND02());
    SKW_SET_TIMER_WEATHER(signedlong(wordrg41));
  }
  else
  {
    ddata.v1e146e = con(0x0);
    if (ddata.v1e1484 == con(0x0))
    {
      ddata.v1e1484 = con(0x1);
    }
  }
  ddata.v1e1470 = SKW_RAND16(con(0x4)) + con(0x4);
  ddata.v1e1476 = signedword(table1d70f0[((ddata.longmallocx + ddata.longv1e1438) / con(0x555)) % con(0x18)]);
  ddata.v1d7188 = false;
}

// was SKW_3df7_075f
bool SKW_RETRIEVE_ENVIRONMENT_CMD_CD_FW(s_xabytes* eaxpxa)
{
  bool boolrg1;
  t_text* tptrrg1;
  t_text t_00[0x80];

  tptrrg1 = SKW_QUERY_GDAT_TEXT(con(0x17), eaxpxa->b0, t_00, ddata.v1d6c02);
  if (*tptrrg1 != NULLBYTE)
  {
    eaxpxa->w2 = SKW_QUERY_CMDSTR_TEXT(t_00, v1d1140);
    eaxpxa->w6 = con(0x0);
    eaxpxa->w4 = con(0x0);
    eaxpxa->b1 = CUTX8(SKW_QUERY_CMDSTR_TEXT(t_00, v1d1143));
    eaxpxa->b9 = con(0x40);
    eaxpxa->b8 = con(0x40);
    boolrg1 = true;
  }
  else
    boolrg1 = false;
  return boolrg1;
}

x16 SKW_UPDATE_GLOB_VAR(ui16 eaxuw, ui16 ebxuw, bool edxbool)
{
  x16 wordrg1 = SKW_GET_GLOB_VAR(eaxuw);
  if (ebxuw <= con(0x6))
  {
    switch (ebxuw)
    {
      case 0:
        wordrg1 = con(0x1);
      break;

      case 1:
        wordrg1 = con(0x0);
      break;

      case 2:
        wordrg1 = (wordrg1 != con(0x0)) ? con(0x0) : con(0x1);
      break;

      case 3:
        wordrg1 += edxbool ? 1 : 0;
      break;

      case 4:
        wordrg1 -= edxbool ? 1 : 0;
      break;

      case 5:
      break;

      case 6:
        wordrg1 = edxbool ? 1 : 0;
      break;

      default: throw(THROW_DMABORT);
    }
  }
  if (eaxuw > con(0x3f))
  {
    if (eaxuw > con(0x7f))
    {
      if (eaxuw <= con(0xbf))
        ddata.v1e000c[eaxuw] = wordrg1;
      return wordrg1;
    }
    wordrg1 = DM2_BETWEEN_VALUE(con(0x0), con(0xff), wordrg1);
    ddata.globalb[eaxuw - 0x40] = CUTX8(wordrg1);
    return wordrg1;
  }
  x8 byterg2 = con(0x1) << (eaxuw & con(0x7));
  if (wordrg1 == con(0x0))
  {
    byterg2 = ~byterg2;
    ddata.v1e0104[eaxuw >> con(0x3)] &= byterg2;
    return con(0x0);
  }
  ddata.v1e0104[eaxuw >> con(0x3)] |= byterg2;
  return con(0x1);
}

x16 SKW_QUERY_OBJECT_5x5_POS(x16 eaxw, x16 edxw)
{
  c_record* recoptrrg1;

  ui16 uwordrg1 = urshift(eaxw & con(0x3c00), con(0xa));
  if (uwordrg1 < con(0x5))
  {
    if (uwordrg1 <= con(0x3))
      return SKW_ROTATE_5x5_POS(con(0xc), t_rotate(edxw));
    recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
    return SKW_QUERY_CREATURE_5x5_POS(recoptrrg1, (edxw - ulrshift(recoptrrg1->ue.w, con(0x6), con(0xe))) & con(0x3));
  }
  if (uwordrg1 > con(0xa))
  {
    if (uwordrg1 < con(0xe))
      return SKW_ROTATE_5x5_POS(con(0xc), t_rotate(edxw));
    if (uwordrg1 > con(0xe))
    {
      if (uwordrg1 != con(0xf))
        return SKW_ROTATE_5x5_POS(con(0xc), t_rotate(edxw));
      recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
      if ((recoptrrg1->u2.b.b0 & con(0xffffff80)) != con(0x0))
        return SKW_ROTATE_5x5_POS(con(0xc), t_rotate(edxw));
    }
  }
  return SKW_ROTATE_5x5_POS(unsignedword(table1d268e[unsignedlong(eaxw) >> con(0xe)]), t_rotate(edxw));
}

void SKW_DRAW_PICST(c_image* eaxpimg)
{
  t_gfxdata* srcbmp; // was gptrrg6
  t_gfxdata* gptrrg1;
  x16 srcofs; // was vw_00
  x16 vw_04;

  if ((eaxpimg->s_00.w_12 <= con(0x0)) || (eaxpimg->s_00.w_14 <= con(0x0)))
    return;
  srcbmp = SKW_QUERY_PICT_BITMAP(&eaxpimg->s_00);
  s_gfxdatatail* ptrbeforerg6 = getprevious(srcbmp);
  x16 wordrg4 = eaxpimg->w_18;
  if (wordrg4 != con(0xffffffff))
  {
    if ((((wordrg4 & con(0x8000)) == con(0x0)) && (eaxpimg->w_1c == con(0x0))) && (eaxpimg->w_1e == con(0x0)))
    {
      srcofs = eaxpimg->s_00.w_12;
      vw_04 = eaxpimg->s_00.w_14;
    }
    else
    {
      wordrg4 |= con(0x8000);
      srcofs = eaxpimg->w_20 + eaxpimg->w_1c;
      vw_04 = eaxpimg->w_22 + eaxpimg->w_1e;
    }
    if (SKW_QUERY_BLIT_RECT(srcbmp, wordrg4, &srcofs, &eaxpimg->rc_24, &vw_04, eaxpimg->w_1a) == NULL)
      return;
  }
  else
  {
    srcofs = eaxpimg->w_20;
    vw_04 = eaxpimg->w_22;
  }
  srcofs += eaxpimg->s_00.w_0e;
  vw_04 += eaxpimg->s_00.w_10;
  x16 wordrg13 = ptrbeforerg6->w2;
  x16 wordrg41 = eaxpimg->rc_24.w + srcofs;
  if (wordrg13 <= wordrg41 || ((eaxpimg->w_32 & con(0x1)) == con(0x0)))
    wordrg13 = con(0x0);
  else
    wordrg13 -= wordrg41;
  if ((eaxpimg->w_32 & con(0x1)) != con(0x0))
    srcofs = 0;
  srcofs += wordrg13;
  x16 wordrg12 = ptrbeforerg6->w4;
  x16 wordrg410 = eaxpimg->rc_24.h + vw_04;
  if (wordrg12 <= wordrg410 || ((eaxpimg->w_32 & con(0x2)) == con(0x0)))
    wordrg12 = con(0x0);
  else
    wordrg12 -= wordrg410;
  if ((eaxpimg->w_32 & con(0x2)) != con(0x0))
    vw_04 = con(0x0);
  vw_04 += wordrg12;
  gptrrg1 = eaxpimg->pg_2c;
  e_bitres wordrg2;
  x16 wordrg11;
  if (gptrrg1 != ddata.screenptr)
  {
    s_gfxdatatail* ptrbeforerg1 = getprevious(gptrrg1);
    wordrg11 = ptrbeforerg1->w2;
    wordrg2 = e_bitres(ptrbeforerg1->b0);
  }
  else
  {
    wordrg11 = ddata.mouse_unk0c;
    wordrg2 = E_BITRES8;
  }
  if (eaxpimg->w_30 != con(0xfffffffe))
//                        srcbmp                   srcofs  destbmp                                                                                       srcbits      destbits    palette
    SKW_FIRE_BLIT_PICTURE(srcbmp, &eaxpimg->rc_24, srcofs, eaxpimg->pg_2c, vw_04, ptrbeforerg6->w2, wordrg11, eaxpimg->w_30, eaxpimg->w_32, e_bitres(ptrbeforerg6->b0), wordrg2, (eaxpimg->w_38 > con(0x0)) ? eaxpimg->carr_3a : NULL);
  eaxpimg->w_20 = srcofs;
  eaxpimg->w_22 = vw_04;
}

void SKW_0b36_11c0(c_image* eaxpimg, x16 ebxw, x16 ecxw, c_c5rects* edxps)
{
  c_c5rects* edips;
  c_rect rc_00;
  x16 vw_08;
  x16 vw_10;

  edips = edxps;
  eaxpimg->pg_2c = SKW_3e74_5817(edips->s_00.w_00);
  if (ebxw != con(0xffffffff))
  {
    vw_08 = eaxpimg->s_00.w_12;
    vw_10 = eaxpimg->s_00.w_14;
    if (SKW_QUERY_BLIT_RECT(SKW_QUERY_PICT_BITMAP(&eaxpimg->s_00), ebxw, &vw_08, &rc_00, &vw_10, con(0xffffffff)) == NULL)
      return;
  }
  else
    SKW_COPY_RECT(&eaxpimg->rc_24, &rc_00);
  eaxpimg->s_00.w_12 += vw_08;
  eaxpimg->s_00.w_14 += vw_10;
  SKW_OFFSET_RECT(edips, &eaxpimg->rc_24, &rc_00);
  eaxpimg->w_18 = con(0xffffffff);
  eaxpimg->w_30 = ecxw;
  SKW_DRAW_PICST(eaxpimg);
  SKW_0b36_0d67(edips, &rc_00);
}

void SKW_44c8_1aca(t_gfxdata* eaxpg, x16 ebxw, x16 ecxw, c_rect* edxr)
{
  ui16 uwordrg2;
  ui16 uwordrg5;
  t_gfxdata vba_00[0xa0];
  t_gfxdata vba_a0[0xa0];
  x16 vw_140;
  x16 vw_144;
  x8 vb_148;
  x16 vw_14c;

  vw_14c = ecxw;
  if (edxr == NULL)
    return;
  SKW_FIRE_UPDATE_BLIT_PALETTE(ddata.paletteptr1);
  vb_148 = CUTX8(ebxw) ^ con(0xf);
  ddata.srcbmp = vba_00;
  ddata.destbmp = eaxpg;
  vw_144 = edxr->w;
  vw_140 = edxr->h;
  if ((UI16CAST(vw_144) <= UI16CAST(con(0x0))) || (vw_140 == con(0x0)))
    return;
  uwordrg2 = (vw_144 + con(0x1)) / 2;
  x8 byterg4 = vb_148 | CUTX8(ebxw << con(0x4));
  uwordrg5 = con(0x0);
  while (uwordrg5 < uwordrg2)
  {
    vba_00[uwordrg5] = byterg4;
    vba_a0[uwordrg5] = byterg4 ^ con(0xffffffff);
    uwordrg5++;
  }
  x16 wordrg6 = edxr->x + edxr->y * vw_14c;
  x16 vw_150 = ((wordrg6 / vw_14c) ^ wordrg6) & con(0x1);
  uwordrg5 = con(0x0);
  while (uwordrg5 < UI16CAST(vw_140))
  {
    ddata.srcbmp = (vw_150 != con(0x0)) ? vba_a0 : vba_00;
    vw_150 ^= con(0x1);
//             srcofs
    SKW_44c8_08ae(0, unsignedlong(vw_144), vb_148, wordrg6);
    wordrg6 += vw_14c;
    uwordrg5++;
  }
}

void SKW_CHANGE_PLAYER_POS(x16 eaxw)
{
  t_gfxdata* destbmp; // was gptrrg5
  t_gfxdata* srcbmp; // was gptrrg6
  x16 vw_00;
  t_gfxdata vcarr_04[PAL16];
  x16 vw_14;

  vw_00 = eaxw;
  bool boolrg5 = true;
  if ((eaxw & con(0x8000)) != con(0x0))
  {
    boolrg5 = false;
    vw_00 &= con(0x3);
  }
  vw_14 = SKW_GET_PLAYER_AT_POSITION((vw_00 + ddata.v1e0258) & con(0x3));
  x16 wordrg2 = vw_14;
  if (ddata.v1e00b8 != con(0x0))
  {
    x16 wordrg4 = ddata.v1e00b8 - con(0x1);
    ddata.v1e00b8 = con(0x0);
    x16 wordrg6 = SKW_GET_PLAYER_AT_POSITION((ddata.v1e0258 + wordrg4) & con(0x3));
    if (boolrg5)
      ddata.hero[wordrg6].b1c = CUTX8(ddata.v1e0258);
    if (wordrg4 != vw_00)
    {
      if (wordrg2 >= con(0x0))
      {
        x8 byterg4 = CUTX8(wordrg4);
        byterg4 += CUTX8(ddata.v1e0258);
        byterg4 &= con(0x3);
        ddata.hero[wordrg2].b1d = byterg4;
      }
      x8 byterg41 = (CUTX8(vw_00) + CUTX8(ddata.v1e0258)) & con(0x3);
      ddata.hero[wordrg6].b1d = byterg41;
    }
  }
  else
  {
    if (wordrg2 < con(0x0))
      return;
    ddata.v1d2658.w = ddata.v1d272c;
    ddata.v1d2658.h = ddata.v1d272e;
    srcbmp = SKW_ALLOC_PICT_BUFF(ddata.v1d272c, BIGPOOL_LO, con(0x4), ddata.v1d272e);
    destbmp = SKW_ALLOC_PICT_BUFF(ddata.v1d272c, BIGPOOL_LO, con(0x8), ddata.v1d272e);
    SKW_QUERY_GDAT_SQUAD_ICON(srcbmp, vcarr_04, vw_14);
    SKW_FILL_ENTIRE_PICT(destbmp, con(0xc));
//                        srcbmp                srcofs destbmp                                                            srcbits    destbits    palette
    SKW_FIRE_BLIT_PICTURE(srcbmp, &ddata.v1d2658, 0, destbmp, con(0x0), ddata.v1d272c, ddata.v1d272c, con(0x4), con(0x0), E_BITRES4, E_BITRES8, vcarr_04);
    SKW_FIRE_HIDE_MOUSE_CURSOR();
    SKW_FIRE_MOUSE_EVENT_RECEIVER(con(0x3), con(0x8), con(0x6), destbmp, ddata.v1d272c, ddata.v1d272e, con(0x8), NULL, unsignedword(vcarr_04[0xc]));
    userinterrupt(con(0xb), con(0x3));
    SKW_FREE_PICT_BUFF(destbmp);
    SKW_FREE_PICT_BUFF(srcbmp);
    ddata.v1e00b0 = vw_00;
    ddata.v1e00b8 = vw_00 + con(0x1);
    SKW_FIRE_SHOW_MOUSE_CURSOR();
  }
  SKW_443c_040e();
}

// return not really needed (the only call returns the result without being needed)
// palette: argpg7
ui16 SKW_44c8_1e43(t_gfxdata* eaxpg, t_gfxdata* ebxpg, c_rect* ecxr, t_gfxdata* edxpg, ui16 arguw0, ui16 arguw1, x16 argw2, x16 argw3, x16 argw4, x16 argw5, x8 argb6, t_palette* palette)
{
  x16 uwordrg5;
  t_gfxdata* pg_00;
  x16 vw_04;
  pg_00 = eaxpg;

  SKW_FIRE_UPDATE_BLIT_PALETTE(palette);
  x16 vw_0c = ecxr->w;
  vw_04 = ecxr->h;
  x16 vw_14 = ecxr->x + ecxr->y * argw5;
  ui16 uwordrg6 = arguw1;
  uwordrg5 = arguw0 - arguw1;
  ddata.srcbmp = pg_00;
  ddata.destbmp = edxpg;
  if (ebxpg == NULL)
  {
    x16 vw_10 = con(0x0);
    for(;;)
    {
      ui16 uwordrg1 = vw_10;
      if (uwordrg1 >= UI16CAST(vw_04))
        return uwordrg1;
      ui16 vuw_18 = vw_0c;
      x16 vw_1c = con(0x0);
      ui16 uwordrg4;
      x16 wordrg1;
      for(;;)
      {
        wordrg1 = vw_14 + vw_1c;
        uwordrg4 = vuw_18;
        if (uwordrg5 > uwordrg4)
          break;
        if (argb6 >= con(0x0))
//                       srcofs
          SKW_44c8_08ae(uwordrg6, unsignedlong(uwordrg5), argb6, wordrg1);
        else
//                                                   srcofs
          SKW_FIRE_BLIT_TO_MEMORY_ROW_4TO8BPP_NOKEY(uwordrg6, uwordrg5, wordrg1);
        vuw_18 -= uwordrg5;
        vw_1c += uwordrg5;
        uwordrg5 = arguw0;
        uwordrg6 = con(0x0);
      }
      if (uwordrg4 != con(0x0))
      {
        if (argb6 >= con(0x0))
//                       srcofs
          SKW_44c8_08ae(uwordrg6, unsignedlong(uwordrg4), argb6, wordrg1);
        else
//                                                   srcofs
          SKW_FIRE_BLIT_TO_MEMORY_ROW_4TO8BPP_NOKEY(uwordrg6, uwordrg4, wordrg1);
        uwordrg5 -= vuw_18;
        uwordrg6 += vuw_18;
      }
      if ((vw_0c & con(0x1)) != con(0x0))
      {
        if (--uwordrg5 == con(0x0))
        {
          uwordrg5 = arguw0;
          uwordrg6 = con(0x0);
        }
        else
          uwordrg6++;
      }
      vw_14 += argw5;
      vw_10++;
    }
  }
  argw4 = (argw4 + con(0x1)) & con(0xfffffffe);
  x16 vw_08 = argw2 + argw3 * argw4;
  x16 vw_10_1 = con(0x0);
  for(;;)
  {
    ui16 uwordrg1 = vw_10_1;
    if (uwordrg1 >= UI16CAST(vw_04))
      return uwordrg1;
    x16 wordrg14 = vw_0c;
    x16 vw_1c = vw_08;
    for(;;)
    {
      if (wordrg14 == con(0x0))
        break;
      if (((table1d255a[vw_1c & con(0x1)]) & ebxpg[vw_1c / 2]) != con(0x0))
        break;
      wordrg14--;
      vw_1c++;
      uwordrg6++;
      if (--uwordrg5 == con(0x0))
      {
        uwordrg6 = con(0x0);
        uwordrg5 = arguw0;
      }
    }
    vw_1c -= vw_08;
    ui16 vuw_18 = wordrg14;
    x16 wordrg13 = vw_08 + vw_0c;
    for(;;)
    {
      wordrg13--;
      if (vuw_18 <= con(0x0))
        break;
      if ((table1d255a[wordrg13 & con(0x1)] & ebxpg[wordrg13 / 2]) != con(0x0))
        break;
      vuw_18--;
    }
    if (vuw_18 > con(0x0))
    {
      ui16 uwordrg3;
      x16 wordrg12;
      for(;;)
      {
        wordrg12 = vw_14 + vw_1c;
        uwordrg3 = vuw_18;
        if (uwordrg5 > uwordrg3)
          break;
        if (argb6 >= con(0x0))
//                       srcofs
          SKW_44c8_08ae(uwordrg6, unsignedlong(uwordrg5), argb6, wordrg12);
        else
//                                                   srcofs
          SKW_FIRE_BLIT_TO_MEMORY_ROW_4TO8BPP_NOKEY(uwordrg6, uwordrg5, wordrg12);
        vuw_18 -= uwordrg5;
        vw_1c += uwordrg5;
        uwordrg5 = arguw0;
        uwordrg6 = con(0x0);
      }
      if (uwordrg3 != con(0x0))
      {
        if (argb6 >= con(0x0))
//                       srcofs
          SKW_44c8_08ae(uwordrg6, unsignedlong(vuw_18), argb6, wordrg12);
        else
//                                                    srcofs
          SKW_FIRE_BLIT_TO_MEMORY_ROW_4TO8BPP_NOKEY(uwordrg6, uwordrg3, wordrg12);
        uwordrg5 -= vuw_18;
        uwordrg6 += vuw_18;
      }
    }
    if ((vw_0c & con(0x1)) != con(0x0))
    {
      if (--uwordrg5 == con(0x0))
      {
        uwordrg5 = arguw0;
        uwordrg6 = con(0x0);
      }
      else
        uwordrg6++;
    }
    vw_08 += argw4;
    vw_14 += argw5;
    vw_10_1++;
  }
}

bool SKW_QUERY_CREATURES_ITEM_MASK(x8 eaxb, s_x40bytes* ebxps, bool ecxbool, x8 edxb)
{
  ui8 byterg3h;
  t_text* tptrrg7;
  x8* bptrrg1;
  t_text t_00[0x80];
  s_x40bytes* p_80;
  x8 vb_88;
  x8 vb_8c;

  vb_8c = eaxb;
  vb_88 = edxb;
  p_80 = ebxps;
  DM2_ZERO_MEMORY(DOWNCAST(s_x40bytes, ebxps), con(0x40));
  tptrrg7 = SKW_QUERY_GDAT_TEXT(con(0xf), vb_88 + con(0x10), t_00, vb_8c);
  if (*tptrrg7 == NULLBYTE)
    return false;
  x16 wordrg6 = con(0x0);
  x16 wordrg4 = con(0xffffffff);
  x16 wordrg5 = con(0xffffffff);
  x16 wordrg1 = con(0x0);
  do
  {
    byterg3h = *tptrrg7++;
    if (byterg3h < con(0x30) || byterg3h > con(0x39))
    {
      if (byterg3h != con(0x2d))
      {
        if (wordrg1 != con(0x0))
        {
          if (wordrg4 < con(0x0))
            wordrg4 = wordrg6;
          while (wordrg4 <= wordrg6)
          {
            x16 wordrg2 = wordrg4 + wordrg5;
            bptrrg1 = &p_80->barr_00[wordrg2 / con(0x8)];
            *bptrrg1 |= con(0x1) << (wordrg2 & con(0x7));
            wordrg4++;
          }
          wordrg6 = con(0x0);
          wordrg4 = con(0xffffffff);
          wordrg5 = wordrg4;
          wordrg1 = con(0x0);
        }
        if (byterg3h < UI8CAST(con(0x4a)))
        {
          if (byterg3h >= UI8CAST(con(0x41)))
          {
            if (byterg3h == UI8CAST(con(0x41)))
              wordrg5 = con(0x80);
            else if (byterg3h == con(0x43))
              wordrg5 = ecxbool ? con(0x0) : con(0x1e0);
          }
        }
        else if (byterg3h <= UI8CAST(con(0x4a)))
          wordrg5 = con(0x100);
        else if (byterg3h < UI8CAST(con(0x53)))
        {
          if (byterg3h == con(0x50))
            wordrg5 = con(0x180);
        }
        else if (byterg3h <= UI8CAST(con(0x53)))
          wordrg5 = con(0x1fc);
        else if (byterg3h == con(0x57))
          wordrg5 = con(0x0);
      }
      else
      {
        wordrg4 = wordrg6;
        wordrg6 = con(0x0);
      }
    }
    else
    {
      wordrg6 *= con(0xa);
      wordrg6 += unsignedword(byterg3h) - con(0x30);
      wordrg1 = con(0x1);
    }
  } while (byterg3h != con(0x0));
  return true;
}

bool R_4FCC(x8 eaxb, x16* ebxpw, t_gfxdata** ecxppg, x16 edxw)
{
  x8 byterg5;
  bool boolrg1;
  x16 vw_00;
  t_gfxdata* gptrrg1;
  t_gfxdata* gptrrg4;
  t_gfxdata* pg_04;

  vw_00 = edxw;
  gptrrg1 = UPCAST(t_gfxdata, SKW_QUERY_GDAT_ENTRY_DATA_PTR(con(0xf), con(0x7), con(0xfc), eaxb));
  pg_04 = gptrrg1;
  x16 wordrg2 = *ebxpw;
  x32 longrg4 = unsignedlong(wordrg2); // let this long!
  if (longrg4 != con(0xffff))
  {
    longrg4 += unsignedlong(vw_00);
    x16 wordrg11 = urshift(unsignedword(gptrrg1[4 * longrg4 + con(0x1)] & con(0xfffffff0)), con(0x4));
    if (wordrg11 == con(0x0))
    {
      *ecxppg = &pg_04[4 * (wordrg2 + vw_00)];
      return false;
    }
    wordrg2 += wordrg11;
  }
  else
    wordrg2 = con(0x0);
  gptrrg4 = &pg_04[4 * (wordrg2 + vw_00)];
  for(;;)
  {
    if (urshift(unsignedword(gptrrg4[con(0x1)] & con(0xfffffff0)), con(0x4)) == con(0x0))
    {
      boolrg1 = false;
      break;
    }
    byterg5 = gptrrg4[con(0x1)] & con(0xf);
    if (byterg5 == con(0xf) || unsignedword(byterg5) >= (CUTX16(SKW_RAND()) & con(0xf)))
    {
      boolrg1 = ((gptrrg4[con(0x3)] & con(0xc)) / 4 + ((gptrrg4[con(0x3)] & con(0xfffffff0)) >> 4)) != con(0x0);
      break;
    }
    wordrg2++;
    gptrrg4 += con(0x4);
  }
  *ebxpw = wordrg2;
  *ecxppg = &pg_04[4 * (wordrg2 + vw_00)];
  return boolrg1;
}

// returns 0, 1 or 2
x16 R_50CB(x8 eaxb, x16* ebxpw, t_gfxdata** ecxppg, x16 edxw)
{
  t_gfxdata* gptrrg1;
  t_gfxdata* gptrrg2;
  bool skip = false;

  x16 wordrg1;
  gptrrg1 = UPCAST(t_gfxdata, SKW_QUERY_GDAT_ENTRY_DATA_PTR(con(0xf), con(0x7), con(0xfc), eaxb));
  gptrrg2 = gptrrg1;
  x16 wordrg4 = *ebxpw;
  if (wordrg4 != con(0xffff))
  {
    wordrg4 += edxw;
    x16 wordrg11 = unsignedword(gptrrg1[4 * wordrg4 + con(0x2)] & con(0x3f));
    if (wordrg11 != con(0x0))
      *ebxpw += wordrg11;
    else
    {
      wordrg1 = con(0x2);
      skip = true;
    }
  }
  else
    *ebxpw = con(0x0);
  if (!skip)
  {
    ui16 uwordrg1 = unsignedword(gptrrg2[4 * (*ebxpw + edxw) + con(0x1)]) & con(0xfffffff0);
    if (urshift(uwordrg1, con(0x4)) != con(0x0))
      wordrg1 = con(0x1);
    else
      wordrg1 = con(0x0);
  }
  gptrrg2 += 4 * (*ebxpw + edxw);
  *ecxppg = gptrrg2;
  return wordrg1;
}

void SKW_LOAD_MISCITEM(void)
{
  ui8 ubyterg5;
  x8 vb_04;

  if (ddata.v1d268a)
    return;
  ddata.v1d268a = true;
  vb_04 = con(0x0);
  for(;;)
  {
    ubyterg5 = vb_04;
    if (ubyterg5 >= con(0x80))
      return;
    if ((DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x15), con(0xb), con(0x0), ubyterg5) & con(0x4000)) != con(0x0))
    {
      x16 wordrg5 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x15), con(0xb), con(0x2), ubyterg5);
      x16 wordrg3 = con(0x0);
      while (wordrg3 < ddata.v1e03fe && (wordrg5 > ddata.v1e03ac[wordrg3]))
        wordrg3++;
      if (wordrg3 < ddata.v1e03fe)
      {
        x32 longrg6 = lextended(2 * (ddata.v1e03fe - wordrg3));
        SKW_COPY_MEMORY(DOWNCAST(x16, &ddata.v1e03ac[wordrg3]), longrg6, DOWNCAST(x16, &ddata.v1e03ac[wordrg3 + con(0x1)]));
        SKW_COPY_MEMORY(DOWNCAST(x16, &ddata.v1e0394[wordrg3]), longrg6, DOWNCAST(x16, &ddata.v1e0394[wordrg3 + con(0x1)]));
      }
      ddata.v1e03ac[wordrg3] = wordrg5;
      ddata.v1e0394[wordrg3] = unsignedword(vb_04) + con(0x100);
      ddata.v1e03fe++;
    }
    vb_04++;
  }
}

void SKW_PROCEED_TIMERS(void)
{
  x8* bptrrg1;
  c_tim vtim_00;
  bool flag;

  for(;;)
  {
    if (!SKW_IS_TIMER_TO_PROCEED())
    {
      SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e0266);
      return;
    }
    SKW_IBMIO_USER_INPUT_CHECK();
    SKW_GET_AND_DELETE_NEXT_TIMER(&vtim_00);
    SKW_CHANGE_CURRENT_MAP_TO(CUTX16(signedlong(CUTX8(vtim_00.un.l_00 >> con(0x18)))));
    ui16 uwordrg4 = unsignedword(vtim_00.b_04);
    if (uwordrg4 < con(0x47))
    {
      if (uwordrg4 < con(0xe))
      {
        if (uwordrg4 < con(0x4))
        {
          if (uwordrg4 >= con(0x1))
          {
            if (uwordrg4 == con(0x1))
              SKW_STEP_DOOR(&vtim_00);
            else if (uwordrg4 == con(0x2))
              SKW_PROCESS_TIMER_DESTROY_DOOR(&vtim_00);
          }
        }
        else if (uwordrg4 <= con(0x4))
        {
          bptrrg1 = ddata.savegamepp1[vtim_00.u.b.b_06];
          ui8 ubyterg1 = CUTX8(urshift(unsignedword(bptrrg1[vtim_00.u.b.b_07]), con(0x5)));
          if (ubyterg1 <= con(0x6))
          {
            switch (ubyterg1)
            {
              case 0:
                SKW_ACTUATE_WALL_MECHA(&vtim_00);
              break;

              case 1:
                SKW_ACTUATE_FLOOR_MECHA(&vtim_00);
              break;

              case 2:
                SKW_ACTUATE_PITFALL(&vtim_00);
              break;

              case 3:
                // no call here!
              break;

              case 4:
                SKW_ACTUATE_DOOR(&vtim_00);
              break;

              case 5:
                SKW_ACTUATE_TELEPORTER(&vtim_00);
              break;

              case 6:
                SKW_ACTUATE_TRICKWALL(&vtim_00);
              break;

              default: throw(THROW_DMABORT);
            }
          }
        }
        else if (uwordrg4 < con(0xc))
          ;
        else if (uwordrg4 <= con(0xc))
          SKW_PROCESS_TIMER_0C(unsignedword(vtim_00.b_05));
        else
          SKW_PROCESS_TIMER_RESURRECTION(&vtim_00);
      }
      else if (uwordrg4 <= con(0xe))
        SKW_PROCESS_TIMER_0E(&vtim_00, con(0xfffffffe));
      else if (uwordrg4 < con(0x1d))
      {
        if (uwordrg4 >= con(0x15))
        {
          if (uwordrg4 == con(0x15))
            SKW_PROCESS_SOUND(vtim_00.u.w_06);
          else if (uwordrg4 == con(0x19))
            SKW_PROCESS_CLOUD(&vtim_00);
        }
      }
      else if (uwordrg4 <= con(0x1e))
        SKW_STEP_MISSILE(&vtim_00);
      else if (uwordrg4 < con(0x3c))
      {
        if (uwordrg4 >= con(0x21) && uwordrg4 <= con(0x22))
        {
          x16 wordrg21 = uwordrg4;
          x16 wordrg45 = unsignedword(vtim_00.u.b.b_07);
          SKW_THINK_CREATURE(signedword(vtim_00.u.b.b_06), wordrg21, wordrg45);
        }
      }
      else if (uwordrg4 <= con(0x3d))
        SKW_PROCESS_TIMER_3D(&vtim_00);
      else if (uwordrg4 == con(0x46))
      {
        SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e0266);
        SKW_PROCESS_TIMER_LIGHT(&vtim_00);
        SKW_RECALC_LIGHT_LEVEL();
      }
    }
    else if (uwordrg4 <= con(0x47))
    {
      flag = --ddata.savegames1.b2 != con(0x0);
      if (!flag && ddata.v1e0976 != con(0x0))
        ddata.hero[ddata.v1e0976 - con(0x1)].u32.b.b1 |= con(0x40);
    }
    else if (uwordrg4 < con(0x58))
    {
      if (uwordrg4 < con(0x54))
      {
        if (uwordrg4 <= con(0x48))
        {
          x16 wordrg43 = con(0x0);
          for(;;)
          {
            x16 wordrg22 = wordrg43;
            if (wordrg22 >= ddata.savegamew2)
              break;
            if (((con(0x1) << wordrg43) & unsignedword(vtim_00.b_05)) != con(0x0))
              if (ddata.hero[wordrg22].w36 != con(0x0))
                ddata.hero[wordrg22].w103 -= vtim_00.u.w_06;
            if (ddata.hero[wordrg43].w103 < con(0x0))
              ddata.hero[wordrg43].w103 = con(0x0);
            wordrg43++;
          }
        }
        else if (uwordrg4 == con(0x4b))
        {
          ddata.hero[vtim_00.b_05].b1f--;
          ddata.hero[vtim_00.b_05].w48 -= vtim_00.u.w_06;
          SKW_PROCESS_POISON(unsignedword(vtim_00.b_05), vtim_00.u.w_06);
        }
      }
      else if (uwordrg4 <= con(0x54))
        SKW_UPDATE_WEATHER(true);
      else if (uwordrg4 < con(0x56))
        SKW_CONTINUE_ORNATE_ANIMATOR(&vtim_00);
      else if (uwordrg4 <= con(0x56))
        SKW_CONTINUE_TICK_GENERATOR(&vtim_00);
      else
        SKW_GET_ADDRESS_OF_RECORD(vtim_00.u.w_06)->u4.b.b0 &= con(0xfffffffe);
    }
    else if (uwordrg4 <= con(0x58))
      SKW_PROCESS_TIMER_RELEASE_DOOR_BUTTON(&vtim_00);
    else if (uwordrg4 < con(0x5b))
    {
      if (uwordrg4 <= con(0x59))
        SKW_PROCESS_TIMER_59(&vtim_00);
      else
        SKW_CONTINUE_ORNATE_NOISE(&vtim_00);
    }
    else if (uwordrg4 <= con(0x5b))
      SKW_GET_ADDRESS_OF_RECORD(vtim_00.u.w_06)->u4.b.b0 &= con(0xfffffffe);
    else if (uwordrg4 < con(0x5d))
      SKW_GET_ADDRESS_OF_RECORD(vtim_00.u.w_06)->u2.b.b0 |= con(0x1);
    else if (uwordrg4 <= con(0x5d))
    {
      if (unsignedword(vtim_00.v.b.b_08) == ddata.v1e0266)
      {
        SKW_MOVE_RECORD_TO(con(0xffff), ddata.v1e0272, vtim_00.u.w_06 & con(0x1f), ddata.v1e0270, ulrshift(vtim_00.u.w_06, con(0x6), con(0xb)));
        SKW_ROTATE_SQUAD(ulrshift(vtim_00.u.w_06, con(0x4), con(0xe)));
      }
    }
    else if (uwordrg4 == con(0x5e))
    {
      x16 wordrg6 = unsignedword(vtim_00.u.b.b_06);
      x16 wordrg11;
      if (SKW_RAND02() == con(0x0))
        wordrg11 = SKW_RAND02();
      else
        wordrg11 = SKW_CALC_VECTOR_DIR(unsignedword(vtim_00.u.b.b_06), ddata.v1e0270, ddata.v1e0272, unsignedword(vtim_00.u.b.b_07));
      SKW_ALLOC_NEW_CREATURE(unsignedword(vtim_00.v.b.b_09), wordrg11, wordrg6, con(0x7), unsignedword(vtim_00.u.b.b_07));
    }
  }
}

void SKW_CONTINUE_ORNATE_NOISE(c_tim* eaxptim)
{
  bool boolrg5;
  c_record* recoptrrg3;
  x8 vb_00;
  x8 vb_04;
  bool flag;

  recoptrrg3 = SKW_GET_ADDRESS_OF_RECORD(eaxptim->v.w_08);
  if ((recoptrrg3->u4.b.b0 & con(0x1)) == con(0x0) || signedword(eaxptim->un.b.b_03) != ddata.v1e0266)
  {
    x16 wordrg11 = recoptrrg3->u2.w;
    x16 wordrg41 = unsignedword(CUTX8(urshift(wordrg11, con(0x7))));
    wordrg11 &= con(0x7f);
    recoptrrg3->u2.w = wordrg11 | (wordrg41 << con(0x7));
    return;
  }
  x8 byterg1 = (SKW_GET_TILE_VALUE(unsignedword(eaxptim->u.b.b_06), unsignedword(eaxptim->u.b.b_07)) & con(0xff)) >> con(0x5);
  flag = byterg1 != con(0x0);
  boolrg5 = byterg1 == con(0x0);
  if (flag)
  {
    vb_04 = con(0xa);
    vb_00 = SKW_GET_FLOOR_DECORATION_OF_ACTUATOR(recoptrrg3);
  }
  else
  {
    vb_04 = con(0x9);
    vb_00 = SKW_GET_WALL_DECORATION_OF_ACTUATOR(recoptrrg3);
  }
  eaxptim->un.l_00 += unsignedlong(SKW_GET_ORNATE_ANIM_LEN(recoptrrg3, boolrg5));
  SKW_QUEUE_TIMER(eaxptim);
  x16 wordrg3 = unsignedword(eaxptim->u.b.b_06);
  x16 wordrg1 = unsignedword(eaxptim->u.b.b_07);
  if (boolrg5)
  {
    x16 wordrg5 = table1d27fc[eaxptim->v.b.b_09] + wordrg3;
    x16 wordrg4 = table1d2804[eaxptim->v.b.b_09] + wordrg1;
    if (ddata.v1d3248 != ddata.v1e0282 || wordrg5 != ddata.v1e0280 || wordrg4 != ddata.v1e027e)
    {
      wordrg3 = wordrg5;
      wordrg1 = wordrg4;
    }
  }
  SKW_QUEUE_NOISE_GEN2(vb_04, con(0x88), con(0xfe), vb_00, wordrg3, wordrg1, con(0x1), con(0x8c), con(0x80));
}

void SKW_PROCESS_ACTUATOR_TICK_GENERATOR(void)
{
  x8* ebppb;
  x16* wptrrg6;
  c_record* recoptrrg2;
  x16 vw_04;
  x16 vw_08;

  for (x16 wordrg5 = con(0x0); wordrg5 < unsignedword(CUTX8(ddata.savegamep4->w0[2])); wordrg5++)
  {
    vw_04 = ulrshift(ddata.v1e03c8[wordrg5].w8, con(0x5), con(0xb));
    vw_08 = urshift(ddata.v1e03c8[wordrg5].w8, con(0xb));
	if (ddata.v1e03cc == NULL) return;	// SPX: avoid null pointer
    x8** hlpptr1 = ddata.v1e03cc[wordrg5];
    ebppb = *hlpptr1;
    wptrrg6 = &ddata.v1e038c[ddata.v1e03d8[ddata.v1e03e4[wordrg5]]];
    for (x16 vw_00 = con(0x0); vw_00 <= vw_04; vw_00++)
    {
      for (x16 vw_0c = con(0x0); vw_0c <= vw_08; vw_0c++)
      {
        if ((*ebppb++ & con(0x10)) != con(0x0))
        {
          x16 wordrg3 = *wptrrg6++;
          for(;;)
          {
            x16 wordrg11 = urshift(wordrg3 & con(0x3c00), con(0xa));
            if (wordrg11 > con(0x3))
              break;
            if (wordrg11 == con(0x3))
            {
              recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(wordrg3);
              x16 wordrg1 = recoptrrg2->u2.w & con(0x7f);
              if (wordrg1 >= con(0x1e) && (wordrg1 <= con(0x1e) || (wordrg1 >= con(0x33) && wordrg1 <= con(0x37))))
              {
                if (ddata.savegamew8 != con(0x0))
                {
                  if ((recoptrrg2->u4.b.b0 & con(0x4)) == con(0x0))
                    recoptrrg2->u4.b.b0 &= con(0xfffffffe);
                  else
                  {
                    SKW_CHANGE_CURRENT_MAP_TO(wordrg5);
                    SKW_ACTIVATE_TICK_GENERATOR(recoptrrg2, wordrg3);
                  }
                }
              }
            }
            wordrg3 = SKW_GET_NEXT_RECORD_LINK(wordrg3);
          }
        }
      }
    }
  }
}

void SKW_CONTINUE_TICK_GENERATOR(c_tim* eaxptim)
{
  c_record* recoptrrg5;

  x16 wordrg6;
  recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(eaxptim->u.w_06);
  if ((recoptrrg5->u4.w & con(0x18)) != con(0x18))
  {
    wordrg6 = ulrshift(recoptrrg5->u4.w, con(0xd), con(0xf));
    if (wordrg6 != con(0x0))
      SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe)));
  }
  else
  {
    x16 wordrg2 = (ulrshift(eaxptim->v.w_08, con(0x7), con(0xf)) ^ con(0x1)) & con(0x1);
    eaxptim->v.b.b_09 &= con(0xfffffffe);
    eaxptim->v.w_08 |= wordrg2 << con(0x8);
    wordrg6 = wordrg2 | ulrshift(recoptrrg5->u4.w, con(0xd), con(0xf));
    SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), ((eaxptim->v.b.b_09 & con(0x1)) == con(0x0)) ? 1 : 0);
  }
  if (wordrg6 == con(0x0))
    recoptrrg5->u4.b.b0 &= con(0xfffffffe);
  else
  {
    eaxptim->un.l_00 += unsignedlong(unsignedword(CUTX8(eaxptim->v.w_08))) * unsignedlong(urshift(recoptrrg5->u2.w, con(0x7)));
    SKW_QUEUE_TIMER(eaxptim);
  }
}

void SKW_ACTIVATE_TICK_GENERATOR(c_record* eaxprec, x16 edxw)
{
  c_tim vtim_00;
  x16 wordrg3 = con(0x0); // assuming this preset is necessary! BUGFIX 4/2014

  x16 wordrg1 = eaxprec->u2.w & con(0x7f);
  if (wordrg1 < con(0x34))
  {
    if (wordrg1 < con(0x1e))
      ; // Note: original BUG? wordrg3 undefined then!
    else if (wordrg1 <= con(0x1e))
      wordrg3 = con(0x1);
    else if (wordrg1 == con(0x33))
      wordrg3 = con(0x8);
  }
  else if (wordrg1 <= con(0x34))
    wordrg3 = con(0x10);
  else if (wordrg1 < con(0x36))
    wordrg3 = con(0x20);
  else if (wordrg1 <= con(0x36))
    wordrg3 = con(0x40);
  else if (wordrg1 == con(0x37))
    wordrg3 = con(0x80);
  x16 wordrg4 = eaxprec->u2.w;
  if ((wordrg4 & con(0xffffff80)) != con(0x0))
  {
    x32 longrg4 = (ddata.longmallocx % (unsignedlong(urshift(wordrg4, con(0x7))) * unsignedlong(wordrg3))) + ddata.longmallocx;
    longrg4 |= signedlong(ddata.v1d3248) << con(0x18);
    vtim_00.un.l_00 = longrg4;
    vtim_00.b_04 = con(0x56);
    vtim_00.b_05 = con(0x0);
    vtim_00.u.w_06 = edxw;
    vtim_00.v.b.b_08 = con(0x0);
    vtim_00.v.w_08 |= wordrg3;
    vtim_00.v.b.b_09 &= con(0xfffffffe);
    SKW_QUEUE_TIMER(&vtim_00);
    eaxprec->u4.b.b0 |= con(0x1);
  }
}

// was SKW_3a15_306c
void SKW_PROCESS_TIMER_RESURRECTION(c_tim* eaxptim)
{
  x16 vw_00;
  x16 vw_04;
  x16 vw_0c;

  vw_00 = unsignedword(eaxptim->u.b.b_06);
  vw_04 = unsignedword(eaxptim->u.b.b_07);
  x16 wordrg3 = unsignedword(eaxptim->v.b.b_08);
  vw_0c = unsignedword(eaxptim->b_05);
  ui16 uwordrg1 = unsignedword(eaxptim->v.b.b_09);
  x16 vw_08 = uwordrg1;
  if (uwordrg1 < con(0x1))
  {
    if (uwordrg1 == con(0x0)) // TODO: what value should be left here, if less unsigned 1 before?
      SKW_BRING_CHAMPION_TO_LIFE(vw_0c);
    return;
  }
  else if (uwordrg1 == con(0x1))
  {
    x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(vw_00, vw_04);
    x16 wordrg2;
    x16 wordrg5;
    for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg2))
    {
      wordrg2 = wordrg1;
      if (wordrg2 == con(0xfffffffe))
        return;
      wordrg5 = wordrg2;
      if ((wordrg5 >> con(0xe)) == wordrg3 && SKW_QUERY_CLS1_FROM_RECORD(wordrg5) == con(0x15) && SKW_QUERY_CLS2_FROM_RECORD(wordrg5) == con(0x0) && SKW_ADD_ITEM_CHARGE(wordrg5, con(0x0)) == vw_0c)
        break;
    }
    SKW_CUT_RECORD_FROM(wordrg5, vw_00, vw_04, NULL);
    SKW_DEALLOC_RECORD(wordrg5);
    eaxptim->un.l_00 += con(0x1);
  }
  else if (uwordrg1 == con(0x2))
  {
    SKW_CREATE_CLOUD(con(0xffe4), vw_00, vw_04, con(0x0), wordrg3);
    eaxptim->un.l_00 += con(0x5);
  }
  else
    return;
  vw_08--;
  eaxptim->v.b.b_09 = CUTX8(vw_08);
  SKW_QUEUE_TIMER(eaxptim);
}

void SKW_ACTUATE_WALL_MECHA(c_tim* eaxptim)
{
  u_bbw* ubwptrrg1;
  c_record* recoptrrg5;
  c_record* recoptrrg4;
  c_record* recoptrrg1;
  bool flag;
  c_tim vtim_00;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x16 vw_28;

  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(unsignedword(eaxptim->u.b.b_06), unsignedword(eaxptim->u.b.b_07));
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(vw_24))
  {
    vw_24 = wordrg1;
    if (vw_24 == con(0xfffffffe))
      return;
    x16 wordrg15 = urshift(vw_24 & con(0x3c00), con(0xa));
    if (wordrg15 > con(0x3))
      return;
    if (vw_24 != con(0x2) || urshift(vw_24, con(0xe)) != unsignedword(eaxptim->v.b.b_08))
    {
      if (wordrg15 == con(0x3))
      {
        x16 wordrg2 = vw_24;
        if (urshift(wordrg2, con(0xe)) == unsignedword(eaxptim->v.b.b_08))
        {
          recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg2);
          recoptrrg5 = recoptrrg4;
          vw_20 = recoptrrg4->u2.w & con(0x7f);
          x16 wordrg3 = urshift(recoptrrg4->u2.w, con(0x7));
          vw_1c = vw_20 - con(0x7);
          if (UI16CAST(vw_1c) <= con(0x42))
          {
            switch (vw_1c)
            {
              case 0:
              case 1:
              case 2:
              case 3:
              case 7:
              case 8:
                SKW_ACTIVATE_SHOOTER(recoptrrg5, eaxptim);
              break;

              case 4:
              case 5:
              case 6:
              case 9:
              case 10:
              case 12:
              case 13:
              case 14:
              case 16:
              case 17:
              case 18:
              case 19:
              case 20:
              case 21:
              case 24:
              case 26:
              case 27:
              case 28:
              case 29:
              case 30:
              case 32:
              case 33:
              case 34:
              case 35:
              case 36:
              case 40:
              case 41:
              case 49:
              case 50:
              case 51:
              case 55:
              case 56:
              break;

              case 11:
                SKW_FIRE_SELECT_PALETTE_SET(0);
                ddata.v1e0240 = true;
                SKW_SK_PREPARE_EXIT();
              break;

              case 15:
              {
                vtim_00.un.l_00 = ddata.longmallocx | (UI32CAST(wordrg3 & con(0x3f)) << con(0x18));
                vtim_00.b_05 = eaxptim->b_05;
                vtim_00.u.b.b_06 = CUTX8(ulrshift(recoptrrg5->u6.w, con(0x5), con(0xb)));
                vtim_00.u.b.b_07 = CUTX8(urshift(recoptrrg5->u6.w, con(0xb)));
                x8*** hlpptr1 = &ddata.v1e03cc[wordrg3 & con(0x3f)];
                x8** hlpptr2 = *hlpptr1 + vtim_00.u.b.b_06;
                x8* hlpptr3 = *hlpptr2;
                if (ubrshift(hlpptr3[vtim_00.u.b.b_07], con(0x5)) != con(0x0))
                  vtim_00.v.b.b_08 = con(0x0);
                else
                  vtim_00.v.b.b_08 = CUTX8(urshift(wordrg3, con(0x6)) & con(0x3));
                vtim_00.b_04 = con(0x4);
                vtim_00.v.b.b_09 = eaxptim->v.b.b_09;
                SKW_QUEUE_TIMER(&vtim_00);
              }
              break;

              case 22:
              {
                bool boolrg2 = (recoptrrg4->u2.w & con(0xffffff80)) == con(0x0) || (urshift(wordrg2, con(0x7)) & con(0x100)) != con(0x0);
                if (eaxptim->v.b.b_09 != con(0x1))
                {
                  if (eaxptim->v.b.b_09 == con(0x0) && ((recoptrrg5->u4.b.b0 & con(0x4)) == con(0x0) || (recoptrrg5->u2.w & con(0xffffff80)) != con(0x0)))
                  {
                    x16 wordrg48 = ((urshift(recoptrrg5->u2.w, con(0x7)) - con(0x1)) & con(0x1ff)) << con(0x7);
                    recoptrrg5->u2.w &= con(0x7f);
                    recoptrrg5->u2.w |= wordrg48;
                  }
                }
                else
                  recoptrrg5->u2.w = (recoptrrg5->u2.w & con(0x7f)) | (((urshift(recoptrrg5->u2.w, con(0x7)) + con(0x1)) & con(0x1ff)) << con(0x7));
                bool boolrg1;
                if ((recoptrrg5->u2.w & con(0xffffff80)) == con(0x0) || (urshift(recoptrrg5->u2.w, con(0x7)) & con(0x100)) != con(0x0))
                  boolrg1 = true;
                else
                  boolrg1 = false;
                if (boolrg1 != boolrg2)
                {
                  if ((recoptrrg5->u4.w & con(0x18)) != con(0x18))
                  {
                    if (boolrg1)
                      SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe)));
                  }
                  else
                    SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), (boolrg1 ? 1 : 0) == ulrshift(recoptrrg5->u4.w, con(0xa), con(0xf)) ? 1 : 0);
                }
              }
              break;

              case 23:
              case 44:
              case 45:
              case 46:
              case 47:
              case 48:
              {
                x16 wordrg16 = 4 * (SKW_3a15_1da8(unsignedword(eaxptim->v.b.b_09), ulrshift(recoptrrg5->u4.w, con(0xd), con(0xf))) & con(0x1));
                recoptrrg5->u4.b.b0 &= con(0xfffffffb);
                recoptrrg5->u4.w |= wordrg16;
                if (((recoptrrg5->u4.b.b0 & con(0x1)) == con(0x0)) && ((recoptrrg5->u4.b.b0 & con(0x4)) != con(0x0)))
                  SKW_ACTIVATE_TICK_GENERATOR(recoptrrg5, vw_24);
              }
              break;

              case 25:
              case 62:
                recoptrrg4 = recoptrrg5;
                SKW_ACTIVATE_RELAY1(eaxptim, vw_20 == con(0x45), recoptrrg4);
              break;

              case 31:
              {
                x16 wordrg17 = 4 * (SKW_3a15_1da8(unsignedword(eaxptim->v.b.b_09), ulrshift(recoptrrg4->u4.w, con(0xd), con(0xf))) & con(0x1));
                recoptrrg5->u4.b.b0 &= con(0xfffffffb);
                recoptrrg5->u4.w |= wordrg17;
              }
              break;

              case 37:
                SKW_ACTIVATE_CONTINUOUS_ORNATE_ANIMATOR(vw_24, recoptrrg4, true, eaxptim);
              break;

              case 38:
                if ((recoptrrg4->u2.w & con(0xffffff80)) == con(0x0) || UI16CAST(recoptrrg4->u2.w & con(0xffffff80)) > UI16CAST(con(0xffffc800)))
                {
                  ui16 uwordrg13 = recoptrrg5->u2.w & con(0xffffff80);
                  if (uwordrg13 > con(0xc800) && uwordrg13 < con(0xfa00))
                  {
                    ui16 uwordrg410 = urshift(recoptrrg5->u2.w, con(0x7)) - con(0x190);
                    bool boolrg13 = (UI16CAST(SKW_RAND16(con(0x64))) < uwordrg410);
                    if ((recoptrrg5->u4.w & con(0x18)) != con(0x18))
                    {
                      if (boolrg13)
                        SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), unsignedword(eaxptim->v.b.b_09));
                    }
                    else
                      SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), !boolrg13 ? 1 : 0);
                  }
                }
                else
                {
                  x16 wordrg19 = ((urshift(recoptrrg4->u2.w, con(0x7)) - con(0x1)) & con(0x1ff)) << con(0x7);
                  recoptrrg4->u2.w &= con(0x7f);
                  recoptrrg5->u2.w |= wordrg19;
                  SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), unsignedword(eaxptim->v.b.b_09));
                }
              break;

              case 39:
                if (eaxptim->v.b.b_09 == con(0x0))
                {
                  vw_0c = ulrshift(recoptrrg4->u6.w, con(0x5), con(0xb));
                  vw_28 = urshift(recoptrrg4->u6.w, con(0xb));
                  vw_18 = con(0x7);
                  x16 wordrg24;
                  if ((recoptrrg4->u4.b.b0 & con(0x4)) == con(0x0))
                    wordrg24 = ulrshift(recoptrrg4->u4.w, con(0xb), con(0xe));
                  else
                    wordrg24 = SKW_RAND02();
                  vw_10 = urshift(recoptrrg5->u2.w, con(0x7));
                  x16 wordrg18 = SKW_ALLOC_NEW_CREATURE(vw_10, wordrg24, vw_0c, vw_18, vw_28);
                  if ((recoptrrg5->u4.b.b0 & con(0x20)) != con(0x0) && wordrg18 != con(0xffffffff))
                    SKW_GET_ADDRESS_OF_RECORD(wordrg18)->w8 = ulrshift(recoptrrg5->u4.w, con(0x5), con(0xc));
                  if ((recoptrrg5->u4.b.b0 & con(0x40)) != con(0x0))
                    SKW_QUEUE_NOISE_GEN1(con(0x3), con(0x89), con(0x61), con(0x0), con(0x80), vw_0c, vw_28, con(0x1));
                }
              break;

              case 42:
                if ((recoptrrg4->u4.b.b0 & con(0x1)) == con(0x0))
                {
                  x32 longrg2 = unsignedlong(wordrg3) + ddata.longmallocx;
                  longrg2 |= signedlong(ddata.v1d3248) << con(0x18);
                  vtim_00.un.l_00 = longrg2;
                  vtim_00.b_04 = con(0x5b);
                  vtim_00.b_05 = con(0x0);
                  vtim_00.u.w_06 = vw_24;
                  SKW_QUEUE_TIMER(&vtim_00);
                  recoptrrg4->u4.b.b0 |= con(0x1);
                  if (((recoptrrg4->u4.b.b0 & con(0x20)) == con(0x0) && eaxptim->v.b.b_09 == con(0x0)) || ((recoptrrg5->u4.b.b0 & con(0x20)) != con(0x0) && eaxptim->v.b.b_09 == con(0x1)))
                  {
                    x16 wordrg17;
                    if ((recoptrrg5->u4.b.b0 & con(0x4)) == con(0x0))
                      wordrg17 = unsignedword(eaxptim->v.b.b_09);
                    else
                      wordrg17 = ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe));
                    SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), wordrg17);
                  }
                }
              break;

              case 43:
                SKW_ACTIVATE_ORNATE_ANIMATOR(eaxptim, wordrg2, con(0x1), recoptrrg4);
              break;

              case 52:
                SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, wordrg2, false, recoptrrg4, false, NULL, false, false);
              break;

              case 53:
                if (((recoptrrg4->u4.b.b0 & con(0x20)) == con(0x0) && eaxptim->v.b.b_09 == con(0x0)) || ((recoptrrg5->u4.b.b0 & con(0x20)) != con(0x0) && eaxptim->v.b.b_09 == con(0x1)))
                {
                  x16 wordrg31 = SKW_ALLOC_NEW_RECORD(SKW_GET_ITEMDB_OF_ITEMSPEC_ACTUATOR(urshift(recoptrrg5->u2.w, con(0x7))));
                  if (wordrg31 != con(0xffffffff))
                  {
                    SKW_SET_ITEMTYPE(wordrg31, SKW_GET_ITEMTYPE_OF_ITEMSPEC_ACTUATOR(urshift(recoptrrg5->u2.w, con(0x7))) & con(0xff));
                    if ((recoptrrg5->u4.w & con(0x18)) == con(0x18))
                      SKW_SET_ITEM_IMPORTANCE(wordrg31, con(0x1));
                    recoptrrg4 = recoptrrg5;
                    SKW_MOVE_ITEM_TO(wordrg31, con(0xffffffff), con(0xffffffff), recoptrrg4, ulrshift(recoptrrg5->u6.w, con(0x5), con(0xb)), urshift(recoptrrg5->u6.w, con(0xb)), ulrshift(recoptrrg5->u6.w, con(0xa), con(0xe)), false, ulrshift(recoptrrg5->u4.w, con(0xd), con(0xf)));
                  }
                }
              break;

              case 54:
                SKW_ACTIVATE_RELAY2(eaxptim, wordrg3, recoptrrg4);
              break;

              case 57:
                SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, wordrg2, false, recoptrrg4, true, NULL, false, false);
              break;

              case 58:
                if (eaxptim->v.b.b_09 != con(0x0))
                  wordrg3--;
                else
                  wordrg3++;
                recoptrrg5->u2.w = (recoptrrg5->u2.w & con(0x7f)) | (((wordrg3 % SKW_GET_ORNATE_ANIM_LEN(recoptrrg5, true)) & con(0x1ff)) << con(0x7));
              break;

              case 59:
                SKW_3a15_0d5c(eaxptim, recoptrrg4);
              break;

              case 60:
                SKW_ACTIVATE_INVERSE_FLAG(eaxptim, recoptrrg4);
              break;

              case 61:
                SKW_ACTIVATE_TEST_FLAG(eaxptim, recoptrrg4);
              break;

              case 63:
              {
                x16 wordrg413 = urshift(recoptrrg4->u6.w, con(0xb));
                recoptrrg1 = SKW_GET_ADDRESS_OF_TILE_RECORD(ulrshift(recoptrrg4->u6.w, con(0x5), con(0xb)), wordrg413);
                if (eaxptim->v.b.b_09 < con(0x1))
                {
                  if (eaxptim->v.b.b_09 == con(0x0))
                    recoptrrg1->u2.b.b1 |= con(0x20);
                }
                else if (eaxptim->v.b.b_09 <= con(0x1))
                  recoptrrg1->u2.b.b1 &= con(0xffffffdf);
                else
                {
                  if (eaxptim->v.b.b_09 == con(0x2))
                  {
                    x16 wordrg411 = ((urshift(4 * recoptrrg1->u2.w, con(0xf)) ^ con(0x1)) & con(0x1)) << con(0xd);
                    recoptrrg1->u2.b.b1 &= con(0xffffffdf);
                    recoptrrg1->u2.w |= wordrg411;
                  }
                }
              }
              break;

              case 64:
                SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, con(0xffff), false, recoptrrg4, false, NULL, true, false);
              break;

              case 65:
                SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, wordrg2, false, recoptrrg4, false, NULL, false, true);
              break;

              case 66:
                SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, con(0xffff), false, recoptrrg4, false, NULL, true, true);
              break;

              default: throw(THROW_DMABORT);
            }
          }
        }
      }
      continue;
    }
    recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(vw_24);
    if ((recoptrrg5->u2.b.b0 & con(0x6)) != con(0x0) && (recoptrrg5->u2.w & con(0x6)) != con(0x2))
      continue;
    x16 wordrg13 = urshift(recoptrrg5->u2.w, con(0x3));
    ui16 uwordrg41 = urshift(wordrg13, con(0x8)) & con(0x1f);
    vw_20 = uwordrg41;
    if (uwordrg41 < con(0x7))
    {
      if (uwordrg41 != con(0x5))
        continue;
    }
    else if (uwordrg41 <= con(0x7))
      ;
    else
    {
      if (uwordrg41 == con(0x17))
        if (eaxptim->v.b.b_09 == con(0x0))
          SKW_QUEUE_NOISE_GEN1(con(0x3), CUTX8(wordrg13), con(0x73), CUTX8(ddata.v1d3248) + con(0x1), con(0xc8), unsignedword(eaxptim->u.b.b_06), unsignedword(eaxptim->u.b.b_07), con(0x1));
      continue;
    }
    ubwptrrg1 = UPCAST(u_bbw, &recoptrrg5->u2);
    if (eaxptim->v.b.b_09 != con(0x2))
      flag = eaxptim->v.b.b_09 == con(0x0);
    else
      flag = (recoptrrg5->u2.b.b0 & con(0x1)) == con(0x0);
    ubwptrrg1->b.b0 &= con(0xfffffffe);
    ubwptrrg1->w |= flag ? 1 : 0;
    if (vw_20 == con(0x7))
    {
      x16 wordrg42 = (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x11), CUTX8(urshift(recoptrrg5->u2.w, con(0x3)))) == con(0x0)) ? con(0x1) : con(0xffffffff);
      vw_0c = unsignedword(eaxptim->u.b.b_06);
      vw_28 = unsignedword(eaxptim->u.b.b_07);
      x16 wordrg12 = SKW_LOCATE_OTHER_LEVEL(ddata.v1e0266, &vw_0c, &vw_28, wordrg42, NULL);
      if (wordrg12 >= con(0x0))
      {
        vw_14 = ddata.v1d3248;
        SKW_CHANGE_CURRENT_MAP_TO(wordrg12);
        x16 wordrg26 = SKW_GET_TILE_RECORD_LINK(vw_0c, vw_28);
        while (wordrg26 != con(0xfffffffe))
        {
          if (urshift(wordrg26 & con(0x3c), con(0xa)) == con(0x2))
          {
            if (urshift(wordrg26, con(0xe)) == unsignedword(eaxptim->v.b.b_08))
            {
              recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg26);
              if ((recoptrrg1->u2.w & con(0x6)) == con(0x2))
              {
                x16 wordrg43 = recoptrrg1->u2.w;
                vw_10 = urshift(wordrg43, con(0x3));
                if ((urshift(vw_10, con(0x8)) & con(0x1f)) == con(0x7))
                {
                  x16 wordrg32 = recoptrrg5->u2.w & con(0x1);
                  wordrg43 &= con(0xfffffffe);
                  recoptrrg1->u2.w = wordrg43;
                  recoptrrg1->u2.w |= wordrg32;
                }
              }
            }
          }
          wordrg26 = SKW_GET_NEXT_RECORD_LINK(wordrg26);
        }
        SKW_CHANGE_CURRENT_MAP_TO(vw_14);
      }
    }
  }
}

void SKW_ACTUATE_FLOOR_MECHA(c_tim* eaxptim)
{
  c_record* recoptrrg4;
  c_record* recoptrrg3;
  x16* wptrrg2;
  t_text t_00[0xc8];
  c_tim vtim_c8;
  x16 vw_e4;
  x8 vb_e8;

  x16 vw_dc = unsignedword(eaxptim->u.b.b_07);
  vw_e4 = unsignedword(eaxptim->u.b.b_06);
  x16 wordrg6;
  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(vw_e4, vw_dc);
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg6))
  {
    wordrg6 = wordrg1;
    if (wordrg6 == con(0xfffffffe))
      return;
    x16 wordrg19 = urshift(wordrg6 & con(0x3c00), con(0xa));
    if (wordrg19 > con(0x3))
      return;
    if (wordrg19 != con(0x2))
    {
      if (wordrg19 == con(0x3))
      {
        recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
        recoptrrg3 = recoptrrg4;
        x16 wordrg100 = recoptrrg4->u2.w & con(0x7f);
        if (wordrg100 < con(0x3b))
        {
          if (wordrg100 < con(0x28))
          {
            if (wordrg100 < con(0x20))
            {
              if (wordrg100 == con(0xb))
              {
                x16 wordrg103 = urshift(recoptrrg3->u2.w, con(0x7));
                x16 wordrg414 = urshift(wordrg103, con(0x4)) & con(0x1f);
                SKW_ACTIVATE_CREATURE_KILLER(wordrg103 & con(0xf), vw_e4, vw_dc, wordrg414, ulrshift(recoptrrg3->u6.w, con(0x5), con(0xb)), urshift(recoptrrg3->u6.w, con(0xb)), wordrg100, unsignedword(eaxptim->v.b.b_09));
              }
            }
            else if (wordrg100 <= con(0x20))
            {
              recoptrrg4 = recoptrrg3;
              SKW_ACTIVATE_RELAY1(eaxptim, wordrg100 == con(0x45), recoptrrg3);
            }
            else if (wordrg100 == con(0x27))
            {
              recoptrrg3->u4.b.b0 &= con(0xfffffffe);
              recoptrrg3->u4.w |= SKW_3a15_1da8(unsignedword(eaxptim->v.b.b_09), recoptrrg4->u4.w & con(0x1)) & con(0x1);
            }
          }
          else if (wordrg100 <= con(0x28))
          {
            x16 wordrg102 = urshift(recoptrrg3->u2.w, con(0x7));
            x16 wordrg413 = urshift(wordrg102, con(0x4)) & con(0x1f);
            SKW_ACTIVATE_CREATURE_KILLER(wordrg102 & con(0xf), vw_e4, vw_dc, wordrg413, ulrshift(recoptrrg3->u6.w, con(0x5), con(0xb)), urshift(recoptrrg3->u6.w, con(0xb)), wordrg100, unsignedword(eaxptim->v.b.b_09));
          }
          else if (wordrg100 < con(0x2e))
          {
            if (wordrg100 == con(0x2c))
              SKW_ACTIVATE_CONTINUOUS_ORNATE_ANIMATOR(wordrg6, recoptrrg3, false, eaxptim);
          }
          else if (wordrg100 <= con(0x2e))
          {
            x16 wordrg412;
            x16 wordrg101;
            if ((recoptrrg4->u4.b.b0 & con(0x4)) == con(0x0))
            {
              wordrg412 = vw_e4;
              wordrg101 = vw_dc;
            }
            else
            {
              wordrg412 = ulrshift(recoptrrg3->u6.w, con(0x5), con(0xb));
              wordrg101 = urshift(recoptrrg3->u6.w, con(0xb));
            }
            x16 vw_d4;
            if ((recoptrrg3->u4.b.b0 & con(0x20)) == con(0x0))
              vw_d4 = (ulrshift(recoptrrg3->u4.w, con(0xb), con(0xe)) + ddata.v1e0258) & con(0x3);
            else
              vw_d4 = ulrshift(recoptrrg3->u4.w, con(0xb), con(0xe));
            R_3BF83(wordrg412, ddata.v1d3248, vw_d4, wordrg101);
          }
          else if (wordrg100 < con(0x32))
            ;
          else if (wordrg100 <= con(0x32))
            SKW_ACTIVATE_ORNATE_ANIMATOR(eaxptim, wordrg6, con(0x0), recoptrrg4);
          else if (wordrg100 == con(0x3a))
            SKW_ANIMATE_CREATURE(vw_e4, eaxptim->v.b.b_09 == con(0x0), vw_dc);
        }
        else if (wordrg100 <= con(0x3b))
          SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, wordrg6, true, recoptrrg4, false, NULL, false, false);
        else if (wordrg100 < con(0x44))
        {
          if (wordrg100 < con(0x40))
          {
            if (wordrg100 == con(0x3d))
              SKW_ACTIVATE_RELAY2(eaxptim, urshift(recoptrrg4->u2.w, con(0x7)), recoptrrg4);
          }
          else if (wordrg100 <= con(0x40))
            SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, wordrg6, true, recoptrrg4, true, NULL, false, false);
          else if (wordrg100 < con(0x42))
            ;
          else if (wordrg100 <= con(0x42))
            SKW_3a15_0d5c(eaxptim, recoptrrg4);
          else
            SKW_ACTIVATE_INVERSE_FLAG(eaxptim, recoptrrg4);
        }
        else if (wordrg100 <= con(0x44))
          SKW_ACTIVATE_TEST_FLAG(eaxptim, recoptrrg4);
        else if (wordrg100 < con(0x47))
        {
          if (wordrg100 == con(0x45))
          {
            recoptrrg4 = recoptrrg3;
            SKW_ACTIVATE_RELAY1(eaxptim, wordrg100 == con(0x45), recoptrrg3);
          }
        }
        else if (wordrg100 <= con(0x47))
          SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, con(0xffff), false, recoptrrg4, false, NULL, true, false);
        else if (wordrg100 <= con(0x48))
          SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, wordrg6, false, recoptrrg4, false, NULL, false, true);
        else if (wordrg100 == con(0x49))
          SKW_ACTIVATE_ITEM_TELEPORT(eaxptim, con(0xffff), false, recoptrrg4, false, NULL, true, true);
      }
      continue;
    }
    recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
    if (((recoptrrg4->u2.b.b0 & con(0x6)) != con(0x0)) && (recoptrrg4->u2.w & con(0x6)) != con(0x2))
      continue;
    x16 wordrg21 = recoptrrg4->u2.w;
    x16 wordrg12 = urshift(wordrg21, con(0x3));
    x16 wordrg7 = (wordrg12 >> con(0x9)) & con(0xf);
    x16 wordrg11 = urshift(wordrg12, con(0x8)) & con(0x1f);
    if (wordrg11 != con(0x5))
    {
      wordrg21 &= con(0x6);
      if (wordrg21 != con(0x4) || wordrg7 != con(0x2))
      {
        if ((wordrg11 != con(0x13) && wordrg11 != con(0x16)) || eaxptim->v.b.b_09 != con(0x0))
        {
          if (wordrg11 == con(0x17))
            if (eaxptim->v.b.b_09 == con(0x0))
              SKW_QUEUE_NOISE_GEN1(con(0x3), CUTX8(urshift(recoptrrg4->u2.w, con(0x3))), con(0x73), CUTX8(ddata.v1d3248) + con(0x1), con(0xc8), unsignedword(eaxptim->u.b.b_06), unsignedword(eaxptim->u.b.b_07), con(0x1));
        }
        else
        {
          x32 longrg21;
          if (wordrg11 != con(0x13))
            longrg21 = con(0x2000);
          else
            longrg21 = con(0x200);
          if ((recoptrrg4->u2.b.b0 & con(0x1)) != con(0x0))
          {
            if (wordrg11 != con(0x13))
              longrg21 *= con(0x2);
            else
              longrg21 *= con(0x4);
          }
          longrg21 += (2 * longrg21 - con(0x1)) & (SKW_RAND() & con(0xffff));
          longrg21 += ddata.longmallocx;
          longrg21 |= signedlong(ddata.v1d3248) << con(0x18);
          vtim_c8.un.l_00 = longrg21;
          vtim_c8.b_05 = con(0x0);
          vtim_c8.u.b.b_06 = eaxptim->u.b.b_06;
          vtim_c8.u.b.b_07 = eaxptim->u.b.b_07;
          vtim_c8.v.b.b_08 = con(0x0);
          vtim_c8.v.b.b_09 = CUTX8(urshift(recoptrrg4->u2.w, con(0x3)));
          vtim_c8.b_04 = con(0x5e);
          SKW_QUEUE_TIMER(&vtim_c8);
        }
        continue;
      }
    }
    x16 wordrg17 = recoptrrg4->u2.w & con(0x1);
    wptrrg2 = &recoptrrg4->u2.w;
    if (eaxptim->v.b.b_09 != con(0x2))
      vb_e8 = (eaxptim->v.b.b_09 == con(0x0)) ? 1 : 0;
    else
      vb_e8 = (wordrg17 == con(0x0)) ? 1 : 0;
    *wptrrg2 &= con(0xfffffffe); // extended to word
    *wptrrg2 |= unsignedword(vb_e8 & con(0x1));
    if (((recoptrrg4->u2.b.b0 & con(0x6)) == con(0x0) && wordrg17 == con(0x0) && (recoptrrg4->u2.b.b0 & con(0x1)) != con(0x0) && ddata.v1d3248 == ddata.v1e0282) && vw_e4 == ddata.v1e0280)
      if (vw_dc == ddata.v1e027e)
      {
        SKW_QUERY_MESSAGE_TEXT(t_00, con(0x1), wordrg6);
        SKW_DISPLAY_HINT_TEXT(con(0xf), t_00);
      }
  }
}

void SKW_ACTIVATE_RELAY2(c_tim* eaxptim, x16 ebxw, c_record* edxprec)
{
  x16 vw_00;

  x16 wordrg4;
  if ((edxprec->u4.w & con(0x18)) != con(0x18))
  {
    if ((((edxprec->u4.b.b0 & con(0x20)) != con(0x0)) || (eaxptim->v.b.b_09 != con(0x0))) && (((edxprec->u4.b.b0 & con(0x20)) == con(0x0)) || (eaxptim->v.b.b_09 != con(0x1))))
      return;
    wordrg4 = ulrshift(edxprec->u4.w, con(0xb), con(0xe));
  }
  else if ((edxprec->u4.b.b0 & con(0x20)) == con(0x0))
    wordrg4 = unsignedword(eaxptim->v.b.b_09);
  else
  {
    SKW_INVOKE_ACTUATOR(edxprec, con(0x0), unsignedword(eaxptim->v.b.b_09));
    if (ebxw == con(0x0))
      return;
    ui8 ubyterg1 = eaxptim->v.b.b_09;
    if (ubyterg1 < con(0x1))
    {
      if (ubyterg1 == con(0x0))
        vw_00 = con(0x1);
    }
    else if (ubyterg1 <= con(0x1))
      vw_00 = con(0x0);
    else if (ubyterg1 == con(0x2))
      vw_00 = con(0x2);
    wordrg4 = vw_00;
  }
  SKW_INVOKE_ACTUATOR(edxprec, ebxw, wordrg4);
}

x16 SKW_GET_ORNATE_ANIM_LEN(c_record* eaxprec, bool edxbool)
{
  x8 byterg5;
  t_text* tptrrg1;
  t_text t_00[0x80];

  x8 byterg4;
  x8 byterg1;
  if (!edxbool)
  {
    byterg4 = con(0xa);
    byterg1 = SKW_GET_FLOOR_DECORATION_OF_ACTUATOR(eaxprec);
  }
  else
  {
    byterg4 = con(0x9);
    byterg1 = SKW_GET_WALL_DECORATION_OF_ACTUATOR(eaxprec);
  }
  if (byterg1 == con(0xffffffff))
    return con(0x1);
  x8 byterg6 = byterg1;
  byterg5 = byterg4;
  x16 wordrg1 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(byterg5, con(0xb), con(0xd), byterg1);
  if (wordrg1 != con(0x0))
  {
    wordrg1 &= con(0x7fff);
    return wordrg1;
  }
  tptrrg1 = SKW_QUERY_GDAT_TEXT(byterg5, con(0xd), t_00, byterg6);
  if (*tptrrg1 == NULLBYTE)
    return con(0x1);
  x16 wordrg11 = SKW_SK_STRLEN(tptrrg1);
  if (wordrg11 != con(0x0))
    return wordrg11;
  return con(0x1);
}

// was SKW_3a15_0447
x16 SKW_GET_TIMER_NEW_INDEX(x16 eaxw)
{
  x16* wptrrg1;

  wptrrg1 = ddata.v1e1424;
  x16 wordrg4 = con(0x0);
  while (wordrg4 < ddata.savegamew9)
  {
    if (eaxw == *wptrrg1++)
      break;
    wordrg4++;
  }
  if (wordrg4 >= ddata.savegamew9)
    SKW_RAISE_SYSERR(con(0x46));
  return wordrg4;
}

void SKW_3a15_020f(void)
{
  c_tim* timptrrg2;

  x16 wordrg41 = con(0x0);
  while (wordrg41 < con(0x4))
  {
    ddata.hero[wordrg41].w2e = con(0xffffffff);
    wordrg41++;
  }
  x16 wordrg5 = ddata.savegamew5;
  if (wordrg5 == con(0x0))
    return;
  x16 wordrg42 = con(0x0);
  timptrrg2 = ddata.savegametimarrp;
  for(;;)
  {
    if (wordrg42 >= wordrg5)
      return;
    ui8 ubyterg1 = timptrrg2->b_04;
    if (ubyterg1 < UI8CAST(con(0xc)))
      ;
    else if (ubyterg1 <= con(0xc))
      ddata.hero[timptrrg2->b_05].w2e = wordrg42;
    else if (ubyterg1 >= con(0x1d) && ubyterg1 <= con(0x1e))
      SKW_GET_ADDRESS_OF_RECORD(timptrrg2->u.w_06)->u6.w = wordrg42;
    wordrg42++;
    timptrrg2++;
  }
}

void SKW_3a15_0002(void)
{
  c_tim* timptrrg1;

  if (ddata.savegametimarrp == NULL)
  {
    ddata.savegametimarrp = UPCAST(c_tim, DM2_ALLOC_FREEPOOL_MEMORY(12 * ddata.v1e142c));
    ddata.v1e1424 = UPCAST(x16, DM2_ALLOC_FREEPOOL_MEMORY(2 * signedlong(ddata.v1e142c)));
  }
  if (ddata.savegamew8 != con(0x0))
  {
    x16 wordrg3;
    timptrrg1 = ddata.savegametimarrp;
    x16 wordrg4 = con(0x0);
    while (wordrg3 = wordrg4, wordrg3 < ddata.v1e142c)
    {
      timptrrg1->b_04 = con(0x0);
      wordrg4++;
      timptrrg1->un.w_00 = wordrg4;
      timptrrg1++;
    }
    ddata.savegamew9 = con(0x0);
    c_tim* timptrrg2 = timptrrg1 - 1; // for better reading of the next line only
    timptrrg2->un.w_00 = con(0xffffffff);
    wordrg3 ^= wordrg4;
    ddata.savegamew5 = wordrg3;
    ddata.v1e142a = con(0x0);
  }
  ddata.v1e1428 = con(0xffffffff);
}

// was SKW_38c8_03ad
void SKW__INIT_GAME_38c8_03ad(void)
{
  ddata.v1e0228 = false;
  ddata.v1e0220 = false;
  ddata.v1e0224 = false;
  ddata.v1e03a8 = false;
  ddata.v1e0238 = false;
  ddata.v1e13f0 = false;
  DM2_ZERO_MEMORY(&ddata.v1e0ffa[2], con(0x10)); // EVIL offset shifted, was 0x1e0ffc
  DM2_ZERO_MEMORY(DOWNCAST(s_size8, ddata.v1e0adc), con(0x40));
  ddata.v1e0b74 = con(0x0);
  ddata.v1e00b8 = con(0x0);
  SKW_1031_0541(con(0x5));
  SKW_LOAD_NEWMAP(ddata.v1e0270, ddata.v1e0266, false, ddata.v1e0272);
  SKW_RESET_CAII();
  dm2_dballochandler.v1e0200 = false;
  if (ddata.savegamew8 != con(0x0) && !ddata.boolsavegamel2)
  {
    SKW_WAIT_SCREEN_REFRESH();
    ddata.dialog2 = false;
  }
  else
  {
    SKW_FIRE_FILL_SCREEN_RECT(con(0x2), con(0x0));
    SKW_0aaf_0067(SKW_0aaf_02f8(con(0x6), con(0x0)));
    x16 wordrg4 = ddata.gdatfileopencounter;
    if (wordrg4 != con(0x0))
    {
      ddata.gdatfileopencounter = con(0x1);
      DM2_GRAPHICS_DATA_CLOSE();
    }
    SKW_2066_03e0(con(0x0));
    if (wordrg4 != con(0x0))
    {
      DM2_GRAPHICS_DATA_OPEN();
      ddata.gdatfileopencounter = wordrg4;
    }
    SKW_WAIT_SCREEN_REFRESH();
  }
  SKW_FIRE_FILL_SCREEN_RECT(con(0x2), con(0x0));
  SKW_29ee_000f();
  SKW_2f3f_0789();
  ddata.v1e13f4 = true;
  ddata.v1e0248 = true;
  SKW_CHECK_RECOMPUTE_LIGHT();
}

// was SKW_32cb_5d0d
void SKW_DISPLAY_VIEWPORT(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 vw_04 = ebxw;
  ddata.v1e040a = edxw;
  ddata.v1e040c = ebxw;
  ddata.v1e0406 = ddata.v1e0266;
  ddata.v1e0402 = eaxw;
  SKW_IBMIO_USER_INPUT_CHECK();
  ddata.v1e12d2 = ddata.v1e0286 * con(0xa);
  ddata.v1e12c8 = eaxw;
  ddata.v1e12cc = edxw;
  ddata.v1e12ca = ebxw;
  ddata.v1e1044 = UPCAST(s_hex12, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x19e)));
  ddata.v1e1048 = UPCAST(s_hex11bytes, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x166), true));
  ddata.v1e1050 = UPCAST(s_hex11bytes, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x166)));
  SKW_FILL_STR(DOWNCAST(s_hex11bytes, ddata.v1e1050), con(0xff), con(0x1), con(0x166));
  ddata.v1e1038 = UPCAST(x32, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x5c), true));
  ddata.v1e104c = UPCAST(x32, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x5c), true));
  ddata.v1e01d8 = true;
  SKW_INIT_BACKBUFF();
  ddata.v1e0404 = con(0x9);
  for (x16 wordrg5 = con(0x0); wordrg5 < con(0x9); wordrg5++)
  {
    ddata.v1e02f0[wordrg5].w8 = con(0xffff);
    ddata.v1e02f0[wordrg5].bb = con(0x0);
  }
  SKW_IBMIO_USER_INPUT_CHECK();
  if ((!ddata.v1e03a8) && (ddata.v1d4000 == con(0xffffffff)))
    ddata.v1e12ce = con(0x0);
  else
    ddata.v1e12ce = con(0x1);
  SKW_CHANCE_TABLE_OPERATION();
  for (x16 wordrg51 = con(0x16); wordrg51 >= con(0x0); wordrg51--)
    SKW_32cb_4185(edxw, wordrg51, ddata.v1e12c8, vw_04);
  x16 wordrg52 = con(0x0);
  x16 wordrg2 = con(0x0);
  x8 byterg4 = con(0xffffffff);
  if ((ddata.v1e1044[con(0x7)].s_02.warr_00[con(0x0)] == con(0x0)) && (ddata.v1e1044[con(0x6)].s_02.warr_00[con(0x0)] == con(0x0))) // offset was 0x80
    if (ddata.v1e1044[con(0x8)].s_02.warr_00[con(0x0)] == con(0x0)) // 0x92
      byterg4 = con(0x71);
  if ((ddata.v1e1044[con(0x4)].s_02.warr_00[con(0x0)] == con(0x0)) && (ddata.v1e1044[con(0x3)].s_02.warr_00[con(0x0)] == con(0x0))) // 0x4a
    if (ddata.v1e1044[con(0x5)].s_02.warr_00[con(0x0)] == con(0x0)) // 0x5c
      byterg4 = con(0x70);
  if (byterg4 != con(0xffffffff))
  {
    x16 wordrg11 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), byterg4, ddata.v1d6c02);
    wordrg52 = urshift(wordrg11, con(0x8));
    wordrg2 = unsignedword(CUTX8(wordrg11));
  }
  SKW_TRIM_BLIT_RECT(con(0x0), con(0x0), con(0x0), wordrg2);
  SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), con(0x1), con(0x2bc), ddata.v1d6c02, con(0xffff), (SKW_SET_GRAPHICS_FLIP_FROM_POSITION(con(0x20), edxw, vw_04, eaxw) == con(0x0)) ? con(0x0) : con(0x1));
  ddata.v1e01d0 = con(0x0);
  SKW_TRIM_BLIT_RECT(con(0x0), wordrg52, con(0x0), con(0x0));
  SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), con(0x0), con(0x2bd), ddata.v1d6c02, con(0xffff), (SKW_SET_GRAPHICS_FLIP_FROM_POSITION(con(0x1), edxw, vw_04, eaxw) == con(0x0)) ? con(0x0) : con(0x1));
  ddata.v1e01d0 = con(0x0);
  ddata.v1e12d0 = SKW_SET_GRAPHICS_FLIP_FROM_POSITION(con(0x0), edxw, vw_04, eaxw);
  SKW_IBMIO_USER_INPUT_CHECK();
  SKW_ENVIRONMENT_DISPLAY_ELEMENTS(eaxw, vw_04, edxw);
  SKW_32cb_5c67();
  SKW_32cb_5a8f();
  SKW_DRAW_DUNGEON_TILES();
  SKW_IBMIO_USER_INPUT_CHECK();
  SKW_DRAW_PLAYER_TILE();
  SKW_IBMIO_USER_INPUT_CHECK();
  DM2_DEALLOC_LOBIGPOOL(con(0x522));
}

// was SKW_32cb_59ca
x16 SKW_SET_GRAPHICS_FLIP_FROM_POSITION(ui16 eaxuw, x16 ebxw, x16 ecxw, x16 edxw)
{
  s_size10* sptrrg1;

  sptrrg1 = ddata.v1e03c0;
  x16 wordrg2 = unsignedword(sptrrg1->b4[con(0x3)]) + edxw + ecxw + ebxw + unsignedword(sptrrg1->b4[con(0x2)]);
  x16 wordrg1 = ((sptrrg1->w8 & con(0x3f)) + wordrg2) & con(0x1);
  if (eaxuw < con(0x1))
    return wordrg1;
  ui32 ulongrg2 = ddata.longmallocx & con(0x7);
  x16 wordrg4 = ddata.v1e0258 & con(0x1);
  if (eaxuw <= con(0x1))
  {
    if ((ddata.v1e12d6 & con(0x8)) == con(0x0))
    {
      wordrg1 = ddata.v1e12d6 & con(0x40);
      if (wordrg1 == con(0x0))
        return wordrg1;
      return wordrg4;
    }
    if ((ddata.v1e12d6 & con(0x10)) == con(0x0))
      return wordrg1;
    return (ulongrg2 > con(0x3)) ? 1 : 0;
  }
  if (eaxuw != con(0x20))
    return wordrg1;
  if ((ddata.v1e12d6 & con(0x2)) == con(0x0))
  {
    wordrg1 = ddata.v1e12d6 & con(0x20);
    if (wordrg1 == con(0x0))
      return wordrg1;
    return wordrg4;
  }
  bool boolrg1;
  if ((ddata.v1e12d6 & con(0x4)) == con(0x0))
    boolrg1 = wordrg1 == con(0x0);
  else
    boolrg1 = ulongrg2 <= con(0x3);
  return boolrg1 ? 1 : 0;
}

void SKW_SET_ITEM_IMPORTANCE(x16 eaxw, x16 edxw)
{
  c_record* recoptrrg1;

  recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  ui16 uwordrg3 = urshift(eaxw & con(0x3c00), con(0xa)) - con(0x4);
  if (uwordrg3 > con(0x6))
    return;
  x16 wordrg4 = edxw & con(0x1);
  x16 wordrg2 = wordrg4 << con(0x7);
  switch (uwordrg3)
  {
    case 0:
      recoptrrg1->ue.b.b1 &= con(0xfffffffb);
      wordrg4 <<= con(0xa);
      recoptrrg1->ue.w |= wordrg4;
    return;

    case 1:
    case 2:
    case 6:
      recoptrrg1->u2.b.b0 &= con(0x7f);
      recoptrrg1->u2.w |= wordrg2;
    return;

    case 3:
    case 5:
    return;

    case 4:
      recoptrrg1->u2.b.b1 &= con(0x7f);
      wordrg4 <<= con(0xf);
      recoptrrg1->u2.w |= wordrg4;
    return;

    default: throw(THROW_DMABORT);
  }
}

x8 SKW_QUERY_CLS2_FROM_RECORD(x16 eaxw)
{
  c_record* recoptrrg1;

  x16 wordrg41 = eaxw;
  for(;;)
  {
    if (wordrg41 == con(0xffffffff))
      return con(0xffffffff);
    if (UI16CAST(wordrg41) >= UI16CAST(con(0xffffff80)))
      return CUTX8(wordrg41) - con(0xffffff80);
    x16 wordrg2 = wordrg41;
    recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg2);
    ui16 uwordrg42 = urshift(wordrg41 & con(0x3c00), con(0xa));
    if (uwordrg42 > con(0xf))
      return con(0xffffffff);
    switch (uwordrg42)
    {
      case 0:
      case 1:
      case 11:
      case 12:
      case 13:
      return con(0xffffffff);

      case 2:
      return SKW_QUERY_CLS2_OF_TEXT_RECORD(wordrg2);

      case 3:
      return SKW_GET_WALL_DECORATION_OF_ACTUATOR(SKW_GET_ADDRESS_OF_RECORD(wordrg2));

      case 4:
      return recoptrrg1->u4.b.b0;

      case 5:
      case 6:
      case 10:
      case 15:
      return CUTX8(recoptrrg1->u2.w & con(0x7f));

      case 7:
      return con(0x0);

      case 8:
      return CUTX8(ulrshift(recoptrrg1->u2.w, con(0x1), con(0x9)));

      case 9:
      return CUTX8(urshift(recoptrrg1->u4.w, con(0xd))) | CUTX8(8 * ulrshift(recoptrrg1->u4.w, con(0xd), con(0xe)));

      case 14:
        wordrg41 = recoptrrg1->u2.w;
      break;

      default: throw(THROW_DMABORT);
    }
  }
}

// TODO: make eaxw unsigned
void SKW_SET_ITEMTYPE(x16 eaxw, x8 edxb)
{
  c_record* recoptrrg1;

  if (eaxw == con(0xffffffff))
    return;
  if (UI16CAST(eaxw) >= UI16CAST(con(0xffffff80)))
    return;
  recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  ui16 uwordrg2 = urshift(eaxw & con(0x3c00), con(0xa)) - con(0x4);
  if (uwordrg2 > con(0x6))
    return;
  switch (uwordrg2)
  {
    case 0:
      recoptrrg1->u4.b.b0 = edxb;
    return;

    case 1:
    case 2:
    case 6:
      recoptrrg1->u2.b.b0 &= con(0xffffff80);
      recoptrrg1->u2.w |= unsignedword(edxb) & con(0x7f);
    return;

    case 3:
    return;

    case 4:
      recoptrrg1->u2.b.b1 &= con(0xffffff80);
      recoptrrg1->u2.w |= (unsignedword(edxb) & con(0x7f)) << con(0x8);
    return;

    case 5:
      recoptrrg1->u4.b.b0 &= con(0xfffffff9);
      recoptrrg1->u4.w |= 2 * ((unsignedword(edxb) / 8) & con(0x3));
      recoptrrg1->u4.b.b1 &= con(0x1f);
      recoptrrg1->u4.w |= (unsignedword(edxb) & con(0x7)) << con(0xd);
      if ((recoptrrg1->u4.w & con(0x6)) == con(0x2))
        recoptrrg1->u6.w = con(0xffffffff);
    return;

    default: throw(THROW_DMABORT);
  }
}

void SKW_1031_111e(x16 eaxw)
{
  x8 byterg4h;
  t_gfxdata* gptrrg1;
  t_gfxdata* gptrrg11;
  t_gfxdata* gptrrg12;
  t_gfxdata* gptrrg13;
  t_gfxdata* gptrrg14;
  t_gfxdata* gptrrg15;
  t_gfxdata* gptrrg16;
  t_gfxdata* gptrrg17;
  t_gfxdata* gptrrg18;
  t_gfxdata* gptrrg2;
  t_gfxdata* gptrrg4;
  s_gfxdatatail* ptrbeforerg1;
  s_gfxdatatail* ptrbeforerg11;
  c_c5rects vs_00;
  c_rect rc_34;
  x16 vw_3c;
  x16 vw_40;
  x8 vb_44;

  if (ddata.v1e052e == con(0x0))
    ;
  else if (eaxw >= ddata.v1e052e)
    ddata.v1e052e = con(0x0);
  else
  {
    ddata.v1e052e -= eaxw;
    return;
  }
  if (ddata.mouse_unk02 != con(0x0))
    return;
  if (ddata.v1e0478)
    return;
  if (ddata.v1e048c)
    return;
  if (ddata.v1e0480 == NULL)
    return;
  vs_00.s_00.w_00 = con(0xffffffff);
  for(;;)
  {
    gptrrg11 = ddata.v1e0480;
    gptrrg4 = &gptrrg11[con(0x1)];
    ddata.v1e0480 = gptrrg4;
    vb_44 = *gptrrg11;
    ui16 uwordrg11 = unsignedword(vb_44) & con(0x3f);
    if (uwordrg11 <= con(0x10))
    {
      // added: flag 'doit' set when M_11568 is to be done first
      bool doit = false;
      switch (uwordrg11)
      {
        case 0:
          gptrrg12 = gptrrg4;
          gptrrg4++;
          ddata.v1e0480 = gptrrg4;
          ddata.v1e052e = unsignedword(*gptrrg12);
        break;

        case 1:
          doit = true;
        break;

        case 2:
          ddata.v1e0478 = true;
        break;

        case 3:
          ddata.v1e048c = true;
        break;

        case 4:
        case 6:
          {
            x16 wordrg106 = ddata.mouse_unk04 + con(0x1);
            if (wordrg106 > con(0x2))
              wordrg106 = con(0x0);
            if (wordrg106 != ddata.mouse_unk03)
            {
              SKW_COPY_MEMORY(DOWNCAST(c_event, &ddata.v1e04d2), sizeof(c_event), DOWNCAST(c_event, &table1e04e0[ddata.mouse_unk04 / 2]));
              ddata.mouse_unk04 = wordrg106;
              if ((vb_44 & con(0x3f)) != con(0x4))
                doit = true;
              break; //!
            }
            if (ddata.mouse_unk02 == con(0x0))
              ddata.mouse_unk02 = con(0x1);
            ddata.v1e0480--;
            if (vs_00.s_00.w_00 != con(0xffffffff))
              SKW_0b36_0cbe(&vs_00, true);
          }
        return; //!

        case 5:
          if (!SKW_HANDLE_UI_EVENT(&ddata.v1e04d2))
            ddata.v1e0480--;
          else if (ddata.v1e0488)
            doit = true;
        break;

        case 7:
          {
            gptrrg13 = gptrrg4;
            gptrrg4++;
            ddata.v1e0480 = gptrrg4;
            x8 byterg4 = *gptrrg13;
            gptrrg13 = ddata.v1e0480;
            gptrrg2 = &gptrrg13[con(0x1)];
            ddata.v1e0480 = gptrrg2;
            byterg4h = *gptrrg13;
            gptrrg13 = gptrrg2;
            gptrrg2++;
            ddata.v1e0480 = gptrrg2;
            x8 byterg6 = *gptrrg13;
            gptrrg1 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(byterg4, byterg6, byterg4h);
            ptrbeforerg1 = getprevious(gptrrg1);
            SKW_1031_10c8(&vs_00, ptrbeforerg1->w2, ptrbeforerg1->w4, &rc_34);
            gptrrg14 = ddata.v1e0480;
            ddata.v1e0480++;
//                                                srcbmp                                                                                                                            palette
            SKW_DRAW_ICON_PICT_BUFF(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(byterg4, byterg6, byterg4h), &rc_34, con(0x0), &vs_00, con(0x0), signedword(*gptrrg14), con(0x0), SKW_QUERY_GDAT_IMAGE_LOCALPAL(byterg4, byterg6, byterg4h));
          }
        break;

        case 8:
          {
            gptrrg15 = gptrrg4;
            gptrrg4++;
            ddata.v1e0480 = gptrrg4;
            x16 wordrg105 = SKW_GET_PLAYER_AT_POSITION((unsignedword(*gptrrg15) + ddata.v1e0258) & con(0x3));
            if (wordrg105 >= con(0x0))
            {
              SKW_DRAW_SQUAD_SPELL_AND_LEADER_ICON(wordrg105, true);
              SKW_0b36_0cbe(&ddata.v1d694c, true);
            }
          }
        break;

        case 9:
          {
            x16 wordrg104;
            if (ddata.v1e0b74 <= con(0x0))
            {
              ui16 uwordrg1 = ddata.v1e04d2.warr0[2];
              if (uwordrg1 >= con(0x74) && uwordrg1 <= con(0x7b))
                wordrg104 = (ddata.v1e04d2.warr0[2] - con(0x74)) / 2;
              else
              {
                ddata.v1e0480++;
                break; // !
              }
            }
            else
              wordrg104 = ddata.v1e0b74 - con(0x1);
            gptrrg4 = ddata.v1e0480;
            ddata.v1e0480 = &gptrrg4[con(0x1)];
            SKW_DRAW_HAND_ACTION_ICONS(wordrg104, con(0x1), unsignedword(*gptrrg4));
            SKW_0b36_0cbe(&ddata.v1d694c, true);
          }
        break;

        case 10:
          ptrbeforerg11 = getprevious(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x1), con(0x8), con(0x5)));
          SKW_1031_10c8(&vs_00, ptrbeforerg11->w2, ptrbeforerg11->w4, &rc_34);
//                                           srcbmp                                                                                                                        palette
          SKW_DRAW_ICON_PICT_BUFF(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x1), con(0x8), con(0x5)), &rc_34, con(0x0), &vs_00, con(0x0), con(0xffff), con(0x0), SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x1), con(0x8), con(0x5)));
          *ddata.v1e052c = ddata.hero[ddata.v1e0b74 - con(0x1)].b1e * con(0x6) + con(0x60) + CUTX8(ddata.v1e04d2.warr0[2]) - con(0x65);
          C_strmetrics.SKW_QUERY_STR_METRICS(ddata.v1e052c, OO vw_3c, OO vw_40);
          SKW_CALC_CENTERED_RECT_IN_RECT(&rc_34, vw_40, vw_3c, &vs_00.s_00.rc_02);
          SKW_0b36_129a(&vs_00, rc_34.y + rc_34.h - con(0x1), unsignedword(ddata.paletteptr1[con(0x0)]), rc_34.x, unsignedword(ddata.paletteptr1[con(0x4)]), ddata.v1e052c);
        break;

        case 11:
          SKW_DRAW_SPELL_TO_BE_CAST(true);
          SKW_0b36_0cbe(&ddata.v1d694c, true);
        break;

        case 12:
          gptrrg16 = gptrrg4;
          gptrrg4++;
          ddata.v1e0480 = gptrrg4;
          SKW_DRAW_CMD_SLOT(unsignedword(*gptrrg16), true);
          SKW_0b36_0cbe(&ddata.v1d694c, true);
        break;

        case 13:
          if (ddata.v1e0976 != con(0x0))
          {
            ddata.v1e100c |= unsignedword(*gptrrg4);
            SKW_REFRESH_PLAYER_STAT_DISP(ddata.v1e0976 - con(0x1));
          }
          ddata.v1e0480++;
        break;

        case 14:
          gptrrg17 = gptrrg4;
          gptrrg4++;
          ddata.v1e0480 = gptrrg4;
          SKW_29ee_1d03(unsignedword(*gptrrg17));
          SKW_0b36_0cbe(&ddata.v1d694c, true);
        break;

        case 15:
        case 16:
          gptrrg18 = ddata.v1e0480;
          gptrrg4 = gptrrg18 + con(0x1);
          ddata.v1e0480 = gptrrg4;
          ddata.v1e0206 = *gptrrg18;
          gptrrg18 = gptrrg4;
          gptrrg4++;
          ddata.v1e0480 = gptrrg4;
          ddata.v1e0207 = *gptrrg18;
          gptrrg18 = gptrrg4;
          gptrrg4++;
          ddata.v1e0480 = gptrrg4;
          ddata.v1e0208 = *gptrrg18;
          SKW_0aaf_01db(ddata.mouse_unk05, true);
          vs_00.s_00.w_00 = con(0xffffffff);
          SKW_DRAW_GAMELOAD_DIALOGUE_TO_SCREEN();
        break;

        default: throw(THROW_DMABORT);
      }
      if (doit)
      {
        ddata.mouse_unk02 = ddata.mouse_unk04 - ddata.mouse_unk03;
        if (ddata.mouse_unk02 < con(0x0))
          ddata.mouse_unk02 += con(0x3);
      }
    }
    if ((vb_44 & con(0xffffff80)) == con(0x0))
    {
      if ((vb_44 & con(0x40)) == con(0x0))
        break;
    }
    else
    {
      ddata.v1e0480 = NULL;
      break;
    }
  }
  if (vs_00.s_00.w_00 != con(0xffffffff))
    SKW_0b36_0cbe(&vs_00, true);
}

void R_13262(x16 eaxw)
{
  x16 wordrg4 = con(0x0);
  for(;;)
  {
    if (wordrg4 >= ddata.v1e0404)
      return;
    // next line index RG4L was RG2L - BUGFIX 3/2014
    if (signedword(ddata.v1e02f0[wordrg4].ba) == eaxw && (ddata.v1e02f0[wordrg4].bb == con(0x4) || ddata.v1e02f0[wordrg4].bb == con(0x6)))
      break;
    wordrg4++;
  }
  SKW_CLICK_VWPT(ddata.v1e02f0[wordrg4].r0.x + ddata.v1d26fc, ddata.v1e02f0[wordrg4].r0.y + ddata.v1d26fe);
}

void SKW_RESET_SQUAD_DIR(void)
{
  ui16 uwordrg4 = con(0x0);
  while (uwordrg4 < UI16CAST(ddata.savegamew2))
  {
    ddata.hero[uwordrg4].b1c = CUTX8(ddata.v1e0258);
    uwordrg4++;
  }
}

// TODO: make eaxw unsigned
void SKW_PUSH_PULL_RIGID_BODY(x16 eaxw)
{
  x16 vw_00;
  x16 vw_04;
  x16 vw_08;

  if (UI16CAST(eaxw) > con(0x5))
    return;
  x16 wordrg6;
  x16 vw_0c;
  x16 wordrg5;
  switch (eaxw)
  {
    case 0:
      wordrg6 = ddata.v1e0258;
      wordrg5 = con(0x0);
    break;

    case 1:
      wordrg6 = (ddata.v1e0258 + con(0x1)) & con(0x3);
      wordrg5 = con(0x2);
    break;

    case 2:
      vw_0c = con(0x4);
      wordrg5 = con(0x1);
    break;

    case 3:
      vw_0c = con(0x5);
      wordrg5 = con(0x0);
    break;

    case 4:
      vw_0c = con(0x6);
      wordrg5 = con(0x2);
    break;

    case 5:
      wordrg6 = (ddata.v1e0258 - con(0x1)) & con(0x3);
      wordrg5 = con(0x1);
    break;

    default: throw(THROW_DMABORT);
  }
  switch (eaxw)
  {
    case 0:
    case 1:
    case 5:
      vw_0c = con(0x3);
    break;

    case 2:
    case 3:
    case 4:
      wordrg6 = (ddata.v1e0258 + con(0x2)) & con(0x3);
    break;
  }
  vw_08 = ddata.v1e0270 + table1d27fc[ddata.v1e0258];
  vw_00 = ddata.v1e0272 + table1d2804[ddata.v1e0258];
  if (!SKW_IS_CREATURE_MOVABLE_THERE(vw_08, wordrg6, &vw_04, vw_00))
    return;
  if (SKW_12b4_099e(vw_04))
  {
    ddata.v1e053c = vw_08;
    ddata.v1e053a = vw_00;
    ddata.v1e0546 = ddata.v1e0270;
    ddata.v1e0544 = ddata.v1e0272;
    ddata.v1e0542 = wordrg6;
    ddata.v1e0540 = ddata.v1e0266;
    ddata.v1e0538 = wordrg5;
    ddata.v1d4000 = vw_04;
    SKW_PERFORM_MOVE(vw_0c);
    return;
  }
  for (ui16 vuw_0c = con(0x0); vuw_0c < ddata.savegamew2; vuw_0c++)
    if (ddata.hero[vuw_0c].w36 != con(0x0))
      if (vuw_0c == ddata.mouse_unk0e || SKW_RAND02() == con(0x0))
        SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x82), con(0xfe), CUTX8(vuw_0c), ddata.v1e0270, ddata.v1e0272, con(0x1), con(0x69), con(0xc8));
}

bool SKW_IS_CREATURE_MOVABLE_THERE(x16 eaxw, x16 ebxw, x16* ecxpw, x16 edxw)
{
  c_5bytes vs_00;
  x16 vw_0c;
  x16 vw_10;

  x16 wordrg6 = eaxw;
  x16 wordrg5 = edxw;
  vw_10 = ebxw;
  x16 vw_08 = SKW_GET_CREATURE_AT(wordrg6, wordrg5);
  if (vw_08 == con(0xffffffff))
    return false;
  if (SKW_GET_CREATURE_WEIGHT(vw_08) > con(0xfd))
    return false;
  if (SKW_GET_TELEPORTER_DETAIL(&vs_00, wordrg5, wordrg6) && vw_10 == ((unsignedword(vs_00.b_00) + con(0x2)) & con(0x3)))
  {
    if (!SKW_IS_CREATURE_ALLOWED_ON_LEVEL(vw_08, unsignedword(vs_00.b_04)))
      return false;
    vw_0c = ddata.v1d3248;
    SKW_CHANGE_CURRENT_MAP_TO(unsignedword(vs_00.b_04));
    bool boolrg4;
    if (SKW_IS_TILE_BLOCKED(SKW_GET_TILE_VALUE(unsignedword(vs_00.b_02), unsignedword(vs_00.b_03))))
      boolrg4 = true;
    else if (ecxpw == NULL)
      boolrg4 = false;
    else
    {
      if (SKW_GET_CREATURE_AT(unsignedword(vs_00.b_02) + table1d27fc[vs_00.b_01], unsignedword(vs_00.b_03) + table1d2804[vs_00.b_01]) == con(0xffffffff))
        boolrg4 = false;
      else
        boolrg4 = true;
    }
    SKW_CHANGE_CURRENT_MAP_TO(vw_0c);
    if (boolrg4)
      return false;
  }
  wordrg6 += table1d27fc[vw_10];
  wordrg5 += table1d2804[vw_10];
  x8 byterg7 = SKW_GET_TILE_VALUE(wordrg6, wordrg5);
  if (SKW_IS_TILE_BLOCKED(byterg7) || ((byterg7 >> con(0x5)) & con(0xff)) == con(0x3))
    return false;
  if (ecxpw != NULL)
    if (SKW_GET_CREATURE_AT(wordrg6, wordrg5) != con(0xffffffff))
      return false;
  if (SKW_GET_TELEPORTER_DETAIL(&vs_00, wordrg5, wordrg6))
    if (!SKW_IS_CREATURE_ALLOWED_ON_LEVEL(vw_08, unsignedword(vs_00.b_04)))
      return false;
  if (ecxpw != NULL)
    *ecxpw = vw_08;
  return true;
}

bool SKW_12b4_099e(x16 eaxw)
{
  c_hero* heroptrrg5;

  x16 wordrg6 = SKW_GET_CREATURE_WEIGHT(eaxw);
  if (wordrg6 > con(0xfd))
    return false;
  bool boolrg7 = false;
  for (x16 wordrg31 = con(0x0); wordrg31 < ddata.savegamew2; wordrg31++)
  {
    heroptrrg5 = &ddata.hero[wordrg31];
    if (heroptrrg5->w36 == con(0x0))
      continue;
    x16 wordrg15 = SKW_GET_PLAYER_ABILITY(heroptrrg5, con(0x0), con(0x1));
    if (wordrg31 == ddata.mouse_unk0e)
      wordrg15 += wordrg15 / 8;
    if (wordrg6 <= con(0x2d))
      wordrg15 += wordrg15 / 4;
    x16 wordrg16 = SKW_STAMINA_ADJUSTED_ATTR(heroptrrg5, wordrg15);
    if (wordrg16 < wordrg6)
      if (SKW_RAND16((wordrg6 - wordrg16) / 2 + con(0x1)) != con(0x0))
        continue;
    boolrg7 = true;
    break;
  }
  for (x16 wordrg3 = con(0x0); ; wordrg3++)
  {
    if (wordrg3 >= ddata.savegamew2)
      return boolrg7;
    if ((ddata.hero[wordrg3].w36 != con(0x0)) && ddata.hero[wordrg3].w3a > (ddata.hero[wordrg3].u3c.w >> con(0x4)))
    {
      x16 wordrg11;
      if (!boolrg7)
        wordrg11 = con(0x5);
      else
        wordrg11 = DM2_MAX(con(0x5), wordrg6 / 4);
      SKW_ADJUST_STAMINA(wordrg3, wordrg11);
    }
  }
}

void SKW_32cb_4069(x16 eaxw, x16 ebxw, x16* ecxpw, x16 edxw, x16* argpw0)
{
  x16 vw_04;
  x16 vw_0c;
  x16 vw_18;
  x8 vb_1c; // set

  x16 wordrg2 = ebxw;
  if (wordrg2 == con(0x0))
    return;
  if (wordrg2 > con(0x3))
    wordrg2 = con(0x3);
  vw_18 = *ecxpw;
  x16 vw_14 = *argpw0;
  wordrg2--;
  vw_04 = eaxw - vw_18;
  x16 vw_10 = DM2_ABS(vw_04);
  if (vw_10 != con(0x0))
  {
    vw_04 = vw_14 - edxw;
    vw_0c = DM2_ABS(vw_04);
    if (vw_0c == con(0x0))
    {
      if (eaxw >= vw_18)
        *ecxpw += signedword(table1d6ea8[wordrg2]);
      else
        *ecxpw -= signedword(table1d6ea8[wordrg2]);
      return;
    }
    x32 longrg1 = lextended((eaxw < vw_18) ? 1 : 0) ^ (((edxw < vw_14) ? 1 : 0) & con(0xff));
    x16 wordrg14 = (longrg1 == con(0x0)) ? 1 : 0;
    vb_1c = (vw_10 < vw_0c) ? 1 : 0;
    vb_1c = ((signedlong(wordrg14) ^ unsignedlong(vb_1c)) == con(0x0)) ? 1 : 0;
    x16 vw_08 = unsignedword(vb_1c);
    vb_1c = (eaxw < vw_18) ? 1 : 0;
    x16 wordrg5 = vw_08 | (2 * wordrg14) | (4 * unsignedword(vb_1c));
    *ecxpw += signedword(table1d6e68[wordrg2][wordrg5].b0);
    *argpw0 += signedword(table1d6e68[wordrg2][wordrg5].b1);
  }
  else
  {
    if (edxw < vw_14)
      *argpw0 -= signedword(table1d6ea8[wordrg2]);
    else
      *argpw0 += signedword(table1d6ea8[wordrg2]);
  }
}

// TODO: arguments, mostly just as byte used
void SKW_DRAW_DEFAULT_DOOR_BUTTON(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 vw_00;
  x16 vw_08;
  x8 vb_0c;
  x8 vb_10;
  x8 vb_14;

  vb_10 = CUTX8(eaxw);
  vb_0c = CUTX8(edxw);
  vb_14 = CUTX8(ebxw);
  x16 wordrg6 = signedword(table1d6ed3[ecxw]);
  if ((wordrg6 < con(0x0)) || (CUTX8(edxw) == con(0xffffffff)))
    return;
  x16 wordrg4 = signedword(table1d6b15[ecxw]);
  vw_08 = wordrg4;
  vw_00 = unsignedword(table1d6b71[table1d6b15[ecxw]]);
  x16 vw_04;
  if (vb_10 != con(0xc))
  {
    vw_04 = con(0x0);
    wordrg4 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(vb_10, con(0xb), con(0x4), vb_0c);
    if (wordrg4 == con(0x0))
      wordrg4 = ddata.v1d6c00;
  }
  else
  {
    vw_04 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xc), con(0xb), con(0x8), vb_0c) * con(0x5);
    wordrg4 = ddata.v1d6c00;
  }
  SKW_QUERY_TEMP_PICST(con(0x0), vw_00, con(0x0), vw_00, con(0x0), vw_08, vw_04 + con(0x79e) + wordrg6, con(0xffffffff), wordrg4, con(0xffff), vb_10, vb_0c, vb_14);
  SKW_DRAW_TEMP_PICST();
  if (wordrg6 == con(0x3) || wordrg6 == con(0x4))
    SKW_32cb_0a4c(&ddata.v1e118e.rc_24, CUTX8(ecxw), con(0x4));
}

// was SKW_32cb_4715
void SKW_DRAW_DOOR_FRAMES(x16 eaxw, x16 edxw)
{
  c_record* recoptrrg6;
  s_hex12* h12ptrrg1;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x8 vb_10;

  vb_10 = ddata.v1d6c02;
  vw_0c = ddata.v1d6c00;
  recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(ddata.v1e1044[eaxw].s_02.warr_00[con(0x4)]);
  if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xe), con(0xb), con(0x40), ddata.v1e040e[recoptrrg6->u2.w & con(0x1)]) != con(0x0))
    return;
  if ((edxw & con(0x1)) != con(0x0))
  {
    x8 byterg14 = table1d6efd[eaxw];
    if (byterg14 != con(0xffffffff))
      SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), byterg14, table1d6f0b[eaxw], vb_10, vw_0c, con(0x0));
  }
  x16 wordrg18;
  if (ddata.v1e12d0 == con(0x0))
  {
    vw_04 = eaxw;
    wordrg18 = con(0x0);
    vw_08 = con(0x1);
  }
  else
  {
    vw_04 = signedword(table1d6b2c[eaxw]);
    wordrg18 = con(0x1);
    vw_08 = con(0x0);
  }
  if ((edxw & con(0x2)) != con(0x0))
  {
    x8 byterg12 = table1d6ee1[vw_04][wordrg18];
    if (byterg12 != con(0xffffffff))
    {
      SKW_QUERY_TEMP_PICST(con(0x0), con(0x40), con(0x0), con(0x40), con(0x0), con(0x0), SKW_QUERY_CREATURE_BLIT_RECTI(eaxw, t_rotate(0), con(0xa)), con(0x4), vw_0c, con(0xffff), con(0x8), vb_10, byterg12);
      SKW_DRAW_TEMP_PICST();
    }
  }
  if ((edxw & con(0x4)) == con(0x0))
    return;
  x8 byterg1 = table1d6ee1[vw_04][vw_08];
  if (byterg1 == con(0xffffffff))
    return;
  SKW_QUERY_TEMP_PICST(con(0x1), con(0x40), con(0x0), con(0x40), con(0x0), con(0x0), SKW_QUERY_CREATURE_BLIT_RECTI(eaxw, t_rotate(con(0x0)), con(0xe)), con(0x3), vw_0c, con(0xffff), con(0x8), vb_10, byterg1);
  SKW_DRAW_TEMP_PICST();
  if ((recoptrrg6->u2.b.b0 & con(0x40)) == con(0x0))
  {
    h12ptrrg1 = &ddata.v1e1044[eaxw];
    if (h12ptrrg1->s_02.warr_00[con(0x5)] == con(0xff))
      return;
    x16 tmp = h12ptrrg1->s_02.warr_00[con(0x5)] >> con(0x8);
    SKW_DRAW_DEFAULT_DOOR_BUTTON(con(0x9), unsignedword(CUTX8(tmp + con(0x1))), eaxw, unsignedword(CUTX8(h12ptrrg1->s_02.warr_00[0x5])));
  }
  else
    SKW_DRAW_DEFAULT_DOOR_BUTTON(con(0xc), unsignedword(CUTX8(5 * ulrshift(recoptrrg6->u2.w, con(0x4), con(0xf)))), eaxw, con(0x0));
}

// was SKW_1031_0d9e
const x8* SKW_TRANSMIT_UI_EVENT(c_event* eaxps)
{
  SKW_ADJUST_UI_EVENT(eaxps);
  ui16 uwordrg1 = eaxps->warr0[con(0x2)];
  if (uwordrg1 == con(0x0))
    return NULL;
  if (uwordrg1 > con(0xf2))
    return NULL;
  if (uwordrg1 >= con(0x14) && uwordrg1 < con(0x42))
    return &table1d3efd[con(0x1)];
  if (uwordrg1 == con(0x8d) || (uwordrg1 >= con(0x7d) && uwordrg1 <= con(0x81)))
    return &table1d3efd[con(0x1)];
  if (uwordrg1 >= con(0x10) && uwordrg1 <= con(0x13))
    return &table1d3efd[con(0x1)];
  if (uwordrg1 >= con(0x9d) && uwordrg1 <= con(0xa4))
    return &table1d3efd[con(0x1)];
  if (uwordrg1 >= con(0x48) && uwordrg1 <= con(0x4b))
    return &table1d3efd[con(0x1)];
  if (uwordrg1 >= con(0x95) && uwordrg1 <= con(0x9c))
    return &table1d3efd[con(0x1)];
  if (uwordrg1 >= con(0x1) && uwordrg1 <= con(0x6))
  {
    uwordrg1--;
    return &table1d3efd[uwordrg1 * con(0xf) + con(0x2)];
  }
  if (uwordrg1 >= con(0x74) && uwordrg1 <= con(0x7b))
  {
    uwordrg1 -= con(0x74);
    uwordrg1 &= con(0x1);
    return &table1d3efd[uwordrg1 * con(0x5) + con(0x5c)];
  }
  if (uwordrg1 >= con(0x5f) && uwordrg1 <= con(0x62))
  {
    uwordrg1 -= con(0x5f);
    return &table1d3efd[uwordrg1 * con(0x5) + con(0x66)];
  }
  if (uwordrg1 == con(0x70))
    return &table1d3efd[con(0x7a)];
  if (uwordrg1 == con(0x5d) || uwordrg1 == con(0x5e))
  {
    uwordrg1 -= con(0x5d);
    uwordrg1 *= 8;
    uwordrg1 += con(0x82);
    return &table1d3efd[uwordrg1];
  }
  if (uwordrg1 >= con(0x65) && uwordrg1 <= con(0x6a))
    return &table1d3efd[con(0x92)];
  if (uwordrg1 == con(0x6b))
    return &table1d3efd[con(0x96)];
  if (uwordrg1 == con(0x6c))
    return &table1d3efd[con(0x9e)];
  if (uwordrg1 >= con(0x71) && uwordrg1 <= con(0x73))
  {
    uwordrg1 -= con(0x71);
    return &table1d3efd[uwordrg1 * con(0x5) + con(0xa2)];
  }
  if (uwordrg1 == con(0xb) || uwordrg1 == con(0x93))
    return &table1d3efd[con(0xb1)];
  if (uwordrg1 == con(0x8e))
    return &table1d3efd[con(0xb6)];
  if (uwordrg1 == con(0x8c))
    return &table1d3efd[con(0xbb)];
  if (uwordrg1 >= con(0x56) && uwordrg1 <= con(0x59))
  {
    uwordrg1 -= con(0x56);
    return &table1d3efd[uwordrg1 * con(0x7) + con(0xc0)];
  }
  if (uwordrg1 < con(0xdb) || uwordrg1 > con(0xde))
  {
    if (uwordrg1 != con(0x50))
      return &table1d3efd[con(0x0)];
    return &table1d3efd[con(0xea)];
  }
  ui16 uwordrg4 = ddata.v1e0204 - con(0x1);
  if (uwordrg4 <= con(0x6))
  {
    switch (uwordrg4)
    {
      case 0:
      case 1:
      case 6:
      return &table1d3efd[con(0xe3)];

      case 2:
        if (uwordrg1 < con(0xdc))
          return &table1d3efd[con(0xe3)];
      case 3: // case 2 can run through to it
      return &table1d3efd[con(0xdc)];

      case 4:
      case 5:
        if (uwordrg1 <= con(0xdc))
          return &table1d3efd[con(0xdc)];
      break;

      default: throw(THROW_DMABORT);
    }
  }
  return &table1d3efd[con(0x1)];
}

// return could be byte only
x16 SKW_12b4_0881(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16* argpw1)
{
  x16 vw_00;

  vw_00 = ecxw;
  *argpw1 = con(0xffffffff);
  if (CUTX8(urshift(edxw, con(0x5))) == con(0x3) && (eaxw == con(0x2)))
    return con(0x1);
  if ((urshift(ebxw, con(0x5)) & con(0xff)) == con(0x3))
    return con(0x2);
  if (SKW_IS_TILE_BLOCKED(CUTX8(ebxw)))
    return con(0x3);
  *argpw1 = SKW_GET_CREATURE_AT(vw_00, argw0);
  if (*argpw1 != con(0xffffffff) && (SKW_QUERY_CREATURE_AI_SPEC_FLAGS(*argpw1) & con(0x8000)) == con(0x0))
  {
    if (SKW_12b4_0953(SKW_GET_ADDRESS_OF_RECORD(*argpw1), ddata.v1e0258))
      return con(0x5);
    return con(0x4);
  }
  if (SKW_1c9a_03cf(&vw_00, con(0xff), &argw0) != con(0xffffffff))
    if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(*argpw1) & con(0x8000)) == con(0x0))
      return con(0x5);
  return con(0x6);
}

void SKW_3e74_5b7c(x16 eaxw)
{
  t_text t_00[0x10];

  if (table1d6797[ddata.v1d6795++] == SKW_476d_05b6(eaxw))
  {
    if (table1d6797[ddata.v1d6795] != con(0x0))
      return;
    SKW_DISPLAY_HINT_TEXT(con(0xf), v1d1118);
    SKW_DISPLAY_HINT_TEXT(con(0xf), SKW_SK_LTOA10(con(0x2), t_00));
    SKW_3929_0b01(con(0xf), con(0x2e));
    SKW_3929_0b20(con(0xf), con(0xc));
    SKW_3929_0b20(con(0xf), dm2_dballochandler.v1e0a0c);
    SKW_SK_STRCPY(t_00, v1d111f);
    if (dm2_dballochandler.v1e13fe[0] != con(0x0)) // TODO: v1e13fe probably a bool-array
      t_00[0x0] = con(0x47);
    if (dm2_dballochandler.v1e13fe[1] != con(0x0)) // TODO: v1e13fe probably a bool-array
      t_00[0x1] = con(0x53);
    if (dm2_dballochandler.v1e13fe[2] != con(0x0)) // TODO: v1e13fe probably a bool-array
      t_00[0x2] = con(0x45);
    SKW_DISPLAY_HINT_TEXT(con(0xf), t_00);
  }
  ddata.v1d6795 = con(0x0);
}

t_text* SKW_QUERY_CMDSTR_NAME(x8 eaxb, x8 ebxb, x8 edxb)
{
  t_text* tptrrg1;
  t_text* tptrrg3;
  t_text t_00[0x80];

  tptrrg1 = SKW_QUERY_GDAT_TEXT(eaxb, ebxb, t_00, edxb);
  if (*tptrrg1 == NULLBYTE)
    return NULL;
  x16 wordrg2 = con(0x0);
  for(;;)
  {
    x8 byterg4 = *tptrrg1++;
    if (byterg4 == con(0x3a) || byterg4 == con(0x0))
      break;
    ddata.v1e0b85[wordrg2] = byterg4;
    wordrg2++;
  }
  ddata.v1e0b85[wordrg2] = con(0x0);
  tptrrg3 = ddata.v1e0b85;
  return tptrrg3;
}

bool SKW_2759_0155(x16 eaxw)
{
  x8 byterg5;
  x16 vw_00;
  x8 vb_04;
  x8 vb_08;
  x8 vb_0c;

  vw_00 = eaxw;
  if (eaxw == con(0xffffffff))
    return false;
  vb_04 = SKW_QUERY_CLS1_FROM_RECORD(eaxw);
  vb_08 = SKW_QUERY_CLS2_FROM_RECORD(eaxw);
  vb_0c = con(0x8);
  for(;;)
  {
    byterg5 = vb_0c;
    if (byterg5 >= con(0xc))
      return false;
    if (SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(vb_04, con(0x5), byterg5, vb_08))
      if (SKW_QUERY_CMDSTR_ENTRY(vb_04, byterg5, con(0x2), vb_08) != con(0x0))
        if (SKW_QUERY_CMDSTR_ENTRY(SKW_QUERY_CLS1_FROM_RECORD(vw_00), byterg5, con(0x8), SKW_QUERY_CLS2_FROM_RECORD(vw_00)) != con(0x0))
          return true;
    vb_0c++;
  }
}

// was SKW_2759_04c0
x16 SKW_FIND_POUCH_OR_SCABBARD_POSSESSION_POS(x16 eaxw, x16 edxw)
{
  if (edxw != con(0x1))
  {
    if (edxw == con(0x0))
    {
      if (ddata.hero[eaxw].warrc3[0xb] != con(0xffffffff))
        return con(0xb);
      if (ddata.hero[eaxw].warrc3[0xb] != ddata.hero[eaxw].warrc3[6])
        return con(0x6);
    }
    return con(0xffffffff);
  }
  if (ddata.hero[eaxw].warrc3[0xc] != con(0xffffffff))
    return con(0xc);
  x16 wordrg2 = con(0x7);
  for(;;)
  {
    if (wordrg2 > con(0x9))
      return con(0xffffffff);
    if (ddata.hero[eaxw].warrc3[wordrg2] != con(0xffffffff))
      return wordrg2;
    wordrg2++;
  }
}

x16 SKW_ATTACK_PARTY(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 vw_00;
  x16 vw_04;
  x16 vw_0c;

  x16 wordrg6 = eaxw;
  vw_04 = edxw;
  vw_00 = ebxw;
  if (eaxw == con(0x0))
    return con(0x0);
  x16 wordrg5 = con(0x0);
  vw_0c = wordrg6 / 8 + con(0x1);
  wordrg6 -= vw_0c;
  vw_0c *= 2;
  for (ui16 vuw_08 = con(0x0); vuw_08 < ddata.savegamew2; vuw_08++)
    if (SKW_WOUND_PLAYER(vuw_08, vw_04, vw_00, DM2_MAX(con(0x1), SKW_RAND16(vw_0c) + wordrg6)) != con(0x0))
      wordrg5 |= con(0x1) << CUTX8(vuw_08);
  return wordrg5;
}

bool SKW_2c1d_1de2(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_hero* heroptrrg5;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;

  vw_14 = edxw;
  heroptrrg5 = &ddata.hero[eaxw];
  bool boolrg3 = false;
  x16 vw_00;
  if (edxw < con(0x0))
  {
    if (ddata.savegamewpc.w0 == con(0xffffffff))
      return false;
    vw_00 = heroptrrg5->warrc3[con(0x1)];
    vw_0c = SKW_REMOVE_OBJECT_FROM_HAND();
    heroptrrg5->warrc3[con(0x1)] = vw_0c;
    vw_14 = con(0x1);
    boolrg3 = true;
  }
  x16 vw_08 = SKW_COMPUTE_PLAYER_ATTACK_OR_THROW_STRENGTH(eaxw, con(0xa), vw_14);
  if (!boolrg3)
  {
    vw_0c = SKW_REMOVE_POSSESSION(eaxw, vw_14);
    if (vw_0c == con(0xffffffff))
      return false;
  }
  else
    heroptrrg5->warrc3[con(0x1)] = vw_00;
  SKW_QUEUE_NOISE_GEN2(SKW_QUERY_CLS1_FROM_RECORD(vw_0c), con(0x86), con(0xfe), SKW_QUERY_CLS2_FROM_RECORD(vw_0c), ddata.v1e0270, ddata.v1e0272, con(0x1), con(0x6e), con(0x80));
  SKW_ADJUST_STAMINA(eaxw, SKW_2c1d_0e23(vw_0c));
  SKW_ADJUST_HAND_COOLDOWN(eaxw, signedlong(vw_14), con(0x4));
  vw_10 = con(0x8);
  x16 wordrg32 = con(0x1);
  x16 wordrg103 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_0c, con(0x9));
  if (wordrg103 != con(0x0))
  {
    vw_10 = wordrg103 / 4 + con(0xc);
    wordrg32 = wordrg103;
  }
  SKW_ADJUST_SKILLS(eaxw, vw_10, con(0xa));
  vw_08 += wordrg32;
  x16 wordrg3 = SKW_QUERY_PLAYER_SKILL_LV(eaxw, true, con(0xa));
  vw_08 += SKW_RAND16((vw_08 >> con(0x2)) + con(0x8)) + wordrg3;
  vw_08 = DM2_MIN(vw_08, con(0xff));
  vw_10 = DM2_BETWEEN_VALUE(con(0x28), con(0xc8), (CUTX16(SKW_RAND()) & con(0x1f)) + 8 * wordrg3);
  x16 wordrg1 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_0c, con(0xc));
  if (wordrg1 == con(0x0))
    wordrg1 = DM2_MAX(con(0x5), con(0xb) - wordrg3);
  SKW_SHOOT_ITEM(vw_0c, ddata.v1e0272, (ddata.v1e0258 + ebxw) & con(0x3), ddata.v1e0270, ddata.v1e0258, CUTX8(vw_08), CUTX8(vw_10), CUTX8(wordrg1));
  ddata.v1e025e = con(0x4);
  ddata.v1e0274 = ddata.v1e0258;
  return true;
}

// was SKW_2f3f_0343
// return never requested
x16 SKW_SELECT_CHAMPION(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  c_record* recoptrrg1;
  x8 vb_0c;
  x16 vw_10;

  x16 vw_08 = eaxw;
  x16 vw_04 = edxw;
  if (ddata.savegamewpc.w0 != con(0xffffffff))
    return con(0x0);
  x16 wordrg5 = ddata.savegamew2;
  if (wordrg5 >= con(0x4))
    return con(0x0);
  vw_10 = ddata.v1d3248;
  SKW_CHANGE_CURRENT_MAP_TO(ecxw);
  vw_08 += table1d27fc[ebxw];
  vw_04 += table1d2804[ebxw];
  x16 wordrg17 = SKW_GET_TILE_RECORD_LINK(vw_08, vw_04);
  for(;;)
  {
    x16 wordrg21 = wordrg17;
    if (wordrg21 == con(0xfffffffe))
      break;
    if (urshift(wordrg21 & con(0x3c00), con(0xa)) == con(0x3) && (recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg21), (recoptrrg1->u2.w & con(0x7f)) == con(0x7e)))
    {
      vb_0c = CUTX8(urshift(recoptrrg1->u2.w, con(0x7)));
      break;
    }
    wordrg17 = SKW_GET_NEXT_RECORD_LINK(wordrg21);
  }
  x16 wordrg22 = ebxw;
  x16 wordrg11 = (wordrg22 + con(0x2)) & con(0x3);
  vw_08 += table1d27fc[wordrg11];
  vw_04 += table1d2804[wordrg11];
  SKW_REVIVE_PLAYER(vb_0c, CUTX8(wordrg22));
  if (wordrg5 != con(0x0))
  {
    SKW_DISPLAY_RIGHT_PANEL_SQUAD_HANDS();
    SKW_UPDATE_RIGHT_PANEL(false);
  }
  ddata.v1e0288 = wordrg5 + con(0x1);
  ddata.savegamew2++;
  if (wordrg5 == con(0x0))
    SKW_SELECT_CHAMPION_LEADER(con(0x0));
  x16 wordrg6 = (ebxw + con(0x2)) & con(0x3);
  vw_08 += table1d27fc[ebxw];
  vw_04 += table1d2804[ebxw];
  x16 wordrg23;
  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(vw_08, vw_04);
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg23))
  {
    wordrg23 = wordrg1;
    if (wordrg23 == con(0xfffffffe))
      break;
    if (urshift(wordrg23 & con(0x3c00), con(0xa)) > con(0x3))
      if (urshift(wordrg23, con(0xe)) == wordrg6)
        SKW_ADD_ITEM_TO_PLAYER(wordrg5, wordrg23);
  }
  if (!ddata.v1d6a2d)
  {
    SKW_24a5_1798(wordrg5);
    SKW_1031_0541(con(0x7));
    SKW_38c8_0002();
  }
  SKW_CHANGE_CURRENT_MAP_TO(vw_10);
  SKW_CALC_PLAYER_WEIGHT(wordrg5);
  return wordrg5 + con(0x1);
}

x8 SKW_2405_014a(x16 eaxw, bool ebxbool, x16 edxw)
{
  x16 vw_00;
  x16 vw_04;

  vw_04 = edxw;
  x8 byterg3 = con(0x18);
  if (!ebxbool) // BUGFIX 3/2014 flask animation
    return byterg3;
  x16 vw_08 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(eaxw, con(0x6));
  x16 wordrg5 = vw_08 & con(0x1f);
  if (wordrg5 == con(0x0))
    return byterg3;
  x16 wordrg40 = con(0x0);
  if ((vw_08 & con(0x8000)) != con(0x0))
  {
    wordrg40 = SKW_IS_ITEM_FIT_FOR_EQUIP(eaxw, true, vw_04);
    if (wordrg40 == con(0x0))
      return byterg3;
  }
  if ((vw_08 & con(0x4000)) != con(0x0))
  {
    if (ddata.v1e0b74 == con(0x0))
      return byterg3;
    if (eaxw != ddata.v1d67c2.w0[ddata.v1e0b74][ddata.v1e0b76])
      return byterg3;
    wordrg40 = con(0x1);
  }
  if (wordrg40 != con(0x0))
  {
    byterg3++;
    wordrg5--;
  }
  if (wordrg5 == con(0x0))
    return byterg3;
  x32 longrg2 = ddata.longmallocx;
  ui16 uwordrg1 = urshift(vw_08 & con(0x1f00), con(0x8));
  if (uwordrg1 <= con(0x6))
  {
    x16 wordrg41 = eaxw & con(0x3ff);
    switch (uwordrg1)
    {
      case 5:
        longrg2 += unsignedlong(wordrg41);
      case 0: // case 5 runs through here
        byterg3 += CUTLX8(longrg2 % unsignedlong(wordrg5));
      break;

      case 1:
        byterg3 += CUTX8(SKW_RAND16(wordrg5));
      break;

      case 2:
        byterg3 += CUTX8(ddata.v1e0258);
      break;

      case 3:
        {
          x16 wordrg15 = SKW_ADD_ITEM_CHARGE(eaxw, con(0x0));
          if (wordrg15 != con(0x0))
          {
            x32 longrg4 = unsignedlong(wordrg15) * unsignedlong(wordrg5);
            x32 longrg21 = unsignedlong(SKW_GET_MAX_CHARGE(eaxw)) + con(0x1);
            byterg3 += CUTX8((longrg4 / longrg21) + con(0x1));
          }
        }
      break;

      case 6:
        longrg2 += unsignedlong(wordrg41);
      case 4: // case 6 runs through here
        vw_04 = urshift(vw_08 & con(0xe0), con(0x5));
        vw_00 = SKW_ADD_ITEM_CHARGE(eaxw, con(0x0));
        if (vw_00 != con(0x0))
        {
          x32 longrg41 = unsignedlong(vw_00) * unsignedlong(wordrg5) / signedlong(vw_04);
          byterg3 += CUTX8((CUTX16(longrg2) % vw_04) + longrg41 / (unsignedlong(SKW_GET_MAX_CHARGE(eaxw)) + con(0x1)) * vw_04 + con(0x1));
        }
      break;

      default: throw(THROW_DMABORT);
    }
  }
  return byterg3;
}

// was SKW_2405_05b4
t_gfxdata* SKW_DRAW_ITEM_ON_WOOD_PANEL(x16 eaxw, c_hex18* ebxph18, x16 edxw)
{
  c_image vs_00;
  t_gfxdata vcarr_13c[PAL16];
  t_gfxdata* gptrrg5;
  t_gfxdata* gptrrg7;
  bool vbool_14c;
  x16 vw_150;
  x8 vb_154;
  x8 vb_158;

  if (!SKW_IS_ITEM_HAND_ACTIVABLE(eaxw, edxw, ddata.hero[eaxw].warrc3[edxw]))
    return NULL;
  x16 wordrg43 = ddata.v1d2722 + ddata.v1d271a;
  x16 wordrg2 = ddata.v1d2724 + ddata.v1d271c;
  vw_150 = SKW_3e74_5888();
  SKW_ALLOC_NEW_PICT(vw_150, wordrg2, con(0x8), wordrg43);
  x8 byterg1;
  x16 wordrg12 = ddata.hero[eaxw].warrc3[edxw];
  if (wordrg12 != con(0xffffffff))
  {
    vb_158 = SKW_QUERY_CLS1_FROM_RECORD(wordrg12);
    vb_154 = SKW_QUERY_CLS2_FROM_RECORD(wordrg12);
    byterg1 = SKW_2405_014a(wordrg12, false, con(0xffffffff));
    vbool_14c = false;
  }
  else
  {
    vb_158 = con(0x1);
    vb_154 = con(0x2);
    byterg1 = ((edxw == con(0x1)) ? 1 : 0) + con(0x7);
    vbool_14c = true;
  }
  SKW_QUERY_GDAT_SUMMARY_IMAGE(&vs_00, vb_154, byterg1, vb_158);
  SKW_QUERY_PICST_IT(&vs_00);
  x8 byterg3 = ddata.paletteptr1[con(0x8)];
  gptrrg5 = SKW_0b36_00c3(vw_150, ebxph18);
  gptrrg7 = gptrrg5;
  SKW_FILL_ENTIRE_PICT(gptrrg7, byterg3);
  x16 wordrg4;
  x16 wordrg1;
  if (!vbool_14c)
  {
    x16 wordrg41 = con(0x0);
    while (wordrg41 < con(0x10))
    {
      vcarr_13c[wordrg41] = ddata.paletteptr1[con(0x0)];
      wordrg41++;
    }
    vcarr_13c[0xc] = byterg3;
//                              srcbmp                                                                                                      srcofs destbmp                        palette
    SKW_DRAW_DIALOGUE_PICT(SKW_QUERY_PICT_BITMAP(&vs_00.s_00), SKW_ALLOC_TEMP_RECT(ddata.v1d2722, ddata.v1d2724, ddata.v1d271a, ddata.v1d271c), 0, gptrrg7, con(0x0), con(0xffff), vcarr_13c);
    R_B012(vs_00.carr_3a, con(0x0), con(0x1), con(0x1), &vs_00.w_38);
    gptrrg5 = SKW_0b36_00c3(vw_150, ebxph18);
    gptrrg7 = gptrrg5;
    wordrg4 = ddata.v1d271c;
    wordrg1 = ddata.v1d271a;
  }
  else
  {
    wordrg4 = vs_00.s_00.w_14;
    wordrg1 = vs_00.s_00.w_12;
  }
//                            srcbmp                                                                   srcofs destbmp                      palette
  SKW_DRAW_DIALOGUE_PICT(SKW_QUERY_PICT_BITMAP(&vs_00.s_00), SKW_ALLOC_TEMP_ORIGIN_RECT(wordrg1, wordrg4), 0, gptrrg5, con(0x0), con(0xc), vs_00.carr_3a);
  return gptrrg7;
}

void R_36EFE(x16 eaxw)
{
  c_hero* heroptrrg2;

  heroptrrg2 = &ddata.hero[eaxw];
  x16 wordrg3 = heroptrrg2->w36;
  heroptrrg2->w36 = con(0x0);
  if (heroptrrg2->b1d == con(0xffffffff) || SKW_GET_PLAYER_AT_POSITION(unsignedword(heroptrrg2->b1d)) != con(0xffffffff))
  {
    x16 wordrg4 = con(0x0);
    for(;;)
    {
      if (SKW_GET_PLAYER_AT_POSITION((ddata.v1e0258 + wordrg4) & con(0x3)) == con(0xffffffff))
        break;
      wordrg4++;
    }
    heroptrrg2->b1d = (CUTX8(ddata.v1e0258) + CUTX8(wordrg4)) & con(0x3);
  }
  heroptrrg2->b1c = CUTX8(ddata.v1e0258);
  heroptrrg2->w36 = wordrg3;
}

void SKW_PLAYER_DEFEATED(x16 eaxw)
{
  c_hero* heroptrrg5;
  c_record* recoptrrg1;
  x16 vw_00;

  heroptrrg5 = &ddata.hero[eaxw];
  if (eaxw == (ddata.v1e0b74 - con(0x1)))
    SKW_DISPLAY_RIGHT_PANEL_SQUAD_HANDS();
  heroptrrg5->w36 = con(0x0);
  heroptrrg5->b2a[con(0x2)] = con(0x0);
  heroptrrg5->b2a[con(0x1)] = con(0x0);
  heroptrrg5->b2a[con(0x0)] = con(0x0);
  heroptrrg5->u32.b.b1 |= con(0x40);
  if ((eaxw + con(0x1)) == ddata.v1e0976)
  {
    if (ddata.v1e0228)
    {
      ddata.v1e0228 = false;
      SKW_FIRE_MOUSE_RELEASE_CAPTURE();
      if (ddata.savegamewpc.w0 != con(0xffffffff))
        SKW_DISPLAY_TAKEN_ITEM_NAME(ddata.savegamewpc.w0);
      ddata.mouse_visibility = con(0x1);
      SKW_FIRE_SHOW_MOUSE_CURSOR();
    }
    if (ddata.v1e0220)
    {
      ddata.v1e0220 = false;
      SKW_FIRE_MOUSE_RELEASE_CAPTURE();
      ddata.mouse_visibility = con(0x1);
      SKW_FIRE_SHOW_MOUSE_CURSOR();
    }
    SKW_24a5_1798(con(0x4));
  }
  if (eaxw == ddata.mouse_unk0e)
  {
    if (ddata.v1e0224)
    {
      ddata.v1e0224 = false;
      SKW_FIRE_MOUSE_RELEASE_CAPTURE();
      ddata.mouse_visibility = con(0x1);
      SKW_FIRE_SHOW_MOUSE_CURSOR();
    }
  }
  SKW_DROP_PLAYER_ITEMS(eaxw);
  vw_00 = signedword(heroptrrg5->b1d);
  x16 wordrg40 = SKW_ALLOC_NEW_RECORD(con(0x800a));
  if (wordrg40 != con(0xffffffff))
  {
    recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg40);
    recoptrrg1->u2.b.b0 |= con(0xffffff80);
    recoptrrg1->u2.w &= con(0x3f80);
    recoptrrg1->u2.w |= (eaxw & con(0x3)) << con(0xe);
    wordrg40 &= con(0x3fff);
    SKW_MOVE_RECORD_TO((vw_00 << con(0xe)) | wordrg40, con(0x0), ddata.v1e0270, con(0xffffffff), ddata.v1e0272);
  }
  SKW_FIRE_HIDE_MOUSE_CURSOR();
  heroptrrg5->b1e = con(0x0);
  heroptrrg5->t22[con(0x0)] = con(0x0);
  heroptrrg5->b1c = CUTX8(ddata.v1e0258);
  heroptrrg5->t22[0x7] = con(0x0);
  if ((((vw_00 + con(0x4) - ddata.v1e0258) & con(0x3)) + con(0x1)) == ddata.v1e00b8)
    SKW_CHAMPION_SQUAD_RECOMPUTE_POSITION();
  if (heroptrrg5->b1f != con(0x0))
    SKW_2c1d_1bb5(eaxw, con(0x2710));
  ui16 uwordrg4 = con(0x0);
  while (uwordrg4 < ddata.savegamew2)
  {
    if (ddata.hero[uwordrg4].w36 != con(0x0))
      break;
    uwordrg4++;
  }
  if (uwordrg4 != ddata.savegamew2)
  {
    if (eaxw == ddata.mouse_unk0e)
      SKW_SELECT_CHAMPION_LEADER(uwordrg4);
  }
  else
  {
    ddata.v1e0250 = true;
    SKW_1031_098e();
    ddata.v1e0238 = false;
    ddata.v1e13f0 = false;
  }
  R_107B0();
  SKW_FIRE_SHOW_MOUSE_CURSOR();
}

// was SKW_2c1d_1b0f
void SKW_PROCESS_POISON(x16 eaxw, x16 edxw)
{
  c_hero* heroptrrg5;
  c_tim vtim_04;

  x16 wordrg6 = edxw;
  if ((eaxw == con(0xffffffff)) || ((eaxw + con(0x1)) == ddata.v1e0288))
    return;
  heroptrrg5 = &ddata.hero[eaxw];
  SKW_WOUND_PLAYER(eaxw, con(0x0), con(0x0), DM2_MAX(con(0x1), (wordrg6 + con(0x1e)) >> con(0x6)));
  heroptrrg5->u32.b.b1 |= con(0x28);
  if (--wordrg6 == con(0x0))
    return;
  if ((signedlong(heroptrrg5->w48) + unsignedlong(wordrg6)) > con(0xc00))
  {
    wordrg6 = con(0xc00) - heroptrrg5->w48;
    if (wordrg6 == con(0x0))
      return;
  }
  heroptrrg5->w48 += wordrg6;
  heroptrrg5->b1f += con(0x1);
  vtim_04.b_04 = con(0x4b);
  vtim_04.b_05 = CUTX8(eaxw);
  vtim_04.un.l_00 = (ddata.longmallocx + con(0x24)) | (signedlong(ddata.v1e0266) << con(0x18));
  vtim_04.u.w_06 = wordrg6;
  SKW_QUEUE_TIMER(&vtim_04);
}

// TODO: eaxw is requested as byte only
void SKW_INVOKE_MESSAGE(x16 eaxw, x8 ebxb, ui16 ecxuw, x16 edxw, x32 argl0)
{
  c_tim vtim_00;

  vtim_00.un.l_00 = argl0 | (signedlong(ddata.v1d3248) << con(0x18));
  vtim_00.b_04 = con(0x4);
  if (ecxuw < con(0x1))
  {
    if (ecxuw == con(0x0))
      vtim_00.b_05 = con(0x1);
  }
  else if (ecxuw <= con(0x1))
    vtim_00.b_05 = con(0x3);
  else if (ecxuw == con(0x2))
    vtim_00.b_05 = con(0x2);
  vtim_00.u.b.b_06 = CUTX8(eaxw);
  vtim_00.u.b.b_07 = CUTX8(edxw);
  vtim_00.v.b.b_08 = ebxb;
  vtim_00.v.b.b_09 = CUTX8(ecxuw);
  SKW_QUEUE_TIMER(&vtim_00);
}

bool SKW_32cb_35c1(x16* eaxpw, x16 ebxw, x16 ecxw, x16* edxpw)
{
  x16 wordrg5 = ebxw;
  x16 wordrg1 = ecxw;
  x16 wordrg3 = *eaxpw;
  x16 wordrg2 = *edxpw;
  if (wordrg1 != con(0x0))
  {
    wordrg1 *= con(0x5);
    wordrg2 -= wordrg1;
    if (wordrg2 >= con(0x0))
    {
      if (wordrg2 > con(0x18))
      {
        wordrg3 = signedword(table1d6a74[wordrg3].barr_00[3]);
        wordrg2 -= con(0x14);
      }
    }
    else
    {
      wordrg3 = signedword(table1d6a74[wordrg3].barr_00[2]);
      wordrg2 += con(0x14);
    }
    if (wordrg3 < con(0x0))
      return false;
  }
  if (wordrg5 != con(0x0))
  {
    x16 wordrg1 = (wordrg2 % con(0x5)) + wordrg5;
    if (wordrg1 <= con(0x4))
    {
      if (wordrg1 >= con(0x0))
        wordrg2 += wordrg5;
      else
      {
        wordrg5 += con(0x4);
        wordrg2 += wordrg5;
        wordrg3 = signedword(table1d6a74[wordrg3].barr_00[0]);
      }
    }
    else
    {
      wordrg5 -= con(0x4);
      wordrg2 += wordrg5;
      wordrg3 = signedword(table1d6a74[wordrg3].barr_00[1]);
    }
    if (wordrg3 < con(0x0))
      return false;
  }
  *eaxpw = wordrg3;
  *edxpw = wordrg2;
  return true;
}

void SKW_SHOW_ATTACK_RESULT(ui16 eaxuw)
{
  x8 byterg5;
  c_c5rects* sptrrg3;
  c_image vs_00;
  t_text t_13c[0x8];
  x8 vb_144; // inc8
  bool skip = false; // added this flag

  SKW_29ee_00a3(true);
  vb_144 = con(0x4);
  x8 byterg1 = con(0x1);
  if (!(eaxuw & 0x8000)) // BUGFIX 5.1/2014
    skip = true;
  else if (eaxuw < con(0xfffe))
  {
    if (eaxuw == con(0xfffa))
    {
      byterg1 = con(0x19);
      skip = true;
    }
  }
  else if (eaxuw == con(0xfffe))
  {
    byterg1 = con(0x17);
    skip = true;
  }
  else if (eaxuw == con(0xffff))
  {
    byterg1 = con(0x18);
    skip = true;
  }
  if (!skip)
  {
    vb_144 = con(0x5);
    if (eaxuw != con(0xfffd))
    {
      if (eaxuw != con(0xfffc))
        byterg1 = con(0xd);
      else
        byterg1 = con(0xc);
    }
    else
      byterg1 = con(0xe);
  }
  SKW_QUERY_GDAT_SUMMARY_IMAGE(&vs_00, vb_144, byterg1, con(0x1));
  if (!(eaxuw & 0x8000) && eaxuw <= con(0x28)) // BUGFIX 5.1/2014
  {
    if (eaxuw <= con(0xf))
      vs_00.w_34 = con(0x1f);
    else
      vs_00.w_34 = con(0x2f);
    vs_00.w_36 = con(0x35);
  }
  SKW_0b36_11c0(SKW_QUERY_PICST_IT(&vs_00), con(0x39), con(0xffffffff), &ddata.v1d694c);
  if (!(eaxuw & 0x8000)) // BUGFIX 5.1/2014
  {
    x16 uwordrg5 = eaxuw;
    x16 wordrg2 = con(0x5);
    t_13c[0x5] = con(0x0);
    x16 wordrg3;
    do
    {
      x16 wordrg11 = signedlong(uwordrg5);
      wordrg11 /= con(0xa);
      wordrg3 = --wordrg2;
      t_13c[wordrg3] = CUTX8((uwordrg5 % con(0xa)) + con(0x30));
      wordrg11 /= con(0xa);
      uwordrg5 = wordrg11;
    } while (uwordrg5 != con(0x0));
    SKW_DRAW_SIMPLE_STR(&ddata.v1d694c, unsignedword(ddata.paletteptr1[con(0x4)]), unsignedword(ddata.paletteptr1[con(0x0)]), con(0x39), t_13c + wordrg3);
    return;
  }
  if (eaxuw != con(0xfffe))
    return;
  sptrrg3 = &ddata.v1d694c;
  SKW_DRAW_ICON_PICT_ENTRY(con(0x7), ddata.v1e0b72 != con(0x0) ? con(0x34) : con(0x38), sptrrg3, con(0x0), con(0x7e), con(0xffff));
  vb_144 = con(0x0);
  for(;;)
  {
    if (UI8CAST(vb_144) >= UI8CAST(con(0xffffffff)))
      return;
    byterg5 = vb_144;
    x16 wordrg1 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x10), con(0xb), con(0x5), byterg5);
    if (wordrg1 != con(0x0))
      if ((wordrg1 & con(0x8000)) == con(0x0) && (ddata.v1e0b78 & wordrg1) != con(0x0))
      {
        SKW_DRAW_ICON_PICT_ENTRY(con(0x10), con(0x18), &ddata.v1d694c, byterg5, con(0x7d), con(0xffff));
        return;
      }
    vb_144++;
  }
}

void SKW_CLICK_MONEYBOX(x16 eaxw)
{
  bool skip = false; // added

  if (ddata.v1d67bc != con(0x4))
    return;
  x16 wordrg3 = ddata.v1e0b74 - con(0x1);
  x16 wordrg1 = ddata.hero[wordrg3].warrc3[ddata.v1e0b76];
  if (ddata.savegamewpc.w0 == con(0xffffffff))
  {
    x16 wordrg2 = wordrg1;
    x16 wordrg11 = SKW_TAKE_COIN_FROM_WALLET(wordrg2, SKW_GET_ITEM_ORDER_IN_CONTAINER(wordrg2, eaxw));
    if (wordrg11 == con(0xffffffff))
      skip = true;
    else
      SKW_TAKE_OBJECT(wordrg11, false);
  }
  else
  {
    if (!SKW_ADD_COIN_TO_WALLET(wordrg1, ddata.savegamewpc.w0))
      skip = true;
    else
      SKW_REMOVE_OBJECT_FROM_HAND();
  }
  if (!skip)
  {
    ddata.v1e0b6c = con(0x1);
    SKW_UPDATE_RIGHT_PANEL(false);
  }
  SKW_CALC_PLAYER_WEIGHT(wordrg3);
}

// was SKW_29ee_058d
void SKW_DRAW_SQUAD_SPELL_AND_LEADER_ICON(x16 eaxw, bool edxbool)
{
  c_image vs_00;
  c_rect rc_13c;
  x8 vb_148;
  bool skip = false; // added

  SKW_29ee_00a3(false);
  x16 wordrg5 = (unsignedword(ddata.hero[eaxw].b1d) + con(0x4) - ddata.v1e0258) & con(0x3);
  SKW_FILL_RECT_SUMMARY(&ddata.v1d694c, ddata.paletteptr1[0], SKW_QUERY_EXPANDED_RECT(wordrg5 + con(0x4f), &rc_13c));
  if (ddata.hero[eaxw].w36 == con(0x0))
    return;
  x16 vw_144;
  if (wordrg5 != con(0x1) && wordrg5 != con(0x2))
    vw_144 = con(0x0);
  else
    vw_144 = con(0x1);
  x8 byterg1;
  if (wordrg5 > con(0x1))
  {
    vb_148 = con(0xc);
    byterg1 = con(0x8);
  }
  else
  {
    vb_148 = con(0xa);
    byterg1 = con(0x6);
  }
  if (eaxw == ddata.mouse_unk0e)
    vb_148++;
  if (edxbool)
    byterg1++;
  SKW_QUERY_GDAT_SUMMARY_IMAGE(&vs_00, con(0x4), byterg1, con(0x1));
  vs_00.w_32 = vw_144;
  SKW_0b36_11c0(SKW_QUERY_PICST_IT(&vs_00), wordrg5 + con(0x57), con(0x4), &ddata.v1d694c);
  if (!ddata.v1e0238)
    if (ddata.hero[eaxw].b2a[2] == con(0x0))
      skip = true;
  if (!skip)
  {
    vs_00.rc_24.x += ddata.v1d694c.s_00.rc_02.x;
    vs_00.rc_24.y += ddata.v1d694c.s_00.rc_02.y;
    SKW_0b36_105b(&ddata.v1d694c, con(0x0), &vs_00.rc_24);
  }
  SKW_QUERY_GDAT_SUMMARY_IMAGE(&vs_00, con(0x4), vb_148, con(0x1));
  vs_00.w_32 = vw_144;
  wordrg5 += con(0x53);
  SKW_0b36_11c0(SKW_QUERY_PICST_IT(&vs_00), wordrg5, con(0x4), &ddata.v1d694c);
  if (ddata.v1e0238)
  {
    vs_00.rc_24.x += ddata.v1d694c.s_00.rc_02.x;
    vs_00.rc_24.y += ddata.v1d694c.s_00.rc_02.y;
    SKW_0b36_105b(&ddata.v1d694c, con(0x0), &vs_00.rc_24);
  }
}

// TODO: new name: DM2_HANDLE_LOADGAME_BOX
x16 SKW_1031_030a(s_bbw* eaxpbbw, x16 ebxw, x16 ecxw, x16 edxw)
{
SPX_DEBUG_PUSH_FUNCTION_INFO("SKW_1031_030a/DM2_HANDLE_LOADGAME_BOX");
SPX_DEBUG_MESSAGE_INFO("Rects: %08x / Mouse info : X:%03d Y:%03d B:%02d\n", eaxpbbw, edxw, ebxw, ecxw);
  x8 byterg5;
  x8* bptrrg6;
  s_bbw* sbbwptrrg5;
  x16 vw_04;
  x16 vw_08;
  s_bbw* pbbw_0c;
  c_rect rc_10;

  pbbw_0c = eaxpbbw;
  vw_08 = edxw;
  vw_04 = ebxw;
  x16 wordrg3 = con(0x0);
  bptrrg6 = SKW_1031_023b(eaxpbbw);
  do
  {
    bool skip = false; // added
    bool boolrg1;
    byterg5 = *bptrrg6;
    byterg5 &= con(0xffffff7f);
    sbbwptrrg5 = &table1d3ba0[byterg5];
    switch (pbbw_0c->b0 & con(0x7f))
    {
      case 0:
        boolrg1 = SKW_RETURN_1();
      break;

      case 1:
        boolrg1 = SKW_IS_GAME_ENDED(sbbwptrrg5);
      break;

      case 2:
        boolrg1 = SKW_1031_0023(sbbwptrrg5);
      break;

      case 3:
        boolrg1 = SKW_1031_003e(sbbwptrrg5);
      break;

      case 4:
        boolrg1 = SKW_1031_007b(sbbwptrrg5);
      break;

      case 5:
        boolrg1 = SKW_1031_009e(sbbwptrrg5);
      break;

      case 6:
        boolrg1 = SKW_1031_00c5(sbbwptrrg5);
      break;

      case 7:
        boolrg1 = SKW_1031_00f3(sbbwptrrg5);
      break;

      case 8:
        boolrg1 = SKW_1031_012d(sbbwptrrg5);
      break;

      case 9:
        boolrg1 = SKW_1031_014f(sbbwptrrg5);
      break;

      case 10:
        boolrg1 = SKW_1031_0184(sbbwptrrg5);
      break;

      case 11:
        boolrg1 = SKW_1031_01ba(sbbwptrrg5);
      break;

      default: throw(THROW_DMABORT);
    }
    if (boolrg1)
    {
      x16 wordrg1;
      if ((sbbwptrrg5->b0 & con(0x80)) != con(0x80))
      {
        if (!SKW_PT_IN_RECT(SKW_1031_01d5(table1d3d23[sbbwptrrg5->w2].w0, &rc_10), vw_08, vw_04))
          skip = true;
        else
        {
          wordrg3 = ecxw;
          wordrg1 = SKW_1031_0a88(SKW_1031_024c(sbbwptrrg5), vw_04, wordrg3, vw_08);
        }
      }
      else
      {
        wordrg3 = ecxw;
        wordrg1 = SKW_1031_030a(sbbwptrrg5, vw_04, wordrg3, vw_08);
      }
      if (!skip)
      {
        wordrg3 = wordrg1;
        if (wordrg1 != con(0x0))
		{
SPX_DEBUG_POP
          return wordrg3;
		}
      }
    }
  } while ((*(++bptrrg6) & con(0xffffff80)) == con(0x0));
SPX_DEBUG_POP
  return wordrg3;
}

void SKW_1031_027e(s_bbw* eaxpbbw)
{
  s_bbw* sbbwptrrg4;
  x8* bptrrg2;

  bptrrg2 = SKW_1031_023b(eaxpbbw);
  do
  {
    x8 byterg1;
    sbbwptrrg4 = &table1d3ba0[*bptrrg2 & con(0x7f)];
    switch (eaxpbbw->b0 & con(0x7f))
    {
      case 0:
        byterg1 = SKW_RETURN_1();
      break;

      case 1:
        byterg1 = SKW_IS_GAME_ENDED(sbbwptrrg4);
      break;

      case 2:
        byterg1 = SKW_1031_0023(sbbwptrrg4);
      break;

      case 3:
        byterg1 = SKW_1031_003e(sbbwptrrg4);
      break;

      case 4:
        byterg1 = SKW_1031_007b(sbbwptrrg4);
      break;

      case 5:
        byterg1 = SKW_1031_009e(sbbwptrrg4);
      break;

      case 6:
        byterg1 = SKW_1031_00c5(sbbwptrrg4);
      break;

      case 7:
        byterg1 = SKW_1031_00f3(sbbwptrrg4);
      break;

      case 8:
        byterg1 = SKW_1031_012d(sbbwptrrg4);
      break;

      case 9:
        byterg1 = SKW_1031_014f(sbbwptrrg4);
      break;

      case 10:
        byterg1 = SKW_1031_0184(sbbwptrrg4);
      break;

      case 11:
        byterg1 = SKW_1031_01ba(sbbwptrrg4);
      break;

      default: throw(THROW_DMABORT);
    }
    if (byterg1)
    {
      if ((sbbwptrrg4->b0 & con(0xffffff80)) != con(0xffffff80)) // BUGFIX 4/2014 CRITICAL: don't compare with con(0x80) because left side already long (con is 32bit, so expands the expression!)
        table1d3d23[sbbwptrrg4->w2].b6 |= con(0x40);
      else
        SKW_1031_027e(sbbwptrrg4);
    }
    bptrrg2++;
  } while ((*bptrrg2 & con(0xffffff80)) == con(0x0));
}

x8 SKW_QUERY_CLS2_OF_TEXT_RECORD(x16 eaxw)
{
  c_record* recoptrrg4;

  recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  if ((recoptrrg4->u2.w & con(0x6)) != con(0x2))
    return con(0xffffffff);
  ui16 uwordrg1 = urshift(recoptrrg4->u2.w, con(0xb)) & con(0x1f);
  if (uwordrg1 < con(0x2))
  {
    if (uwordrg1 != con(0x0))
      return con(0xffffffff);
  }
  else if (uwordrg1 > con(0x2))
  {
    if (uwordrg1 < con(0x5))
      return con(0xffffffff);
    if (uwordrg1 > con(0x5))
      if (uwordrg1 != con(0xd))
        return con(0xffffffff);
  }
  return CUTX8(urshift(recoptrrg4->u2.w, con(0x3)));
}

bool SKW_IS_CREATURE_ALLOWED_ON_LEVEL(x16 eaxw, x16 edxw)
{
  s_size10* s10ptrrg2;
  x8* bptrrg4;

  if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(eaxw) & con(0x4000)) != con(0x0))
    return true;
  x8 byterg3 = SKW_QUERY_CLS2_FROM_RECORD(eaxw);
  s10ptrrg2 = &ddata.v1e03c8[edxw];
  x8*** helpptr1 = &ddata.v1e03cc[edxw];
  x8** helpptr2 = *helpptr1 + ulrshift(s10ptrrg2->w8, con(0x5), con(0xb));
  x8* helpptr3 = *helpptr2 + urshift(s10ptrrg2->w8, con(0xb)); // NOTE: offset gets full added! no / 4; ofc, it's a x8* now, no more x8** - dangerous!
  bptrrg4 = helpptr3 + con(0x1);
  x16 wordrg1 = ulrshift(s10ptrrg2->wc, con(0x8), con(0xc));
  for(;;)
  {
    if (wordrg1 <= con(0x0))
      return false;
    if (byterg3 == *bptrrg4++)
      return true;
    wordrg1--;
  }
}

x16 SKW_QUERY_ITEM_VALUE(x16 eaxw, x8 edxb)
{
  c_record* recoptrrg2;
  x8 vb_04;

  vb_04 = edxb;
  if (eaxw == con(0xffffffff))
    return con(0x0);
  x16 wordrg3 = eaxw;
  x16 wordrg5 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg3, vb_04);
  if (vb_04 == con(0x1))
  {
    x16 wordrg61 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg3, con(0x34));
    if (wordrg61 > con(0x0))
      wordrg5 += SKW_ADD_ITEM_CHARGE(wordrg3, con(0x0)) * wordrg61;
  }
  if (vb_04 == con(0x2))
  {
    x16 wordrg62 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(eaxw, con(0x35));
    if (wordrg62 > con(0x0))
      wordrg5 += SKW_ADD_ITEM_CHARGE(eaxw, con(0x0)) * wordrg62;
    if (urshift(eaxw & con(0x3c00), con(0xa)) == con(0x8))
    {
      if (wordrg5 > con(0x1))
      {
        wordrg5 >>= con(0x1);
        wordrg5 += unsignedword(CUTX8(SKW_GET_ADDRESS_OF_RECORD(eaxw)->u2.w)) * wordrg5 / con(0xff);
      }
    }
  }
  if (urshift(eaxw & con(0x3c00), con(0xa)) != con(0x9) || (recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(eaxw), (recoptrrg2->u4.b.b0 & con(0x6)) != con(0x0)))
    return wordrg5;
  bool vbool_00 = SKW_IS_CONTAINER_MONEYBOX(eaxw);
  x16 wordrg2 = recoptrrg2->u2.w;
  x16 wordrg63 = con(0x0);
  for (;; wordrg2 = SKW_GET_NEXT_RECORD_LINK(wordrg2))
  {
    if (wordrg2 == con(0xfffffffe))
    {
      if (vbool_00)
      {
        if (vb_04 != con(0x1))
          wordrg5 += wordrg63;
        else
          wordrg5 += (wordrg63 + con(0x4)) / con(0x5);
      }
      return wordrg5;
    }
    if (!vbool_00 || (urshift(wordrg2 & con(0x3c00), con(0xa)) != con(0xa)))
      wordrg5 += SKW_QUERY_ITEM_VALUE(wordrg2, vb_04);
    else
      wordrg63 += SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg2, vb_04) * (ulrshift(SKW_GET_ADDRESS_OF_RECORD(wordrg2)->u2.w, con(0x2), con(0xa)) + con(0x1));
  }
}

x16 SKW_ADD_ITEM_CHARGE(x16 eaxw, x16 edxw)
{
  ui16 uwordrg5;
  c_record* recoptrrg1;
  c_record* recoptrrg3;

  uwordrg5 = eaxw;
  if (uwordrg5 == con(0xffffffff))
    return con(0x0);
  recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(uwordrg5);
  recoptrrg3 = recoptrrg1;
  uwordrg5 &= con(0x3c00);
  uwordrg5 = urshift(uwordrg5, con(0xa));
  x16 wordrg40 = con(0x0);
  x16 wordrg1;
  if (uwordrg5 < UI16CAST(con(0x6)))
  {
    if (uwordrg5 != con(0x5))
      return con(0x0);
    wordrg40 = urshift(4 * recoptrrg1->u2.w, con(0xc));
    wordrg1 = con(0xf);
  }
  else if (uwordrg5 <= UI16CAST(con(0x6)))
  {
    wordrg40 = urshift(8 * recoptrrg1->u2.w, con(0xc));
    wordrg1 = con(0xf);
  }
  else if (uwordrg5 == con(0xa))
  {
    wordrg40 = urshift(recoptrrg1->u2.w, con(0xe));
    wordrg1 = con(0x3);
  }
  else
    return wordrg40;
  wordrg40 += edxw;
  x16 wordrg4 = DM2_BETWEEN_VALUE(con(0x0), wordrg1, wordrg40);
  x16 wordrg21 = wordrg4 & con(0xf);
  if (uwordrg5 < UI16CAST(con(0x6)))
  {
    if (uwordrg5 == con(0x5))
    {
      recoptrrg3->u2.b.b1 &= con(0xffffffc3);
      wordrg21 <<= con(0xa);
      recoptrrg3->u2.w |= wordrg21;
    }
  }
  else if (uwordrg5 <= UI16CAST(con(0x6)))
  {
    recoptrrg3->u2.b.b1 &= con(0xffffffe1);
    wordrg21 <<= con(0x9);
    recoptrrg3->u2.w |= wordrg21;
  }
  else if (uwordrg5 == con(0xa))
  {
    recoptrrg3->u2.b.b1 &= con(0x3f);
    recoptrrg3->u2.w |= (wordrg4 & con(0x3)) << con(0xe);
  }
  return wordrg4;
}

bool SKW_ADD_COIN_TO_WALLET(x16 eaxw, x16 edxw)
{
  c_record* recoptrrg1;
  c_record* recoptrrg2;
  c_record* recoptrrg7;

  if (!SKW_IS_CONTAINER_MONEYBOX(eaxw))
    return false;
  if (!SKW_IS_MISCITEM_CURRENCY(edxw))
    return false;
  recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(edxw);
  recoptrrg7 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  x16 wordrg4 = recoptrrg7->u2.w;
  while (wordrg4 != con(0xfffffffe))
  {
    x16 wordrg1 = urshift(wordrg4 & con(0x3c00), con(0xa));
    if (wordrg1 != con(0xa))
      return wordrg1 != con(0x0);
    recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg4);
    x16 wordrg3 = recoptrrg1->u2.w & con(0x7f);
    if (wordrg3 == (recoptrrg2->u2.w & con(0x7f)) && ((recoptrrg1->u2.w & con(0x3f00)) < UI16CAST(con(0x3f00))))
    {
      x16 wordrg31 = ((urshift(4 * recoptrrg1->u2.w, con(0xa)) + con(0x1)) & con(0x3f)) << con(0x8);
      recoptrrg1->u2.b.b1 &= con(0xffffffc0);
      recoptrrg1->u2.w |= wordrg31;
      SKW_DEALLOC_RECORD(edxw);
      break;
    }
    wordrg4 = SKW_GET_NEXT_RECORD_LINK(wordrg4);
  }
  if (wordrg4 == con(0xfffffffe))
  {
    recoptrrg2->u2.b.b1 &= con(0xffffffc0);
    SKW_APPEND_RECORD_TO(edxw, con(0xffffffff), con(0x0), &recoptrrg7->u2.w);
  }
  return true;
}

// edxp is a wordarray - pointer, 0xa words
void SKW_COUNT_BY_COIN_TYPES(x16 eaxw, x16* edxpwarr)
{
  DM2_ZERO_MEMORY(DOWNCAST(x16, edxpwarr), con(0x14));
  for (x16 wordrg5 = SKW_GET_ADDRESS_OF_RECORD(eaxw)->u2.w; wordrg5 != con(0xfffffffe); wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5))
  {
    if (SKW_IS_MISCITEM_CURRENCY(wordrg5))
    {
      x16 wordrg6 = SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg5);
      x16 wordrg2 = con(0x0);
      while (wordrg2 < ddata.v1e03fe)
      {
        if (wordrg6 == ddata.v1e0394[wordrg2])
          edxpwarr[wordrg2] = edxpwarr[wordrg2] + urshift(4 * SKW_GET_ADDRESS_OF_RECORD(wordrg5)->u2.w, con(0xa)) + con(0x1);
        wordrg2++;
      }
    }
  }
}

void SKW_0cee_185a(s_8wordarray* eaxps, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x16 argw2, x16 argw3)
{
  x16* wptrrg4;
  x16 vw_04;
  x16 vw_08;

  vw_04 = ebxw;
  vw_08 = ecxw;
  x16 wordrg7 = ulrshift(ddata.v1e03c0->wa, con(0x8), con(0xc));
  argw3++;
  eaxps->warr_00[con(0x3)] = unsignedword(SKW_0cee_1815(edxw, argw2, ((argw1 & con(0x3)) + con(0x1)) * argw3, wordrg7, con(0x1e)));
  eaxps->warr_00[con(0x4)] = unsignedword(SKW_0cee_1815(vw_04, argw2, ((++argw1 & con(0x3)) + con(0x1)) * argw3, wordrg7, con(0x1e)));
  eaxps->warr_00[con(0x5)] = unsignedword(SKW_0cee_1815(vw_08, argw2, ((++argw1 & con(0x3)) + con(0x1)) * argw3, wordrg7, con(0x1e)));
  eaxps->warr_00[con(0x6)] = unsignedword(SKW_0cee_1815(argw0, argw2, ((++argw1 & con(0x3)) + con(0x1)) * argw3, wordrg7, con(0x1e)));
  argw3--;
  if (argw2 < con(0x0) || argw2 >= ddata.savegamewa)
  {
    if (argw3 >= con(0x0) && argw3 < ddata.savegamewb)
      return;
  }
  x16 wordrg2 = con(0x3);
  for(;;)
  {
    if (wordrg2 > con(0x6))
      return;
    wptrrg4 = &eaxps->warr_00[wordrg2];
    if (SKW_IS_WALL_ORNATE_ALCOVE(CUTX8(*wptrrg4)) != con(0x0))
      *wptrrg4 = con(0xff);
    wordrg2++;
  }
}

x16 SKW_ALLOC_NEW_RECORD(x16 eaxw)
{
  x16* wptrrg2;

  x16 wordrg5 = eaxw;
  x16 wordrg6 = ddata.savegamep4->w0[(eaxw & con(0x7fff)) + con(0x6)];
  if (wordrg5 != con(0xffff800a))
  {
    if (wordrg5 == con(0xa))
      wordrg6 -= con(0x3);
  }
  else
    wordrg5 = con(0xa);
  x16 wordrg1 = wordrg6;
  x16 wordrg3 = table1d280c[wordrg5];
  c_record* recoptr = ddata.savegameparr5[wordrg5];
  wptrrg2 = &recoptr->w0;
  for(;;) // TODO: ugly loopform
  {
    if (*wptrrg2 != con(0xffffffff))
    {
      if (--wordrg1 != con(0x0))
      {
        wordrg3 &= con(0xfffe);
        wptrrg2 += wordrg3 / 2;
        continue;
      }
      x16 wordrg11 = SKW_RECYCLE_A_RECORD_FROM_THE_WORLD(wordrg5, con(0xff));
      wordrg6 = wordrg11;
      if (wordrg6 == con(0xffffffff))
        return wordrg11;
      wptrrg2 = UPCAST(x16, DOWNCAST(c_record, SKW_GET_ADDRESS_OF_RECORD(wordrg11)));
    }
    else
    {
      wordrg6 -= wordrg1;
      wordrg6 |= wordrg5 << con(0xa);
    }
    DM2_ZERO_MEMORY(DOWNCAST(x16, wptrrg2), signedlong(wordrg3));
    *wptrrg2 = con(0xfffffffe);
    wordrg1 = wordrg5;
    if (wordrg1 == con(0x9))
      *(wptrrg2 + 1) = con(0xfffffffe);
    return wordrg6;
  }
}

void SKW_APPEND_RECORD_TO(x16 eaxw, x16 ebxw, x16 ecxw, x16* edxpw)
{
  x8* bptrrg2;
  x16* wptrrg1;
  x16* wptrrg31;
  x16* wptrrg32;

  x16 wordrg5 = ebxw;
  if (eaxw == con(0xfffffffe) || eaxw == con(0xffffffff))
    return;
  SKW_GET_ADDRESS_OF_RECORD(eaxw)->w0 = con(0xfffffffe);
  if (ebxw < con(0x0))
  {
    wptrrg1 = edxpw;
    for(;;)
    {
      wordrg5 = *wptrrg1;
      if (wordrg5 == con(0xfffffffe))
        break;
      wptrrg1 = &SKW_GET_ADDRESS_OF_RECORD(wordrg5)->w0;
    }
  }
  else
  {
    bptrrg2 = ddata.savegamepp1[ebxw] + ecxw;
    if ((*bptrrg2 & con(0x10)) != con(0x0))
    {
      x16 wordrg16 = SKW_GET_TILE_RECORD_LINK(ebxw, ecxw);
      x16 wordrg401;
      do
      {
        wordrg401 = wordrg16;
        wordrg16 = SKW_GET_NEXT_RECORD_LINK(wordrg16);
      } while (wordrg16 != con(0xfffffffe));
      wptrrg1 = &SKW_GET_ADDRESS_OF_RECORD(wordrg401)->w0;
    }
    else
    {
      if (ddata.v1e038c[(2 * ddata.savegamep4->w0[0x5] + con(0xfffffffe)) / 2] != con(0xffffffff))
        SKW_RAISE_SYSERR(con(0x48));
      *bptrrg2 |= con(0x10);
      wptrrg31 = &ddata.v1e03f4[wordrg5 + con(0x1)];
      x16 wordrg14 = ddata.v1e0408 - ddata.v1e03e4[ddata.v1d3248] - wordrg5 - con(0x1);
      for(;;)
      {
        if (--wordrg14 == con(0xffffffff))
          break;
        *wptrrg31++ += con(0x1);
      }
      x16 wordrg402 = con(0x0);
      bptrrg2 -= signedlong(ecxw);
      x16 wordrg13 = ddata.v1e03f4[wordrg5];
      for(;;)
      {
        if (wordrg402++ == ecxw)
          break;
        if ((*bptrrg2++ & con(0x10)) != con(0x0))
          wordrg13++;
      }
      wptrrg32 = &ddata.v1e038c[wordrg13];
      SKW_COPY_MEMORY(DOWNCAST(x16, wptrrg32), UI32CAST(2 * (ddata.savegamep4->w0[con(0x5)] - wordrg13 - con(0x1))), DOWNCAST(x16, (wptrrg32 + con(0x1))));
      *wptrrg32 = eaxw;
      return;
    }
  }
  *wptrrg1 = eaxw;
}

void SKW_CUT_RECORD_FROM(x16 eaxw, x16 ebxw, x16 ecxw, x16* edxpw)
{
  x16* wptrrg1;
  x16* wptrrg4;
  x16* wptrrg41;
  c_record* recoptrrg3;
  c_record* recoptrrg2;
  bool skip = false; // added

  x16 vw_00 = eaxw;
  x16 wordrg5 = ebxw;
  if (eaxw == con(0xfffffffe) || eaxw == con(0xffffffff))
    return;
  vw_00 &= con(0x3fff);
  x16 vw_08 = vw_00;
  recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(vw_00);
  recoptrrg3 = recoptrrg2;
  if (wordrg5 < con(0x0))
    wptrrg4 = edxpw;
  else
  {
    x16 wordrg1 = SKW_GET_OBJECT_INDEX_FROM_TILE(wordrg5, ecxw);
    x16 vw_0c = wordrg1;
    wptrrg1 = &ddata.v1e038c[wordrg1];
    if (recoptrrg2->w0 != con(0xfffffffe) || ((*wptrrg1 & con(0x3fff)) != vw_08))
    {
      if ((*wptrrg1 & con(0x3fff)) != vw_00)
        wptrrg4 = wptrrg1;
      else
      {
        *wptrrg1 = recoptrrg3->w0;
        skip = true;
      }
    }
    else
    {
      ddata.savegamepp1[wordrg5][ecxw] &= con(0xef);
      x16 wordrg402 = ddata.savegamep4->w0[5] - con(0x1);
      x16 vw_04 = wordrg402;
      wordrg402 -= vw_0c;
      wordrg402 = 2 * wordrg402;
      wptrrg4 = wptrrg1++;
      SKW_COPY_MEMORY(DOWNCAST(x16, wptrrg1), unsignedlong(wordrg402), DOWNCAST(x16, wptrrg4));
      ddata.v1e038c[vw_04] = con(0xffffffff);
      wptrrg1 = &ddata.v1e03f4[wordrg5 + con(0x1)];
      wordrg5 += ddata.v1e03e4[ddata.v1d3248];
      x16 wordrg2 = ddata.v1e0408 - wordrg5 - con(0x1);
      for(;;)
      {
        if (--wordrg2 == con(0xffffffff))
          break;
        wptrrg41 = wptrrg1++;
        *wptrrg41 -= con(0x1);
      }
      skip = true;
    }
  }
  if (!skip)
  {
    for(;;)
    {
      if ((*wptrrg4 == con(0xfffffffe)) || (*wptrrg4 & con(0x3fff)) == vw_00)
      {
        if (*wptrrg4 != con(0xfffffffe))
          *wptrrg4 = SKW_GET_NEXT_RECORD_LINK(*wptrrg4);
        break;
      }
      wptrrg1 = &SKW_GET_ADDRESS_OF_RECORD(*wptrrg4)->w0;
      wptrrg4 = wptrrg1;
    }
  }
  recoptrrg3->w0 = con(0xfffffffe);
}

c_record* R_D283(x16 eaxw, x16 edxw)
{
  c_record* recoptrrg7;
  c_5bytes vs_04;

  recoptrrg7 = NULL;
  x16 wordrg3 = eaxw;
  x8 byterg1 = SKW_GET_TILE_VALUE(wordrg3, edxw);
  if (urshift(unsignedword(byterg1), con(0x5)) != con(0x5))
    return recoptrrg7;
  byterg1 &= con(0x8);
  if (byterg1 == con(0x0))
    return recoptrrg7;
  if (!SKW_GET_TELEPORTER_DETAIL(&vs_04, edxw, eaxw + con(0x1)))
    if (!SKW_GET_TELEPORTER_DETAIL(&vs_04, edxw, eaxw - con(0x1)))
      if (!SKW_GET_TELEPORTER_DETAIL(&vs_04, edxw + con(0x1), wordrg3))
        if (!SKW_GET_TELEPORTER_DETAIL(&vs_04, edxw - con(0x1), wordrg3))
          return recoptrrg7;
  recoptrrg7 = SKW_GET_ADDRESS_OF_TILE_RECORD(eaxw, edxw);
  if (unsignedword(vs_04.b_04) != urshift(recoptrrg7->u4.w, con(0x8)))
    return NULL;
  if (SKW_CALC_SQUARE_DISTANCE(unsignedword(vs_04.b_02), recoptrrg7->u2.w & con(0x1f), ulrshift(recoptrrg7->u2.w, con(0x6), con(0xb)), unsignedword(vs_04.b_03)) == con(0x1))
    return recoptrrg7;
  return NULL;
}

x8 SKW_0cee_0897(x16** eaxppw, x16 ebxw, x16 edxw)
{
  if ((((SKW_GET_TILE_VALUE(edxw, ebxw) & con(0xff)) >> con(0x5)) & con(0xff)) != con(0x5))
    return con(0x0);
  x16 wordrg4 = SKW_GET_TILE_RECORD_LINK(edxw, ebxw);
  *eaxppw = &SKW_GET_ADDRESS_OF_RECORD(wordrg4)->w0;
  x16 wordrg2;
  do
  {
    wordrg4 = SKW_GET_NEXT_RECORD_LINK(wordrg4);
    if (wordrg4 == con(0xfffffffe))
      return con(0x0);
    wordrg2 = urshift(wordrg4 & con(0x3c00), con(0xa));
  } while ((wordrg2 != con(0x3)) || (SKW_GET_ADDRESS_OF_RECORD(wordrg4)->u2.w & con(0x7f)) != con(0x27));
  return CUTX8(((ulrshift(*((*eaxppw) + con(0x1)), con(0x4), con(0xe)) + con(0x2)) & wordrg2) + con(0x1));
}

// TODO: ecxw can be x8 only
// TODO: return could be bool (if so, vw_10 is too)
x16 SKW_0b36_1446(c_hex18* eaxph18, x16 ebxw, x16 ecxw, x16 edxw)
{
  t_gfxdata* gptrrg4;
  t_gfxdata* destbmp; // was gptrrg5
  t_gfxdata* gptrrg6;
  x16 vw_04;
  x16 srcofs; // was vw_08
  c_hex18* ph18_0c;
  t_gfxdata* pg_14;
  e_bitres vw_18;
  x16 vw_1c;
  x16 vw_20;

  ph18_0c = eaxph18;
  srcofs = edxw;
  vw_04 = ebxw;
  pg_14 = SKW_QUERY_PICT_BITMAP(eaxph18);
  if (pg_14 == NULL)
    return con(0xffffffff);
  vw_18 = e_bitres(ph18_0c->w_16);
  vw_1c = SKW_3e74_5888();
  SKW_ALLOC_NEW_PICT(vw_1c, con(0x1), CUTX8(vw_18), ((vw_18 == con(0x4)) ? 1 : 0) + con(0x1));
  vw_20 = SKW_3e74_5888();
  gptrrg6 = SKW_ALLOC_NEW_PICT(vw_20, con(0x1), CUTX8(vw_18), ((vw_18 == con(0x4)) ? 1 : 0) + con(0x1));
  destbmp = SKW_3e74_5817(vw_1c);
  SKW_FILL_ENTIRE_PICT(destbmp, CUTX8(ecxw));
  SKW_FILL_ENTIRE_PICT(gptrrg6, CUTX8(ecxw));
  s_gfxdatatail* ptrbefore = getprevious(pg_14);
//                        srcbmp                                                                         srcofs destbmp                                                                               srcbits destbits
  SKW_FIRE_BLIT_PICTURE(SKW_QUERY_PICT_BITMAP(ph18_0c), SKW_ALLOC_TEMP_ORIGIN_RECT(con(0x1), con(0x1)), srcofs, destbmp, vw_04, ptrbefore->w2, ((vw_18 == con(0x4)) ? 1 : 0) + con(0x1), ecxw, con(0x0), vw_18, vw_18);
  x16 vw_10 = con(0x1);
  x16 wordrg32 = CUTX16(SKW_CALC_IMAGE_BYTE_LENGTH(destbmp));
  x16 wordrg1 = con(0x0);
  for(;;) // TODO: ugly loopform
  {
    if (wordrg1 < wordrg32)
    {
      gptrrg4 = gptrrg6++;
      if (*destbmp++ == *gptrrg4)
      {
        wordrg1++;
        continue;
      }
      vw_10 = con(0x0);
    }
    SKW_3e74_58a3(vw_1c);
    SKW_3e74_58a3(vw_20);
    return vw_10;
  }
}

x8 SKW_GET_TILE_VALUE(x16 eaxw, x16 edxw)
{
  x8 vb_00;
  x16 vw_04;

  x16 wordrg3 = edxw;
  if ((edxw < con(0x0)) || (wordrg3 >= ddata.savegamewb))
    vw_04 = 0x0;
  else
    vw_04 = 0x1;
  bool boolrg5;
  if ((eaxw < con(0x0)) || (eaxw >= ddata.savegamewa))
    boolrg5 = false;
  else
    boolrg5 = true;
  if (boolrg5 && vw_04 != con(0x0))
    return ddata.savegamepp1[eaxw][wordrg3];
  x16 wordrg2 = eaxw;
  x16 wordrg18 = eaxw - con(0x1);
  x16 wordrg4;
  if (vw_04 == con(0x0))
  {
    if (!boolrg5)
    {
      if (wordrg2 != con(0xffffffff))
      {
        if (wordrg2 != ddata.savegamewa)
          return con(0xffffffe0);
        wordrg2 = wordrg18;
      }
      else
        wordrg2 = con(0x0);
      if (wordrg3 == con(0xffffffff))
        if (SKW_IS_TILE_PASSAGE(wordrg2, con(0x0)))
          return con(0x0);
      if (wordrg3 != ddata.savegamewb)
        return con(0xffffffe0);
      wordrg3--;
      wordrg4 = wordrg3;
    }
    else
    {
      if (wordrg3 != con(0xffffffff))
      {
        if (wordrg3 != ddata.savegamewb)
          return con(0xffffffe0);
        vw_04 = con(0x8);
        wordrg3--;
      }
      else
      {
        wordrg3 = con(0x0);
        vw_04 = con(0x2);
      }
      if (SKW_IS_TILE_PASSAGE(wordrg2, wordrg3))
        return CUTX8(vw_04);
      if (wordrg2 > con(0x0))
        if (SKW_IS_TILE_PASSAGE(wordrg2 - con(0x1), wordrg3))
          return con(0x0);
      if ((wordrg2 + con(0x1)) >= ddata.savegamewa)
        return con(0xffffffe0);
      wordrg4 = wordrg3;
      wordrg2++;
    }
  }
  else
  {
    if (wordrg2 != con(0xffffffff))
    {
      if (wordrg2 != ddata.savegamewa)
        return con(0xffffffe0);
      vb_00 = con(0x1);
      wordrg2 = wordrg18;
    }
    else
    {
      wordrg2 = con(0x0);
      vb_00 = con(0x4);
    }
    if (SKW_IS_TILE_PASSAGE(wordrg2, wordrg3))
      return vb_00;
    if (wordrg3 > con(0x0))
      if (SKW_IS_TILE_PASSAGE(wordrg2, wordrg3 - con(0x1)))
        return con(0x0);
    if ((wordrg3 + con(0x1)) >= ddata.savegamewb)
      return con(0xffffffe0);
    wordrg3++;
    wordrg4 = wordrg3;
  }
  if (!SKW_IS_TILE_PASSAGE(wordrg2, wordrg4))
    return con(0xffffffe0);
  return con(0x0);
}

x16 SKW_LOCATE_OTHER_LEVEL(x16 eaxw, x16* ebxpw, x16* ecxpw, x16 edxw, x8** argpp0)
{
  x8* bptrrg2;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;

  vw_10 = *ebxpw + unsignedword(ddata.v1e03c8[eaxw].b4[con(0x2)]);
  vw_08 = *ecxpw + unsignedword(ddata.v1e03c8[eaxw].b4[con(0x3)]);
  x16 wordrg1 = edxw + (ddata.v1e03c8[eaxw].w8 & con(0x3f));
  if (wordrg1 >= con(0x0) && wordrg1 < con(0x3f))
  {
    x8 byterg4 = ddata.v1e03f0[wordrg1];
    if (byterg4 != con(0xffffffff))
    {
      if ((argpp0 == NULL) || (*argpp0 == NULL))
        bptrrg2 = ddata.v1e03dc + byterg4;
      else
        bptrrg2 = DOWNCAST(x32, *argpp0) + con(0x1);
      for (;; bptrrg2++)
      {
        vw_14 = signedword(*bptrrg2);
        if (signedlong(*bptrrg2) == con(0xffffffff))
          break;
        x16 wordrg32 = unsignedword(ddata.v1e03c8[vw_14].b4[con(0x2)]);
        if (vw_10 < (unsignedword(ddata.v1e03c8[vw_14].b4[con(0x2)]) - con(0x1)))
          continue;
        x16 wordrg51 = ulrshift(ddata.v1e03c8[vw_14].w8, con(0x5), con(0xb));
        if (UI32CAST(signedlong(vw_10)) > UI32CAST(wordrg32 + wordrg51 + con(0x1)))
          continue;
        x16 wordrg52 = unsignedword(ddata.v1e03c8[vw_14].b4[con(0x3)]);
        if (vw_08 < (unsignedword(ddata.v1e03c8[vw_14].b4[con(0x3)]) - con(0x1)))
          continue;
        if (UI32CAST(signedlong(vw_08)) > UI32CAST((urshift(ddata.v1e03c8[vw_14].w8, con(0xb)) + wordrg52 + con(0x1))))
          continue;
        x16 wordrg31 = vw_10 - wordrg32;
        x16 wordrg53 = vw_08 - wordrg52;
        vw_0c = ddata.v1d3248;
        SKW_CHANGE_CURRENT_MAP_TO(vw_14);
        vw_18 = unsignedword((SKW_GET_TILE_VALUE(wordrg31, wordrg53) & con(0xff)) >> con(0x5));
        if (vw_18 == con(0x5))
          if ((SKW_GET_ADDRESS_OF_TILE_RECORD(wordrg31, wordrg53)->u4.b.b0 & con(0x1)) != con(0x0))
            vw_18 = con(0x7);
        SKW_CHANGE_CURRENT_MAP_TO(vw_0c);
        if (vw_18 != con(0x7))
        {
          *ebxpw = wordrg31;
          *ecxpw = wordrg53;
          if (argpp0 != NULL)
            *argpp0 = bptrrg2;
          return vw_14;
        }
      }
    }
  }
  if (argpp0 != NULL)
    *argpp0 = NULL;
  return con(0xffffffff);
}

x16 SKW_FIND_LADDAR_AROUND(x16 eaxw, x16 ebxw, c_record** ecxpp, x16 edxw)
{
  c_record* recoptrrg1;
  c_record** recopptrrg7;

  recopptrrg7 = ecxpp;
  for (x16 vw_08 = con(0x0); vw_08 <= con(0x3); vw_08++)
  {
    for (x16 wordrg11 = SKW_GET_TILE_RECORD_LINK(eaxw + table1d27fc[vw_08], edxw + table1d2804[vw_08]); wordrg11 != con(0xfffffffe); wordrg11 = SKW_GET_NEXT_RECORD_LINK(wordrg11))
    {
      x16 wordrg400 = urshift(wordrg11 & con(0x3c00), con(0xa));
      if (wordrg400 > con(0x3))
        break;
      if (wordrg400 == con(0x3) || wordrg400 == con(0x2))
      {
        recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg11);
        if (wordrg400 != con(0x3))
        {
          if ((recoptrrg1->u2.w & con(0x6)) == con(0x2))
          {
            x16 wordrg401 = urshift(recoptrrg1->u2.w, con(0x3));
            ui16 uwordrg1 = urshift(wordrg401, con(0x8)) & con(0x1f);
            if (uwordrg1 > con(0x6) && uwordrg1 <= con(0x7))
            {
              x16 wordrg1 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x11), CUTX8(wordrg401));
              if ((ebxw == con(0xffffffff) && wordrg1 != con(0x0)) || (ebxw == con(0x1) && wordrg401 == con(0x0)))
              {
                *recopptrrg7 = NULL;
                return vw_08;
              }
            }
          }
        }
        else
        {
          if ((recoptrrg1->u2.w & con(0x7f)) == con(0x1c))
          {
            if (ebxw == ((ddata.v1e03c8[urshift(recoptrrg1->u2.w, con(0x7))].w8 & con(0x3f)) - (ddata.v1e03c0->w8 & con(0x3f))))
            {
              *recopptrrg7 = recoptrrg1;
              return vw_08;
            }
          }
        }
      }
    }
  }
  *recopptrrg7 = NULL;
  return con(0xffffffff);
}

c_image* SKW_QUERY_PICST_IT(c_image* eaxpimg)
{
  c_image vs_00;
  c_hex18 vh18_13c;
  t_gfxdata* destbmp; // was gptrrg7
  t_gfxdata* srcbmp; // was gptrrg6
  t_gfxdata* gptrrg1;
  x16 vw_15c;
  x16 vw_160;

  bool vbool_158;
  if (eaxpimg->w_34 != con(0x40))
    vbool_158 = true;
  else if (eaxpimg->w_36 == con(0x40))
    vbool_158 = false;
  else
    vbool_158 = true;
  bool boolrg2 = eaxpimg->s_00.w_06 == con(0xffffffff) && eaxpimg->s_00.w_0c >= con(0x0);
  if (vbool_158)
  {
    eaxpimg->w_1c = SKW_CALC_STRETCHED_SIZE(eaxpimg->w_1c, eaxpimg->w_34);
    eaxpimg->w_1e = SKW_CALC_STRETCHED_SIZE(eaxpimg->w_1e, eaxpimg->w_36);
  }
  if ((eaxpimg->w_32 & con(0x1)) != con(0x0))
    eaxpimg->w_1c = -eaxpimg->w_1c;
  if (eaxpimg->w_30 == con(0xfffffffd))
    return eaxpimg;
  if (vbool_158)
  {
    if (!boolrg2)
    {
      if (!SKW_3e74_55f9(SKW_0b36_068f(eaxpimg), &vw_160))
      {
        SKW_COPY_MEMORY(DOWNCAST(c_hex18, &eaxpimg->s_00), con(0x18), DOWNCAST(c_hex18, &vh18_13c));
        SKW_QUERY_PICST_IMAGE(&vh18_13c);
      }
      else
      {
        SKW_0b36_00c3(vw_160, &eaxpimg->s_00);
        return eaxpimg;
      }
    }
    else
    {
      vw_160 = SKW_3e74_5888();
      SKW_COPY_MEMORY(DOWNCAST(c_hex18, &eaxpimg->s_00), con(0x18), DOWNCAST(c_hex18, &vh18_13c));
      SKW_0b36_00c3(vh18_13c.w_0c, &vh18_13c);
    }
    SKW_0b36_018f(&vh18_13c);
    if ((vh18_13c.w_04 & con(0x10)) != con(0x0))
    {
      SKW_COPY_IMAGE(eaxpimg, &vs_00);
      vs_00.w_32 = con(0x0);
      vs_00.w_36 = con(0x40);
      vs_00.w_34 = con(0x40);
      if (!SKW_3e74_55f9(SKW_0b36_068f(&vs_00), &vw_15c))
      {
        destbmp = SKW_ALLOC_NEW_PICT(vw_15c, vh18_13c.w_14, CUTX8(vh18_13c.w_16), vh18_13c.w_12);
        s_gfxdatatail* ptrbeforerg7 = getprevious(destbmp);
        srcbmp = SKW_QUERY_PICT_BITMAP(&vh18_13c);
        s_gfxdatatail* ptrbeforerg6 = getprevious(srcbmp);
//                            srcbmp                                                              srcofs        destbmp                                                                              srcbits                  destbits
        SKW_FIRE_BLIT_PICTURE(srcbmp, SKW_ALLOC_TEMP_ORIGIN_RECT(vh18_13c.w_12, vh18_13c.w_14), vh18_13c.w_0e, destbmp, vh18_13c.w_10, ptrbeforerg6->w2, ptrbeforerg7->w2, con(0xffff), con(0x0), e_bitres(vh18_13c.w_16), e_bitres(vh18_13c.w_16));
      }
      SKW_0b36_01cd(&vh18_13c);
      SKW_0b36_00c3(vw_15c, &vh18_13c);
      SKW_0b36_018f(&vh18_13c);
    }
    if (vbool_158) // TODO: ?!? vbool_158 ever true at this point
    {
      x16 wordrg6 = SKW_CALC_STRETCHED_SIZE(vh18_13c.w_12, eaxpimg->w_34);
      x16 wordrg2 = wordrg6;
      x16 wordrg10 = SKW_CALC_STRETCHED_SIZE(vh18_13c.w_14, eaxpimg->w_36);
      if (wordrg6 > con(0x0) && wordrg10 > con(0x0))
      {
        SKW_ALLOC_NEW_PICT(vw_160, wordrg10, CUTX8(vh18_13c.w_16), wordrg6);
        srcbmp = SKW_QUERY_PICT_BITMAP(&vh18_13c);
        gptrrg1 = SKW_0b36_00c3(vw_160, &eaxpimg->s_00);
        if (vh18_13c.w_16 != con(0x8))
          SKW_FIRE_STRETCH_BLIT_TO_MEMORY_4TO4BPP(srcbmp, vh18_13c.w_12, vh18_13c.w_14, gptrrg1, wordrg6, wordrg10, NULL);
        else
          SKW_44c8_2351(srcbmp, vh18_13c.w_12, vh18_13c.w_14, gptrrg1, wordrg6, wordrg10);
      }
      else
      {
        eaxpimg->s_00.w_12 = wordrg2;
        eaxpimg->s_00.w_14 = wordrg10;
      }
    }
    SKW_0b36_01cd(&vh18_13c);
    SKW_3e74_585a(vw_160, false);
    return eaxpimg;
  }
  if (!boolrg2)
  {
    SKW_QUERY_PICST_IMAGE(&eaxpimg->s_00);
    return eaxpimg;
  }
  SKW_0b36_00c3(eaxpimg->s_00.w_0c, &eaxpimg->s_00);
  return eaxpimg;
}

x16 SKW_075f_06bd(c_record* eaxprec, x16 edxw)
{
  ddata.v1e01a4 = con(0x0);
  ddata.v1e01a6 = con(0x3);
  x16 wordrg5 = unsignedword(eaxprec->u4.b.b0);
  x16 wordrg2;
  if (urshift(edxw & con(0x3c00), con(0xa)) == con(0xf))
  {
    ui32 longrg4 = unsignedlong(edxw);
    if (longrg4 != con(0xff81))
    {
      if (longrg4 >= con(0xff83))
      {
        ddata.v1e01a6 = con(0x5);
        if (longrg4 != con(0xff86))
          return con(0x0);
        else
        {
          ddata.v1e01a4 = wordrg5;
          return wordrg5 / 8 + con(0x1);
        }
      }
      ddata.v1e01a6 = con(0x1);
      wordrg2 = CUTX16(SKW_RAND());
      wordrg2 &= con(0xf);
      wordrg2 += (CUTX16(SKW_RAND()) & con(0xf));
      wordrg2 += con(0xa);
      if (longrg4 == con(0xff82))
      {
        ddata.v1e01a6 = con(0x7);
        wordrg2 <<= con(0x4);
        wordrg2 += wordrg5;
      }
    }
    else
    {
      wordrg2 = CUTX16(SKW_RAND()) & con(0xf);
      ddata.v1e01a4 = wordrg2 + con(0xa);
      wordrg2 += CUTX16(SKW_RAND()) & con(0x1f);
    }
  }
  else
  {
    wordrg2 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(edxw, con(0x9));
    if (wordrg2 != con(0x0))
    {
      x16 wordrg21 = wordrg2 + urshift(wordrg5, con(0x1));
      x32 longrg1 = ((unsignedlong(eaxprec->u4.b.b1) >> 4) + con(0x3)) & con(0xffff);
      wordrg2 = CUTX16((unsignedlong(wordrg21) * longrg1 * longrg1) >> con(0x7));
      ddata.v1e01a6 = con(0x4);
      ddata.v1e01a4 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(edxw, con(0xd));
      if (ddata.v1e01a4 != con(0x0))
        if ((CUTX16(SKW_RAND()) & con(0x7f)) > wordrg5)
          ddata.v1e01a4 -= SKW_RAND16(ddata.v1e01a4 / 2 + con(0x1));
    }
    wordrg2 += SKW_RAND02();
    wordrg2 += SKW_QUERY_ITEM_WEIGHT(edxw);
    if (unsignedword(eaxprec->u4.b.b1) > (CUTX16(SKW_RAND()) & con(0x1ff)))
      wordrg2 *= con(0x2);
  }
  x16 wordrg22 = (wordrg2 + wordrg5) / 16 + con(0x1);
  wordrg22 += SKW_RAND02() + SKW_RAND16(wordrg22 / 2 + con(0x1));
  return DM2_MIN(DM2_MAX(wordrg22, 2 * (wordrg22 - con(0x20) + unsignedword(eaxprec->u4.b.b1) / 8)), 2 * wordrg5);
}

// was SKW_29ee_09d5
void SKW_DRAW_SPELL_PANEL(void)
{
  c_hero* heroptrrg1;
  t_text t_00[0x4]; // TODO dim maybe 0x2 only
  x8 vb_08; // inc

  heroptrrg1 = &ddata.hero[ddata.v1e0b74 - con(0x1)];
  x8 vb_04 = heroptrrg1->b1e;
  SKW_DRAW_ICON_PICT_ENTRY(con(0x1), vb_04 + con(0x1), &ddata.v1d694c, con(0x5), con(0x5c), con(0xffff));
  if (vb_04 < con(0x4))
  {
    t_00[0x1] = NULLBYTE;
    vb_08 = (vb_04 * con(0x6)) + con(0x60);
    x16 wordrg5 = con(0xff);
    for (x16 vw_04_1 = con(0x0); vw_04_1 < con(0x6); vw_04_1++)
    {
      t_00[0x0] = vb_08;
      vb_08++;
      SKW_DRAW_SIMPLE_STR(&ddata.v1d694c, unsignedword(ddata.paletteptr1[con(0x0)]), unsignedword(ddata.paletteptr1[con(0xd)]) | con(0x4000), wordrg5++, t_00);
    }
  }
  SKW_DRAW_SPELL_TO_BE_CAST(false);
  SKW_DRAW_PLAYER_ATTACK_DIR();
}

// was SKW_29ee_0b4a
x16 SKW_PROCEED_SPELL_FAILURE(x16 eaxw)
{
  x16 wordrg3 = con(0x1);
  ui16 uwordrg1 = eaxw & con(0xfffffff0);
  if (uwordrg1 < con(0x20))
  {
    if (uwordrg1 != con(0x10))
      return uwordrg1;
    ddata.v1e0b7c = (((eaxw & con(0xf)) == con(0x3)) ? 1 : 0) - con(0x5);
    uwordrg1 = con(0x45);
  }
  else if (uwordrg1 <= con(0x20))
  {
    ddata.v1e0b7c = con(0xfffffffd);
    uwordrg1 = con(0x46);
  }
  else
  {
    if (uwordrg1 != con(0x30))
      return uwordrg1;
    SKW_DRAW_TRANSPARENT_STATIC_PIC(con(0x1), con(0xb), con(0x5c), con(0x5), con(0xffffffff));
    uwordrg1 = con(0x44);
    wordrg3 = uwordrg1;
  }
  x16 wordrg12 = DM2_MAX(wordrg3, con(0x8) - SKW_UPDATE_GLOB_VAR(uwordrg1, con(0x3), true));
  ddata.v1e0b6c = wordrg12;
  return wordrg12;
}

bool SKW_TRANSFER_PLAYER(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 wordrg11 = SKW_GET_CREATURE_AT(eaxw, edxw);
  if (wordrg11 == con(0xffffffff))
    return false;
  x16 wordrg2 = SKW_GET_ADDRESS_OF_RECORD(wordrg11)->u2.w;
  while (wordrg2 != con(0xfffffffe))
  {
    x16 wordrg1 = urshift(wordrg2 & con(0x3c00), con(0xa));
    if (wordrg1 > con(0x4) && wordrg1 < con(0xe))
    {
      if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg2) == ebxw)
        return true;
      if (SKW_2fcf_164e(wordrg2, ebxw))
        return true;
    }
    wordrg2 = SKW_GET_NEXT_RECORD_LINK(wordrg2);
  }
  return false;
}

void SKW_32cb_3e08(x16 eaxw, x32 ebxl, c_record* ecxprec, x16 edxw)
{
  c_record* recoptrrg6;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;

  vw_08 = eaxw;
  vw_04 = edxw;
  recoptrrg6 = ecxprec;
  if (eaxw == con(0xfffffffe))
    return;
  if (table1d6b43[vw_04] == con(0xffffffff))
    return;
  ddata.v1d6c04 = con(0xfffffffe);
  if (vw_04 > con(0xf))
    return;
  x8 byterg41 = table1d6e41[vw_04];
  vw_0c = unsignedword(byterg41);
  if (byterg41 == con(0x3))
    return;
  x32 longrg7 = con(0x0);
  for (x16 wordrg5 = con(0x0); wordrg5 < con(0x4); wordrg5++)
  {
    x16 wordrg1 = wordrg5 + (vw_0c << con(0x2));
    x8 byterg4 = table1d6e35[wordrg1];
    x32 longrg1 = con(0x1) << byterg4;
    if ((longrg1 & ebxl) == con(0x0))
      longrg7 |= longrg1;
    else
      SKW_DRAW_PUT_DOWN_ITEM(vw_08, SKW_DIR_FROM_5x5_POS(unsignedword(byterg4)), recoptrrg6, vw_04);
  }
  if (longrg7 != con(0x0))
  {
    ddata.v1d6c04 = vw_08;
    ddata.longv1e1040 = longrg7;
    ddata.v1e103c = recoptrrg6;
  }
}

// TODO: odd behaviour. 2nd argument not used as a textpointer.
bool R_52DC0(x8* eaxpb, const t_text* edxt)
{
  x8* bptrrg2;
  x8* bptrrg4;
  x32* lptrrg2;
  x32* lptrrg4;

  bptrrg4 = UPCAST(x8, edxt); // not used as textpointer now
  bptrrg2 = eaxpb;
  lptrrg4 = UPCAST(x32, bptrrg4);
  lptrrg2 = UPCAST(x32, bptrrg2);
  if (eaxpb == bptrrg4)
    return false;
  x32 longrg3;
  x32 longrg11;
  for(;;)
  {
    longrg11 = lptrrg2[con(0x0)];
    longrg3 = lptrrg4[con(0x0)];
    if (longrg3 != longrg11)
      break;
    longrg3 = ~longrg3;
    longrg11 += con(0xfefefeff);
    longrg11 &= longrg3;
    longrg11 &= con(0x80808080);
    if (longrg11 != con(0x0))
      return false;
    longrg11 = lptrrg2[con(0x1)];
    longrg3 = lptrrg4[con(0x1)];
    if (longrg3 != longrg11)
      break;
    longrg3 = ~longrg3;
    longrg11 += con(0xfefefeff);
    longrg11 &= longrg3;
    longrg11 &= con(0x80808080);
    if (longrg11 != con(0x0))
      return false;
    longrg11 = lptrrg2[con(0x2)];
    longrg3 = lptrrg4[con(0x2)];
    if (longrg3 != longrg11)
      break;
    longrg3 = ~longrg3;
    longrg11 += con(0xfefefeff);
    longrg11 &= longrg3;
    longrg11 &= con(0x80808080);
    if (longrg11 != con(0x0))
      return false;
    longrg11 = lptrrg2[con(0x3)];
    longrg3 = lptrrg4[con(0x3)];
    if (longrg3 != longrg11)
      break;
    bptrrg2 += con(0x10);
    bptrrg4 += con(0x10);
    longrg3 = ~longrg3;
    longrg11 += con(0xfefefeff);
    longrg11 &= longrg3;
    longrg11 &= con(0x80808080);
    if (longrg11 != con(0x0))
      return false;
  }
  x8 byterg3h = CUTLX8(longrg3 >> con(0x8));
  x8 byterg1h = longrg11 >> con(0x8);
  if (CUTX8(longrg11) == CUTLX8(longrg3))
  {
    if (CUTX8(longrg11) == con(0x0))
      return false;
    if (byterg1h == byterg3h)
    {
      if (byterg1h == con(0x0))
        return false;
      longrg11 >>= con(0x10);
      longrg3 >>= con(0x10);
      if (CUTX8(longrg11) == CUTLX8(longrg3) && CUTX8(longrg11) == con(0x0))
        return false;
    }
  }
  return true;
}

// was SKW_14cd_36b3
x8 SKW_PROCEED_XACT_82(void)
{
  x16* wptrrg5;
  c_record* recoptrrg5;
  t_gfxdata vga_00[0x14];
  x16 vw_14;
  x8 vb_18;

  x16 wordrg6 = con(0xffff);
  vb_18 = con(0xfffffffd);
  x16 wordrg3 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  x16 wordrg40 = unsignedword(ddata.s350.v1e0562.u.b.b_07) + table1d2804[wordrg3];
  x16 wordrg11 = SKW_GET_CREATURE_AT(table1d27fc[wordrg3] + unsignedword(ddata.s350.v1e0562.u.b.b_06), wordrg40);
  if (wordrg11 == wordrg6)
    return vb_18;
  ddata.s350.v1e0556->u.v.b1a = con(0x1d);
  x16 wordrg21 = wordrg11;
  recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg21);
  if (ddata.s350.v1e0572 == con(0x0))
  {
    wordrg6 = SKW_1c9a_0732(con(0x3e), CUTX8((ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) + con(0x2)) & con(0x3)), SKW_GET_ADDRESS_OF_RECORD(wordrg21)->u2.w);
    if (wordrg6 == con(0xfffffffe))
      wordrg6 = con(0xffff);
    x16 wordrg5 = SKW_14cd_2886(&recoptrrg5->u2.w, (CUTX8(wordrg3) + con(0x2)) & con(0x3), con(0x0), con(0x10), con(0x1), con(0x1));
    if (wordrg5 == con(0x0) || wordrg5 == con(0xffffffff))
      if (wordrg6 == con(0xffffffff))
        return vb_18;
    ddata.s350.v1e0556->u.v.w10 = DM2_MAX(con(0x0), wordrg5);
    return con(0xfffffffe);
  }
  if (ddata.s350.v1e0572 != con(0x1))
  {
    if (ddata.s350.v1e0572 != con(0x2))
      wptrrg5 = &ddata.s350.v1e0556->u0c.w;
    else
      wptrrg5 = &ddata.s350.v1e0556->u.v.w0e;
  }
  else
    wptrrg5 = &ddata.s350.v1e0556->u.v.w10;
  x16 wordrg22 = ddata.s350.v1e054e->u2.w;
  while (wordrg22 != con(0xfffffffe))
  {
    if (SKW_IS_CONTAINER_MONEYBOX(wordrg22))
    {
      wordrg6 = wordrg22;
      SKW_14cd_3582(con(0x0), wordrg22);
    }
    wordrg22 = SKW_GET_NEXT_RECORD_LINK(wordrg22);
  }
  ddata.s350.v1e0572 = con(0x47);
  x16 wordrg23 = *wptrrg5;
  if (wordrg23 <= con(0x0))
  {
    vb_18 = SKW_PROCEED_XACT_64();
    if (vb_18 == con(0xfffffffc))
      return vb_18;
    return con(0xfffffffe);
  }
  SKW_48ae_0767(wordrg23, vga_00, &vw_14, con(0x12));
  *wptrrg5 = con(0xffffffff);
  if (vw_14 <= con(0x0))
    return con(0xfffffffe);
  x16 wordrg51 = vw_14 - con(0x1);
  do
  {
    x16 wordrg1 = SKW_ALLOC_NEW_DBITEM(ddata.v1e0394[vga_00[wordrg51]]);
    if (wordrg1 == con(0xffffffff))
      break;
    if (wordrg6 == con(0xffffffff))
      SKW_APPEND_RECORD_TO(wordrg1, con(0xffffffff), con(0x0), &ddata.s350.v1e054e->u2.w);
    else
      SKW_ADD_COIN_TO_WALLET(wordrg6, wordrg1);
    wordrg51--;
  } while (wordrg51 != con(0xffffffff));
  SKW_PROCEED_XACT_64();
  return con(0xfffffffc);
}

// was SKW_14cd_3919
x8 SKW_PROCEED_XACT_84(void)
{
  c_record* recoptrrg1;
  bool flag;
  x8 vb_00;

  vb_00 = con(0xfffffffd);
  x16 wordrg42 = ddata.s350.v1e054e->u2.w;
  if (wordrg42 == con(0xfffffffe))
    return vb_00;
  recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg42);
  ui16 uwordrg2 = urshift((wordrg42 & con(0x3c00)), con(0xa)) - con(0x5);
  bool boolrg1;
  if (uwordrg2 > con(0x5))
    boolrg1 = false;
  else
  {
    switch (uwordrg2)
    {
      case 0:
      case 1:
        flag = (recoptrrg1->u2.b.b0 & con(0xffffff80)) == con(0x0);
        boolrg1 = flag;
      break;

      case 3:
        flag = (recoptrrg1->u2.b.b1 & con(0xffffff80)) == con(0x0);
      case 2: // no break before
      case 4:
        boolrg1 = false;
      break;

      case 5:
        if ((recoptrrg1->u2.b.b0 & con(0xffffff80)) == con(0x0))
          boolrg1 = true;
        else if (SKW_QUERY_GDAT_FOOD_VALUE_FROM_RECORD(wordrg42) == con(0x0))
          boolrg1 = false;
        else
          boolrg1 = true;
      break;

      default: throw(THROW_DMABORT);
    }
  }
  if (!boolrg1)
  {
    if ((CUTX16(SKW_RAND()) & con(0x7)) == con(0x0))
    {
      SKW_19f0_2165(con(0x81), unsignedword(ddata.s350.v1e0562.u.b.b_07), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0xffffffff), con(0x6));
      x16* tmp = &ddata.s350.v1e0556->u.v.w0e; // access on both bytes then
      x16 wordrg40 = (unsignedword(ddata.s350.v1e0562.u.b.b_06) & con(0x1f));
      *tmp &= con(0xffffffe0); // mod
      x16 wordrg22 = *tmp | wordrg40;
      *tmp = wordrg22;
      x16 wordrg41 = unsignedword(ddata.s350.v1e0562.u.b.b_07 & con(0x1f)) << con(0x5);
      *tmp = (wordrg22 & con(0xfffffc1f)) | wordrg41;
      *tmp &= con(0x3ff); // mod
      *tmp |= (unsignedword(ddata.s350.v1e0571) & con(0x3f)) << con(0xa);
      return vb_00;
    }
    if ((CUTX16(SKW_RAND()) & con(0xf)) == con(0x0))
      ddata.s350.v1e0556->u.v.w0e = con(0xffffffff);
    return vb_00;
  }
  SKW_CUT_RECORD_FROM(wordrg42, con(0xffffffff), con(0x0), &ddata.s350.v1e054e->u2.w);
  SKW_DEALLOC_RECORD(wordrg42);
  ddata.s350.v1e0556->u.v.b1a = con(0x0);
  return con(0xfffffffe);
}

// was SKW_14cd_3a0b
x8 SKW_PROCEED_XACT_85(void)
{
  c_record* recoptrrg1;

  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07));
  x16 wordrg4;
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg4))
  {
    wordrg4 = wordrg1;
    if (wordrg4 == con(0xfffffffe))
      break;
    x16 wordrg11 = urshift(wordrg4 & con(0x3c00), con(0xa));
    if (wordrg11 > con(0x3))
      break;
    if (wordrg11 == con(0x2) && (recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg4), (recoptrrg1->u2.w & con(0x6)) == con(0x2)))
    {
      x16 wordrg12 = urshift(recoptrrg1->u2.w, con(0x3));
      if ((urshift(wordrg12, con(0x8)) & con(0x1f)) == con(0x1))
      {
        ddata.s350.v1e0556->u.v.b1e = CUTX8(wordrg12);
        ddata.s350.v1e0556->u.v.b1a = con('"');
        return con(0xfffffffe);
      }
    }
  }
  SKW_13e4_0360(ddata.s350.v1e054c, unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0x13), unsignedword(ddata.s350.v1e0562.u.b.b_06), true);
  ddata.s350.v1e0556->u.v.b1a = con(0x33);
  return con(0xfffffffd);
}

// eax and edx are always extended bytes, ebx comes in with 0 and 1 only
void SKW_OPERATE_PIT_TELE_TILE(x16 eaxw, x16 ebxw, x16 edxw)
{
  x8* bptrrg1;
  x8* bptrrg2;

  x16 wordrg5 = ebxw;
  bool boolrg3 = false;
  bptrrg1 = ddata.savegamepp1[eaxw];
  bptrrg2 = bptrrg1 + edxw;
  x16 wordrg1 = (unsignedword(*bptrrg2) >> con(0x5)) & con(0xff);
  if (wordrg1 != con(0x2))
  {
    if (wordrg1 != con(0x5) || (SKW_GET_ADDRESS_OF_TILE_RECORD(eaxw, edxw)->u4.w & con(0x6)) == con(0x6))
      return;
    if ((*bptrrg2 & con(0x8)) != con(0x0))
      boolrg3 = true;
    if (wordrg5 == con(0x2))
      wordrg5 = (boolrg3) ? 1 : 0;
  }
  else
  {
    if ((*bptrrg2 & con(0x8)) != con(0x0))
      boolrg3 = true;
    if (wordrg5 == con(0x2))
      wordrg5 = (boolrg3) ? 1 : 0;
  }
  if (wordrg5 != con(0x0))
  {
    *bptrrg2 &= con(0xfffffff7);
    return;
  }
  // RG1Blo = (!boolrg3) ? 1 : 0;  TODO: what for?
  *bptrrg2 |= con(0x8);
  SKW_ADVANCE_TILES_TIME(eaxw, edxw);
}

// TODO: problem inside
bool SKW_1887_0239(void)
{
  bool boolrg5 = false; // TODO: warning being used uninitialized

  ui8 ubyterg1 = ddata.s350.v1e0556->u.v.b1f;
  if (ubyterg1 < con(0x1))
  {
    if (ubyterg1 == con(0x0))
    {
      ddata.s350.v1e0556->u.v.b1f = con(0x1);
      x8 byterg2 = ddata.s350.v1e07d8.b1;
      boolrg5 = SKW_CREATURE_WALK_NOW();
      ddata.s350.v1e07d8.b1 = byterg2;
      x16 wordrg2 = ((ddata.s350.v1e0556->u.v.u18.w & con(0x1f)) + table1d27fc[ddata.s350.v1e0556->u.v.b1b]) & con(0x1f);
      ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
      x16 wordrg6 = ddata.s350.v1e0556->u.v.u18.w | wordrg2;
      ddata.s350.v1e0556->u.v.u18.w = wordrg6;
      ddata.s350.v1e0556->u.v.u18.w = (wordrg6 & con(0xfffffc1f)) | (((table1d2804[ddata.s350.v1e0556->u.v.b1b] + ulrshift(wordrg6, con(0x6), con(0xb))) & con(0x1f)) << con(0x5));
    }
    return boolrg5;
  }
  if (ubyterg1 <= con(0x1))
  {
    boolrg5 = SKW_CREATURE_WALK_NOW();
    if (!boolrg5)
      ddata.s350.v1e0556->u.v.b1f = con(0x3);
    else
      ddata.s350.v1e0556->u.v.b1f = con(0x2);
    return boolrg5;
  }
  if (ubyterg1 != con(0x2))
    return boolrg5;
  boolrg5 = false;
  ddata.s350.v1e0556->u.v.b1f = con(0x3);
  if (SKW_MOVE_RECORD_TO(ddata.s350.v1e054c, unsignedword(ddata.s350.v1e0562.u.b.b_07), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07)) != con(0x0))
    ddata.s350.v1e0570 = con(0x1);
  ddata.s350.v1e0562.u.b.b_06 = CUTX8(ddata.v1e102a);
  ddata.s350.v1e0562.u.b.b_07 = CUTX8(ddata.v1e1028);
  ddata.s350.v1e0571 = CUTX8(ddata.v1e102c);
  SKW_1c9a_0648(unsignedword(ddata.s350.v1e0571));
  return boolrg5;
}

// was SKW_1c9a_02f6
void SKW_CHECK_RECOMPUTE_LIGHT(void)
{
  bool boolrg5;
  u_bbw vs_00[0x8];
  // vs_10; TODO: unused?!?
  c_sizex16 vsx16_34; // extended! was s_len8 only!!! reason: parameter of SKW_1c9a_1bd8

  x16 wordrg6 = ddata.v1d3248;
  SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e0266);
  if ((ddata.v1e0390.b0 & con(0x2)) != con(0x0))
  {
    ddata.v1d62a4 = ddata.v1e0266;
    ddata.v1e08d2 = ddata.savegamewa;
    DM2_ZERO_MEMORY(DOWNCAST(s_32bytes, ddata.v1e08cc), signedlong(ddata.v1e08d2) << con(0x5));
    ddata.v1d62a6 = ddata.v1e027c;
    if (ddata.v1e027c >= con(0x0))
    {
      ddata.v1e08d0 = ulrshift(ddata.v1e03c8[ddata.v1e027c].w8, con(0x5), con(0xb)) + con(0x1);
      DM2_ZERO_MEMORY(DOWNCAST(s_32bytes, ddata.v1e08c8), signedlong(ddata.v1e08d0) << con(0x5));
    }
    vsx16_34.s_00.b_00 = con(0x19);
    vsx16_34.s_00.b_01 = con(0x0);
    vsx16_34.s_00.b_07 = con(0x1b);
    SKW_1c9a_1bd8(ddata.v1e0270, con(0x8), ddata.v1e0272, con(0x1), &vsx16_34, vs_00);
  }
  if ((ddata.v1e0390.b0 & con(0x1)) != con(0x0))
  {
    boolrg5 = ddata.v1e0266 != ddata.v1d62ac;
    if (ddata.v1e03f8 != con(0x0))
    {
      if (ddata.v1e03f8 > con(0x8))
        ddata.v1e03f8 = con(0x8);
      vsx16_34.s_00.b_00 = CUTX8(ddata.v1e03f8);
      vsx16_34.s_00.b_01 = con(0x0);
      vsx16_34.s_00.b_07 = con(0x17);
      SKW_1c9a_1bd8(ddata.v1e0270, con(0x7), ddata.v1e0272, con(0x1), &vsx16_34, vs_00);
      if (ddata.v1e0974 != ddata.v1d62a8)
        boolrg5 = true;
      else if (ddata.v1e0978 != ddata.v1d62aa)
        boolrg5 = true;
    }
    else
    {
      ddata.v1e0974 = ddata.v1e03f8;
      ddata.v1e0978 = ddata.v1e03f8;
    }
    ddata.v1d62a8 = ddata.v1e0974;
    ddata.v1d62aa = ddata.v1e0978;
    if (boolrg5)
      SKW_RECALC_LIGHT_LEVEL();
  }
  SKW_CHANGE_CURRENT_MAP_TO(wordrg6);
  ddata.v1e0390.l0 = con(0x0);
  ddata.v1d62ac = ddata.v1e0266;
}

x16 SKW_1c9a_03cf(x16* eaxpw, x16 ebxw, x16* edxpw)
{
  c_record* recoptrrg2;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x16 vw_28;

  vw_24 = ebxw;
  vw_18 = *eaxpw;
  vw_1c = *edxpw;
  x16 wordrg1;
  if (ebxw != con(0xff))
    wordrg1 = table1d2752[ebxw];
  else
    wordrg1 = con(0xc);
  SKW_098d_000f(vw_18, wordrg1, &vw_04, vw_1c, &vw_14);
  vw_20 = con(0x4);
  x16 wordrg3;
  for (x16 wordrg5 = con(0x0); wordrg5 <= vw_20; wordrg5++)
  {
    vw_28 = SKW_GET_CREATURE_AT(vw_18, vw_1c);
    if (vw_28 != con(0xffffffff))
    {
      recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(vw_28);
      vw_08 = signedword(SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg2->u4.b.b0)->barr22[con(0x1)]);
      SKW_098d_000f(vw_18, SKW_QUERY_CREATURE_5x5_POS(recoptrrg2, unsignedword(table1d62e8[ulrshift(recoptrrg2->ue.w, con(0x6), con(0xe))])), &vw_10, vw_1c, &vw_0c);
      vw_10 -= vw_04;
      x16 wordrg2 = vw_0c - vw_14;
      vw_0c = wordrg2;
      if ((wordrg2 * wordrg2 + vw_10 * vw_10) < table1d62e0[vw_08])
      {
        *eaxpw = vw_18;
        *edxpw = vw_1c;
        return vw_28;
      }
    }
    if (vw_24 != con(0xff))
    {
      vw_18 = *eaxpw + table1d62b0[wordrg5 + 2 * vw_24][0];
      wordrg3 = table1d62b0[wordrg5 + 2 * vw_24][1];
    }
    else
    {
      vw_18 = *eaxpw + table1d62d0[wordrg5][0];
      wordrg3 = table1d62d0[wordrg5][1];
    }
    vw_1c = *edxpw + wordrg3;
  }
  return con(0xffff);
}

// SKW_1c9a_0551
x16 SKW_COMPUTE_POWER_4_WITHIN(x16 eaxw, x16 edxw)
{
  x16 wordrg1 = con(0x1);
  x16 wordrg2 = con(0x0);
  while (wordrg2 < con(0x20)) // BUG! then 16-bit aren't enough!
  {
    if (((wordrg1 & eaxw) != con(0x0)) && (--edxw == con(0x0)))
      return wordrg1;
    wordrg1 *= con(0x2);
    wordrg2++;
  }
  return wordrg1;
}

// TODO: make argument unsigned
x16 SKW_1c9a_0598(x16 eaxw)
{
  x16 wordrg4 = con(0x0);
  x16 wordrg2 = con(0x0);
  ui16 uwordrg1 = eaxw;
  while (uwordrg1 != con(0x0))
  {
    if (wordrg4 >= con(0x20))
      return wordrg2;
    if ((uwordrg1 & con(0x1)) != con(0x0))
      wordrg2++;
    uwordrg1 >>= con(0x1);
    wordrg4++;
  }
  return wordrg2;
}

void SKW_1c9a_078b(x16* eaxpw, x8 ebxb, x16 edxw)
{
  c_record* recoptrrg6;
  c_record* prec_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x8 vb_14;

  vw_08 = edxw;
  vb_14 = ebxb;
  vw_10 = *eaxpw;
  for(;;)
  {
    vw_0c = vw_10;
    if (vw_10 == con(0xfffffffe))
      return;
    vw_10 = SKW_GET_NEXT_RECORD_LINK(vw_10);
    x16 wordrg5 = urshift(vw_0c & con(0x3c00), con(0xa));
    if ((wordrg5 <= con(0x4) || wordrg5 >= con(0xe)) && wordrg5 != con(0x9))
      continue;
    if (vb_14 != con(0xffffffff) && unsignedword(vb_14) != urshift(vw_0c, con(0xe)))
      continue;
    x8 byterg4 = SKW_1c9a_0006(vw_0c, vw_08);
    if (wordrg5 == con(0x9))
    {
      if (!SKW_IS_CONTAINER_MONEYBOX(vw_0c) || byterg4 != con(0x0))
      {
        recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(vw_0c);
        prec_04 = recoptrrg6;
        SKW_1c9a_078b(&recoptrrg6->u2.w, con(0xff), vw_08);
        if (byterg4 != con(0x0))
        {
          x16 wordrg62 = recoptrrg6->u2.w;
          for(;;)
          {
            x16 wordrg51 = wordrg62;
            if (wordrg62 == con(0xfffffffe))
              break;
            wordrg62 = SKW_GET_NEXT_RECORD_LINK(wordrg62);
            SKW_CUT_RECORD_FROM(wordrg51, con(0xffffffff), con(0x0), &prec_04->u2.w);
            wordrg51 &= con(0xffff3fff);
            wordrg51 |= unsignedword(vb_14) << con(0xe);
            SKW_APPEND_RECORD_TO(wordrg51, con(0xffffffff), con(0x0), eaxpw);
          }
        }
      }
    }
    if (byterg4 != con(0x0))
    {
      SKW_CUT_RECORD_FROM(vw_0c, con(0xffffffff), con(0x0), eaxpw);
      SKW_DEALLOC_RECORD(vw_0c);
    }
  }
}

x16 SKW_ALLOC_NEW_CREATURE(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  c_aispec* aiptrrg7;
  c_record* recoptrrg4;
  c_record* recoptrrg5;
  x16 vw_04;
  x16 vw_08;
  x16 vw_10;

  x16 vw_00 = eaxw;
  vw_08 = ecxw;
  x16 wordrg2 = eaxw & con(0x8000);
  if (wordrg2 != con(0x0))
  {
    vw_00 &= con(0x7fff);
    vw_10 = SKW_ALLOC_NEW_RECORD(con(0xe));
    if (vw_10 == con(0xffffffff))
      return vw_10;
  }
  vw_04 = SKW_ALLOC_NEW_RECORD(con(0x4));
  if (vw_04 == con(0xffffffff) || (UI16CAST(ddata.v1d4020) >= UI16CAST(ddata.v1e08a0)))
  {
    if (wordrg2 != con(0x0))
      SKW_DEALLOC_RECORD(vw_10);
    return con(0xffff);
  }
  recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(vw_04);
  recoptrrg5 = recoptrrg4;
  recoptrrg4->u4.b.b0 = CUTX8(vw_00);
  aiptrrg7 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(CUTX8(vw_00));
  recoptrrg4->u2.w = con(0xfffffffe);
  recoptrrg4->ue.b.b1 &= con(0xfffffff8);
  recoptrrg4->ue.w |= (ebxw & con(0x3)) << con(0x8);
  recoptrrg4->u4.b.b1 = con(0xffffffff);
  if (wordrg2 != con(0x0))
    SKW_APPEND_RECORD_TO(vw_10, con(0xffffffff), con(0x0), &recoptrrg4->u2.w);
  x16 wordrg6 = urshift(aiptrrg7->w4 * (DM2_MIN(edxw, con(0x1f)) + con(0x1)), con(0x3));
  recoptrrg5->u6.w = wordrg6 + SKW_RAND16(wordrg6 / 8 + con(0x1));
  recoptrrg5->ua.w = con(0x0);
  recoptrrg5->uc.b.b0 &= con(0xffffffe0);
  x16 wordrg61 = recoptrrg5->uc.w | (vw_08 & con(0x1f));
  recoptrrg5->uc.w = (wordrg61 & con(0xfffffc1f)) | ((argw0 & con(0x1f)) << con(0x5));
  recoptrrg5->uc.b.b1 &= con(0x3);
  recoptrrg5->uc.w |= (ddata.v1d3248 & con(0x3f)) << con(0xa);
  recoptrrg5->w8 = con(0xffffffff);
  if (SKW_MOVE_RECORD_TO(vw_04, con(0x0), vw_08, con(0xfffffffc), argw0) == con(0x1))
    return con(0xffff);
  recoptrrg5->w8 = con(0x0);
  return vw_04;
}

// was SKW_1c9a_166f
x16 SKW_CREATURE_ATTACKS_CREATURE(x16 eaxw, x16 edxw)
{
  c_aispec* aiptrrg7;
  c_aispec* aiptrrg4;
  c_aispec* aiptrrg2;
  x16 vw_08;
  x16 vw_0c;

  vw_0c = SKW_GET_CREATURE_AT(eaxw, edxw);
  if (vw_0c == con(0xffffffff))
    return con(0xffffffff);
  aiptrrg4 = ddata.s350.v1e0552;
  aiptrrg2 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(SKW_GET_ADDRESS_OF_RECORD(vw_0c)->u4.b.b0);
  aiptrrg7 = aiptrrg2;
  if (aiptrrg7->barr06[con(0x2)] == con(0xffffffff))
    return con(0x0);
  vw_08 = (CUTX16(SKW_RAND()) & con(0x1f)) + (aiptrrg4->barr06[con(0x2)]);
  if ((unsignedword(aiptrrg2->barr06[con(0x2)]) + (CUTX16(SKW_RAND()) & con(0x1f))) > vw_08)
    if (SKW_RAND02() != con(0x0))
      return con(0x0);
  x16 vw_00 = (unsignedword(aiptrrg7->b2) + (CUTX16(SKW_RAND()) & con(0x1f))) / 8;
  x16 wordrg5 = unsignedword(aiptrrg4->barr06[con(0x0)]);
  wordrg5 += DM2_MIN(aiptrrg4->barr06[con(0x0)], CUTX16(SKW_RAND()) & con(0xf));
  wordrg5 -= vw_00;
  if (wordrg5 <= con(0x1))
  {
    if (SKW_RAND01() != con(0x0))
      return con(0x0);
    wordrg5 = SKW_RAND02() + con(0x2);
  }
  wordrg5 += SKW_RAND02() + SKW_RAND16(wordrg5);
  wordrg5 += SKW_RAND16(wordrg5);
  wordrg5 >>= con(0x2);
  wordrg5 += SKW_RAND02() + con(0x1);
  if (SKW_RAND01() != con(0x0))
    wordrg5 -= SKW_RAND16(wordrg5 / 4 + con(0x1));
  SKW_ATTACK_CREATURE(vw_0c, edxw, con(0x2), eaxw, con(0x3c), wordrg5);
  return wordrg5;
}

void SKW_32cb_3f0d(x16 eaxw)
{
  x16 vw_08;
  x16 vw_0c;

  x16 wordrg5 = ddata.v1e1044[eaxw].s_02.warr_00[con(0x2)];
  if (wordrg5 == con(0xfffffffe))
    return;
  x16 vw_04 = con(0x2);
  do
  {
    if ((wordrg5 >> con(0xe)) == ((signedlong(ddata.v1e0258) + con(0x2)) & con(0x3)))
    {
      x16 wordrg44 = urshift(wordrg5 & con(0x3c00), con(0xa));
      if (wordrg44 < con(0x5) || wordrg44 > con(0xa))
      {
        if (wordrg44 == con(0xf))
        {
          x16 wordrg3 = eaxw;
          if (table1d6e51[wordrg3] != con(0xffffffff))
          {
            x8 byterg4 = CUTX8(SKW_GET_ADDRESS_OF_RECORD(wordrg5)->u2.w & con(0x7f));
            vw_08 = SKW_RAND02();
            bool dotemppic = true; // added
            if (byterg4 != con(0x64))
            {
              if (byterg4 != con(0x65))
                dotemppic = false;
              else
                SKW_32cb_2cf3(byterg4, vw_08, SKW_098d_0cd7(wordrg3, false, con(0xc)), unsignedword(table1d6b76[table1d6e51[wordrg3] + 0x58]));
            }
            else
            {
              vw_0c = table1d6b76[table1d6e51[wordrg3] + 0x5f];
              SKW_QUERY_TEMP_PICST(vw_08, vw_0c, con(0x0), vw_0c, con(0x0), con(0x0), SKW_098d_0cd7(wordrg3, false, con(0xc)), con(0xffffffff), con(0xa), con(0xffff), con(0xd), byterg4, con(0xc));
            }
            if (dotemppic)
              SKW_DRAW_TEMP_PICST();
          }
        }
      }
      else
      {
        SKW_DRAW_ITEM(wordrg5, con(0x0), con(0x0), eaxw, vw_04, NULL, true, con(0x0), true);
        vw_04++;
        if (vw_04 >= con(0xe))
          vw_04 = con(0x2);
        if (eaxw == con(0x3))
          SKW_MAKE_PUT_DOWN_ITEM_CLICKABLE_ZONE(con(0x8), con(0x3), con(0x3), wordrg5);
      }
    }
    wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
  } while (wordrg5 != con(0xfffffffe));
}

// was SKW_32cb_4905
void SKW_DRAW_DOOR(x16 eaxw, x16 ebxw, x32 ecxl, x16 edxw)
{
  c_record* recoptrrg7;
  s_hex12* h12ptrrg1;
  x16 vw_04;
  c_image vs_08;
  x16 vw_148;
  x16 vw_14c;
  x16 vw_150;
  x16 vw_154;
  x16 vw_15c;
  x16 vw_160;
  x16 vw_168;
  x8 vb_170;
  x8 vb_174;
  x8 vb_178;

  vw_04 = eaxw;
  if (edxw != con(0x0))
    SKW_DRAW_DOOR_FRAMES(vw_04, edxw);
  if (ecxl != con(0x0))
    SKW_DRAW_STATIC_OBJECT(vw_04, false, ecxl);
  x16 wordrg4 = vw_04;
  h12ptrrg1 = &ddata.v1e1044[wordrg4];
  vw_168 = h12ptrrg1->s_02.warr_00[con(0x3)];
  if (vw_168 != con(0x0))
  {
    x16 wordrg2 = h12ptrrg1->s_02.warr_00[con(0x4)];
    x16 vw_16c = signedword(table1d6b15[wordrg4]);
    if (table1d6b15[wordrg4] <= con(0x3))
    {
      x16 wordrg17 = signedword(table1d6f27[vw_16c]);
      x16 vw_158 = wordrg17;
      if (wordrg17 >= con(0x0))
      {
        x16 wordrg18 = table1d6f2c[wordrg4];
        x16 vw_164 = wordrg18;
        if (wordrg18 >= con(0x0))
        {
          recoptrrg7 = SKW_GET_ADDRESS_OF_RECORD(wordrg2);
          vb_174 = ddata.v1e040e[recoptrrg7->u2.w & con(0x1)];
          vw_160 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xe), con(0xb), con(0x4), vb_174);
          if (vw_160 == con(0x0))
            vw_160 = con(0xa);
          vb_178 = CUTX8(vw_16c) - con(0x1);
          x16 wordrg6 = con(0x40);
          vw_150 = con(0x0);
          if (vw_16c == con(0x0) || !SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0xe), con(0x1), vb_178, vb_174))
          {
            if (vw_16c == con(0x0))
              wordrg6 = con(0x71);
            else
            {
              vw_150 = vw_16c;
              wordrg6 = unsignedword(table1d6b71[vw_16c]);
            }
            vb_178 = con(0x0);
          }
          x16 wordrg5 = ulrshift(recoptrrg7->u2.w, con(0xb), con(0xc));
          if (wordrg5 != con(0x0) || vw_168 == con(0x5))
          {
            vw_15c = SKW_QUERY_MULTILAYERS_PIC(&vs_08, vb_174, vb_178, con(0xe), wordrg6, wordrg6, vw_150, con(0x0), vw_160, con(0xffffffff));
            SKW_DRAW_PICST(&vs_08);
            SKW_0b36_01cd(&vs_08.s_00);
            if (wordrg6 != con(0x40))
              vw_154 = wordrg6;
            else
            {
              SKW_QUERY_GDAT_IMAGE_METRICS(con(0xe), con(0x0), &vw_148, vb_174, &vw_14c);
              wordrg6 = SKW_32cb_48d5(ddata.v1e118e.s_00.w_12, vw_148);
              vw_154 = SKW_32cb_48d5(ddata.v1e118e.s_00.w_14, vw_14c);
            }
            if (wordrg5 != con(0x0))
            {
              wordrg5--;
              vb_170 = ddata.v1e0414[wordrg5];
              x16 wordrg156 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xb), con(0xb), con(0x4), vb_170);
              if (wordrg156 == con(0x0))
                wordrg156 = con(0x9);
              SKW_QUERY_TEMP_PICST(con(0x0), vw_154, con(0x0), wordrg6, con(0x0), vw_16c, 4 * DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xb), con(0xb), con(0x8), vb_170) + con(0x7d0) + vw_158, con(0xffffffff), wordrg156, con(0xffff), con(0xb), vb_170, con(0x0));
              ddata.v1e118e.pg_2c = SKW_3e74_5817(vw_15c);
              SKW_DRAW_TEMP_PICST();
            }
            if (vw_168 == con(0x5))
            {
              x16 wordrg155 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xe), con(0xb), con(0x12), vb_174);
              if (wordrg155 == con(0x0))
                wordrg155 = con(0x9);
              SKW_QUERY_TEMP_PICST(con(0x0), vw_154, con(0x0), wordrg6, con(0x0), vw_16c, 4 * DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xe), con(0xb), con(0xa), vb_174) + con(0x7d0) + vw_158, con(0xffffffff), wordrg155, vw_160, con(0xe), vb_174, con(0x41));
              ddata.v1e118e.pg_2c = SKW_3e74_5817(vw_15c);
              SKW_DRAW_TEMP_PICST();
            }
            x16 wordrg165;
            if (vs_08.w_38 > con(0x0))
              wordrg165 = unsignedword(vs_08.carr_3a[vw_160]);
            else
              wordrg165 = unsignedword(vw_160);
            vs_08.w_30 = wordrg165;
            vs_08.w_38 = con(0x0);
            SKW_0b36_00c3(vw_15c, &vs_08.s_00);
            SKW_COPY_IMAGE(&vs_08, &ddata.v1e118e);
            ddata.v1e118e.pg_2c = ddata.bitmapptr;
          }
          else
          {
            vw_15c = con(0xffffffff);
            SKW_QUERY_TEMP_PICST(con(0x0), wordrg6, con(0x0), wordrg6, con(0x0), vw_150, con(0xffffffff), con(0xffffffff), vw_160, con(0xffff), con(0xe), vb_174, vb_178);
          }
          if (vw_168 < con(0x4))
          {
            x16 wordrg51 = vw_164 + vw_168;
            vw_164 = wordrg51;
            if ((recoptrrg7->u2.b.b0 & con(0x20)) == con(0x0))
            {
              x16 wordrg61 = ddata.v1e118e.s_00.w_12 / 2;
              ddata.v1e118e.s_00.w_12 = wordrg61;
              ddata.v1e118e.s_00.w_04 |= con(0x10);
              ddata.v1e118e.s_00.w_0e += wordrg61;
              ddata.v1e118e.w_18 = wordrg51 + con(0x6);
              SKW_DRAW_TEMP_PICST();
              ddata.v1e118e.s_00.w_0e -= wordrg61;
              vw_164 = wordrg51 + con(0x3);
            }
          }
          ddata.v1e118e.w_18 = vw_164;
          SKW_DRAW_TEMP_PICST();
          if (vw_15c >= con(0x0))
            SKW_3e74_58a3(vw_15c);
        }
      }
    }
  }
  if (ebxw != con(0x0))
    SKW_DRAW_DOOR_FRAMES(vw_04, ebxw);
}

bool SKW_1887_1191(void)
{
  x8 vb_00;
  x16 vw_04;

  vw_04 = signedword(ddata.s350.v1e0556->u.v.b1e);
  x16 wordrg6 = unsignedword(ddata.s350.v1e0556->u.v.b20);
  vb_00 = CUTX8(wordrg6 | con(0x80));
  if (!SKW_19f0_2813(vb_00, unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.v1e08a6, unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.v1e08a4, ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)), signedword(ddata.s350.v1e0556->u.v.b1e)))
    return true;
  if ((wordrg6 != con(0x2)) && (vw_04 != con(0xffffffff)))
  {
    wordrg6 = SKW_1c9a_0732(signedword(ddata.s350.v1e0556->u.v.b1e), con(0xff), ddata.s350.v1e054e->u2.w);
    if (wordrg6 == con(0xfffffffe))
      return true;
    SKW_CUT_RECORD_FROM(wordrg6, con(0xffffffff), con(0x0), &ddata.s350.v1e054e->u2.w);
  }
  else
    wordrg6 = con(0xffff);
  R_3C1E5(ddata.s350.v1e0556->u.v.u18.w & con(0x1f), (unsignedword(ddata.s350.v1e0556->u.v.b1d) + con(0x2)) & con(0x3), ddata.s350.v1e054c, ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb)), wordrg6);
  return false;
}

bool SKW_1887_10db(void)
{
  x16 vw_00;

  x16 wordrg6 = con(0x0);
  vw_00 = SKW_GET_CREATURE_AT(ddata.v1e08a6, ddata.v1e08a4);
  if (vw_00 == con(0xffffffff) || (SKW_QUERY_CREATURE_AI_SPEC_FLAGS(vw_00) & con(0x1)) == con(0x0))
    return wordrg6 == con(0x0);
  do
  {
    x16 wordrg5 = SKW_1c9a_0732(signedword(ddata.s350.v1e0556->u.v.b1e), ddata.s350.v1e0556->u.v.b1c, SKW_GET_ADDRESS_OF_RECORD(vw_00)->u2.w);
    if (wordrg5 == con(0xfffffffe))
      return wordrg6 == con(0x0);
    wordrg6++;
    SKW_MOVE_RECORD_TO(wordrg5, ddata.v1e08a4, con(0xffffffff), ddata.v1e08a6, con(0xffff));
    wordrg5 &= con(0xffff3fff);
    SKW_APPEND_RECORD_TO(wordrg5, con(0xffffffff), con(0x0), &ddata.s350.v1e054e->u2.w);
  } while ((ddata.s350.v1e0556->u.v.b1e & con(0x40)) != con(0x0));
  return wordrg6 == con(0x0);
}

bool SKW_PLACE_MERCHANDISE(void)
{
  x16 vw_04;
  x16 vw_08;

  x16 vw_0c = con(0x0);
  vw_04 = ddata.v1e08a4;
  vw_08 = ddata.v1e08a6;
  x16 wordrg1 = SKW_GET_CREATURE_AT(vw_08, ddata.v1e08a4);
  if (wordrg1 == con(0xffffffff) || (SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg1) & con(0x1)) == con(0x0))
    return true;
  do
  {
    x16 wordrg6 = SKW_1c9a_0732(signedword(ddata.s350.v1e0556->u.v.b1e), con(0xff), ddata.s350.v1e054e->u2.w);
    if (wordrg6 == con(0xfffffffe))
      return vw_0c == con(0x0);
    vw_0c++;
    SKW_CUT_RECORD_FROM(wordrg6, con(0xffffffff), con(0x0), &ddata.s350.v1e054e->u2.w);
    x8 byterg1 = ddata.s350.v1e0556->u.v.b1c;
    if (byterg1 == con(0xffffffff))
      byterg1 = CUTX8(SKW_RAND02());
    wordrg6 &= con(0xffff3fff);
    wordrg6 |= unsignedword(byterg1) << con(0xe);
    if (SKW_IS_CONTAINER_MONEYBOX(wordrg6))
      SKW_GET_ADDRESS_OF_RECORD(wordrg6)->u6.b.b1 |= con(0x4);
    SKW_MOVE_RECORD_TO(wordrg6, con(0xffffffff), vw_08, con(0xffffffff), vw_04);
    if (vw_0c == con(0x1))
      SKW_QUEUE_NOISE_GEN2(SKW_QUERY_CLS1_FROM_RECORD(wordrg6), con(0x85), con(0xfe), SKW_QUERY_CLS2_FROM_RECORD(wordrg6), vw_08, vw_04, vw_0c, con(0x3a), con(0x80));
  } while ((ddata.s350.v1e0556->u.v.b1e & con(0x40)) != con(0x0));
  return vw_0c == con(0x0);
}

bool SKW_1887_0e19(void)
{
  x16 vw_00 = con(0x0);
  x16 wordrg6;
  x16 wordrg1 = SKW_GET_WALL_TILE_ANYITEM_RECORD(ddata.v1e08a6, ddata.v1e08a4);
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg6))
  {
    wordrg6 = wordrg1;
    if (wordrg6 == con(0xfffffffe))
      return vw_00 == con(0x0);
    if (urshift(wordrg6 & con(0x3c00), con(0xa)) != con(0x4))
      if (ddata.s350.v1e0556->u.v.b1c == con(0xffffffff) || urshift(wordrg6, con(0xe)) == unsignedword(ddata.s350.v1e0556->u.v.b1c))
        if (SKW_1c9a_0006(wordrg6, signedword(ddata.s350.v1e0556->u.v.b1e)) != con(0x0))
        {
          SKW_MOVE_RECORD_TO(wordrg6, ddata.v1e08a4, con(0xffffffff), ddata.v1e08a6, con(0x0));
          SKW_APPEND_RECORD_TO(wordrg6, con(0xffffffff), con(0x0), &ddata.s350.v1e054e->u2.w);
          vw_00++;
          if ((ddata.s350.v1e0556->u.v.b1e & con(0x40)) == con(0x0))
            return vw_00 == con(0x0);
        }
  }
}

bool SKW_1887_0d33(void)
{
  x16 wordrg6 = con(0x0);
  do
  {
    x16 wordrg5 = SKW_1c9a_0732(signedword(ddata.s350.v1e0556->u.v.b1e), con(0xff), ddata.s350.v1e054e->u2.w);
    if (wordrg5 == con(0xfffffffe))
      return wordrg6 == con(0x0);
    wordrg6++;
    SKW_CUT_RECORD_FROM(wordrg5, con(0xffffffff), con(0x0), &ddata.s350.v1e054e->u2.w);
    wordrg5 &= con(0xffff3fff);
    wordrg5 |= unsignedword(ddata.s350.v1e0556->u.v.b1c) << con(0xe);
    SKW_MOVE_RECORD_TO(wordrg5, con(0x0), ddata.v1e08a6, con(0xffffffff), ddata.v1e08a4);
    if (wordrg6 == con(0x1))
      SKW_QUEUE_NOISE_GEN2(SKW_QUERY_CLS1_FROM_RECORD(wordrg5), con(0x85), con(0xfe), SKW_QUERY_CLS2_FROM_RECORD(wordrg5), ddata.v1e08a6, ddata.v1e08a4, wordrg6, con(0x3a), con(0x80));
  } while ((ddata.s350.v1e0556->u.v.b1e & con(0x40)) != con(0x0));
  return wordrg6 == con(0x0);
}

bool SKW_1887_0ce1(void)
{
  bool boolrg4;

  boolrg4 = false;
  if (ddata.s350.v1e0556->u.v.b1f == con(0x0))
  {
    x8 byterg1 = CUTX8(ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)));
    SKW_1887_05aa();
    ddata.s350.v1e0556->u.v.b1d = byterg1;
  }
  else if (ddata.s350.v1e0556->u.v.b1f == con(0x1))
  {
    SKW_1887_05aa();
    boolrg4 = SKW_1887_0e19();
  }
  ddata.s350.v1e0556->u.v.b1f += con(0x1);
  return boolrg4;
}

bool SKW_1887_09ab(void)
{
  c_aispec* aiptrrg5;

  aiptrrg5 = ddata.s350.v1e0552;
  if (UI8CAST(ddata.s350.v1e0556->u.v.b20) <= UI8CAST(con(0x1)))
  {
    ddata.longv1d26a4 = ddata.longmallocx;
  }
  if (ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) != signedword(ddata.s350.v1e0556->u.v.b1b) && ((aiptrrg5->u0.b.b0 & con(0x4)) == con(0x0)))
    return true;
  x16 vw_00 = unsignedword(aiptrrg5->barr06[con(0x0)]) / 4 + con(0x1);
  x16 wordrg41 = vw_00 + SKW_RAND16(vw_00);
  vw_00 = wordrg41 + SKW_RAND16(wordrg41);
  ui8 ubyterg1 = ddata.s350.v1e0556->u.v.b1e;
  if (ubyterg1 < UI8CAST(con(0xffffff87)))
  {
    if (ubyterg1 == con(0xffffff86))
      vw_00 *= 4;
  }
  else if (ubyterg1 <= UI8CAST(con(0xffffff87)) || (ubyterg1 >= UI8CAST(con(0xffffff89)) && ubyterg1 <= UI8CAST(con(0xffffff8a))))
    vw_00 *= 8;
  vw_00 = DM2_BETWEEN_VALUE(con(0x4), con(0xff), vw_00);
  x8 byterg4;
  if (vw_00 > con(0x8))
  {
    if (vw_00 > con(0x10))
    {
      if (vw_00 > con(0x20))
        byterg4 = CUTX8(SKW_RAND02() + con(0x7));
      else
        byterg4 = CUTX8(SKW_RAND01() + con(0x3));
    }
    else
      byterg4 = con(0x2);
  }
  else
    byterg4 = con(0x1);
  SKW_SHOOT_ITEM(signedword(ddata.s350.v1e0556->u.v.b1e), unsignedword(ddata.s350.v1e0562.u.b.b_07), unsignedword(ddata.s350.v1e0556->u.v.b1c), unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.s350.v1e0556->u.v.b1b, CUTX8(vw_00), aiptrrg5->barr06[con(0x2)], byterg4);
  if ((aiptrrg5->barr06[con(0x3)] & con(0x10)) == con(0x0))
    return false;
  if (!SKW_WOUND_CREATURE(SKW_RAND01() + (vw_00 >> con(0x1))))
    return false;
  ddata.s350.v1e0570 = con(0x1);
  return true;
}

x16 SKW_2066_1ec9(x16 eaxw, x16 edxw)
{
  x16 wordrg5 = eaxw;
  if (wordrg5 == con(0xfffffffe))
    return edxw;
  if (edxw == con(0xfffffffe))
    return wordrg5;
  x16 wordrg44 = edxw;
  for(;;)
  {
    if (wordrg44 == con(0xfffffffe))
      break;
    if (urshift(wordrg44 & con(0x3c00), con(0xa)) >= con(0x4))
      break;
    x16 wordrg2 = wordrg5;
    wordrg5 = wordrg44;
    wordrg44 = SKW_GET_NEXT_RECORD_LINK(wordrg44);
    SKW_GET_ADDRESS_OF_RECORD(wordrg5)->w0 = wordrg2;
  }
  SKW_APPEND_RECORD_TO(wordrg44, con(0xffffffff), con(0xffffffff), &SKW_GET_ADDRESS_OF_RECORD(wordrg5)->w0);
  return wordrg5;
}

// called with parameter 0 only
bool SKW_2066_03e0(x16 eaxw)
{
  bool boolrg3;

  x16 wordrg2 = eaxw;
  x16 byterg4 = con(0x0);
  if (ddata.v1d154a)
    return true;
  boolrg3 = true;
  if (SKW_476d_030a(boolrg3 ? 1 : 0) == con(0x0))
    if (wordrg2 != con(0x2))
      return boolrg3;
  ddata.v1e0992 = con(0x1);
  for(;;)
  {
    if (wordrg2 == con(0x0))
      if (SKW_476d_030a(con(0x1)) == con(0x0))
        return boolrg3;
    SKW_38c8_0002();
    wordrg2 = con(0x0);
    boolrg3 = false;
    R_148D(con(0x1));
    x8 byterg1;
    if (!ddata.gdatfiletype2)
      byterg1 = con(0x7);
    else
      byterg1 = ((!ddata.gdatfiletype1) ? 1 : 0) + con(0x13);
    SKW_0aaf_0067(SKW_0aaf_02f8(byterg1, byterg4));
    byterg4 = con(0x14);
  }
}

// was SKW_24a5_0930
x16 SKW_PUT_OBJECT_INTO_CONTAINER(x16 eaxw)
{
  c_record* recoptrrg6;

  if (ddata.v1d6700 == con(0xffffffff))
    return eaxw;
  recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(ddata.v1d6700);
  ddata.v1d6700 = con(0xffffffff);
  x16 wordrg5;
  for (wordrg5 = con(0x0); wordrg5 < con(0x8); wordrg5++)
  {
    x16 wordrg2 = ddata.v1e095c[wordrg5];
    if (wordrg2 != con(0xffffffff))
    {
      ddata.v1e095c[wordrg5] = con(0xffffffff);
      SKW_APPEND_RECORD_TO(wordrg2, con(0xffffffff), con(0x0), &recoptrrg6->u2.w);
    }
  }
  return wordrg5;
}

x16 SKW_QUERY_GDAT_CREATURE_WORD_VALUE(x8 eaxb, x8 edxb)
{
  x8 byterg4h;
  x8 byterg6;
  x8* bptrrg5;
  x16 vw_00; // BUGFIX 41/2014
  bool doit = false; // added

  if ((ddata.v1e02ec != NULL) && (UI8CAST(eaxb) <= UI8CAST(ddata.v1e0414[0x11])))
  {
    if (UI8CAST(edxb) < UI8CAST(con(0x1)))
    {
      if (edxb == con(0x0))
      {
        byterg4h = con(0x1);
        doit = true;
      }
    }
    else if (UI8CAST(edxb) <= UI8CAST(con(0x1)))
    {
      byterg4h = con(0x0);
      doit = true;
    }
    else if (edxb == con(0x5))
    {
      byterg4h = con(0x2);
      doit = true;
    }
  }
  if (doit)
  {
    byterg6 = eaxb;
    bptrrg5 = ddata.v1e02ec + 3 * byterg6 + byterg4h;
    vw_00 = unsignedword(*bptrrg5);
    if (vw_00 == con(0xff))
    {
      vw_00 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xf), con(0xb), edxb, byterg6);
      *bptrrg5 = CUTX8(vw_00);
    }
    return vw_00;
  }
  return DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xf), con(0xb), edxb, eaxb);
}

x16 SKW_1031_03f2(s_bbw* eaxpbbw, x16 edxw)
{
  x8* bptrrg5;
  s_bbw* sbbwptrrg3;
  s_2w* ptrrg11;
  s_www* ptrrg12;

  x16 wordrg6 = con(0x0);
  bptrrg5 = SKW_1031_023b(eaxpbbw);
  do
  {
    sbbwptrrg3 = &table1d3ba0[*bptrrg5 & con(0x7f)];
    bool boolrg1;
    ui8 ubyterg1 = eaxpbbw->b0 & con(0x7f);
    switch (ubyterg1)
    {
      case 0:
        boolrg1 = SKW_RETURN_1() ? 1 : 0;
      break;

      case 1:
        boolrg1 = SKW_IS_GAME_ENDED(sbbwptrrg3) ? 1 : 0;
      break;

      case 2:
        boolrg1 = SKW_1031_0023(sbbwptrrg3);
      break;

      case 3:
        boolrg1 = SKW_1031_003e(sbbwptrrg3);
      break;

      case 4:
        boolrg1 = SKW_1031_007b(sbbwptrrg3);
      break;

      case 5:
        boolrg1 = SKW_1031_009e(sbbwptrrg3);
      break;

      case 6:
        boolrg1 = SKW_1031_00c5(sbbwptrrg3);
      break;

      case 7:
        boolrg1 = SKW_1031_00f3(sbbwptrrg3);
      break;

      case 8:
        boolrg1 = SKW_1031_012d(sbbwptrrg3);
      break;

      case 9:
        boolrg1 = SKW_1031_014f(sbbwptrrg3);
      break;

      case 10:
        boolrg1 = SKW_1031_0184(sbbwptrrg3);
      break;

      case 11:
        boolrg1 = SKW_1031_01ba(sbbwptrrg3);
      break;

      default: throw(THROW_DMABORT);
    }
    if (boolrg1)
    {
      if ((sbbwptrrg3->b0 & con(0x80)) != con(0xffffff80))
      {
        if (table1d3d23[sbbwptrrg3->w2].w4 != con(0xffffffff))
        {
          ptrrg11 = &v1d39bc[table1d3d23[sbbwptrrg3->w2].w4];
          for(;;) // TODO: ugly loopform
          {
            if (edxw != ptrrg11->w0[0x1])
            {
              ptrrg11++;
              if ((ptrrg11->w0[con(0x0)] & con(0xffff8000)) == con(0x0))
                continue;
            }
            else
            {
              wordrg6 = ptrrg11->w0[con(0x0)] & con(0x7ff);
              ptrrg12 = SKW_1031_024c(sbbwptrrg3);
              SKW_1031_0c58(wordrg6, ptrrg12);
              ddata.v1e051e = edxw;
            }
            break;
          }
          if (wordrg6 != con(0x0))
            return wordrg6;
        }
      }
      else
      {
        wordrg6 = SKW_1031_03f2(sbbwptrrg3, edxw);
        if (wordrg6 != con(0x0))
          return wordrg6;
      }
    }
    bptrrg5++;
  } while ((*bptrrg5 & con(0xffffff80)) == con(0x0));
  return wordrg6;
}

void SKW_1031_0541(x16 eaxw)
{
SPX_DEBUG_PUSH_FUNCTION_INFO("SKW_1031_0541");
  bool boolrg3;
  bool boolrg5;
  s_munknown* sptrrg4;
  s_wwwb* swwwbptrrg1;

  if (eaxw != ddata.v1d3ff1)
    SKW_1031_098e();
  ddata.v1d3ff1 = eaxw;
  SKW_1031_027e(&table1d3ed5[eaxw]);
  swwwbptrrg1 = table1d3d23;
  x16 wordrg21 = con(0x0);
  while (wordrg21 < con(0x3e))
  {
    x16 wordrg400 = unsignedword(swwwbptrrg1->b6);
    boolrg5 = (wordrg400 & con(0x40)) == con(0x0);
    boolrg3 = (wordrg400 & con(0x80)) == con(0x0);
    if (boolrg5 != boolrg3)
    {
      x16 wordrg31 = wordrg400 & con(0x80);
      wordrg400 &= con(0x3f);
      if (wordrg31 == con(0x0))
      {
        if (wordrg400 != con(0x0))
          table1d32d8[wordrg400 - con(0x1)].b3 |= con(0x10); // EVIL index shifted, was 0x1d32db
        swwwbptrrg1->b6 |= con(0xffffff80);
      }
      else
      {
        if (wordrg400 != con(0x0))
          table1d32d8[wordrg400 - con(0x1)].b3 |= con(0x20); // EVIL index shifted, was 0x1d32db
        swwwbptrrg1->b6 &= con(0x7f);
      }
    }
    swwwbptrrg1->b6 &= con(0xffffffbf);
    swwwbptrrg1++;
    wordrg21++;
  }
  sptrrg4 = table1d32d8;
  x16 wordrg22 = con(0x0);
  while (wordrg22 < con(0x12))
  {
    x8 byterg1 = sptrrg4->b3 & con(0x10);
    boolrg5 = (byterg1 == con(0x0)) ? 1 : 0;
    boolrg3 = ((sptrrg4->b3 & con(0x20)) == con(0x0));
    if (boolrg5 != boolrg3)
    {
      if (byterg1 == con(0x0))
      {
        SKW_443c_07d5(sptrrg4);
      }
      else
      {
        SKW_443c_06b4(sptrrg4);
      }
    }
    sptrrg4->b3 &= con(0xffffffcf);
    sptrrg4++;
    wordrg22++;
  }
SPX_DEBUG_POP;
}

s_www* SKW_1031_06b3(s_bbw* eaxpbbw, x16 edxw)
{
  x8* bptrrg5; // sort of byte* because of ++
  s_www* ptrrg1;
  s_bbw* sbbwptrrg3;

  bptrrg5 = SKW_1031_023b(eaxpbbw);
  do
  {
    bool boolrg1;
    sbbwptrrg3 = &table1d3ba0[*bptrrg5 & con(0x7f)];
    switch ((eaxpbbw->b0 & con(0x7f)) + con(0x5))
    {
      case 0:
        boolrg1 = SKW_RETURN_1();
      break;

      case 1:
        boolrg1 = SKW_IS_GAME_ENDED(sbbwptrrg3);
      break;

      case 2:
        boolrg1 = SKW_1031_0023(sbbwptrrg3);
      break;

      case 3:
        boolrg1 = SKW_1031_003e(sbbwptrrg3);
      break;

      case 4:
        boolrg1 = SKW_1031_007b(sbbwptrrg3);
      break;

      case 5:
        boolrg1 = SKW_1031_009e(sbbwptrrg3);
      break;

      case 6:
        boolrg1 = SKW_1031_00c5(sbbwptrrg3);
      break;

      case 7:
        boolrg1 = SKW_1031_00f3(sbbwptrrg3);
      break;

      case 8:
        boolrg1 = SKW_1031_012d(sbbwptrrg3);
      break;

      case 9:
        boolrg1 = SKW_1031_014f(sbbwptrrg3);
      break;

      case 10:
        boolrg1 = SKW_1031_0184(sbbwptrrg3);
      break;

      case 11:
        boolrg1 = SKW_1031_01ba(sbbwptrrg3);
      break;

      default: throw(THROW_DMABORT);
    }
    if (boolrg1)
    {
      if ((sbbwptrrg3->b0 & con(0x80)) != con(0xffffff80))
      {
        ptrrg1 = SKW_1031_024c(sbbwptrrg3);
        if (ptrrg1 != NULL)
        {
          for(;;)
          {
            x16 wordrg4 = ptrrg1->w0[con(0x0)] & con(0x7ff);
            if (wordrg4 == con(0x0))
              break;
            if (edxw == wordrg4)
              return ptrrg1;
            ptrrg1++;
          }
        }
      }
      else
      {
        ptrrg1 = SKW_1031_06b3(sbbwptrrg3, edxw);
        if (ptrrg1 != NULL)
          return ptrrg1;
      }
    }
    bptrrg5++;
  } while ((*bptrrg5 & con(0xffffff80)) == con(0x0));
  return NULL;
}

void SKW_1031_07d6(void)
{
  s_bbw* sbbwptrrg11;
  s_bbw* sbbwptrrg12;
  s_wwwb* swwwbptrrg1;
  x16 vwa_00[0x40];
  x16 vwa_80[0x12];
  x8 vba_a4[0x1c];

  x16 wordrg12 = con(0x0);
  ui16 uwordrg41 = con(0x0);
  while (uwordrg41 < con(0x108))
  {
    if ((v1d338c[uwordrg41].w0[con(0x0)] & con(0xffff8000)) != con(0x0))
    {
      vwa_00[wordrg12] = uwordrg41;
      wordrg12++;
    }
    uwordrg41++;
  }
  x16 wordrg11 = con(0x0);
  ui16 uwordrg42 = con(0x0);
  while (uwordrg42 < con(0x79))
  {
    if ((v1d39bc[uwordrg42].w0[con(0x0)] & con(0xffff8000)) != con(0x0))
    {
      vwa_80[wordrg11] = uwordrg42;
      wordrg11++;
    }
    uwordrg42++;
  }
  x16 wordrg1 = con(0x0);
  ui16 uwordrg43 = con(0x0);
  while (uwordrg43 < con(0x53))
  {
    if ((table1d3cd0[uwordrg43] & con(0xffffff80)) != con(0x0))
    {
      vba_a4[wordrg1] = CUTX8(uwordrg43);
      wordrg1++;
    }
    uwordrg43++;
  }
  x16 wordrg44 = con(0x0);
  while (wordrg44 < con(0x4c))
  {
    sbbwptrrg11 = &table1d3ba0[wordrg44];
    if ((sbbwptrrg11->b0 & con(0xffffff80)) != con(0x0))
      sbbwptrrg11->w2 = unsignedword(vba_a4[sbbwptrrg11->w2]);
    wordrg44++;
  }
  x16 wordrg45 = con(0x0);
  while (UI16CAST(wordrg45) < con(0xa))
  {
    sbbwptrrg12 = &table1d3ed5[wordrg45];
    if ((sbbwptrrg12->b0 & con(0xffffff80)) != con(0x0))
      sbbwptrrg12->w2 = unsignedword(vba_a4[sbbwptrrg12->w2]);
    wordrg45++;
  }
  x16 wordrg46 = con(0x0);
  while (wordrg46 < con(0x3e))
  {
    swwwbptrrg1 = table1d3d23 + wordrg46;
    if (swwwbptrrg1->w2 != con(0xffffffff))
      swwwbptrrg1->w2 = vwa_00[swwwbptrrg1->w2];
    if (swwwbptrrg1->w4 != con(0xffffffff))
      swwwbptrrg1->w4 = vwa_80[swwwbptrrg1->w4];
    wordrg46++;
  }
  x16 wordrg47 = con(0x0);
  for(;;)
  {
    if (wordrg47 >= con(0x12))
      return;
    SKW_443c_067a(&table1d32d8[wordrg47]);
    wordrg47++;
  }
}

x16 SKW_1031_0a88(s_www* eaxps, x16 ebxw, x16 ecxw, x16 edxw)
{
  s_www* ptrrg5;
  x16 vw_04;

  ptrrg5 = eaxps;
  vw_04 = ebxw;
  if (eaxps == NULL)
    return con(0x0);
  do
  {
    if ((ptrrg5->w0[con(0x2)] & con(0x800)) == con(0x0))
    {
      if ((unsignedword(CUTX8(ptrrg5->w0[con(0x2)])) & ecxw) != con(0x0) && SKW_1031_01d5(ptrrg5->w0[con(0x1)], &ddata.v1e0470) != NULL)
      {
        if (SKW_PT_IN_RECT(&ddata.v1e0470, edxw, vw_04))
        {
          ddata.mouse_unk05 = ptrrg5->w0[con(0x1)];
          if ((ddata.mouse_unk05 & con(0x8000)) == con(0x0))
          {
            if ((ddata.mouse_unk05 & con(0x4000)) == con(0x0))
            {
              ddata.mouse_unk09 = con(0xffffffff);
            }
            else
            {
              ddata.mouse_unk09 = con(0x12);
            }
          }
          else
          {
            ddata.mouse_unk09 = con(0x7);
          }
          ddata.mouse_unk05 &= con(0x3fff);
          ddata.mouse_unk08 = edxw;
          ddata.mouse_unk07 = vw_04;
          ddata.mouse_unk0a = ptrrg5->w0[con(0x0)] & con(0x7ff);
          x16 vw_00 = ddata.mouse_unk0a;
          ddata.v1e051e = con(0x0);
          ddata.mouse_unk06 = vw_00 - ((eaxps->w0[con(0x0)] & con(0x7ff)) - con(0x1));
          return vw_00;
        }
      }
    }
    ptrrg5++;
  } while ((ptrrg5->w0[con(0x0)] & con(0xffff8000)) == con(0x0));
  ddata.v1e0470.h = con(0x0);
  ddata.v1e0470.w = con(0x0);
  return con(0x0);
}

// was SKW_1031_0f3a
void SKW_IBMIO_USER_INPUT_CHECK(void)
{
  bool flag;
  s_3words vs_00;
  x16 vw_08;

  if (ddata.v1e0484)
    return;
  x32 longrg32 = ddata.longgametime - ddata.longv1d3fed;
  flag = longrg32 == con(0x0);
  vw_08 = CUTX16(longrg32);
  if (flag)
    return;
  ddata.longv1d3fed = ddata.longgametime;
  if ((ddata.mouse_unk02 == con(0x0) && !ddata.v1e0478) && !ddata.v1e048c)
  {
    bool special = false; // added
    while (ddata.v1e0480 == NULL)
    {
      for(;;)
      {
        if (SKW_476d_05a9() == con(0x0))
          break;
        SKW_1031_0d36(con(0x20), SKW_476d_050e());
      }
      ddata.fetchmouse_busy = true;
      bool boolrg7 = true;
      while (ddata.mousebufentries != con(0x0))
      {
        SKW_COPY_MEMORY(DOWNCAST(c_mousebufentry, &ddata.mousebuf[ddata.mouse_unk01]), 0x6, DOWNCAST(s_3words, &vs_00));
        ddata.mousebufentries--;
        ddata.mouse_unk01++;
        if (ddata.mouse_unk01 > con(0xa))
          ddata.mouse_unk01 = con(0x0);
        x16 wordrg1 = con(0x0);
        if (vs_00.w_00 < con(0x20))
        {
          if ((vs_00.w_00 & con(0x4)) == con(0x0))
          {
            if ((vs_00.w_00 & con(0x13)) != con(0x0))
              wordrg1 = SKW_1031_030a(&table1d3ed5[ddata.v1d3ff1], vs_00.w_04, vs_00.w_00, vs_00.w_02); // 1st par adj
          }
          else
            wordrg1 = con(0xe3);
        }
        else
        {
          if (vs_00.w_00 != con(0x20))
          {
            if (vs_00.w_00 != con(0x40))
            {
              if (vs_00.w_00 == con(0x60))
                wordrg1 = con(0xe1);
            }
            else
              wordrg1 = con(0x81);
          }
          else
            wordrg1 = SKW_1031_03f2(&table1d3ed5[ddata.v1d3ff1], vs_00.w_02); // 1st par adj
        }
        if (wordrg1 != con(0x0))
        {
          boolrg7 = false;
          ddata.v1e04d2.warr0[2] = wordrg1;
          ddata.v1e04d2.warr0[0] = ddata.mouse_unk08;
          ddata.v1e04d2.warr0[1] = ddata.mouse_unk07;
          ddata.v1e04d2.r6.y = ddata.v1e0470.y;
          ddata.v1e04d2.r6.x = ddata.v1e0470.x;
          ddata.v1e04d2.r6.w = ddata.v1e0470.w;
          ddata.v1e04d2.r6.h = ddata.v1e0470.h;
        }
        if (!boolrg7)
        {
          ddata.fetchmouse_busy = false;
          SKW_GETSINGLEMOUSEEVENT();
          ddata.v1e0480 = UPCAST(t_gfxdata, SKW_TRANSMIT_UI_EVENT(&ddata.v1e04d2));
          vw_08 = con(0x0);
          special = true;
          break;
        }
      }
      if (!special)
      {
        ddata.fetchmouse_busy = false;
        SKW_GETSINGLEMOUSEEVENT();
        break;
      }
    }
  }
  SKW_1031_111e(vw_08);
}

// was SKW_1031_16fd
void SKW_CLICK_MAGICAL_MAP_AT(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_record* recoptrrg5;
  x16 vw_00;
  c_rect rc_04;
  c_record* prec_0c;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;

  vw_00 = eaxw;
  x16 wordrg31 = edxw;
  vw_1c = ddata.hero[ddata.v1e0b74 - con(0x1)].warrc3[ddata.v1e0b76];
  x16 wordrg6 = vw_1c;
  recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
  prec_0c = recoptrrg5;
  if (vw_00 != con(0x55) || (recoptrrg5->u4.w & con(0xe000)) != con(0x2000))
    return;
  SKW_QUERY_EXPANDED_RECT(con(0x63), &rc_04);
  wordrg31 -= rc_04.x - ddata.v1e0b5a;
  x16 wordrg22 = ebxw - (rc_04.y - ddata.v1e0b58);
  if ((wordrg31 % (ddata.v1d274a + ddata.v1d274e)) < ddata.v1d274e)
    return;
  if ((wordrg22 % (ddata.v1d274c + ddata.v1d2750)) < ddata.v1d2750 || SKW_GET_MISSILE_REF_OF_MINION(recoptrrg5->u2.w, wordrg6) == NULL)
    return;
  x16 wordrg3 = wordrg31 / (ddata.v1d274e + ddata.v1d274a);
  x16 wordrg21 = wordrg22 / (ddata.v1d274c + ddata.v1d2750);
  vw_18 = signedword(ddata.v1e0b82);
  vw_14 = signedword(ddata.v1e0b83);
  wordrg3 -= con(0x3);
  SKW_CALC_VECTOR_W_DIR(ddata.v1e0b84, wordrg3, &vw_18, con(0x3) - wordrg21, &vw_14);
  x16 wordrg2 = SKW_LOCATE_OTHER_LEVEL(ddata.v1e0b81, &vw_18, &vw_14, con(0x0), NULL);
  if (wordrg2 < con(0x0))
    return;
  x16 wordrg5 = ddata.v1d3248;
  SKW_CHANGE_CURRENT_MAP_TO(wordrg2);
  x8 byterg4 = SKW_GET_TILE_VALUE(vw_18, vw_14);
  x16 wordrg1 = urshift(unsignedlong(byterg4), con(0x5));
  if (wordrg1 != con(0x0) && wordrg1 != con(0x7))
  {
    if (wordrg1 != con(0x6))
      wordrg1 = con(0x1);
    else
    {
      wordrg1 = unsignedword(byterg4 & con(0x5));
      if (wordrg1 != con(0x0))
        wordrg1 = con(0x1);
    }
    if (wordrg1 != con(0x0))
    {
      if (vw_18 == ddata.v1e0b6e)
      {
        if (vw_14 == ddata.v1e0b70 && wordrg2 == ddata.v1e0b64)
        {
          if (ddata.v1e0b56 != con(0x1) || (ddata.v1e0b60 < con(0x0)))
          {
            if (ddata.v1e0b66 >= con(0x0))
            {
              if ((ddata.v1e0b56 == con(0x1)) || (ddata.v1e0b56 == con(0x3)))
              {
                vw_18 = ddata.v1e0b5e;
                vw_14 = ddata.v1e0b5c;
                wordrg2 = ddata.v1e0b66;
              }
            }
          }
          else
          {
            vw_18 = ddata.v1e0b68;
            vw_14 = ddata.v1e0b6a;
            wordrg2 = ddata.v1e0b60;
          }
        }
      }
      SKW_SET_DESTINATION_OF_MINION_MAP(vw_1c, vw_14, wordrg2, vw_18);
      SKW_1c9a_0247(prec_0c->u2.w);
      SKW_UPDATE_RIGHT_PANEL(false);
    }
  }
  SKW_CHANGE_CURRENT_MAP_TO(wordrg5);
}

bool SKW_HANDLE_UI_EVENT(c_event* eaxps)
{
  t_text t_00[0x28];
  t_text* tptrrg2;

  ui16 uwordrg1 = eaxps->warr0[con(0x2)];
  x16 wordrg3 = eaxps->warr0[con(0x0)];
  x16 wordrg4 = eaxps->warr0[con(0x1)];
  if (((uwordrg1 < con(0x3)) || (uwordrg1 > con(0x6))) || (ddata.v1e026e == con(0x0) && ((ddata.v1e025e == con(0x0)) || (unsignedlong(ddata.v1e0274) != ((unsignedlong(uwordrg1) + signedlong(ddata.v1e0258) - con(0x3)) & con(0x3))))))
  {
    if (((ddata.v1e025c == con(0x0)) || (((uwordrg1 != con(0x1)) && (uwordrg1 != con(0x2))) && (uwordrg1 != con(0x50)))) && ((uwordrg1 != con(0x50)) || ((((ddata.v1e040a == ddata.v1e0270) && (ddata.v1e040c == ddata.v1e0272)) && (ddata.v1e0406 == ddata.v1e0266)) && (ddata.v1e0402 == ddata.v1e0258))))
    {
      if (ddata.v1e0526 == con(0x0))
      {
        ddata.v1e0488 = false;
        if (uwordrg1 != con(0xe3))
        {
          if (uwordrg1 != con(0xe1))
          {
            if ((uwordrg1 != con(0x2)) && (uwordrg1 != con(0x1)))
            {
              if ((uwordrg1 < con(0x3)) || (uwordrg1 > con(0x6)))
              {
                if ((uwordrg1 < con(0x14)) || (uwordrg1 >= con(0x42)))
                {
                  if ((uwordrg1 < con(0xea)) || (uwordrg1 > con(0xed)))
                  {
                    if ((uwordrg1 < con(0x7d)) || (uwordrg1 > con(0x81)))
                    {
                      if ((uwordrg1 < con(0xe4)) || (uwordrg1 > con(0xe9)))
                      {
                        if ((uwordrg1 != con(0x5d)) && (uwordrg1 != con(0x5e)))
                        {
                          if (uwordrg1 < con(0x10) || uwordrg1 > con(0x13))
                          {
                            if (uwordrg1 < con(0x7) || uwordrg1 > con(0xb))
                            {
                              if (uwordrg1 != con(0x52))
                              {
                                if (uwordrg1 != con(0x6c))
                                {
                                  if (uwordrg1 != con(0x6b))
                                  {
                                    if ((uwordrg1 < con(0x65)) || (uwordrg1 > con(0x6a)))
                                    {
                                      if (uwordrg1 != con(0x70))
                                      {
                                        if (uwordrg1 < con(0x71) || uwordrg1 > con(0x73))
                                        {
                                          if (uwordrg1 < con(0x74) || uwordrg1 > con(0x7b))
                                          {
                                            if (uwordrg1 < con(0x5f) || uwordrg1 > con(0x62))
                                            {
                                              if (uwordrg1 != con(0x46))
                                              {
                                                if (uwordrg1 != con(0x47))
                                                {
                                                  if (uwordrg1 != con(0x48))
                                                  {
                                                    if (uwordrg1 != con(0x50))
                                                    {
                                                      if (uwordrg1 != con(0xf0))
                                                      {
                                                        if (uwordrg1 != con(0xf1))
                                                        {
                                                          if (uwordrg1 != con(0xf2))
                                                          {
                                                            if (uwordrg1 != con(0x55))
                                                            {
                                                              if ((uwordrg1 < con(0x56)) || (uwordrg1 > con(0x59)))
                                                              {
                                                                if (uwordrg1 != con(0x90))
                                                                {
                                                                  if (uwordrg1 != con(0x91))
                                                                  {
                                                                    if (!ddata.v1e0228 && !ddata.v1e0220 && !ddata.v1e0224 && !ddata.v1e03a8)
                                                                    {
                                                                      if (uwordrg1 != con(0x8e))
                                                                      {
                                                                        if (uwordrg1 != con(0x8f))
                                                                        {
                                                                          if (uwordrg1 != con(0x8c))
                                                                          {
                                                                            if (uwordrg1 != con(0x8d))
                                                                            {
                                                                              if (uwordrg1 != con(0x92) && uwordrg1 != con(0x93))
                                                                              {
                                                                                if (uwordrg1 != con(0xd7))
                                                                                {
                                                                                  if (uwordrg1 != con(0xd8))
                                                                                  {
                                                                                    if (uwordrg1 != con(0xd9))
                                                                                    {
                                                                                      if (uwordrg1 != con(0xda))
                                                                                      {
                                                                                        if (uwordrg1 == con(0xe0))
                                                                                          SKW_SK_PREPARE_EXIT();
                                                                                      }
                                                                                      else
                                                                                        SKW_SHOW_CREDITS();
                                                                                    }
                                                                                    else
                                                                                      ddata.savegamew8 = con(0x0);
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    ddata.savegamew8 = con(0x1);
                                                                                    ddata.savegamew1 = true;
                                                                                  }
                                                                                }
                                                                                else
                                                                                  ddata.savegamew8 = con(0x1);
                                                                              }
                                                                              else
                                                                                SKW_2f3f_04ea(ddata.v1e0270, ddata.v1e0258, ddata.v1e0266, ddata.v1e0272, uwordrg1);
                                                                            }
                                                                            else
                                                                            {
                                                                              R_AB26();
                                                                              if (ddata.v1e0976 != con(0x0))
                                                                                SKW_REFRESH_PLAYER_STAT_DISP(ddata.v1e0976 - con(0x1));
                                                                            }
                                                                          }
                                                                          else if (UI16CAST(ddata.savegamew2) > UI16CAST(con(0x0)) && ddata.v1e0288 == con(0x0))
                                                                          {
                                                                            ddata.mouse_unk02--;
                                                                            SKW_GAME_SAVE_MENU();
                                                                            ddata.mouse_unk02++;
                                                                          }
                                                                        }
                                                                        else
                                                                          SKW_RESUME_FROM_WAKE();
                                                                      }
                                                                      else if (ddata.v1e0288 == con(0x0))
                                                                      {
                                                                        ddata.v1d6727 = !ddata.v1e0228;
                                                                        if (ddata.v1e0976 != con(0x0))
                                                                          SKW_24a5_1798(con(0x4));
                                                                        ddata.v1d6727 = true;
                                                                        SKW_DISPLAY_RIGHT_PANEL_SQUAD_HANDS();
                                                                        SKW_38c8_0002();
                                                                        ddata.v1e0238 = true;
                                                                        if (ddata.v1e025c != con(0x0))
                                                                        {
                                                                          SKW_PERFORM_MOVE(ddata.v1e0256);
                                                                          ddata.v1e025c = con(0x0);
                                                                        }
                                                                        SKW_DRAW_WAKE_UP_TEXT();
                                                                        SKW_CHANGE_VIEWPORT_TO_INVENTORY(false);
                                                                        ddata.ticktrig = con(0x1);
                                                                        SKW_1031_0541(con(0x2));
                                                                        SKW_1031_098e();
                                                                      }
                                                                    }
                                                                  }
                                                                  else if (!ddata.v1e0248)
                                                                  {
                                                                    ddata.v1e0248 = true;
                                                                    SKW_38c8_0060();
                                                                    SKW_1031_06a5();
                                                                    SKW_1031_098e();
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  ddata.v1e0248 = false;
                                                                  SKW_38c8_0002();
                                                                  SKW_FILL_ENTIRE_PICT(ddata.bitmapptr, ddata.paletteptr1[con(0x0)]);
                                                                  tptrrg2 = SKW_QUERY_GDAT_TEXT(con(0x1), con(0x12), t_00, con(0x0));
                                                                  SKW_DRAW_VP_RC_STR(con(0x6), tptrrg2, unsignedword(ddata.paletteptr1[con(0x4)]));
                                                                  SKW_CHANGE_VIEWPORT_TO_INVENTORY(false);
                                                                  SKW_1031_0675(con(0x3));
                                                                  SKW_1031_098e();
                                                                  R_B37();
                                                                }
                                                              }
                                                              else
                                                              {
                                                                uwordrg1 -= con(0x56);
                                                                SKW_CLICK_MAGICAL_MAP_RUNE(uwordrg1);
                                                              }
                                                            }
                                                            else
                                                              SKW_CLICK_MAGICAL_MAP_AT(uwordrg1, wordrg4, wordrg3);
                                                          }
                                                          else
                                                            R_13262(con(0x2));
                                                        }
                                                        else
                                                          R_13262(con(0x3));
                                                      }
                                                      else
                                                        R_13262(con(0x1));
                                                    }
                                                    else
                                                    {
                                                      SKW_CLICK_VWPT(wordrg3, wordrg4);
                                                    }
                                                  }
                                                  else if (ddata.v1e0976 != con(0x0))
                                                    R_39796(&ddata.hero[ddata.v1e0976 - con(0x1)]);
                                                }
                                                else
                                                  SKW_CLICK_INVENTORY_EYE();
                                              }
                                              else
                                                SKW_PLAYER_CONSUME_OBJECT(con(0xffffffff), con(0xffffffff), con(0xffff));
                                            }
                                            else
                                            {
                                              x16 wordrg18 = SKW_GET_PLAYER_AT_POSITION((uwordrg1 - con(0x5f) + ddata.v1e0258) & con(0x3));
                                              if (wordrg18 >= con(0x0))
                                                SKW_SET_SPELLING_CHAMPION(wordrg18);
                                            }
                                          }
                                          else
                                          {
                                            uwordrg1 -= con(0x74);
                                            x16 wordrg41 = ((uwordrg1 & con(0x1)) != con(0x0)) ? 1 : 0;
                                            SKW_ACTIVATE_ACTION_HAND(uwordrg1 / 2, wordrg41);
                                          }
                                        }
                                        else
                                        {
                                          uwordrg1 -= con(0x71);
                                          ddata.v1e0488 = SKW_PROCEED_COMMAND_SLOT(uwordrg1) != con(0x0);
                                        }
                                      }
                                      else
                                        SKW_PROCEED_COMMAND_SLOT(con(0xffffffff));
                                    }
                                    else
                                    {
                                      uwordrg1 -= con(0x65);
                                      SKW_ADD_RUNE_TO_TAIL(uwordrg1);
                                    }
                                  }
                                  else
                                    SKW_REMOVE_RUNE_FROM_TAIL();
                                }
                                else
                                  ddata.v1e0488 = SKW_TRY_CAST_SPELL();
                              }
                              else
                              {
                                if (ddata.mouse_unk0e != con(0xffffffff))
                                  SKW_24a5_1798(ddata.mouse_unk0e);
                              }
                            }
                            else if ((ddata.v1e0288 == con(0x0)) || (uwordrg1 > con(0xb)))
                            {
                              x16 wordrg44 = uwordrg1 - con(0x7);
                              if (wordrg44 == con(0x4) || wordrg44 < ddata.savegamew2)
                              {
                                if (ddata.v1e0288 == con(0x0))
                                  SKW_24a5_1798(wordrg44);
                              }
                            }
                            else
                              SKW_2f3f_04ea(ddata.v1e0270, ddata.v1e0258, ddata.v1e0266, ddata.v1e0272, con(0x93));
                          }
                          else
                          {
                            SKW_SELECT_CHAMPION_LEADER(SKW_GET_PLAYER_AT_POSITION((uwordrg1 - con(0x10) + ddata.v1e0258) & con(0x3)));
                            SKW_2e62_0cfa(false);
                          }
                        }
                        else
                        {
                          x8 byterg4;
                          if (uwordrg1 != con(0x5d))
                            byterg4 = con(0x1);
                          else
                            byterg4 = con(0xffffffff);
                          byterg4 += ddata.hero[ddata.v1e0b74 - con(0x1)].b1c;
                          byterg4 &= con(0x3);
                          ddata.hero[ddata.v1e0b74 - con(0x1)].b1c = byterg4;
                          SKW_UPDATE_RIGHT_PANEL(false);
                        }
                      }
                      else
                      {
                        uwordrg1 -= con(0xe4);
                        SKW_CLICK_MONEYBOX(uwordrg1);
                      }
                    }
                    else
                    {
                      if (uwordrg1 != con(0x81))
                      {
                        uwordrg1 -= con(0x7d);
                        SKW_CHANGE_PLAYER_POS(uwordrg1);
                      }
                      else
                        SKW_CHAMPION_SQUAD_RECOMPUTE_POSITION();
                      R_107B0();
                      SKW_UPDATE_RIGHT_PANEL(false);
                    }
                  }
                  else
                  {
                    uwordrg1 -= con(0xea);
                    SKW_PUT_ITEM_TO_PLAYER(uwordrg1);
                  }
                }
                else
                {
                  uwordrg1 -= con(0x14);
                  SKW_CLICK_ITEM_SLOT(uwordrg1);
                }
              }
              else
                SKW_PERFORM_MOVE(uwordrg1);
            }
            else
              SKW_PERFORM_TURN_SQUAD(uwordrg1);
          }
          else
            SKW_1031_04F5();
        }
        else
          SKW_1031_050C();
        if (ddata.mouse_unk0a >= con(0xa5) && ddata.mouse_unk0a <= con(0xc6))
          ddata.v1e0488 = true;
        return true;
      }
    }
  }
  ddata.v1e0488 = true;
  return false;
}

// was SKW_1031_1e6a
void SKW_EVENT_LOOP(void)
{
  if (ddata.v1e0526 != con(0x0))
    ddata.v1e0526--;
  ddata.v1e0478 = false;
  do
  {
    SKW_IBMIO_USER_INPUT_CHECK();
    x16 wordrg1 = ddata.mouse_unk03;
    if (wordrg1 == ddata.mouse_unk04)
      return;
    x16 wordrg41 = wordrg1;
    wordrg1++;
    ddata.mouse_unk03 = wordrg1;
    if (ddata.mouse_unk03 > con(0x2))
    {
      ddata.mouse_unk03 = con(0x0);
    }
    if (!SKW_HANDLE_UI_EVENT(&table1e04e0[wordrg41 / 2]))
      ddata.mouse_unk03 = wordrg41;
    else
    {
      if (ddata.mouse_unk02 != con(0x0))
        ddata.mouse_unk02--;
    }
  } while (!ddata.v1e0488);
}

void SKW_121e_0003(ui16 eaxuw)
{
  x16 wordrg3 = con(0x1);
  x16 wordrg1 = ddata.v1e0270;
  x16 wordrg4 = ddata.v1e0272;
  if (eaxuw < con(0x2))
  {
    if (eaxuw == con(0x1))
    {
      wordrg1 += table1d27fc[(ddata.v1e0258 + con(0x3)) & con(0x3)];
      wordrg4 += table1d2804[(ddata.v1e0258 + con(0x3)) & con(0x3)];
    }
  }
  else if (eaxuw <= con(0x2))
  {
    wordrg1 += table1d27fc[(ddata.v1e0258 + con(0x1)) & con(0x3)];
    wordrg4 += table1d2804[(ddata.v1e0258 + con(0x1)) & con(0x3)];
    wordrg3 = con(0x3);
  }
  else if (eaxuw == con(0x3))
  {
    wordrg1 += table1d27fc[ddata.v1e0258];
    wordrg4 += table1d2804[ddata.v1e0258];
    wordrg3 = con(0x2);
  }
  if (wordrg1 >= con(0x0) && wordrg1 < ddata.savegamewa && wordrg4 >= con(0x0))
    if (wordrg4 < ddata.savegamewb)
      R_3C1E5(wordrg1, (ddata.v1e0258 + wordrg3) & con(0x3), con(0xffff), wordrg4, ddata.savegamewpc.w0);
}

// was SKW_121e_00be
void SKW_PLAYER_TESTING_WALL(x16 eaxw, x16 ebxw, x16 edxw)
{
  if (ddata.savegamew2 == con(0x0))
    return;
  if (eaxw == con(0x0))
    SKW_QUEUE_NOISE_GEN2(con(0x8), con(0x84), con(0xfe), ddata.v1d6c02, edxw, ebxw, eaxw, con(0x8c), con(0xc8));
  else
  {
    if (ddata.v1e0224)
      return;
    SKW_FIRE_MOUSE_SET_CAPTURE();
    ddata.v1e0224 = true;
    SKW_443c_08ab(&ddata.v1e00b6, &ddata.v1e00b2, &ddata.v1e00b4);
    if ((ddata.v1e00b2 & con(0x2)) != con(0x0))
      SKW_FIRE_HIDE_MOUSE_CURSOR();
    else
    {
      SKW_FIRE_MOUSE_RELEASE_CAPTURE();
      ddata.v1e0224 = false;
    }
  }
  ddata.v1e0488 = true;
}

void SKW_121e_013a(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 vw_04;
  x16 vw_08;

  vw_04 = eaxw;
  if (ddata.mouse_unk0e == con(0xffffffff))
    return;
  x16 wordrg6 = ddata.v1e0270;
  x16 wordrg3 = ddata.v1e0272;
  x16 wordrg41 = unsignedword(ddata.v1e02f0[ebxw].ba);
  if (wordrg41 != con(0x0))
  {
    if (wordrg41 != con(0x3))
      return;
    wordrg6 += table1d27fc[ddata.v1e0258];
    wordrg3 += table1d2804[ddata.v1e0258];
  }
  vw_08 = SKW_32cb_03a6(vw_04, wordrg41, wordrg6, edxw, wordrg3, ddata.v1e02f0[ebxw].w8, unsignedword(ddata.v1e02f0[ebxw].bb), false);
  if (vw_08 != con(0xffffffff))
  {
    SKW_MOVE_RECORD_TO(vw_08, wordrg3, con(0xffffffff), wordrg6, (ddata.v1e02f0[ebxw].bb != con(0x2)) ? con(0x0) : con(0xffff));
    ddata.v1e0ff6 = con(0x1);
    if (SKW_IS_CONTAINER_MONEYBOX(vw_08))
      SKW_GET_ADDRESS_OF_RECORD(vw_08)->u6.b.b1 &= con(0xfffffffb);
    SKW_TAKE_OBJECT(vw_08, true);
  }
  ddata.v1e0488 = true;
}

bool SKW_121e_0222(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_aispec* aiptrrg7;
  c_aispec* aiptrrg4;
  c_record* recoptrrg3;
  x8 vb_08;

  recoptrrg3 = NULL;
  if (ddata.mouse_unk0e == con(0xffffffff))
    return false;
  x16 vw_04 = (ddata.v1e0258 + ebxw) & con(0x3);
  x16 wordrg15 = SKW_GET_CREATURE_AT(eaxw, edxw);
  if (wordrg15 != con(0xffffffff))
  {
    aiptrrg4 = SKW_QUERY_CREATURE_AI_SPEC_FROM_TYPE(wordrg15);
    aiptrrg7 = aiptrrg4;
    recoptrrg3 = SKW_GET_ADDRESS_OF_RECORD(wordrg15);
    if ((aiptrrg4->u0.b.b0 & con(0x1)) != con(0x0))
      if (((ebxw >= con(0x4) && ebxw <= con(0x7)) && (aiptrrg4->u1e.b.b1 & con(0x8)) == con(0x0)) || (ebxw < con(0x4) && (aiptrrg7->u1e.b.b1 & con(0x20)) == con(0x0)))
        return false;
  }
  x16 vw_00 = SKW_REMOVE_OBJECT_FROM_HAND();
  x16 wordrg2;
  x16 wordrg19;
  if (ebxw < con(0x4) || ebxw > con(0x7))
  {
    wordrg19 = (vw_04 << con(0xe)) | (vw_00 & con(0xffff3fff));
    wordrg2 = con(0x0);
  }
  else
  {
    vb_08 = (CUTX8(ebxw) - con(0x4) + CUTX8(ddata.v1e0258)) & con(0x3);
    if (recoptrrg3 != NULL)
    {
      x16 wordrg21 = recoptrrg3->u2.w;
      while (wordrg21 != con(0xfffffffe))
      {
        if (urshift(wordrg21, con(0xe)) == unsignedword(vb_08))
        {
          if (SKW_IS_CONTAINER_MONEYBOX(wordrg21))
            SKW_GET_ADDRESS_OF_RECORD(wordrg21)->u6.b.b1 &= con(0xfffffffb);
        }
        wordrg21 = SKW_GET_NEXT_RECORD_LINK(wordrg21);
      }
    }
    wordrg19 = (unsignedword(vb_08) << con(0xe)) | (vw_00 & con(0xffff3fff));
    wordrg2 = con(0xffffffff);
  }
  SKW_MOVE_RECORD_TO(wordrg19, wordrg2, eaxw, con(0xffffffff), edxw);
  ddata.v1e0488 = true;
  return true;
}

void SKW_121e_0351(x16 eaxw, x16 edxw)
{
  x16 vw_00;

  bool boolrg3 = false;
  vw_00 = (ddata.v1e0530 != con(0x11)) ? con(0x2fd) : con(0x300);
  if (SKW_PT_IN_EXPANDED_RECT(vw_00, eaxw, edxw))
    boolrg3 = R_37BBB(con(0x0));
  else if (SKW_PT_IN_EXPANDED_RECT(vw_00 + 1, eaxw, edxw))
    boolrg3 = R_37BBB(con(0x1));
  if (boolrg3)
    ddata.v1e0488 = true;
}

x16 SKW_0aaf_0067(x8 eaxb)
{
  x16 wordrg3;
  x8 byterg5;
  t_text t_00[0x50];
  t_text* tptrrg1;
  x16 vw_54;
  x8 vb_5c; // inc8
  x8 vb_60;

  vb_60 = eaxb;
  x16 vw_58 = con(0x0);
  vw_54 = con(0xffffffff);
  t_text vub_50 = NULLBYTE;
  DM2_ZERO_MEMORY(DOWNCAST(t_text, t_00 + con(0x28)), con(0x28));
  vb_5c = con(0x0);
  byterg5 = vb_60;
  while (vb_5c, UI8CAST(vb_5c) < UI8CAST(con(0x14)))
  {
    tptrrg1 = SKW_QUERY_GDAT_TEXT(con(0x1a), vb_5c, t_00, byterg5);
    if (*tptrrg1 != NULLBYTE)
    {
      x8 wordrg4 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x1a), con(0xb), vb_5c, byterg5);
      tptrrg1 = t_00 + con(0x28) + 2 * signedlong(vw_58);
      *tptrrg1 = CUTX8(wordrg4);
      if (CUTX8(wordrg4) == con(0x0))
        *tptrrg1 = vb_5c;
      x8 byterg1 = CUTX8(wordrg4 >> con(0x8));
      tptrrg1[con(0x1)] = byterg1;
      if (byterg1 != con(0x0))
      {
        vw_54 = unsignedword(byterg1);
        vub_50 = *tptrrg1;
      }
      vw_58++;
    }
    vb_5c++;
  }
  if (vb_60 != con(0xffffff87))
    ddata.v1e0204 = vw_58;
  else
    ddata.v1e0204 = con(0x7);
  if (vw_54 == con(0xffffffff))
    if (vw_58 == con(0x1))
      vw_54 = con(0x1);
  SKW_1031_0675(con(0x4));
  x16 wordrg42 = con(0x0);
  while (ddata.mouse_visibility > con(0x0))
  {
    SKW_FIRE_SHOW_MOUSE_CURSOR();
    wordrg42++;
  }
  ddata.mouse_unk06 = con(0xff);
  do
  {
    SKW_EVENT_LOOP();
    SKW_WAIT_SCREEN_REFRESH();
    if (vw_54 != con(0xffffffff))
    {
      x16 wordrg15 = con(0x0); // called SKW_476d_04ed(vw_54) here, returns 0
      if (wordrg15 != con(0x0)) // can never be true then
        SKW_1031_0781(unsignedword(vub_50 + con(0xdb)));
    }
    if (ddata.mouse_unk06 == con(0xff) && SKW_476d_05a9() != con(0x0))
      if (SKW_476d_050e() == con(0x1c))
        SKW_1031_0781(con(0xdb));
  } while (ddata.mouse_unk06 == con(0xff));
  if (vb_60 != con(0xffffff87))
    wordrg3 = unsignedword(t_00[0x26 + 2 * ddata.mouse_unk06]);
  else
    wordrg3 = ddata.mouse_unk0a;
  for(;;)
  {
    wordrg42--;
    if (wordrg42 == con(0xffffffff))
    {
      ddata.backbuff2 = con(0x1);
      SKW_1031_06a5();
      return wordrg3;
    }
    SKW_FIRE_HIDE_MOUSE_CURSOR();
  }
}

void SKW_0aaf_01db(x16 eaxw, bool edxbool)
{
  t_gfxdata* gptrrg1;
  t_gfxdata* gptrrg5;
  c_rect rc_00;
  x16 vw_08;
  x16 vw_0c;

  if (!ddata.v1e0a88)
    SKW_FIRE_FILL_BACKBUFF_RECT(SKW_QUERY_EXPANDED_RECT(eaxw, &rc_00), ddata.paletteptr1[eaxw == con(0x0) ? con(0x1) : con(0x0)]);
  else
  {
    if (!edxbool)
      return;
    gptrrg5 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(ddata.v1e0206, ddata.v1e0208, ddata.v1e0207);
    s_gfxdatatail* ptrbeforerg5 = getprevious(gptrrg5);
    SKW_CALC_CENTERED_RECT_IN_RECT(&rc_00, ptrbeforerg5->w2, ptrbeforerg5->w4, &ddata.v1e0470);
    if (ddata.mouse_unk09 != con(0xffffffff))
    {
      SKW_QUERY_TOPLEFT_OF_RECT(ddata.mouse_unk09, &vw_08, &vw_0c);
      rc_00.x -= vw_08;
      rc_00.y -= vw_0c;
    }
    if (!dm2_dballochandler.gfxalloc_done)
    {
      gptrrg1 = &gptrrg5[SKW_CALC_IMAGE_BYTE_LENGTH(gptrrg5)];
    }
    else
      gptrrg1 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(ddata.v1e0206, ddata.v1e0208, ddata.v1e0207);
//                               srcbmp              palette
    SKW_DRAW_DIALOGUE_PARTS_PICT(gptrrg5, con(0x7), gptrrg1, &rc_00);
    SKW_FREE_PICT_ENTRY(gptrrg5);
  }
  SKW_SLEEP_SEVERAL_TIME(con(0x14));
}

void R_AB26(void)
{
  t_text* tptrrg2;
  t_text* tptrrg1;
  t_text t_00[0x80];
  x16 vw_80;
  t_text t_84[0x4]; // TODO probably 0x2 only

  if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x1a), con(0x1), con(0x0), con(0x87)))
    return;
  SKW_0aaf_02f8(con(0x87), con(0x0));
  tptrrg1 = SKW_QUERY_GDAT_TEXT(con(0x1a), con(0x28), t_00, con(0x87));
  SKW_DRAW_VP_RC_STR(con(0x15f), tptrrg1, unsignedword(ddata.paletteptr1[con(0xb)]));
  tptrrg1 = SKW_QUERY_GDAT_TEXT(con(0x1a), con(0x3c), t_00, con(0x87));
  SKW_DRAW_VP_RC_STR(con(0x170), tptrrg1, unsignedword(ddata.paletteptr1[con(0xb)]));
  t_84[0x1] = NULLBYTE;
  for(;;)
  {
    vw_80 = con(0x8);
    while (--vw_80 >= con(0x0))
    {
      t_84[0x0] = CUTX8(vw_80) + con(0x30);
      x16 wordrg31 = vw_80 + con(0x160);
      SKW_DRAW_STATIC_PIC(con(0x1a), ((vw_80 == ddata.v1d26a0) ? 1 : 0) + con(0x2), wordrg31, con(0x87), con(0xffffffff));
      if (vw_80 == con(0x0))
        tptrrg2 = SKW_QUERY_GDAT_TEXT(con(0x1a), con(0x29), t_00, con(0x87));
      else
        tptrrg2 = t_84;
      SKW_DRAW_VP_RC_STR(vw_80 + con(0x168), tptrrg2, unsignedword(ddata.paletteptr1[con(0xb)]));
    }
    vw_80 = con(0x8);
    while (--vw_80 >= con(0x0))
    {
      t_84[0x0] = CUTX8(vw_80) + con(0x30);
      x16 wordrg32 = vw_80 + con(0x171);
      SKW_DRAW_STATIC_PIC(con(0x1a), ((vw_80 == ddata.v1d26a2) ? 1 : 0) + con(0x2), wordrg32, con(0x87), con(0xffffffff));
      if (vw_80 == con(0x0))
        tptrrg2 = SKW_QUERY_GDAT_TEXT(con(0x1a), con(0x3d), t_00, con(0x87));
      else
        tptrrg2 = t_84;
      SKW_DRAW_VP_RC_STR(vw_80 + con(0x179), tptrrg2, unsignedword(ddata.paletteptr1[con(0xb)]));
    }
    SKW_DRAW_GAMELOAD_DIALOGUE_TO_SCREEN();
    ui16 uwordrg1 = unsignedword(SKW_0aaf_0067(con(0x87)));
    ui16 uwordrg4 = uwordrg1;
    if (uwordrg1 == con(0xdb))
      return;
    x16 wordrg41;
    if (uwordrg1 < con(0x9d) || uwordrg1 > con(0xa4))
    {
      uwordrg1 = uwordrg4 - con(0x95);
      wordrg41 = con(0x0);
    }
    else
    {
      uwordrg1 -= con(0x9d);
      wordrg41 = con(0xa);
    }
    R_5BFB(uwordrg1, wordrg41);
  }
}

// old name: SKW_QUERY_PICT_BITS
t_gfxdata* SKW_QUERY_PICT_BITMAP(c_hex18* eaxph18)
{
  t_gfxdata* gptrrg1;

  if ((eaxph18->w_04 & con(0x4)) == con(0x0))
  {
    if ((eaxph18->w_04 & con(0x8)) == con(0x0))
      return eaxph18->pg_00;
    gptrrg1 = SKW_3e74_5817(eaxph18->w_0c);
  }
  else
    gptrrg1 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(eaxph18->b_08, eaxph18->b_0b, eaxph18->b_09);
  eaxph18->pg_00 = gptrrg1;
  return gptrrg1;
}

// was SKW_0b36_020e
void SKW_LOAD_GDAT_INTERFACE_00_02(void)
{
SPX_DEBUG_PUSH_FUNCTION_INFO("SKW_LOAD_GDAT_INTERFACE_00_02");
LOGX(("SKW_LOAD_GDAT_INTERFACE_00_02\n" ));

  x8 vb_00;
  x8* bptrrg5;
  x8* bptrrg3;

  bptrrg5 = UPCAST(x8, DM2_ALLOC_FREEPOOL_MEMORY(SKW_QUERY_GDAT_ENTRY_DATA_LENGTH(con(0x1), con(0x7), con(0x2), con(0x0)) & con(0xffff)));
  SKW_LOAD_GDAT_ENTRY_DATA_TO(con(0x1), con(0x7), con(0x2), con(0x0), bptrrg5);
  vb_00 = *bptrrg5;
  bptrrg3 = bptrrg5 + con(0x1);
  ddata.v1e020c = UPCAST(s_bpp, DM2_ALLOC_FREEPOOL_MEMORY(9 * unsignedlong(vb_00)));
  x16 wordrg12 = con(0x0);
  while (wordrg12 < unsignedword(vb_00))
  {
    bptrrg5 = bptrrg3;
    bptrrg3++;
    ddata.v1e020c[wordrg12].b0 = *bptrrg5;
    wordrg12++;
  }
  x16 wordrg11 = con(0x0);
  while (wordrg11 < unsignedword(vb_00))
  {
    ddata.v1e020c[wordrg11].pb1 = bptrrg3;
    bptrrg3 += unsignedlong(ddata.v1e020c[wordrg11].b0);
    wordrg11++;
  }
  x16 wordrg1 = con(0x0);
  for(;;)
  {
    if (wordrg1 >= unsignedword(vb_00))
    {
      ddata.v1e0210 = UPCAST(x16, bptrrg3); // TODO: HERE problem, left wordptr, right surely not
      return;
    }
    ddata.v1e020c[wordrg1].pb5 = bptrrg3;
    bptrrg3 += ddata.v1e020c[wordrg1].b0;
    wordrg1++;
  }
SPX_DEBUG_POP;
}

void SKW_CLICK_VWPT(x16 eaxw, x16 edxw)
{
  c_record* recoptrrg5;
  c_tim vtim_08;
  c_aispec* pai_18;
  x16 vw_3c;
  x16 vw_40;
  x16 vw_44;
  x16 vw_48;
  x16 vw_4c;
  x16 vw_50;

  x16 vw_04 = eaxw;
  x16 vw_00 = edxw;
  SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e0266);
  if (ddata.v1e03a8)
  {
    ddata.v1e03a8 = false;
    SKW_PUSH_PULL_RIGID_BODY(ddata.v1d324a);
    SKW_29ee_000f();
    return;
  }
  vw_04 -= ddata.v1d26fc;
  vw_00 -= ddata.v1d26fe;
  x16 vw_38 = ddata.v1e0270;
  x16 vw_54 = ddata.v1e0272;
  vw_38 += table1d27fc[ddata.v1e0258];
  vw_54 += table1d2804[ddata.v1e0258];
  ddata.v1e0530 = unsignedword((SKW_GET_TILE_VALUE(vw_38, vw_54) & con(0xff)) >> con(0x5));
  vw_48 = ddata.savegamewpc.w0;
  x16 wordrg6 = con(0x0);
  while (wordrg6 < ddata.v1e0404)
  {
    x16 wordrg31 = wordrg6;
    if (SKW_PT_IN_RECT(&ddata.v1e02f0[wordrg6].r0, vw_04, vw_00))
    {
      ui8 ubyterg1 = ddata.v1e02f0[wordrg31].bb - con(0x1);
      if (ubyterg1 <= con(0x5))
      {
        switch (ubyterg1)
        {
          case 0:
          case 1:
          case 2:
            if (ddata.v1e02f0[wordrg6].w8 != con(0xffffffff))
            {
              if (vw_48 == con(0xffffffff))
              {
                SKW_121e_013a(vw_04, wordrg6, vw_00);
                return;
              }
              x8 byterg13 = ddata.v1e02f0[wordrg6].bb;
              if (byterg13 != con(0x3))
              {
                if (byterg13 == con(0x1))
                {
                  x16 wordrg52 = con(0x0);
                  while (wordrg52 <= con(0x1))
                  {
                    if (SKW_121e_03ae(vw_04, ddata.v1e0270, ddata.v1e0272, vw_00, con(0x0), wordrg52, con(0x1)))
                      return;
                    wordrg52++;
                  }
                }
              }
              else if (SKW_121e_03ae(vw_04, vw_38, vw_54, vw_00, con(0x0), con(0x2), unsignedword(byterg13)))
                return;
            }
          break;

          case 3:
            if (ddata.mouse_unk0e != con(0xffffffff))
            {
              if (ddata.v1e02f0[wordrg31].ba != con(0x3))
              {
                vw_44 = (ddata.v1e0270);
                vw_3c = ddata.v1e0272;
              }
              else
              {
                vw_44 = vw_38;
                vw_3c = vw_54;
              }
              x16 vw_2c = vw_44;
              recoptrrg5 = SKW_GET_ADDRESS_OF_TILE_RECORD(vw_44, vw_3c);
              if ((recoptrrg5->u2.b.b0 & con(0x40)) == con(0x0))
              {
                x16 wordrg17 = (ddata.v1e0258 + con(0x1)) & con(0x3);
                x16 wordrg3 = vw_44 + table1d27fc[wordrg17];
                vw_44 = wordrg3;
                vw_3c += table1d2804[wordrg17];
                R_3C1E5(wordrg3, (ddata.v1e0258 + con(0x3)) & con(0x3), con(0xffff), vw_3c, ddata.savegamewpc.w0);
              }
              else if (vw_48 == con(0xffffffff))
              {
                SKW_QUEUE_NOISE_GEN1(con(0x3), con(0x88), con(0x8c), con(0x0), con(0x80), ddata.v1e0270, ddata.v1e0272, con(0x1));
                SKW_INVOKE_MESSAGE(vw_44, con(0x0), con(0x2), vw_3c, ddata.longmallocx + con(0x1));
                vtim_08.un.l_00 = (ddata.longmallocx + 1) | (signedlong(ddata.v1d3248) << con(0x18));
                vtim_08.b_04 = con(0x58);
                vtim_08.b_05 = con(0x0);
                vtim_08.u.w_06 = SKW_GET_TILE_RECORD_LINK(vw_2c, vw_3c);
                SKW_QUEUE_TIMER(&vtim_08);
                recoptrrg5->u2.b.b1 |= con(0x8);
                ddata.v1e0488 = true;
              }
            }
          break;

          case 4:
          break;

          case 5:
            vw_4c = unsignedword(ddata.v1e02f0[wordrg31].ba);
            if (SKW_32cb_0287(unsignedword(ddata.v1e02f0[wordrg31].ba), vw_00, vw_04))
            {
              SKW_121e_0003(vw_4c); // TODO: vw_4c should be unsigned
              return;
            }
          break;

          default: throw(THROW_DMABORT);
        }
      }
    }
    wordrg6++;
  }
  x16 wordrg61 = unsignedword(SKW_GET_TILE_VALUE(vw_38, vw_54));
  bool boolrg1;
  if (urshift(wordrg61, con(0x5)) != con(0x6))
    boolrg1 = false;
  else
  {
    if ((wordrg61 & con(0x1)) == con(0x0))
      boolrg1 = false;
    else
    {
      wordrg61 &= con(0x4);
      if (wordrg61 != con(0x0))
        boolrg1 = false;
      else
        boolrg1 = true;
    }
  }
  bool vbool_24 = boolrg1;
  if (vw_48 != con(0xffffffff))
  {
    x16 wordrg62 = con(0x0);
    for(;;)
    {
      x16 vw_14 = wordrg62;
      if (wordrg62 > con(0x1))
      {
        if (ddata.v1e0530 == con(0x0))
          if (!vbool_24)
            return;
        wordrg62 = con(0x2);
        for(;;)
        {
          x16 vw_20 = wordrg62;
          if (wordrg62 > con(0x3))
          {
            vw_50 = SKW_GET_CREATURE_AT(vw_38, vw_54);
            if (vw_50 != con(0xffffffff))
            {
              pai_18 = SKW_QUERY_CREATURE_AI_SPEC_FROM_TYPE(vw_50);
              if ((pai_18->u0.b.b0 & con(0x1)) != con(0x0))
              {
                wordrg62 = con(0x0);
                while (wordrg62 < (pai_18->u1e.w & con(0xf)))
                {
                  if (SKW_121e_03ae(vw_04, vw_38, vw_54, vw_00, con(0x3), wordrg62 + con(0x2), con(0x2)))
                    return;
                  if (SKW_PT_IN_EXPANDED_RECT(SKW_0cee_2e09(vw_50) + wordrg62, vw_04, vw_00))
                    if (SKW_121e_0222(vw_38, wordrg62 + con(0x6), vw_54))
                      return;
                  wordrg62++;
                }
              }
            }
            SKW_121e_0351(vw_04, vw_00);
            return;
          }
          if (SKW_121e_03ae(vw_04, vw_38, vw_54, vw_00, con(0x3), wordrg62, con(0x1)))
            return;
          if (SKW_PT_IN_EXPANDED_RECT(wordrg62 + con(0x2f8), vw_04, vw_00))
            if (SKW_121e_0222(vw_38, vw_20, vw_54))
              return;
          wordrg62++;
        }
      }
      if (SKW_121e_03ae(vw_04, ddata.v1e0270, ddata.v1e0272, vw_00, con(0x0), wordrg62, con(0x1)))
        return;
      if (SKW_PT_IN_EXPANDED_RECT(wordrg62 + con(0x2f8), vw_04, vw_00))
        if (SKW_121e_0222(ddata.v1e0270, vw_14, ddata.v1e0272))
          return;
      wordrg62++;
    }
  }
  if (ddata.v1e0530 == con(0x0))
  {
    if (SKW_PT_IN_EXPANDED_RECT(con(0x2fd), vw_04, vw_00))
    {
      SKW_PLAYER_TESTING_WALL(vbool_24 ? 1 : 0, vw_54, vw_38);
      return;
    }
    if (SKW_PT_IN_EXPANDED_RECT(con(0x2fe), vw_04, vw_00))
    {
      SKW_PLAYER_TESTING_WALL(vbool_24 ? 1 : 0, vw_54, vw_38);
      return;
    }
  }
  x16 wordrg51 = SKW_GET_CREATURE_AT(vw_38, vw_54);
  if (wordrg51 == con(0xffffffff))
    return;
  if ((SKW_QUERY_CREATURE_AI_SPEC_FROM_TYPE(wordrg51)->u0.b.b0 & con(0x1)) == con(0x0))
    return;
  x16 wordrg63 = vw_54;
  if (!SKW_32cb_01b6(vw_04, vw_38, wordrg63, vw_00, &vw_40) == con(0x0))
    return;
  if (SKW_GET_CREATURE_WEIGHT(wordrg51) == con(0xff))
  {
    SKW_QUEUE_NOISE_GEN2(con(0xf), con(0x84), con(0xfe), SKW_QUERY_CLS2_FROM_RECORD(wordrg51), vw_38, wordrg63, con(0x0), con(0x8c), con(0x80));
    return;
  }
  if (vw_40 == con(0x0))
  {
    ddata.v1e03a8 = true;
    ddata.v1e03fa = vw_04;
    ddata.v1e03fc = vw_00;
    SKW_29ee_000f();
    ddata.v1d324a = con(0x6);
    return;
  }
  SKW_ROTATE_CREATURE(wordrg51, vw_40, false);
}

void SKW_THINK_CREATURE(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_350* ptrrg7;
  c_aispec* aiptrrg3;
  bool doit = false; // added

  x16 wordrg1 = SKW_GET_CREATURE_AT(eaxw, edxw);
  if (wordrg1 == con(0xffffffff))
    return;
  ptrrg7 = SKW_13e4_0004(wordrg1, CUTX8(edxw), ebxw, CUTX8(eaxw));
  aiptrrg3 = ddata.s350.v1e0552;
  ddata.s350.v1e0556->w02 = con(0xffffffff);
  if (ddata.s350.v1e054e->u6.w == con(0x0))
  {
    ddata.s350.v1e0556->u.v.w14 = con(0x1);
    ddata.s350.v1e054e->u6.w = ddata.s350.v1e0556->u.v.w14;
  }
  x16 wordrg6 = ddata.s350.v1e0556->u.v.w14;
  ddata.s350.v1e0556->u.v.w14 = con(0x0);
  x16 wordrg5 = signedword(aiptrrg3->b3);
  if (wordrg5 != con(0x0))
  {
    if (wordrg5 < con(0x0))
      wordrg5 = -wordrg5;
    x16 vw_08 = unsignedword(CUTX8(ddata.longmallocx >> con(0x2)));
    if (unsignedword(ddata.s350.v1e0556->barr04[con(0x2)]) > vw_08)
      vw_08 += 0x100; // incbyte1
    vw_08 -= unsignedword(ddata.s350.v1e0556->barr04[con(0x2)]);
    x16 vw_04 = vw_08 / wordrg5;
    if (vw_04 > con(0x0))
    {
      if (aiptrrg3->b3 >= con(0x0))
      {
        if (UI16CAST(ddata.s350.v1e054e->u6.w) < UI16CAST(aiptrrg3->w4))
          ddata.s350.v1e054e->u6.w += vw_04;
      }
      else
        wordrg6 += vw_04;
      x16 wordrg41 = vw_08 % wordrg5;
      ddata.s350.v1e0556->barr04[con(0x2)] = CUTX8(CUTX16(UI32CAST(ddata.longmallocx) >> con(0x2)) - wordrg41);
    }
  }
  if (wordrg6 <= con(0x0))
    doit = true;
  else
  {
    if ((aiptrrg3->u0.b.b0 & con(0x1)) == con(0x0))
      ddata.s350.v1e054e->ua.b.b1 &= con(0x7f);
    if (!SKW_WOUND_CREATURE(wordrg6))
      doit = true;
  }
  if (doit)
  {
    if ((aiptrrg3->u0.b.b0 & con(0x1)) != con(0x0))
    {
      if ((ddata.s350.v1e055e[con(0x1)] & con(0x4000)) == con(0x0))
      {
        if ((ddata.s350.v1e055e[con(0x1)] & con(0x2000)) != con(0x0))
          SKW_13e4_0806();
      }
      else
        SKW_13e4_071b();
      if (ddata.s350.v1e0556->w02 == con(0xffffffff))
        SKW_1c9a_0fcb(unsignedword(ddata.s350.v1e054e->u4.b.b1));
    }
    else
      SKW_13e4_0982();
  }
  SKW_13e4_0329(ptrrg7);
}

x8 SKW_14cd_0457(void)
{
  c_sizex16* sx16ptrrg5;
  c_sizex16* sx16ptrrg1;

  x16 vw_00 = signedword(ddata.s350.v1e0674);
  if (vw_00 == con(0x0))
    return con(0x0);
  sx16ptrrg5 = ddata.s350.v1e0678;
  x16 wordrg6 = unsignedword(ddata.s350.v1e07d8.b0);
  while (vw_00 > con(0x0))
  {
    if (signedword(sx16ptrrg5->s_00.b_00) > con(0x0))
      sx16ptrrg5->s_00.b_00 = CUTX8(DM2_MIN(signedword(sx16ptrrg5->s_00.b_00) / 2, wordrg6 - con(0x2)));
    vw_00--;
    sx16ptrrg5++;
  }
  vw_00 = ddata.s350.v1e0674;
  sx16ptrrg5 = ddata.s350.v1e0678;
  for (x16 n = con(0x0); n < vw_00; n++, sx16ptrrg5++)
  {
    if (sx16ptrrg5->s_00.b_00 < con(0x0))
    {
      x16 wordrg3 = n + con(0x1);
      sx16ptrrg1 = sx16ptrrg5 + 1; // one struct ahead
      while (wordrg3 < vw_00)
      {
        if (sx16ptrrg1->s_00.b_00 >= con(0x0))
          break;
        wordrg3++;
        sx16ptrrg1++;
      }
      if (wordrg3 < vw_00)
      {
        SKW_COPY_MEMORY(DOWNCAST(c_sizex16, sx16ptrrg1), 2 * (11 * (signedlong(vw_00) - signedlong(wordrg3))), DOWNCAST(c_sizex16, sx16ptrrg5));
        wordrg3 -= n;
        vw_00 -= wordrg3;
      }
      else
        vw_00 = n + con(0x1);
    }
  }
  if (ddata.s350.v1e0678[vw_00 - con(0x1)].s_00.b_00 < con(0x0))
    vw_00--;
  ddata.s350.v1e0674 = CUTX8(vw_00);
  return CUTX8(vw_00);
}

s_hex20* SKW_14cd_10d2(s_hexe* eaxphe, x8 edxb)
{
  s_hexe* sheptrrg1;
  s_hexe* sheptrrg2;
  s_hexe* sheptrrg3;
  s_hex20* sptrrg5;
  s_4bytearray* s4baptrrg7;
  s_4bytearray* s4baptrrg6;
  s_4bytearray* s4baptrrg51;
  s_hexe* phe_04;
  s_hex20* ps_0c;
  x16 vw_18;
  x8 vb_24;

  phe_04 = eaxphe;
  x16 vw_10 = con(0x0);
  x16 vw_14 = con(0x0);
  x16 vw_1c = con(0x0);
  x16 vw_20 = con(0x0);
  if (ddata.s350.v1e058c != con(0x0))
  {
    DM2_ZERO_MEMORY(DOWNCAST(s_hex20, ddata.s350.v1e058e), con(0x4) * sizeof(s_hex20));
    ddata.s350.v1e058c = con(0x0);
  }
  ps_0c = &ddata.s350.v1e058e[0x0];
  sptrrg5 = ps_0c;
  vw_18 = con(0x0);
  sheptrrg3 = phe_04;
  while (vw_18 < con(0x4))
  {
    sheptrrg2 = sptrrg5->ps_00;
    if (sheptrrg2 != NULL)
    {
      if (sheptrrg2 == sheptrrg3)
        if (sptrrg5->sarr_04[con(0x0)].barr_00[con(0x4)] == edxb)
          return UPCAST(s_hex20, sptrrg5);
    }
    else
      ps_0c = sptrrg5;
    vw_18++;
    sptrrg5++;
  }
  ps_0c->ps_00 = phe_04;
  ps_0c->sarr_04[con(0x0)].barr_00[con(0x4)] = edxb;
  s4baptrrg7 = &ps_0c->sarr_04[con(0x1)];
  s4baptrrg6 = s4baptrrg7;
  s4baptrrg51 = s4baptrrg7;
  ps_0c->sarr_04[con(0x0)].barr_00[con(0x3)] = con(0x0);
  ps_0c->sarr_04[con(0x0)].barr_00[con(0x2)] = con(0x0);
  ps_0c->sarr_04[con(0x0)].barr_00[con(0x1)] = con(0x0);
  vw_18 = con(0x0);
  do
  {
    if (vw_18 > con(0x5))
      return UPCAST(s_hex20, ps_0c);
    if (phe_04->b_0c == edxb)
    {
      x16 wordrg4 = phe_04->w_04;
      if ((wordrg4 != con(0xffffffff)) && (phe_04->b_00 != con(0x8)))
      {
        if (phe_04->b_0a != con(0xffffffff))
        {
          while (s4baptrrg6 < s4baptrrg7)
          {
            s4baptrrg6->barr_00[con(0x1)] = CUTX8(vw_10) - CUTX8(vw_1c);
            s4baptrrg6++;
          }
          vw_10 = signedword(phe_04->b_0a);
          ps_0c->sarr_04[con(0x0)].barr_00[con(0x2)] += CUTX8(vw_10);
          vw_1c = con(0x0);
        }
        if (phe_04->b_0b != con(0xffffffff))
        {
          while (s4baptrrg51 < s4baptrrg7)
          {
            s4baptrrg51->barr_00[con(0x2)] = CUTX8(vw_14) - CUTX8(vw_20);
            s4baptrrg51++;
          }
          vw_14 = signedword(phe_04->b_0b);
          ps_0c->sarr_04[con(0x0)].barr_00[con(0x3)] += CUTX8(vw_14);
          vw_20 = con(0x0);
        }
        x16 wordrg2 = SKW_14cd_102e(wordrg4, con(0xff), false, ddata.s350.v1e054e->u2.w, true);
        s4baptrrg7->barr_00[con(0x0)] = CUTX8(wordrg2);
        ps_0c->sarr_04[con(0x0)].barr_00[con(0x1)] += CUTX8(wordrg2);
        x16 wordrg3 = wordrg2;
        vb_24 = CUTX8(DM2_MIN(wordrg3, vw_10 - vw_1c));
        ps_0c->sarr_04[con(0x0)].barr_00[con(0x2)] -= vb_24;
        ps_0c->sarr_04[con(0x0)].barr_00[con(0x3)] -= CUTX8(DM2_MIN(wordrg3, vw_14 - vw_20));
        vw_1c = DM2_MIN(vw_10, vw_1c + wordrg2);
        wordrg2 += vw_20;
        vw_20 = DM2_MIN(vw_14, wordrg2);
      }
      s4baptrrg7++;
      vw_18++;
    }
    sheptrrg1 = phe_04;
    phe_04 = sheptrrg1 + con(0x1);
  } while (sheptrrg1->b_0d != con(0x0));
  return UPCAST(s_hex20, ps_0c);
}

void SKW_14cd_1d6c(x8 eaxb, s_hexe* ebxphe, x8 ecxb, x8 edxb)
{
  s_hexe vhe_00;
  s_hexe* sheptrrg1;
  x8 vb_10;
  x8 vb_14;
  x8 vb_18;
  bool doit; // added

  vb_18 = eaxb;
  vb_10 = edxb;
  vb_14 = ecxb;
  if (ebxphe == NULL)
    return;
  do
  {
    doit = false;
    if (ebxphe->b_0c == vb_14)
    {
      if ((ebxphe->w_04 == con(0xffffffff)) || (ebxphe->w_06 != con(0x0) && ebxphe->w_06 != con(0x1)))
        doit = true;
      else
      {
        if (SKW_1c9a_0732(ebxphe->w_04, con(0xff), ddata.s350.v1e054e->u2.w) != con(0xfffffffe))
          doit = true;
      }
      if (doit)
      {
        if (SKW_14cd_1316(ebxphe->b_01, vb_10, ebxphe->u_02.w))
        {
          SKW_COPY_MEMORY(DOWNCAST(s_hexe, ebxphe), sizeof(s_hexe), DOWNCAST(s_hexe, &vhe_00));
          if (vb_18 != con(0x0))
          {
            vhe_00.b_08 = con(0x0);
            vhe_00.b_09 = con(0x0);
          }
          SKW_14cd_0f3c(ebxphe->b_00, &vhe_00, vb_14, ebxphe, con(0x0), con(0xffff), vb_10, vb_18);
        }
      }
    }
    sheptrrg1 = ebxphe;
    ebxphe++;
  } while (sheptrrg1->b_0d != con(0x0));
}

void SKW_14cd_1e6e(x8 eaxb, s_hexe* ebxphe, x8 edxb)
{
  if (R_3DC4C(ddata.s350.v1e0571))
  {
    bool doit = false; // added
    if (eaxb != con(0x0))
    {
      if ((SKW_RAND() & con(0x1f)) == con(0x0))
      {
        ddata.s350.v1e054e->ua.b.b0 &= con(0x7f);
      }
      doit = true;
    }
    else if ((ddata.s350.v1e054e->ua.w & con(0x80)) == con(0x0))
    {
      if ((SKW_RAND() & con(0x3f)) != con(0x0))
        return;
      ddata.s350.v1e054e->ua.b.b0 |= con(0xffffff80);
      doit = true;
    }
    if (doit)
    {
      SKW_14cd_0f3c(con(0x0), getadr_r1d41d6(), con(0x0), ebxphe, con(0x0), con(0xffff), edxb, eaxb);
      return;
    }
  }
  ddata.s350.v1e054e->ua.b.b0 &= con(0x7f);
}

x8 SKW_PROCEED_XACT(x8 eaxb)
{
  ui8 ubyterg8 = eaxb - con(0x3f);
  if (ubyterg8 > con(0x23))
    return con(0xfffffffe);
  switch (ubyterg8)
  {
    case 0:
    return SKW_PROCEED_XACT_56();

    case 1:
      SKW_PROCEED_XACT_57();
    return con(0xfffffffe);

    case 2:
      ddata.s350.v1e0556->u.v.b1a = con(0x13);
    return con(0xfffffffe);

    case 20:
      ddata.s350.v1e0572 = con(0xffffffff);
      ddata.s350.v1e0574 = con(0x0);
    case 3: // no break before
    return SKW_PROCEED_XACT_59_76();

    case 4:
      ddata.s350.v1e0556->u.v.b1a = con(0x0);
    case 5: // no break before
    return con(0xfffffffe);

    case 6:
    return SKW_PROCEED_XACT_62();

    case 7:
    return SKW_PROCEED_XACT_63();

    case 8:
    return SKW_PROCEED_XACT_64();

    case 9:
    return SKW_PROCEED_XACT_65();

    case 10:
    return SKW_PROCEED_XACT_66();

    case 11:
    return SKW_PROCEED_XACT_67();

    case 12:
    return SKW_PROCEED_XACT_68();

    case 13:
      SKW_PROCEED_XACT_69();
    return con(0xfffffffe);

    case 14:
    return SKW_PROCEED_XACT_70();

    case 15:
    return SKW_PROCEED_XACT_71();

    case 16:
    case 31:
    case 32:
      SKW_PROCEED_XACT_72_87_88();
    return con(0xfffffffe);

    case 17:
    return SKW_PROCEED_XACT_73();

    case 18:
    return SKW_PROCEED_XACT_74();

    case 19:
    return SKW_PROCEED_XACT_75();

    case 21:
    return SKW_PROCEED_XACT_77();

    case 22:
    return SKW_PROCEED_XACT_78();

    case 23:
      SKW_PROCEED_XACT_79();
    return con(0xfffffffe);

    case 24:
    return SKW_PROCEED_XACT_80();

    case 25:
    return SKW_PROCEED_XACT_81();

    case 26:
    return SKW_PROCEED_XACT_82();

    case 27:
    return SKW_PROCEED_XACT_83();

    case 28:
    return SKW_PROCEED_XACT_84();

    case 29:
    return SKW_PROCEED_XACT_85();

    case 30:
    return SKW_PROCEED_XACT_86();

    case 33:
    return SKW_PROCEED_XACT_89();

    case 34:
    return SKW_PROCEED_XACT_90();

    case 35:
    return SKW_PROCEED_XACT_91();

    default: throw(THROW_DMABORT);
  }
}

// was SKW_14cd_274f
x8 SKW_PROCEED_XACT_66(void)
{
  x8 byterg1;
  if (!SKW_14cd_2662(con(0x2)))
  {
    x16 wordrg16 = ddata.s350.v1e0572;
    ddata.s350.v1e0572 = con(0x10);
    ddata.s350.v1e0574 = con(0x2);
    if (SKW_PROCEED_XACT_63() == con(0xfffffffe))
      return con(0xfffffffe);
    if (wordrg16 != con(0x0))
    {
      ddata.s350.v1e0572 = con(0x7);
      if (SKW_PROCEED_XACT_63() == con(0xfffffffe))
        return con(0xfffffffe);
    }
    if (ddata.s350.v1e0556->u.v.w0e-- <= con(0x0))
    {
      ddata.s350.v1e0556->u.v.w0e = con(0x5);
      ddata.s350.v1e0556->u.v.b1a = con(0x1e);
      return con(0xfffffffd);
    }
    if (ddata.s350.v1e0556->u.v.w0e > con(0x5))
    {
      ddata.s350.v1e0556->u.v.w0e -= con(0x5);
    }
    byterg1 = con(0xfffffffd);
  }
  else
  {
    if (ddata.s350.v1e0556->u.v.w0e-- <= con(0x5))
    {
      ddata.s350.v1e0556->u.v.w0e = con(0x9);
      ddata.s350.v1e0556->u.v.b1a = con(0x1f);
      return con(0xfffffffc);
    }
    byterg1 = con(0xfffffffc);
  }
  ddata.s350.v1e0556->u.v.b1a = con(0x1d);
  return byterg1;
}

// was SKW_14cd_28d2
x8 SKW_PROCEED_XACT_67(void)
{
  x16* wptrrg7;
  t_gfxdata vga_00[0x14];
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;
  x8 vb_24;

  vb_24 = con(0xfffffffd);
  vw_20 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  if (!SKW_14cd_2662(con(0x2)))
  {
    x16 wordrg14 = SKW_GET_CREATURE_AT(table1d27fc[vw_20] + unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07) + table1d2804[vw_20]);
    if (wordrg14 == con(0xffffffff))
      return vb_24;
    ddata.s350.v1e0556->u.v.b1a = con(0x1d);
    wptrrg7 = &SKW_GET_ADDRESS_OF_RECORD(wordrg14)->u2.w;
    x16 wordrg6 = SKW_14cd_2886(wptrrg7, CUTX8(vw_20), con(0x0), con(0x10), con(0x0), con(0x0));
    x16 wordrg13 = SKW_14cd_2886(wptrrg7, CUTX8(vw_20), con(0x0), con(0x7), con(0x0), con(0x0));
    if (wordrg13 != con(0xffffffff))
    {
      if (wordrg6 != con(0xffffffff))
        wordrg6 += wordrg13;
      else
        wordrg6 = wordrg13;
    }
    if (wordrg6 == con(0xffffffff))
    {
      ddata.s350.v1e0556->u.v.w10 = con(0x0);
      return vb_24;
    }
    x16 wordrg2 = SKW_48ae_0767(SKW_14cd_2886(wptrrg7, (CUTX8(vw_20) + con(0x2)) & con(0x3), con(0x1), con(0x10), con(0x1), con(0x0)), vga_00, &vw_1c, con(0x12));
    vw_18 = wordrg2;
    x16 wordrg3 = ddata.s350.v1e0556->u.v.w10;
    ddata.s350.v1e0556->u.v.w10 = wordrg6;
    if (wordrg2 > con(0x10))
      wordrg2 = wordrg2 - SKW_RAND16(con(0x10)) * wordrg2 / con(0x64);
    x16 wordrg450 = 100 * wordrg6 / wordrg2;
    if ((wordrg6 == wordrg3) || (wordrg6 >= UI16CAST(wordrg2)))
    {
      if (wordrg6 >= UI16CAST(wordrg2))
      {
        ddata.s350.v1e0556->u.v.w0e = DM2_MIN(wordrg6, vw_18);
        ddata.s350.v1e0556->u.v.b1a = con(0x1c);
        return con(0xfffffffe);
      }
      x16 wordrg11 = ddata.s350.v1e0556->u.v.w0e;
      x16 wordrg21 = wordrg11 - con(0x1);
      ddata.s350.v1e0556->u.v.w0e = wordrg21;
      if (wordrg11 > con(0x0))
      {
        if (ddata.s350.v1e0556->u.v.w0e > con(0x6))
          ddata.s350.v1e0556->u.v.w0e = wordrg21 - con(0x4);
        ddata.s350.v1e0556->u.v.b1a = con(0x1d);
        return con(0xfffffffc);
      }
      if (wordrg450 > con(0x4c))
      {
        if (SKW_RAND02() == con(0x0) != SKW_RAND16(DM2_MAX(con(0x1), con(0x64) - wordrg450)) < con(0x5))
        {
          ddata.s350.v1e0556->u.v.b1a = con(0x20);
          return vb_24;
        }
      }
      ddata.s350.v1e0556->u.v.b1a = con(0x1b);
      return vb_24;
    }
    if (wordrg3 != con(0xffffffff) && wordrg6 > wordrg3)
    {
      if (SKW_RAND02() == con(0x0) || (wordrg450 > (CUTX16(SKW_RAND() & con(0x7)) + con(0x4c))))
      {
        ddata.s350.v1e0556->u0c.w = con(0x0);
        bool boolrg40 = SKW_RAND16(DM2_MAX(con(0x1), con(0x64) - wordrg450)) < con(0x5);
        if ((SKW_RAND02() == con(0x0)) == boolrg40)
          ddata.s350.v1e0556->u.v.b1a = con(0x1b);
        else
          ddata.s350.v1e0556->u.v.b1a = con(0x20);
        return con(0xfffffffc);
      }
    }
  }
  else
  {
    x16 wordrg12 = ddata.s350.v1e0556->u.v.w0e;
    x16 wordrg402 = wordrg12;
    wordrg12--;
    ddata.s350.v1e0556->u.v.w0e = wordrg12;
    if (wordrg402 <= con(0x6))
    {
      ddata.s350.v1e0556->u.v.w0e = SKW_RAND02() + con(0x9);
      ddata.s350.v1e0556->u.v.b1a = con(0x1f);
      return con(0xfffffffc);
    }
  }
  ddata.s350.v1e0556->u.v.b1a = con(0x1d);
  return con(0xfffffffc);
}

// was SKW_14cd_2e6e
x8 SKW_PROCEED_XACT_65(void)
{
  ddata.s350.v1e0556->u0c.w = con(0xffffffff);
  x16 wordrg1 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  x16 wordrg3 = 2 * table1d27fc[wordrg1] + unsignedword(ddata.s350.v1e0562.u.b.b_06);
  x16 wordrg2 = 2 * table1d2804[wordrg1] + unsignedword(ddata.s350.v1e0562.u.b.b_07);
  x16 wordrg4 = SKW_GET_CREATURE_AT(wordrg3, wordrg2);
  if (wordrg4 != con(0xffffffff))
  {
    if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg4) & con(0x1)) == con(0x0))
      return con(0xfffffffe);
  }
  if (ddata.v1d3248 != ddata.v1e08d6 || wordrg3 != ddata.v1e08d8 || wordrg2 != ddata.v1e08d4)
  {
    ddata.s350.v1e0556->u.v.b1a = con(0x1d);
    return con(0xfffffffc);
  }
  return con(0xfffffffe);
}

// was SKW_14cd_3087
x8 SKW_PROCEED_XACT_71(void)
{
  x16* wptrrg3;

  wptrrg3 = &ddata.s350.v1e054e->u2.w;
  x16 wordrg1 = ddata.s350.v1e0574;
  if (wordrg1 != con(0xfffffffe))
  {
    bool boolrg4;
    if (wordrg1 != con(0xffffffff) || (wordrg1 = ddata.s350.v1e07d8.w6, wordrg1 != con(0xffffffff)))
      boolrg4 = true;
    else
      boolrg4 = false;
    if (boolrg4)
      if (*wptrrg3 != con(0xfffffffe))
        SKW_1c9a_078b(wptrrg3, con(0xff), wordrg1);
  }
  if (*wptrrg3 == con(0xfffffffe))
    return con(0xfffffffd);
  x16 wordrg3 = ddata.s350.v1e0572;
  if (wordrg3 == con(0xffffffff))
  {
    wordrg3 = ddata.s350.v1e07d8.w4;
    if (wordrg3 == con(0xffffffff))
      return con(0xfffffffe);
  }
  if (SKW_1c9a_0732(wordrg3, con(0xff), *wptrrg3) == con(0xfffffffe))
    return con(0xfffffffd);
  SKW_19f0_2165(con(0x81), unsignedword(ddata.s350.v1e0562.u.b.b_07), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0xffffffff), wordrg3);
  return ddata.s350.v1e056f;
}

// was SKW_14cd_3139
x8 SKW_PROCEED_XACT_73(void)
{
  s_hexe* sheptrrg1;
  s_hexe* sheptrrg2;
  bool flag;

  ui16 uwordrg1 = ddata.s350.v1e0574;
  if (uwordrg1 >= con(0x3))
  {
    if (uwordrg1 <= con(0x4))
    {
      x8 byterg1 = ((uwordrg1 != con(0x3)) ? 1 : 0) + con(0x13);
      x16 wordrg5 = ddata.s350.v1e054e->ua.w;
      sheptrrg1 = ddata.s350.v1e07d8.phe_a;
      if (sheptrrg1 == NULL)
        return con(0xfffffffd);
      do
      {
        if (byterg1 == sheptrrg1->b_0c)
        {
          if (sheptrrg1->w_04 != con(0x0))
          {
            if (sheptrrg1->w_04 == con(0x1))
              ddata.s350.v1e054e->ua.w &= ~(con(0x1) << CUTX8(sheptrrg1->w_06));
          }
          else
            ddata.s350.v1e054e->ua.w |= con(0x1) << CUTX8(sheptrrg1->w_06);
        }
        sheptrrg2 = sheptrrg1;
        sheptrrg1++;
      } while (sheptrrg2->b_0d != con(0x0));
      if (wordrg5 != ddata.s350.v1e054e->ua.w)
        ddata.s350.v1e0556->u.v.b1a = con(0x33);
      flag = wordrg5 != ddata.s350.v1e054e->ua.w;
      return (flag ? 1 : 0) - con(0x3);
    }
    if (uwordrg1 < con(0x10) || uwordrg1 > con(0x12))
      return con(0xfffffffd);
  }
  x16 wordrg6 = uwordrg1 & con(0x10);
  uwordrg1 &= con(0xf);
  x16 wordrg2 = con(0x1) << CUTX8(ddata.s350.v1e0572);
  bool boolrg3 = (ddata.s350.v1e054e->ua.w & wordrg2) == wordrg2;
  x16 wordrg51 = ddata.s350.v1e054e->ua.w;
  if (uwordrg1 != con(0x0))
  {
    if (uwordrg1 == con(0x1))
      ddata.s350.v1e054e->ua.w = wordrg51 | wordrg2;
  }
  else
    ddata.s350.v1e054e->ua.w = wordrg51 & ~wordrg2;
  if (wordrg6 == con(0x0) && wordrg51 != ddata.s350.v1e054e->ua.w)
    ddata.s350.v1e0556->u.v.b1a = con(0x33);
  return (boolrg3 ? 1 : 0) - con(0x3);
}

// return not needed
void SKW_14cd_3582(x16 eaxw, x16 edxw)
{
  x16 vwa_04[0xa];
  x16 vwa_18[0xa];

  x16 wordrg6 = con(0x0);
  SKW_COUNT_BY_COIN_TYPES(edxw, vwa_18);
  x16 wordrg3 = con(0x0);
  x16 wordrg24 = con(0x0);
  while (wordrg24 < ddata.v1e03fe)
  {
    wordrg3 += ddata.v1e03ac[wordrg24] * vwa_18[wordrg24];
    wordrg24++;
  }
  DM2_ZERO_MEMORY(DOWNCAST(x16, vwa_04), con(0x14));
  x16 wordrg23 = ddata.v1e03fe;
  while ((--wordrg23 >= con(0x0)) && wordrg3 > con(0x0))
  {
    for(;;)
    {
      x16 wordrg444 = ddata.v1e03ac[wordrg23];
      if (wordrg3 < wordrg444)
        break;
      vwa_04[wordrg23]++;
      wordrg3 -= wordrg444;
    }
    wordrg6 |= vwa_18[wordrg23] != vwa_04[wordrg23] ? 1 : 0; // BUGFIX 4.6/2014
    if (wordrg6 != con(0x0))
      if (eaxw == con(0x1))
        return;
  }
  if (wordrg6 == con(0x0))
    return;
  if (eaxw == con(0x1))
    return;
  x16 wordrg22 = con(0x0);
  while (wordrg22 < ddata.v1e03fe)
  {
    for(;;)
    {
      x16 wordrg13 = SKW_TAKE_COIN_FROM_WALLET(edxw, wordrg22);
      if (wordrg13 == con(0xffffffff))
        break;
      SKW_DEALLOC_RECORD(wordrg13);
    }
    wordrg22++;
  }
  x16 wordrg21 = con(0x0);
  while (wordrg21 < ddata.v1e03fe)
  {
    for(;;)
    {
      x16 wordrg405 = vwa_04[wordrg21];
      vwa_04[wordrg21] = wordrg405 - con(0x1);
      if (wordrg405 == con(0x0))
        break;
      x16 wordrg11 = SKW_ALLOC_NEW_DBITEM(ddata.v1e0394[wordrg21]);
      if (wordrg11 != con(0xffffffff))
        SKW_ADD_COIN_TO_WALLET(edxw, wordrg11);
    }
    wordrg21++;
  }
}

bool SKW_1887_034e(void)
{
  c_record* recoptrrg5;
  c_record** recopptrrg3;
  c_record* prec_00;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;

  if (!SKW_CREATURE_GO_THERE(ddata.s350.v1e0556->u.v.b20 | con(0xffffff80), unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.v1e08a6, unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.v1e08a4, signedword(ddata.s350.v1e0556->u.v.b1b)) || UI8CAST(table1d613a[ddata.s350.v1e0556->u.v.b1a] & con(0x4)) == con(0x0))
    return true;
  x16 wordrg6 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  ddata.v1e08a6 = ddata.s350.v1e0556->u.v.u18.w & con(0x1f);
  ddata.v1e08a4 = ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb));
  if (ddata.s350.v1e0556->u.v.b1a == con(0x39) || ddata.s350.v1e0556->u.v.b1a == con(0x3a))
  {
    recopptrrg3 = &prec_00;
    if (ddata.s350.v1e0556->u.v.b1a != con(0x39))
      vw_08 = con(0x1);
    else
      vw_08 = con(0xffffffff);
    wordrg6 = vw_08;
    x16 wordrg4 = SKW_FIND_LADDAR_AROUND(unsignedword(ddata.s350.v1e0562.u.b.b_06), wordrg6, recopptrrg3, unsignedword(ddata.s350.v1e0562.u.b.b_07));
    if (prec_00 == NULL)
    {
      vw_0c = unsignedword(ddata.s350.v1e0562.u.b.b_06);
      vw_04 = unsignedword(ddata.s350.v1e0562.u.b.b_07);
      x16 wordrg7 = ddata.v1d3248;
      SKW_CHANGE_CURRENT_MAP_TO(CUTX16(SKW_LOCATE_OTHER_LEVEL(ddata.v1d3248, &vw_0c, &vw_04, wordrg6, NULL)));
      wordrg6 = SKW_FIND_LADDAR_AROUND(vw_0c, -vw_08, &prec_00, vw_04);
      SKW_CHANGE_CURRENT_MAP_TO(wordrg7);
      if (wordrg6 == con(0xffffffff))
        wordrg6 = SKW_RAND02();
    }
    else
    {
      if ((prec_00->u4.b.b0 & con(0x20)) == con(0x0))
        wordrg6 = (ulrshift(prec_00->u4.w, con(0xb), con(0xe)) + wordrg4) & con(0x3);
      else
        wordrg6 = ulrshift(prec_00->u4.w, con(0xb), con(0xe));
    }
  }
  x8 byterg7 = ddata.s350.v1e0552->barr06[con(0x3)] & con(0x40);
  if (byterg7 != con(0x0))
    SKW_OPERATE_PIT_TELE_TILE(unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x1), unsignedword(ddata.s350.v1e0562.u.b.b_07));
  SKW_MOVE_RECORD_TO(ddata.s350.v1e054c, unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0xffffffff), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x0));
  SKW_1c9a_0648(urshift(ddata.s350.v1e0556->u.v.u18.w, con(0xa)));
  if (ddata.s350.v1e0556->u.v.b1a == con(0x35) || ddata.s350.v1e0556->u.v.b1a == con(0x36))
    wordrg6 = SKW_0cee_06dc(ddata.v1e08a6, ddata.v1e08a4);
  recoptrrg5 = ddata.s350.v1e054e;
  recoptrrg5->ue.b.b1 &= con(0xfffffffc);
  recoptrrg5->ue.w |= (wordrg6 & con(0x3)) << con(0x8);
  if (SKW_MOVE_RECORD_TO(ddata.s350.v1e054c, con(0x0), ddata.v1e08a6, con(0xffffffff), ddata.v1e08a4) == con(0x0))
  {
    ddata.s350.v1e0562.u.b.b_06 = CUTX8(ddata.v1e102a);
    ddata.s350.v1e0562.u.b.b_07 = CUTX8(ddata.v1e1028);
    ddata.s350.v1e0571 = CUTX8(ddata.v1e102c);
    SKW_1c9a_0648(unsignedword(ddata.s350.v1e0571));
    if (byterg7 != con(0x0))
      SKW_OPERATE_PIT_TELE_TILE(unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x0), unsignedword(ddata.s350.v1e0562.u.b.b_07));
    if (ddata.s350.v1e07d8.b1 != con(0x0))
      ddata.s350.v1e07d8.b1--;
  }
  else
    ddata.s350.v1e0570 = con(0x1);
  return false;
}

// was SKW_14cd_32a4
x8 SKW_PROCEED_XACT_74(void)
{
  x16 wordrg430 = urshift(ddata.s350.v1e0552->w16, con(0xc));
  bool boolrg4;
  if (wordrg430 == con(0x0))
    boolrg4 = false;
  else
  {
    if ((ddata.s350.v1e054e->ua.w & con(0x2000)) != con(0x0))
      wordrg430 = wordrg430 / 4;
    if ((CUTX16(SKW_RAND()) & con(0xf)) >= wordrg430)
      boolrg4 = false;
    else
      boolrg4 = true;
  }
  bool boolrg6 = boolrg4;
  if (SKW_1c9a_381c() != con(0x0))
  {
    if (boolrg6)
    {
      ddata.s350.v1e0556->u.v.b1a = con(0x0);
      return con(0xfffffffc);
    }
    x8 byterg4 = con(0xffffff80);
    if ((ddata.s350.v1e054e->ua.w & con(0x1000)) != con(0x0))
      byterg4 = con(0xffffffa0);
    SKW_CREATURE_GO_THERE(byterg4, unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0xffffffff), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0xffffffff), signedword(ddata.s350.v1e0556->u.v.b1b));
    return ddata.s350.v1e056f;
  }
  if (unsignedword(ddata.s350.v1e0562.u.b.b_06) == (ddata.s350.v1e0556->u.v.u18.w & con(0x1f)))
    if (unsignedword(ddata.s350.v1e0562.u.b.b_07) == ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb)) && urshift(ddata.s350.v1e0556->u.v.u18.w, con(0xa)) == ddata.v1d3248)
      return con(0xfffffffe);
  x16 wordrg402 = SKW_CALC_VECTOR_DIR(unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.s350.v1e0556->u.v.u18.w & con(0x1f), ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb)), unsignedword(ddata.s350.v1e0562.u.b.b_07));
  if (ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) == wordrg402)
    return con(0xfffffffe);
  if (!boolrg6 || SKW_RAND01() == con(0x0))
  {
    SKW_19f0_0559(wordrg402);
    return ddata.s350.v1e056f;
  }
  ddata.s350.v1e0556->u.v.b1a = con(0x0);
  return con(0xfffffffc);
}

bool SKW_PROCEED_CCM(void)
{
  bool boolrg3;

  boolrg3 = false;
  ddata.s350.v1e0898 = UPCAST(x8, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x100)));
  ddata.v1e08a6 = ddata.s350.v1e0556->u.v.u18.w & con(0x1f);
  ddata.v1e08a4 = ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb));
  ui8 ubyterg1 = ddata.s350.v1e0556->u.v.b1a;
  if (ubyterg1 < con(0x17))
  {
    if (ubyterg1 < con(0x9))
    {
      if (ubyterg1 < con(0x5))
      {
        if (ubyterg1 >= con(0x1))
        {
          if (ubyterg1 > con(0x2))
            boolrg3 = SKW_1887_0205();
          else
            boolrg3 = SKW_CREATURE_WALK_NOW();
        }
      }
      else if (ubyterg1 <= con(0x5))
        boolrg3 = SKW_1887_0239();
      else if (ubyterg1 <= con(0x7))
        SKW_1887_05aa();
      else
        boolrg3 = SKW_CREATURE_ATTACKS_PARTY();
    }
    else if (ubyterg1 <= con(0x9))
      boolrg3 = SKW_CREATURE_WALK_NOW();
    else if (ubyterg1 < con(0xc))
    {
      if (ubyterg1 <= con(0xa))
        boolrg3 = SKW_1887_0b1b();
      else
        boolrg3 = SKW_1887_0c75();
    }
    else if (ubyterg1 <= con(0xd))
      boolrg3 = SKW_1887_0ce1();
    else if (ubyterg1 < con(0x13))
    {
      if (ubyterg1 <= con(0xf))
        boolrg3 = SKW_1887_0eca();
    }
    else if (ubyterg1 <= con(0x13))
      SKW_1887_0df7();
    else if (ubyterg1 >= con(0x15))
      boolrg3 = SKW_1887_0f80();
  }
  else if (ubyterg1 <= con(0x17))
    boolrg3 = SKW_PLACE_MERCHANDISE();
  else if (ubyterg1 < con(0x2b))
  {
    if (ubyterg1 < con(0x1a))
    {
      if (ubyterg1 <= con(0x18))
        boolrg3 = SKW_1887_10db();
      else
        boolrg3 = SKW_1887_0d33();
    }
    else if (ubyterg1 <= con(0x1a))
      boolrg3 = SKW_1887_0e19();
    else if (ubyterg1 < con(0x27))
    {
      if (ubyterg1 == con(0x26))
        boolrg3 = SKW_CREATURE_ATTACKS_PARTY();
    }
    else if (ubyterg1 <= con(0x28))
      boolrg3 = SKW_1887_09ab();
    else
      boolrg3 = SKW_1887_0d33();
  }
  else if (ubyterg1 <= con(0x2c))
    boolrg3 = SKW_1887_0e19();
  else if (ubyterg1 < con(0x35))
  {
    if (ubyterg1 <= con(0x2e))
      boolrg3 = SKW_1887_0d33();
    else if (ubyterg1 <= con(0x31))
      boolrg3 = SKW_1887_1191();
  }
  else if (ubyterg1 <= con(0x3a))
    boolrg3 = SKW_1887_034e();
  else if (ubyterg1 < con(0x3d))
    SKW_1887_126d();
  else if (ubyterg1 <= con(0x40))
    boolrg3 = SKW_1887_141c();
  else if (ubyterg1 == con(0x55))
    R_1B7D5();
  if (!boolrg3)
  {
    if ((table1d613a[ddata.s350.v1e0556->u.v.b1a] & con(0x3)) != con(0x0))
      ddata.s350.v1e0556->barr04[con(0x0)] = CUTLX8(ddata.longmallocx);
  }
  else
    ddata.s350.v1e07d8.b1 = con(0x0);
  ddata.s350.v1e0898 = NULL;
  DM2_DEALLOC_LOBIGPOOL(con(0x100));
  return boolrg3;
}

// was SKW_14cd_2c23
x8 SKW_PROCEED_XACT_62(void)
{
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;

  bool vbool_00 = false;
  x16 wordrg127 = ddata.s350.v1e057c;
  x16 vw_08 = wordrg127;
  wordrg127 &= con(0x77);
  if (wordrg127 == con(0x0))
    return con(0xfffffffd);
  if (ddata.s350.v1e0574 == con(0x1))
    if (SKW_1c9a_0732(con(0x10), con(0xff), ddata.s350.v1e054e->u2.w) != con(0xfffffffe))
      return con(0xfffffffe);
  x16 wordrg125;
  if (ddata.s350.v1e0572 == con(0x0))
  {
    vw_10 = ddata.s350.v1e0556->u.v.u18.w & con(0x1f);
    wordrg125 = ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb));
  }
  else
  {
    vw_10 = unsignedword(ddata.s350.v1e0562.u.b.b_06);
    wordrg125 = unsignedword(ddata.s350.v1e0562.u.b.b_07);
  }
  vw_0c = wordrg125;
  x16 wordrg6 = vw_10;
  x16 wordrg123 = SKW_FIND_TILE_ACTUATOR(wordrg6, con(0xff), con(0x30), vw_0c);
  if (wordrg123 == con(0xffffffff))
    return con(0xfffffffd);
  vw_14 = urshift(SKW_GET_ADDRESS_OF_RECORD(wordrg123)->u2.w, con(0x7));
  x16 wordrg11;
  if (ddata.s350.v1e0574 != con(0x2))
    wordrg11 = SKW_GET_WALL_TILE_ANYITEM_RECORD(wordrg6, vw_0c);
  else
  {
    x16 wordrg106 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
    x16 wordrg107 = SKW_GET_CREATURE_AT(unsignedword(ddata.s350.v1e0562.u.b.b_06) + table1d27fc[wordrg106], unsignedword(ddata.s350.v1e0562.u.b.b_07) + table1d2804[wordrg106]);
    if (wordrg107 == con(0xffffffff))
      return con(0xfffffffd);
    if (SKW_1c9a_06bd(wordrg107, CUTX8((ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) + con(0x2)) & con(0x3)), vw_14) == NULL)
      return con(0xfffffffd);
    return con(0xfffffffe);
  }
  x16 wordrg4;
  for(;;)
  {
    wordrg4 = wordrg11;
    if (wordrg4 == con(0xfffffffe))
      break;
    if ((wordrg4 & con(0x3c00), con(0xa)) >= con(0x5))
      break;
    wordrg11 = SKW_GET_NEXT_RECORD_LINK(wordrg4);
  }
  if (wordrg4 != con(0xfffffffe))
  {
    if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg4) != vw_14)
    {
      x16 wordrg21 = wordrg4;
      for(;;)
      {
        if (wordrg4 == con(0xfffffffe))
          break;
        if (urshift(wordrg4 & con(0x3c00), con(0xa)) > con(0xa))
          break;
        if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg4) == vw_14)
          break;
        wordrg4 = SKW_GET_NEXT_RECORD_LINK(wordrg4);
      }
      if (wordrg4 != con(0xfffffffe))
      {
        vbool_00 = true;
        for(;;)
        {
          if (wordrg21 == con(0xfffffffe))
            break;
          if (urshift(wordrg21 & con(0x3c00), con(0xa)) > con(0xa))
            break;
          x16 wordrg5 = wordrg21;
          if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg5) == vw_14)
            break;
          x16 vw_04 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
          SKW_CUT_RECORD_FROM(wordrg5, vw_10, vw_0c, NULL);
          wordrg21 = vw_10;
          SKW_APPEND_RECORD_TO(wordrg5, wordrg21, vw_0c, NULL);
          wordrg21 = vw_04;
        }
      }
    }
    else
      vbool_00 = true;
  }
  if (vbool_00)
  {
    ddata.s350.v1e057c &= con(0x77);
    SKW_19f0_2165(con(0x80), unsignedword(ddata.s350.v1e0562.u.b.b_07), vw_10, unsignedword(ddata.s350.v1e0562.u.b.b_06), vw_0c, con(0xffffffff), con(0x10));
    ddata.s350.v1e057c = vw_08;
    return ddata.s350.v1e056f;
  }
  if (ddata.s350.v1e0556->u.v.w0e-- > con(0x0))
    ddata.s350.v1e0556->u.v.b1a = con(0x1d);
  else
  {
    ddata.s350.v1e0556->u.v.w0e = con(0x3);
    ddata.s350.v1e0556->u.v.b1a = con(0x1e);
  }
  return con(0xfffffffd);
}

bool SKW_19f0_0559(x16 eaxw)
{
  x8 byterg1;
  x16 wordrg4 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  x16 wordrg2 = eaxw;
  x16 wordrg3 = wordrg4;
  if (wordrg3 != ((wordrg2 + con(0x2)) & con(0x3)))
  {
    if (wordrg4 == eaxw)
    {
      ddata.s350.v1e0556->u.v.b1a = con(0x0);
      ddata.s350.v1e056f = con(0xfffffffe);
      return con(0x0);
    }
    wordrg2--;
    wordrg2 &= con(0x3);
    if (wordrg3 == wordrg2)
      byterg1 = con(0x1);
    else
      byterg1 = con(0xffffffff);
  }
  else if (SKW_RAND01() == con(0x0))
    byterg1 = con(0xffffffff);
  else
    byterg1 = con(0x1);
  ddata.s350.v1e0556->u.v.b1d = (CUTX8(wordrg4) + byterg1) & con(0x3);
  ddata.s350.v1e0556->u.v.b1a = ((byterg1 != con(0xffffffff)) ? 1 : 0) + con(0x6);
  ddata.s350.v1e056f = con(0xfffffffc);
  return con(0x1);
}

x16 SKW_19f0_2024(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_aispec* aiptrrg3;
  c_record* recoptrrg1;
  c_record* recoptrrg6;
  u_len10 vs_00;

  x16 wordrg6 = eaxw;
  vs_00.s_00.vw_0c = edxw;
  vs_00.s_00.vl_04 = lextended(ebxw);
  x8 byterg2;
  if ((ddata.s350.v1e057c & con(0x10)) == con(0x0) || !SKW_IS_CONTAINER_CHEST(wordrg6))
  {
    if (urshift(wordrg6 & con(0x3c00), con(0xa)) != con(0x4) || (ddata.s350.v1e057c & con(0x28)) == con(0x0))
      return con(0xffffffff);
    recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
    aiptrrg3 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg6->u4.b.b0);
    x16 wordrg2 = aiptrrg3->u0.w & con(0x1);
    x16 wordrg100;
    if (wordrg2 == con(0x0))
      wordrg100 = ddata.s350.v1e057c & con(0x20);
    else
      wordrg100 = ddata.s350.v1e057c & con(0x8);
    if (wordrg100 == con(0x0))
      return con(0xffffffff);
    vs_00.s_00.vl_08 = con(0x8);
    wordrg6 = recoptrrg6->u2.w;
    if (wordrg2 == con(0x0))
      byterg2 = con(0xf);
    else
      byterg2 = SKW_48ae_01af(aiptrrg3->u1e.w, CUTX16(vs_00.s_00.vl_04));
  }
  else
  {
    recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
    vs_00.s_00.vl_08 = lextended(wordrg6 >> con(0xe));
    wordrg6 = recoptrrg1->u2.w;
    byterg2 = con(0xf);
  }
  for (x16 wordrg5 = con(0x0); wordrg5 < con(0x4); wordrg5++)
  {
    vs_00.barr_00[wordrg5] = byterg2 & con(0x1);
    byterg2 >>= con(0x1);
  }
  for(;;)
  {
    if (wordrg6 == con(0xfffffffe))
      return con(0xffffffff);
    if (vs_00.barr_00[wordrg6 >> con(0xe)] != con(0x0))
    {
      x16 wordrg51 = vs_00.s_00.vw_0c;
      if (SKW_1c9a_0006(wordrg6, wordrg51 != con(0x0)))
        break;
      if (SKW_19f0_2024(wordrg6, CUTX16(vs_00.s_00.vl_04), wordrg51) != con(0xffffffff))
        break;
    }
    wordrg6 = SKW_GET_NEXT_RECORD_LINK(wordrg6);
  }
  if (CUTX16(vs_00.s_00.vl_08) == con(0x8))
    vs_00.s_00.vl_08 += lextended(urshift(wordrg6, con(0xe)));
  return CUTX16(vs_00.s_00.vl_08);
}

x16 SKW_19f0_266c(x16 eaxw, x8 ebxb, x16 ecxw, x16 edxw)
{
  c_record* recoptrrg1;
  bool flag;
  x16 vw_04;

  x16 wordrg5 = eaxw;
  vw_04 = edxw;
  for(;;)
  {
    if (wordrg5 == con(0xfffffffe) || wordrg5 == con(0xffffffff))
      return con(0xffff);
    x16 wordrg1 = urshift(wordrg5 & con(0x3c00), con(0xa));
    if (wordrg1 != con(0x3))
    {
      if (wordrg1 > con(0x3))
        return con(0xffff);
    }
    else
    {
      x16 wordrg2 = wordrg5;
      if ((wordrg2 >> con(0xe)) == vw_04)
      {
        recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg2);
        if ((recoptrrg1->u2.w & con(0x7f)) != con(0x0) && (recoptrrg1->u2.w & con(0x7f)) != con(0x26))
        {
          if ((recoptrrg1->u2.w & con(0x7f)) == con(0x1a))
          {
            if ((recoptrrg1->u4.b.b0 & con(0x4)) == con(0x0))
              flag = ebxb != con(0x1);
            else
              flag = ebxb != con(0x2);
            if (!flag)
              if (SKW_1c9a_0006(wordrg2, ecxw) != con(0x0))
                return wordrg5;
          }
        }
      }
    }
    wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
  }
}

x16 SKW_1c9a_0732(x16 eaxw, x8 ebxb, x16 edxw)
{
  x16 wordrg3 = edxw;
  for(;;)
  {
    if (wordrg3 == con(0xfffffffe))
      return wordrg3;
    x16 wordrg4 = urshift(wordrg3 & con(0x3c00), con(0xa));
    if ((wordrg4 > con(0x4) && wordrg4 < con(0xe)) || wordrg4 == con(0x9))
      if (ebxb == con(0xffffffff) || ebxb == CUTX8(urshift(wordrg3, con(0xe)))) // BUGFIX 4.1/2014
        if (SKW_1c9a_0006(wordrg3, eaxw) != con(0x0))
          return wordrg3;
    wordrg3 = SKW_GET_NEXT_RECORD_LINK(wordrg3);
  }
}

// was SKW_1c9a_0a48
x32 SKW_CREATURE_SOMETHING_1c9a_0a48(void)
{
  c_record* recoptrrg3;
  t_gfxdata vga_00[0x4];
  x16 vw_04;
  x16 vw_08;
  x8 vb_0c;
  x8 vb_10;

  vb_10 = ddata.s350.v1e0552->barr06[con(0x3)];
  recoptrrg3 = ddata.s350.v1e054e;
  vb_0c = recoptrrg3->u4.b.b0;
  vw_04 = ddata.s350.v1e055e[con(0x0)];
  vw_08 = ddata.s350.v1e055e[con(0x1)];
  if (ddata.s350.v1e055a == NULL)
  {
    x16 wordrg2 = ((ddata.s350.v1e0552->u0.b.b0 & con(0x1)) == con(0x0)) ? con(0x0) : recoptrrg3->uc.w;
    SKW_GET_CREATURE_ANIMATION_FRAME(vb_0c, &vw_04, &vw_08, signedword(ddata.s350.v1e0556->u.v.b1a), &ddata.s350.v1e055a, wordrg2);
    if (ddata.s350.v1e055a == NULL)
    {
      DM2_ZERO_MEMORY(DOWNCAST(t_gfxdata, vga_00), con(0x4));
      ddata.s350.v1e055a = vga_00;
    }
  }
  x8 byterg2 = ddata.s350.v1e0556->barr04[con(0x3)];
  if ((ddata.s350.v1e055a[con(0x3)] & con(0x1)) != con(0x0) && ddata.s350.v1e0556->u.v.b1a != con(0x24) && ddata.s350.v1e0556->u.v.b1a != con(0x23) && ddata.s350.v1e0556->u.v.b1a != con(0x25))
  {
    byterg2 &= con(0xffffffc0);
    x8 byterg11 = vb_10 & con(0x3);
    if (byterg11 != con(0x0))
    {
      x16 wordrg480 = SKW_RAND16(unsignedword(byterg11));
      if (SKW_RAND01() != con(0x0))
      {
        wordrg480 = -wordrg480;
        wordrg480 &= con(0x7);
      }
      byterg2 |= CUTX8(wordrg480);
    }
    x8 byterg12 = (vb_10 / 4) & con(0x3);
    if (byterg12 != con(0x0))
    {
      x16 wordrg481 = SKW_RAND16(unsignedword(byterg12));
      if (SKW_RAND01() != con(0x0))
      {
        wordrg481 = -wordrg481;
        wordrg481 &= con(0x7);
      }
      wordrg481 *= 8;
      byterg2 |= CUTX8(wordrg481);
    }
  }
  if (((ddata.s350.v1e055a[con(0x3)] & con(0x2)) / 2) != con(0x0))
  {
    if (SKW_RAND01() == con(0x0))
      byterg2 &= con(0xffffffbf);
    else
      byterg2 |= con(0x40);
  }
  ddata.s350.v1e0556->barr04[con(0x3)] = byterg2;
  ddata.s350.v1e055e[con(0x0)] = vw_04;
  ddata.s350.v1e055e[con(0x1)] = vw_08;
  x8 byterg15 = ddata.s350.v1e055a[con(0x0)] & con(0x7f);
  if (byterg15 != con(0x7f))
    SKW_QUEUE_NOISE_GEN1(con(0xf), byterg15, con(0x46), vb_0c, con(0x80), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0x1));
  x32 longrg1;
  if ((ddata.s350.v1e054e->ua.w & con(0x40)) == con(0x0))
  {
    x16 wordrg499 = unsignedword((ddata.s350.v1e055a[con(0x3)] & con(0xc))) / 4;
    if (wordrg499 != con(0x0))
      wordrg499 = SKW_RAND16(wordrg499);
    wordrg499 += urshift(ddata.s350.v1e055a[con(0x3)] & con(0xfffffff0), con(0x4));
    if (ddata.s350.v1e0556->u.v.b1a != con(0x13) || ddata.savegames1.b3 == con(0x0) || (ddata.s350.v1e0552->u0.b.b1 & con(0x10)) != con(0x0))
    {
      if (ddata.v1d3248 == ddata.v1e08d6 || (table1d607e[ddata.s350.v1e0584].u.b[2] & con(0x1)) != con(0x0) || (ddata.s350.v1e054e->ua.w & con(0x8000)) == con(0x0) || (ddata.s350.v1e054e->ua.w & con(0x2)) != con(0x0))
      {
        if (!ddata.v1e0238)
        {
          if ((ddata.s350.v1e054e->ua.w & con(0x8)) != con(0x0))
          {
            x16 wordrg101 = ddata.s350.v1e054e->ua.w & con(0x4000);
            if (wordrg101 == con(0x0) || wordrg499 >= con(0x3))
            {
              wordrg101 = 75 * wordrg499 / con(0x64);
              wordrg499 *= 5;
            }
            wordrg499 = DM2_MAX(con(0x1), wordrg101);
          }
        }
        else
        {
          wordrg499 *= 2;
          if (ddata.v1d3248 != ddata.v1e08d6)
            wordrg499 *= 2;
        }
      }
      else
      {
        wordrg499 *= 4;
        wordrg499 += SKW_RAND01();
      }
    }
    else
      wordrg499 *= con(0x3);
    longrg1 = signedlong(wordrg499);
  }
  else
    longrg1 = signedlong(DM2_MIN(con(0x1), urshift(unsignedword(ddata.s350.v1e055a[con(0x3)] & con(0xfffffff0)), con(0x4))));
  longrg1 += ddata.longmallocx;
  if (vga_00 == ddata.s350.v1e055a)
    ddata.s350.v1e055a = NULL;
  return longrg1;
}

void SKW_DROP_CREATURE_POSSESSION(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  x8 byterg5;
  x16 wordrg5;
  x16 vw_04;
  x16 vw_08;
  c_record* prec_0c;

  vw_08 = eaxw;
  vw_04 = edxw;
  if (ecxw == con(0x2))
    return;
  prec_0c = SKW_GET_ADDRESS_OF_RECORD(vw_08);
  if (ecxw == con(0x0))
  {
    for (x16 vw_1c = con(0xa); vw_1c <= con(0x14); vw_1c++)
    {
      x16 wordrg167 = SKW_QUERY_GDAT_CREATURE_WORD_VALUE(prec_0c->u4.b.b0, CUTX8(vw_1c));
      ui16 vuw_18 = wordrg167;
      if (wordrg167 != con(0x0))
      {
        x16 vw_14 = (lextended(wordrg167) & con(0xffff000f)) + con(0x1);
        wordrg167 &= con(0x70);
        wordrg167 = urshift(wordrg167, con(0x4));
        if (wordrg167 != con(0x0))
        {
          wordrg167++;
          wordrg167 = SKW_RAND16(wordrg167);
          vw_14 += wordrg167;
        }
        vuw_18 >>= con(0x7);
        for(;;)
        {
          if (--vw_14 == con(0xffffffff))
            break;
          x16 wordrg6 = SKW_ALLOC_NEW_DBITEM(vuw_18);
          if (wordrg6 == con(0xffffffff))
            break;
          x16 wordrg181;
          if (vw_04 != ddata.v1e0270)
            wordrg181 = SKW_RAND02();
          else
          {
            if (ebxw != ddata.v1e0272)
              wordrg181 = SKW_RAND02();
            else
              wordrg181 = (SKW_RAND01() + ddata.v1e0258) & con(0x3);
          }
          wordrg5 = vw_04;
          wordrg181 <<= con(0xe);
          wordrg181 |= wordrg6 & con(0x3fff);
          SKW_MOVE_RECORD_TO(wordrg181, con(0x0), wordrg5, con(0xffffffff), ebxw);
          if (argw0 >= con(0x0))
          {
            byterg5 = SKW_QUERY_CLS2_FROM_RECORD(wordrg6);
            SKW_QUEUE_NOISE_GEN2(SKW_QUERY_CLS1_FROM_RECORD(wordrg6), con(0x85), con(0xfe), byterg5, wordrg5, ebxw, argw0, con(0x3a), con(0x80));
          }
        }
      }
    }
  }
  x16 wordrg61 = prec_0c->u2.w;
  if (wordrg61 != con(0xfffffffe))
  {
    do
    {
      x16 vw_20 = SKW_GET_NEXT_RECORD_LINK(wordrg61);
      if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(vw_08) & con(0x1)) == con(0x0))
      {
        x16 wordrg11;
        if (vw_04 != ddata.v1e0270 || ebxw != ddata.v1e0272)
          wordrg11 = SKW_RAND02();
        else
          wordrg11 = (SKW_RAND01() + ddata.v1e0258) & con(0x3);
        wordrg61 &= con(0xffff3fff);
        wordrg11 <<= con(0xe);
        wordrg61 |= wordrg11;
      }
      if (urshift(wordrg61 & con(0x3c00), con(0xa)) != con(0xe))
      {
        wordrg5 = wordrg61;
        SKW_MOVE_RECORD_TO(wordrg5, con(0x0), vw_04, con(0xffffffff), ebxw);
        if (argw0 >= con(0x0))
          SKW_QUEUE_NOISE_GEN2(SKW_QUERY_CLS1_FROM_RECORD(wordrg5), con(0x85), con(0xfe), SKW_QUERY_CLS2_FROM_RECORD(wordrg5), vw_04, ebxw, argw0, con(0x3a), con(0x80));
      }
      else
        SKW_DEALLOC_RECORD(wordrg61);
      wordrg61 = vw_20;
    } while (wordrg61 != con(0xfffffffe));
  }
}

void SKW_RESET_CAII(void)
{
  c_record* recoptrrg1;

  x16 wordrg41 = con(0x0);
  ddata.v1d4020 = wordrg41;
  while (UI16CAST(wordrg41) < UI16CAST(ddata.v1e08a0))
  {
    ddata.v1e089c[wordrg41].w00 = con(0xffffffff);
    wordrg41++;
  }
  recoptrrg1 = ddata.savegameparr5[4];
  x16 wordrg4 = ddata.savegamep4->w0[con(0xa)];
  for(;;)
  {
    wordrg4--;
    if (wordrg4 == con(0xffffffff))
    {
      SKW_FILL_ORPHAN_CAII();
      return;
    }
    recoptrrg1->u4.b.b1 = con(0xffffffff);
    recoptrrg1++;
  }
}

void SKW_2066_2498(void)
{
  t_text* tptrrg5;
  x8 vba_00[0xc8]; // text in the beginning, struct for SKW_QUERY_MESSAGE_TEXT

  tptrrg5 = UPCAST(t_text, vba_00);
  SKW_FILL_STR(vba_00, con(0x31), con(0x1), con(0x40));
  x16 wordrg3 = con(0x0);
  x16 wordrg21 = con(0x0);
  while (wordrg21 < unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)])))
  {
    wordrg3 = DM2_MAX(ddata.v1e03c8[wordrg21].w8 & con(0x3f), wordrg3);
    wordrg21++;
  }
  ddata.v1e03d4 = DM2_ALLOC_FREEPOOL_MEMORY(signedlong(wordrg3) + con(0x1));
  SKW_CHANGE_CURRENT_MAP_TO(con(0x0));
  x16 wordrg407 = CUTX16((unsignedlong(ddata.savegamep4->w0[con(0x4)]) >> con(0x5)) & con(0x1f));
  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(ddata.savegamep4->w0[con(0x4)] & con(0x1f), wordrg407);
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg1))
  {
    if (wordrg1 != con(0xfffffffe))
      break;
    if (urshift(wordrg1 & con(0x3c00), con(0xa)) == con(0x2))
      break;
  }
  if (wordrg1 != con(0xfffffffe))
  {
    if ((SKW_GET_ADDRESS_OF_RECORD(wordrg1)->u2.b.b0 & con(0x6)) == con(0x0))
      SKW_QUERY_MESSAGE_TEXT(tptrrg5, con(0xffff8002), wordrg1);
  }
  x16 wordrg22 = con(0x0);
  x8 byterg402;
  while (wordrg22 <= wordrg3)
  {
    do
    {
      do
      {
        byterg402 = *tptrrg5++;
      } while (byterg402 == con(0x0));
    } while (byterg402 == con(0xa) || byterg402 == con(0x20));
    byterg402 -= con(0x30);
    ddata.v1e03d4[wordrg22] = byterg402;
    wordrg22++;
  }
}

// was SKW_2759_0541
// return never requested
x16 SKW_DISPLAY_RIGHT_PANEL_SQUAD_HANDS(void)
{
  x16 wordrg1 = ddata.v1e0b74;
  if (wordrg1 == con(0x0))
    return con(0x0);
  if (ddata.v1e0b7c == con(0x0) || (wordrg1 = ddata.v1e0b6c, wordrg1 <= con(0x1)))
    ddata.v1e0b6c = con(0x0);
  ddata.v1e0b74 = con(0x0);
  ddata.v1d67bc = con(0x0);
  ddata.v1e0b62 = con(0x0);
  if (ddata.v1d6700 != con(0xffffffff))
    wordrg1 = SKW_PUT_OBJECT_INTO_CONTAINER(wordrg1);
  ddata.v1e0b30 = true;
  return wordrg1;
}

void SKW_2759_15d0(ui16 eaxuw, x16 edxw)
{
  x16 wordrg5;
  c_tim vtim_00;

  x16 wordrg6 = con(0x1);
  x16 wordrg1 = DM2_MAX(con(0x8), DM2_BETWEEN_VALUE(con(0x20), con(0x100), edxw + con(0x1)) / con(0x8));
  x16 wordrg402 = wordrg1;
  x16 wordrg2 = wordrg1 - con(0x8);
  if (eaxuw < con(0x26))
  {
    if (eaxuw == con(0x6))
    {
      wordrg5 = 16 * wordrg2 + con(0x10);
      wordrg6 = con(0xfffffffe);
      wordrg402 >>= con(0x1);
      wordrg402--;
    }
  }
  else if (eaxuw <= con(0x26))
  {
    wordrg5 = ((wordrg1 - con(0x3)) << con(0x7)) + con(0x7d0);
    wordrg402 >>= con(0x2);
    wordrg402 += wordrg6;
  }
  else if (eaxuw == con(0x27))
  {
    wordrg5 = (wordrg2 << con(0x9)) + con(0x2710);
    wordrg402 >>= con(0x1);
    wordrg402--;
  }
  vtim_00.b_04 = con(0x46);
  if (eaxuw != con(0x6))
    vtim_00.u.w_06 = -wordrg402;
  else
    vtim_00.u.w_06 = wordrg402;
  vtim_00.un.l_00 = (unsignedlong(wordrg5) + ddata.longmallocx) | (signedlong(ddata.v1e0266) << con(0x18));
  vtim_00.b_05 = con(0x0);
  SKW_QUEUE_TIMER(&vtim_00);
  ddata.savegames1.w0 += signedword(table1d6702[wordrg402]) * wordrg6;
  SKW_RECALC_LIGHT_LEVEL();
}

s_802* SKW_FIND_SPELL_BY_RUNES(t_text* eaxt)
{
  x32 longrg5;
  s_802* sptrrg1;

  if (eaxt[0x1] == NULLBYTE)
    return NULL;
  x16 wordrg402 = con(0x18);
  x32 longrg2 = con(0x0);
  do
  {
    longrg5 = unsignedlong(*eaxt);
    longrg5 <<= CUTX8(wordrg402);
    longrg2 |= longrg5;
    eaxt++;
    if (*eaxt == NULLBYTE)
      break;
    wordrg402 -= con(0x8);
  } while (wordrg402 >= con(0x0));
  sptrrg1 = table1d6802;
  x16 wordrg4 = con(0x22);
  for(;;)
  {
    wordrg4--;
    if (wordrg4 == con(0xffffffff))
      return NULL;
    if ((sptrrg1->l0 & con(0xff000000)) == con(0x0))
    {
      if ((longrg2 & con(0xffffff)) == sptrrg1->l0)
        return sptrrg1;
    }
    else
    {
      if (longrg2 == sptrrg1->l0)
        return sptrrg1;
    }
    sptrrg1++;
  }
}

void SKW_29ee_1d03(x16 eaxw)
{
  x16 wordrg5;
  t_text t_00[0x4]; // TODO probably even just t_00[0x2]

  wordrg5 = eaxw;
  SKW_29ee_00a3(false);
  if (ddata.v1e0b74 <= con(0x0) || (ddata.v1e0b62 & con(0x800)) == con(0x0))
    return;
  wordrg5 ^= ddata.v1e0b62;
  wordrg5 &= con(0xf);
  t_00[0x1] = NULLBYTE;
  for (x16 vw_04 = con(0x0); vw_04 < con(0x4); vw_04++)
  {
    x8 byterg1 = con(0x49);
    if ((wordrg5 & con(0x1)) != con(0x0))
      byterg1 = con(0x4a);
    wordrg5 = urshift(wordrg5, con(0x1));
    SKW_DRAW_ICON_PICT_ENTRY(con(0x14), byterg1, &ddata.v1d694c, ddata.v1e0ba4, vw_04 + con(0x65), con(0xffff));
    t_00[0x0] = CUTX8(vw_04) + con(0x72);
    SKW_DRAW_SIMPLE_STR(&ddata.v1d694c, unsignedword(ddata.paletteptr1[con(0x0)]), unsignedword(ddata.paletteptr1[con(0x2)]) | con(0x4000), vw_04 + con(0x69), t_00);
  }
}

void SKW_DRAW_MAJIC_MAP(x16 eaxw)
{
  x16 wordrg5;
  c_record* recoptrrg1;
  c_record* recoptrrg5;
  c_record* recoptrrg6;
  x16 vw_00;
  c_rect rc_04;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_18;
  x16 vw_1c;

  vw_00 = eaxw;
  ddata.v1e0ba4 = SKW_QUERY_CLS2_FROM_RECORD(eaxw);
  ddata.v1e0b62 |= con(0x90);
  recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  vw_1c = urshift(recoptrrg5->u4.w, con(0xd));
  if (vw_1c != con(0x3))
  {
    ddata.v1e0b62 |= con(0x800);
    vw_1c = urshift(recoptrrg5->u4.w, con(0xd));
    if (vw_1c != con(0x0))
    {
      recoptrrg6 = SKW_GET_MISSILE_REF_OF_MINION(recoptrrg5->u2.w, eaxw);
      if (recoptrrg6 == NULL)
      {
        if ((ddata.v1e0b62 & con(0x20)) != con(0x0))
          ddata.v1e0b62 &= con(0xfffffbdf);
      }
      else
        ddata.v1e0b62 |= con(0x20);
    }
  }
  if ((ddata.v1e0b62 & con(0x400)) == con(0x0))
  {
    SKW_DRAW_ICON_PICT_ENTRY(con(0x14), con(0x10), &ddata.v1d694c, ddata.v1e0ba4, con(0x5c), con(0xffff));
    x16 wordrg21 = con(0x0);
    while (wordrg21 < ddata.v1e0b7a)
    {
      SKW_DRAW_CMD_SLOT(wordrg21, false);
      wordrg21++;
    }
    SKW_29ee_1d03(con(0x0));
    ddata.v1e0b62 |= con(0x400);
  }
  x16 wordrg3 = ddata.v1e0270;
  x16 vw_14 = ddata.v1e0272;
  vw_0c = (ddata.v1e0266);
  vw_18 = con(0x0);
  vw_10 = con(0x0);
  if (vw_1c != con(0x0) && vw_1c != con(0x3))
  {
    if ((recoptrrg5->u6.w & con(0xfc00)) != con(0xfffffc00))
      ddata.v1e0b62 |= con(0x40);
    if (vw_1c != con(0x1))
    {
      if ((ddata.v1e0b62 & con(0x40)) != con(0x0))
      {
        wordrg3 = recoptrrg5->u6.w & con(0x1f);
        vw_14 = ulrshift(recoptrrg5->u6.w, con(0x6), con(0xb));
        vw_0c = urshift(recoptrrg5->u6.w, con(0xa));
      }
    }
    else
    {
      if (recoptrrg6 != NULL)
      {
        wordrg3 = recoptrrg6->u4.w & con(0x1f);
        vw_14 = ulrshift(recoptrrg6->u4.w, con(0x6), con(0xb));
        vw_0c = urshift(recoptrrg6->u4.w, con(0xa));
        recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(recoptrrg5->u2.w);
        wordrg5 = SKW_QUERY_CREATURE_5x5_POS(recoptrrg1, ((unsignedword(table1d69a2[ulrshift(recoptrrg1->ue.w, con(0x6), con(0xe))]) + ddata.v1e0258) & con(0x3)));
        vw_10 = wordrg5 % con(0x5);
        vw_18 = wordrg5 / con(0x5);
        if (vw_10 > con(0x2))
        {
          x16 wordrg12 = (ddata.v1e0258 + con(0x1)) & con(0x3);
          wordrg3 += table1d27fc[wordrg12];
          vw_14 += table1d2804[wordrg12];
        }
        if (vw_18 > con(0x2))
        {
          x16 wordrg11 = (ddata.v1e0258 + con(0x2)) & con(0x3);
          wordrg3 += table1d27fc[wordrg11];
          vw_14 += table1d2804[wordrg11];
        }
        vw_10 = CUTX16(((2 * signedlong(ddata.v1d274e) + signedlong(ddata.v1d274a) + con(0x1)) / con(0x5)) * signedlong(table1d6998[vw_10]));
        vw_18 = CUTX16(((signedlong(ddata.v1d274c) + 2 * signedlong(ddata.v1d2750) + con(0x1)) / con(0x5)) * signedlong(table1d6998[vw_18]));
      }
      else
      {
        ddata.v1e0b62 &= con(0xffffffbf);
      }
    }
  }
  wordrg5 = vw_00;
  SKW_29ee_1946(wordrg5, vw_14, vw_0c, wordrg3, ddata.v1e0258, vw_10, vw_18, ddata.v1e0b62);
  if ((ddata.v1e0b62 & con(0x100)) == con(0x0))
    if ((ddata.v1e0b62 & con(0x200)) != con(0x0))
      return;
  SKW_0b36_105b(&ddata.v1d694c, con(0x0), SKW_QUERY_EXPANDED_RECT(con(0x63), &rc_04));
}

void SKW_ROTATE_SQUAD(x16 eaxw)
{
  c_hero* heroptrrg1;

  if (eaxw == ddata.v1e0258)
    return;
  x16 wordrg2 = eaxw - ddata.v1e0258;
  if (wordrg2 < con(0x0))
    wordrg2 += con(0x4);
  heroptrrg1 = ddata.hero;
  ui16 uwordrg4 = con(0x0);
  while (uwordrg4 < UI16CAST(ddata.savegamew2))
  {
    heroptrrg1->b1d = (heroptrrg1->b1d + CUTX8(wordrg2)) & con(0x3);
    heroptrrg1->b1c = (heroptrrg1->b1c + CUTX8(wordrg2)) & con(0x3);
    heroptrrg1++;
    uwordrg4++;
  }
  ddata.v1e0258 = eaxw;
  if (ddata.v1e0234)
  {
    wordrg2 += ddata.v1e0276;
    wordrg2 &= con(0x3);
    ddata.v1e0276 = wordrg2;
    ddata.v1e0264 = wordrg2;
  }
  else
    ddata.v1e0264 = eaxw;
}

x16 SKW_2c1d_028c(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 wordrg5;
  s_4bytearray v4ba_00;

  if (ddata.savegamew2 == con(0x0))
    return con(0xffffffff);
  wordrg5 = DM2_ABS(eaxw - ddata.v1e0280);
  if ((DM2_ABS(edxw - ddata.v1e027e) + wordrg5) > con(0x1))
    return con(0xffffffff);
  SKW_075f_1bc2(&v4ba_00, ddata.v1e027e, eaxw, ddata.v1e0280, edxw, ebxw);
  x16 wordrg4 = con(0x0);
  while (wordrg4 < con(0x4))
  {
    x16 wordrg11 = SKW_GET_PLAYER_AT_POSITION(unsignedword(v4ba_00.barr_00[wordrg4]));
    if (wordrg11 >= con(0x0))
      return wordrg11;
    wordrg4++;
  }
  return con(0xffffffff);
}

// was SKW_2c1d_038b
// TODO: return is a byte only after all
x16 SKW_RETRIEVE_ITEM_BONUS(x16 eaxw, x16 ebxw, x16 ecxw, x8 edxb)
{
  x16 wordrg1 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(eaxw, edxb);
  x16 wordrg4 = wordrg1;
  if (wordrg4 == con(0x0))
    return con(0x0);
  if ((wordrg4 & con(0x4000)) == con(0x0))
  {
    if (ebxw == con(0x0))
      if ((wordrg4 & con(0x8000)) == con(0x0))
        return con(0x0);
  }
  else if (ecxw != con(0xfffffffe) && ecxw != con(0x2) && ecxw == con(0x3))
    return con(0x0);
  x16 wordrg11 = signedword(CUTX8(wordrg1));
  if (ecxw >= con(0x0))
    return wordrg11;
  return -wordrg11;
}

// was SKW_2c1d_03e7
void SKW_PROCESS_ITEM_BONUS(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  c_hero* heroptrrg5;
  x16 vw_00;
  x16 vw_04;
  c_tim vtim_08;

  vw_04 = eaxw;
  vw_00 = edxw;
  if (eaxw < con(0x0) || edxw == con(0xffffffff))
    return;
  if (ebxw < con(0x1e))
  {
    x16 vw_24 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(edxw, con(0x0));
    if (ecxw != con(0x0))
      if ((vw_24 & con(0x10)) != con(0x0))
        SKW_RECALC_LIGHT_LEVEL();
    if ((vw_24 & con(0x2000)) != con(0x0))
    {
      heroptrrg5 = &ddata.hero[vw_04];
      x16 wordrg7 = SKW_IS_ITEM_FIT_FOR_EQUIP(vw_00, true, ebxw);
      bool vbool_14 = false;
      if (ecxw != con(0x0) && ecxw != con(0x3) && ecxw != con(0xfffffffe))
      {
        vw_24 = SKW_RETRIEVE_ITEM_BONUS(vw_00, wordrg7, ecxw, con(0x14));
        if (vw_24 != con(0x0))
        {
          if (ecxw != con(0x1) && ecxw != con(0xffffffff))
          {
            if (ecxw == con(0x2))
              heroptrrg5->w3e = DM2_BETWEEN_VALUE(con(0x0), con(0x3e7), vw_24 + heroptrrg5->w3e);
          }
          else
            heroptrrg5->w40 += vw_24;
          heroptrrg5->u32.b.b1 |= con(0x8);
        }
        for (x16 vw_20 = con(0x0); vw_20 <= con(0x6); vw_20++)
        {
          vw_24 = SKW_RETRIEVE_ITEM_BONUS(vw_00, wordrg7, ecxw, CUTX8(vw_20) + con(0x15));
          if (vw_24 != con(0x0))
          {
            if (ecxw != con(0x1) && ecxw != con(0xffffffff))
              SKW_2c1d_0300(heroptrrg5, vw_24, vw_20);
            else
              heroptrrg5->b58[vw_20] += CUTX8(vw_24);
            heroptrrg5->u32.b.b1 |= con(0x30);
          }
        }
      }
      for (x16 vw_20_1 = con(0x0); vw_20_1 < con(0x14); vw_20_1++)
      {
        vw_24 = SKW_RETRIEVE_ITEM_BONUS(vw_00, wordrg7, ecxw, CUTX8(vw_20_1) + con(0x1e));
        if (vw_24 != con(0x0))
        {
          heroptrrg5->baf[vw_20_1] += CUTX8(vw_24);
          heroptrrg5->u32.b.b1 |= con(0x20);
          vbool_14 = true;
        }
      }
      vw_24 = SKW_RETRIEVE_ITEM_BONUS(vw_00, wordrg7, ecxw, con(0x33));
      if (vw_24 != con(0x0))
      {
        heroptrrg5->b105[con(0x0)] += CUTX8(vw_24);
        vbool_14 = true;
      }
      if (ecxw != con(0x2) && ecxw != con(0xfffffffe) && ecxw != con(0x3))
      {
        x16 wordrg16 = SKW_RETRIEVE_ITEM_BONUS(vw_00, wordrg7, ecxw, con(0x32));
        if (wordrg16 != con(0x0))
        {
          ddata.savegames1.w0 += wordrg16;
          if (ecxw != con(0x0))
            SKW_RECALC_LIGHT_LEVEL();
        }
      }
      if (vbool_14)
      {
        if (ecxw == con(0x2))
        {
          vtim_08.b_04 = con(0xe);
          x32 longrg402 = ddata.longmallocx + unsignedlong(SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_00, con(0x13)));
          longrg402 |= signedlong(ddata.v1e0266) << con(0x18);
          vtim_08.un.l_00 = longrg402;
          vtim_08.b_05 = CUTX8(vw_04);
          vtim_08.u.w_06 = urshift(vw_00 & con(0x3c00), con(0xa));
          vtim_08.v.b.b_08 = SKW_QUERY_CLS2_FROM_RECORD(vw_00);
          SKW_QUEUE_TIMER(&vtim_08);
        }
      }
    }
  }
  if (ecxw != con(0x0))
    SKW_CALC_PLAYER_WEIGHT(vw_04);
}

void SKW_PUT_ITEM_TO_PLAYER(x16 eaxw)
{
  if ((ddata.savegamewpc.w0 == con(0xffffffff)) || (ddata.hero[eaxw].w36 == con(0x0)))
    return;
  x16 wordrg2 = con(0xd);
  x16 wordrg3;
  while (wordrg3 = wordrg2, wordrg3 < con(0x1e))
  {
    if (ddata.hero[eaxw].warrc3[wordrg3] == con(0xffffffff))
      break;
    wordrg2++;
  }
  if (wordrg2 != con(0x1e))
  {
    x16 wordrg1 = SKW_REMOVE_OBJECT_FROM_HAND();
    if (wordrg1 != con(0xffffffff))
      SKW_EQUIP_ITEM_TO_HAND(eaxw, wordrg2, wordrg1);
  }
}

// was SKW_2c1d_0889
void SKW_CLICK_ITEM_SLOT(x16 eaxw)
{
  x16 wordrg5;
  x16 vw_00;

  x16 wordrg3 = eaxw;
  if (ddata.mouse_unk0e == con(0xffffffff))
    return;
  if (wordrg3 >= con(0x8))
  {
    wordrg3 -= con(0x8);
    if (wordrg3 < con(0x1e))
      wordrg5 = ddata.v1e0976;
    else
      wordrg5 = ddata.v1e0b74;
    wordrg5--;
  }
  else
  {
    if (ddata.v1e0288 != con(0x0))
      return;
    wordrg5 = wordrg3 >> con(0x1);
    if (UI16CAST(wordrg5) >= UI16CAST(ddata.savegamew2))
      return;
    if ((wordrg5 + con(0x1)) == ddata.v1e0976 || ddata.hero[wordrg5].w36 == con(0x0))
      return;
    wordrg3 &= con(0x1);
  }
  x16 wordrg6 = ddata.savegamewpc.w0;
  x16 wordrg2 = 2 * wordrg3;
  x16 wordrg11;
  if (wordrg3 < con(0x1e))
    wordrg11 = ddata.hero[wordrg5].warrc3[wordrg2 / 2];
  else
    wordrg11 = ddata.v1e095c[(wordrg2 - 0x3c) / 2]; // EVIL! offsetproblem1
  vw_00 = wordrg11;
  if (vw_00 == con(0xffffffff) && wordrg6 == vw_00)
    return;
  if (wordrg6 != con(0xffffffff))
    if (SKW_IS_ITEM_FIT_FOR_EQUIP(wordrg6, false, wordrg3) == con(0x0))
      return;
  SKW_FIRE_HIDE_MOUSE_CURSOR();
  if (wordrg6 != con(0xffffffff))
    SKW_REMOVE_OBJECT_FROM_HAND();
  if (vw_00 != con(0xffffffff))
  {
    SKW_REMOVE_POSSESSION(wordrg5, wordrg3);
    SKW_TAKE_OBJECT(vw_00, true);
  }
  if (wordrg6 != con(0xffffffff))
    SKW_EQUIP_ITEM_TO_HAND(wordrg5, wordrg3, wordrg6);
  SKW_2e62_0cfa(false);
  if (wordrg3 == con(0xb) || wordrg3 == con(0x6) || wordrg3 == con(0xc) || (wordrg3 >= con(0x7) && wordrg3 <= con(0x9)) || wordrg3 >= con(0x1e))
  {
    ddata.v1e0b6c = con(0x1);
    SKW_UPDATE_RIGHT_PANEL(false);
  }
  if (ddata.v1e0254 != con(0x0))
  {
    ddata.v1e0254 = con(0x0);
    SKW_443c_0434();
  }
  SKW_FIRE_SHOW_MOUSE_CURSOR();
}

x16 SKW_2c1d_09d9(void)
{
  ui32 ulongrg5;

  ulongrg5 = con(0x0);
  x16 wordrg6 = con(0x0);
  while (wordrg6 < ddata.savegamew2)
  {
    x16 wordrg21 = con(0x0);
    x16 wordrg3;
    while (wordrg3 = wordrg21, wordrg3 <= con(0x3))
    {
      ulongrg5 += ddata.hero[wordrg6].l5f[wordrg3];
      wordrg21++;
    }
    wordrg6++;
  }
  x16 wordrg22 = con(0x1);
  for(;;)
  {
    if (ulongrg5 < UI32CAST(con(0x200)))
      return wordrg22;
    ulongrg5 >>= con(0x1);
    wordrg22++;
  }
}

void SKW_ADJUST_SKILLS(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_hero* heroptrrg5;
  x16 vw_04;
  x16 vw_08;
  t_text t_0c[0x80];
  x8 vb_94;
  x8 vb_9c;

  vw_08 = eaxw;
  vw_04 = edxw;
  x32 vl_00 = unsignedlong(ebxw);
  if (edxw >= con(0x4) && edxw <= con(0xb))
    if (UI32CAST(ddata.longmallocx - con(0x96)) > UI32CAST(ddata.longv1d26a4))
      vl_00 = unsignedlong(urshift(ebxw, con(0x1)));
  if (vl_00 == con(0x0))
    return;
  x16 wordrg31 = urshift(ddata.v1e03c0->wc, con(0xc));
  if (wordrg31 != con(0x0))
    vl_00 *= unsignedlong(wordrg31);
  heroptrrg5 = &ddata.hero[vw_08];
  x16 wordrg6 = vw_04;
  if (wordrg6 >= con(0x4))
  {
    wordrg6 -= con(0x4);
    wordrg6 >>= con(0x2);
  }
  ui16 vuw_90 = SKW_QUERY_PLAYER_SKILL_LV(vw_08, false, wordrg6);
  if (vw_04 >= con(0x4))
    if ((ddata.longmallocx - con(0x28)) < ddata.longv1d26a4)
      vl_00 *= 2;
  heroptrrg5->l5f[vw_04] += vl_00;
  if (vw_04 >= con(0x4))
    heroptrrg5->l5f[wordrg6] += vl_00;
  x16 vw_8c = SKW_QUERY_PLAYER_SKILL_LV(vw_08, false, wordrg6);
  for(;;)
  {
    ui16 uwordrg40 = vw_8c;
    if (vuw_90++ >= uwordrg40)
      return;
    x16 vw_00 = uwordrg40;
    x8 byterg2 = CUTX8(SKW_RAND01());
    vb_94 = CUTX8(SKW_RAND01() + con(0x1));
    x8 byterg3 = CUTX8(SKW_RAND01());
    if (wordrg6 != con(0x2))
      byterg3 = CUTX8(vw_00) & byterg3;
    heroptrrg5->b4a[con(0x9)] += byterg3;
    x16 wordrg32 = heroptrrg5->u3c.w;
    heroptrrg5->b4a[con(0xd)] += CUTX8(SKW_RAND01()) & ~CUTX8(vw_00);
    if (wordrg6 <= con(0x3))
    {
      bool skip = false; // added
      switch (wordrg6)
      {
        case 0:
          vb_9c = con(0x6);
          wordrg32 = urshift(wordrg32, con(0x4));
          vw_00 *= 3;
          heroptrrg5->b4a[con(0x3)] += vb_94;
          heroptrrg5->b4a[con(0x5)] += byterg2;
          skip = true;
        break;

        case 1:
          vb_9c = con(0x7);
          wordrg32 /= con(0x15);
          vw_00 *= 2;
          heroptrrg5->b4a[con(0x3)] += byterg2;
          heroptrrg5->b4a[con(0x5)] += vb_94;
          skip = true;
        break;

        case 2:
          vb_9c = con(0x8);
          wordrg32 /= con(0x19);
          heroptrrg5->w40 += vw_00;
          vw_00 += urshift(vw_00 + con(0x1), con(0x1));
          heroptrrg5->b4a[con(0x7)] += byterg2;
        break;

        case 3:
          vb_9c = con(0x9);
          wordrg32 = urshift(wordrg32, con(0x5));
          heroptrrg5->w40 += urshift(vw_00, con(0x1)) + vw_00;
          heroptrrg5->b4a[con(0x7)] += vb_94;
        break;

        default: throw(THROW_DMABORT);
      }
      if (!skip)
      {
        heroptrrg5->w40 += DM2_MIN(CUTX16(SKW_RAND02()), vw_8c - con(0x1));
        if (heroptrrg5->w40 > con(0x384))
          heroptrrg5->w40 = con(0x384);
        heroptrrg5->b4a[con(0xb)] += CUTX8(SKW_RAND02());
      }
    }
    heroptrrg5->w38 += SKW_RAND16(urshift(vw_00, con(0x1)) + con(0x1)) + vw_00;
    if (heroptrrg5->w38 > con(0x3e7))
      heroptrrg5->w38 = con(0x3e7);
    heroptrrg5->u3c.w += SKW_RAND16(wordrg32 / 2 + con(0x1)) + wordrg32;
    if (heroptrrg5->u3c.w > con(0x270f))
      heroptrrg5->u3c.w = con(0x270f);
    heroptrrg5->u32.b.b1 |= con(0x38);
    ddata.v1e0ffa[wordrg6 + 4 * vw_08 + con(0x2)]++; // EVIL offset shifted by 2, was 0x1e0ffc
    SKW_DISPLAY_HINT_NEW_LINE();
    ddata.v1e098c = vw_08;
    SKW_DISPLAY_HINT_TEXT(table1d69d0[vw_08], SKW_QUERY_GDAT_TEXT(con(0x1), vb_9c, t_0c, con(0x0)));
  }
}

void SKW_2c1d_1bb5(x16 eaxw, x16 edxw)
{
  x16 wordrg5;
  c_hero* heroptrrg2;
  c_tim* timptrrg4;

  x16 wordrg3 = edxw;
  if (eaxw == con(0xffffffff))
    return;
  heroptrrg2 = &ddata.hero[eaxw];
  timptrrg4 = ddata.savegametimarrp;
  wordrg5 = con(0x0);
  while (wordrg5 < ddata.savegamew9)
  {
    if (timptrrg4->b_04 == con(0x4b))
    {
      x16 wordrg6 = unsignedword(timptrrg4->b_05);
      if (wordrg6 == eaxw)
      {
        x16 wordrg6 = timptrrg4->u.w_06;
        if (wordrg3 < wordrg6)
        {
          timptrrg4->u.w_06 = wordrg6 - wordrg3;
          heroptrrg2->w48 -= wordrg3;
          return;
        }
        wordrg3 -= wordrg6;
        heroptrrg2->w48 -= wordrg6;
        SKW_DELETE_TIMER(wordrg5);
        if (--heroptrrg2->b1f == con(0x0) || wordrg3 <= con(0x0))
          return;
      }
    }
    timptrrg4++;
    wordrg5++;
  }
}

void SKW_CALC_PLAYER_WEIGHT(x16 eaxw)
{
  x16 wordrg5;

  x16 wordrg2 = con(0x0);
  x16 wordrg4 = con(0x0);
  while (wordrg5 = wordrg4, wordrg5 < con(0x1e))
  {
    wordrg2 += SKW_QUERY_ITEM_WEIGHT(ddata.hero[eaxw].warrc3[wordrg5]);
    wordrg4++;
  }
  x16 wordrg3 = ddata.v1e0b74 - con(0x1);
  if (eaxw == wordrg3 && ddata.v1e0b76 < con(0x2) && SKW_IS_CONTAINER_CHEST(ddata.v1d67c2.w0[wordrg3 + con(0x1)][ddata.v1e0b76]))
  {
    x16 wordrg402 = con(0x0);
    while (wordrg402 < con(0x8))
    {
      wordrg2 += SKW_QUERY_ITEM_WEIGHT(ddata.v1e095c[wordrg402]);
      wordrg402++;
    }
  }
  ddata.hero[eaxw].wff = wordrg2;
  ddata.hero[eaxw].u32.b.b1 |= con(0x10);
}

void SKW_ADD_ITEM_TO_PLAYER(x16 eaxw, x16 edxw)
{
  ui16 uwordrg5;
  x16 vw_00;
  x16 vw_04;

  vw_00 = eaxw;
  vw_04 = con(0x0);
  for(;;)
  {
    if (vw_04 >= con(0x5))
      return;
    uwordrg5 = table1d6a31[vw_04].w0[con(0x0)];
    for (;; uwordrg5++) // TODO: ugly loopform because of continues
    {
      x16 wordrg3 = 6 * vw_04;
      if (uwordrg5 <= UI16CAST(table1d6a31[vw_04].w0[con(0x1)]))
      {
        if (ddata.hero[vw_00].warrc3[uwordrg5] != con(0xffffffff))
          continue;
        if (SKW_IS_ITEM_FIT_FOR_EQUIP(edxw, false, uwordrg5) == con(0x0))
          continue;
        x16 wordrg1 = table1d6a31[wordrg3 / 6].w0[con(0x2)];
        if (wordrg1 != con(0xffffffff))
        {
          if (urshift(edxw & con(0x3c00), con(0xa)) != wordrg1)
            continue;
        }
        SKW_EQUIP_ITEM_TO_HAND(vw_00, uwordrg5, edxw);
        return;
      }
      wordrg3 = vw_04 + con(0x1);
      vw_04 = wordrg3;
      break;
    }
  }
}

// TODO: make argument unsigned
bool SKW_IS_TILE_BLOCKED(x8 eaxb)
{
  ui8 ubyterg1 = eaxb;
  ui8 ubyterg4 = ubyterg1 >> con(0x5);
  if (ubyterg4 < con(0x4))
    return ubyterg4 == con(0x0);
  if (ubyterg4 <= con(0x4))
  {
    ubyterg1 &= con(0x7);
    return ubyterg1 != con(0x0) && ubyterg1 != con(0x1) && ubyterg1 != con(0x5);
  }
  if (ubyterg4 < con(0x6))
    return false;
  if (ubyterg4 <= con(0x6))
  {
    if ((ubyterg1 & con(0x4)) != con(0x0))
      return false;
    ubyterg1 &= con(0x1);
    return ubyterg1 == con(0x0);
  }
  return ubyterg4 == con(0x7);
}

bool SKW_32cb_01b6(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16* argpw0)
{
  c_record* recoptrrg2;
  s_d556* sd5ptrrg3;
  x16 vw_00;
  x16 vw_04;

  vw_04 = edxw;
  vw_00 = SKW_GET_CREATURE_AT(ebxw, ecxw);
  if (vw_00 == con(0xffffffff))
    return false;
  recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(vw_00);
  if (recoptrrg2->u4.b.b1 != con(0xffffffff))
    sd5ptrrg3 = &ddata.v1e089c[recoptrrg2->u4.b.b1];
  else
    sd5ptrrg3 = NULL;
  SKW_QUERY_CREATURE_PICST(con(0x3), recoptrrg2, sd5ptrrg3, table1d6b15[3], vw_00);
  x16 wordrg402 = ddata.v1e118e.w_30;
  ddata.v1e118e.w_30 = con(0xfffffffe);
  SKW_DRAW_TEMP_PICST();
  if (SKW_32cb_00f1(eaxw, wordrg402, vw_04))
  {
    if (ddata.v1e12da >= con(0xffffffb5))
    {
      if (ddata.v1e12da <= con(0x4b))
        *argpw0 = con(0x0);
      else
        *argpw0 = con(0x1);
    }
    else
      *argpw0 = con(0x3);
    return true;
  }
  return false;
}

bool SKW_32cb_0287(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 wordrg5;
  s_hex12* h12ptrrg4;
  bool vbool_00;
  s_hex12* ps_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;

  vw_10 = edxw;
  vw_0c = ebxw;
  vbool_00 = false;
  wordrg5 = eaxw;
  if (wordrg5 > con(0x3))
    return false;
  ps_04 = ddata.v1e1044;
  ddata.v1e1044 = UPCAST(s_hex12, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x48)));
  vw_14 = ddata.v1e12cc;
  vw_08 = ddata.v1e12ca;
  SKW_CALC_VECTOR_W_DIR(ddata.v1e12c8, table1d6ad0[wordrg5][0], &vw_14, table1d6ad0[wordrg5][1], &vw_08);
  ddata.v1e1044[wordrg5].b_00 = CUTX8(vw_14);
  ddata.v1e1044[wordrg5].b_01 = CUTX8(vw_08);
  h12ptrrg4 = &ddata.v1e1044[wordrg5];
  SKW_SUMMARIZE_STONE_ROOM(&h12ptrrg4->s_02, vw_14, vw_08, ddata.v1e12c8);
  x16 wordrg1 = SKW_32cb_15b8(wordrg5, false, signedword(table1d6afe[wordrg5]));
  if (wordrg1 >= con(0x0))
    vbool_00 = SKW_32cb_00f1(vw_10, wordrg1, vw_0c);
  DM2_DEALLOC_LOBIGPOOL(con(0x48));
  ddata.v1e1044 = ps_04;
  if (eaxw == con(0x3))
    return true;
  if (ddata.v1e118e.s_00.w_12 >= con(0x20))
  {
    if (ddata.v1e118e.s_00.w_14 >= con(0x20))
      return vbool_00;
  }
  return true;
}

void SKW_DRAW_DUNGEON_GRAPHIC(x8 eaxb, x8 ebxb, x16 ecxw, x8 edxb, x16 argw0, x16 argw1)
{
  c_image vs_00;

  SKW_QUERY_GDAT_SUMMARY_IMAGE(&vs_00, edxb, ebxb, eaxb);
  R_B073(vs_00.carr_3a, argw0, con(0xffffffff), CUTX8(ddata.v1e12d2), &vs_00.w_38);
  vs_00.w_30 = argw0;
  vs_00.w_18 = ecxw;
  vs_00.pg_2c = ddata.bitmapptr;
  vs_00.w_32 = argw1;
  if (ddata.v1e025c != con(0x0))
  {
    if (ecxw != con(0x2bc))
    {
      if (ecxw == con(0x2bd))
        vs_00.w_22 += ddata.v1d2710;
    }
    else
      vs_00.w_22 += ddata.v1d270e;
  }
  SKW_DRAW_PICST(SKW_QUERY_PICST_IT(&vs_00));
}

void SKW_QUERY_TEMP_PICST(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x16 argw2, x16 argw3, x16 argw4, x16 argw5, x8 argb6, x8 argb7, x8 argb8)
{
  x16 wordrg5;

  wordrg5 = edxw;
  SKW_QUERY_GDAT_SUMMARY_IMAGE(&ddata.v1e118e, argb7, argb8, argb6);
  if (wordrg5 != ebxw)
  {
    bool skip = false; // added
    x8 byterg1;
    if (argw1 == con(0x2))
      byterg1 = con(0x14);
    else if (argw1 == con(0x3))
      byterg1 = con(0x15);
    else
      skip = true;
    if (!skip)
    {
      x16 wordrg1 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(argb6, con(0xb), byterg1, argb7);
      if (wordrg1 != con(0x0))
      {
        x16 wordrg40 = urshift(wordrg1, con(0x8)) << con(0x7);
        x16 wordrg2 = unsignedword(CUTX8(wordrg1));
        wordrg5 = ((wordrg40 / wordrg2) + con(0x1)) >> con(0x1);
      }
    }
  }
  ddata.v1e118e.w_32 = eaxw;
  ddata.v1e118e.w_34 = wordrg5;
  ddata.v1e118e.w_36 = ebxw;
  ddata.v1e118e.w_1c += ecxw;
  ddata.v1e118e.w_1e += argw0;
  ddata.v1e118e.w_18 = argw2;
  ddata.v1e118e.w_1a = argw3;
  ddata.v1e118e.pg_2c = ddata.bitmapptr;
  ddata.v1e118e.w_30 = argw4;
  SKW_32cb_0804(ddata.v1e118e.carr_3a, argw4, argw5, argw1, &ddata.v1e118e.w_38);
  SKW_QUERY_PICST_IT(&ddata.v1e118e);
}

void SKW_QUERY_RAINFALL_PARAM(x8* eaxpb, x16* edxpw)
{
  *edxpw = (ddata.v1e1483 - ddata.v1e12c8) & con(0x3);
  x8 byterg3;
  bool skip = false; // added
  if (*edxpw != con(0x0))
  {
    if (*edxpw != con(0x2))
    {
      skip = true;
      byterg3 = con(0x6d);
    }
  }
  if (!skip)
    byterg3 = con(0x71);
  x8 byterg4 = con(0x0);
  if (ddata.v1e1482 < con(0x80))
  {
    if (ddata.v1e1482 < con(0x40))
    {
      if (ddata.v1e1482 < con(0x10))
      {
        // if (RG1Blo != con(0x0)) TODO: useless command
        {
          // cmp32(RG1L, con(0x10)); TODO: useless command
        }
      }
      else
        byterg4 = con(0x1);
    }
    else
      byterg4 = con(0x2);
  }
  else
    byterg4 = con(0x3);
  byterg3 += byterg4;
  *eaxpb = byterg3;
}

bool SKW_IS_DISTINCTIVE_ITEM_ON_ACTUATOR(c_record* eaxprec, bool ebxbool, x16 edxw)
{
  x16 wordrg4 = urshift(eaxprec->u6.w , con(0xb));
  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(ulrshift(eaxprec->u6.w, con(0x5), con(0xb)), wordrg4);
  for(;;)
  {
    x16 wordrg2 = wordrg1;
    if (wordrg2 == con(0xfffffffe))
      return false;
    x16 wordrg13 = urshift(wordrg2 & con(0x3c00), con(0xa));
    if (!ebxbool || wordrg13 < con(0x5) || wordrg13 > con(0xa))
    {
      if (wordrg13 == con(0x4))
      {
        x16 wordrg11 = SKW_GET_ADDRESS_OF_RECORD(wordrg2)->u2.w;
        while (wordrg11 != con(0xfffffffe))
        {
          x16 wordrg40 = wordrg11;
          if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg40) == edxw)
            return true;
          wordrg11 = SKW_GET_NEXT_RECORD_LINK(wordrg40);
        }
      }
    }
    else
    {
      if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg2) == edxw)
        return true;
    }
    wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg2);
  }
}

void SKW_DRAW_WALL(x16 eaxw)
{
  x16 wordrg5;
  x16 vw_04;
  x16 vw_08;
  x8 vb_0c;
  x8 vb_10;
  x8 vb_14;

  vb_0c = ddata.v1d6c02;
  vw_04 = ddata.v1d6c00;
  vb_14 = table1d6afe[eaxw];
  vw_08 = signedword(table1d6b15[eaxw]);
  vb_10 = ((table1d6b15[eaxw] > con(0x1)) ? 1 : 0) + con(0x6e);
  x16 wordrg6 = con(0x0);
  wordrg5 = con(0x0);
  x16 wordrg19 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), vb_10, ddata.v1d6c02);
  x8 byterg2 = CUTX8(wordrg19);
  if (vw_08 <= con(0x1))
  {
    if (vw_08 > con(0x0))
    {
      if (ddata.v1e1044[con(0x1)].s_02.warr_00[con(0x0)] == con(0x0))
        wordrg5 = urshift(wordrg19, con(0x8));
      if (ddata.v1e1044[con(0x2)].s_02.warr_00[con(0x0)] == con(0x0))
        wordrg6 = unsignedword(byterg2);
    }
  }
  else
  {
    if (ddata.v1e1044[con(0x4)].s_02.warr_00[con(0x0)] == con(0x0))
      wordrg5 = urshift(wordrg19, con(0x8));
    if (ddata.v1e1044[con(0x5)].s_02.warr_00[con(0x0)] == con(0x0))
      wordrg6 = unsignedword(byterg2);
  }
  if ((wordrg5 != con(0x0)) || (wordrg6 != con(0x0)))
    SKW_TRIM_BLIT_RECT(wordrg5, con(0x0), wordrg6, con(0x0));
  wordrg5 = (vb_14 > con(0x0)) ? 1 : 0;
  if (eaxw < con(0x10))
  {
    if (ddata.v1e12d0 == con(0x0))
      vb_10 = CUTX8(eaxw) + con(0x22);
    else
    {
      vb_10 = table1d6b2c[eaxw] + con(0xffffffb0);
      if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x8), con(0x1), vb_10, vb_0c))
      {
        if (vb_14 == con(0x0))
          wordrg5 = con(0x1);
        vb_10 -= con(0xffffff8e);
      }
    }
  }
  else
  {
    if (vb_14 == con(0xfffffffe) || vb_14 == con(0x2))
      wordrg5 = con(0x0);
    wordrg5 ^= ddata.v1e12d0;
    vb_10 = con(0x32);
  }
  SKW_QUERY_TEMP_PICST(wordrg5, con(0x40), con(0x0), con(0x40), con(0x0), ddata.v1e025c == con(0x0) ? con(0x0) : -vw_08, eaxw + con(0x2be), con(0xffffffff), vw_04, con(0xffff), con(0x8), vb_0c, vb_10);
  SKW_DRAW_TEMP_PICST();
  ddata.v1e01d0 = con(0x0);
}

// was SKW_32cb_50fe
void SKW_DRAW_WALL_TILE(ui16 eaxuw)
{
  SKW_DRAW_WALL(eaxuw);
  ui8 ubyterg1 = table1d7012[eaxuw];
  x16 wordrg4;
  if (ubyterg1 < con(0x2))
  {
    if (ubyterg1 != con(0x1))
      return;
    wordrg4 = con(0x0);
  }
  else
  {
    if (ubyterg1 > con(0x2))
    {
      if (ubyterg1 != con(0x3))
        return;
      SKW_32cb_15b8(eaxuw, true, con(0x0));
    }
    wordrg4 = signedlong(table1d6afe[eaxuw]);
  }
  SKW_32cb_15b8(eaxuw, true, wordrg4);
}

// was SKW_32cb_5598
bool SKW_ENVIRONMENT_SET_DISTANT_ELEMENT(s_xabytes* eaxpxa, x16 ebxw, x16 ecxw, t_text* edxt, x16 argw0)
{
  x16 vw_00;
  x16 vw_04;
  x16 vw_08;

  vw_00 = ebxw;
  eaxpxa->w6 = con(0x0);
  eaxpxa->w4 = eaxpxa->w6;
  x16 wordrg1 = SKW_QUERY_CMDSTR_TEXT(edxt, v1d1128);
  if (wordrg1 == con(0x0))
  {
    eaxpxa->b8 = con(0x40);
    eaxpxa->b9 = con(0x40);
    return true;
  }
  if (wordrg1 != con(0x1))
    return false;
  vw_04 = ecxw + ddata.v1e03c0->b4[con(0x2)];
  vw_08 = argw0 + unsignedword(ddata.v1e03c0->b4[con(0x3)]);
  ui16 uwordrg3 = SKW_32cb_54ce(vw_00, &vw_08, SKW_QUERY_CMDSTR_TEXT(edxt, v1d112b), &vw_04, SKW_QUERY_CMDSTR_TEXT(edxt, v1d112e));
  if (vw_08 < con(0x1))
    return false;
  x32 longrg40 = unsignedlong(DM2_MAX(con(0x1), con(0x40) - uwordrg3 + SKW_QUERY_CMDSTR_TEXT(edxt, v1d1131))) << con(0x7);
  x8 byterg2 = (CUTX8((longrg40 - jul_shl32(longrg40, con(0x6))) >> con(0x6)) + con(0x1)) / 2;
  eaxpxa->w4 = 210 * vw_04 / uwordrg3;
  eaxpxa->b8 = byterg2;
  eaxpxa->b9 = byterg2;
  return true;
}

void SKW_32cb_5a8f(void)
{
  x32 longrg5; // confirmed long
  s_hex12* h12ptrrg1;
  x32 longrg2;
  x32 longrg3;

  longrg5 = con(0x0);
  longrg2 = con(0x0);
  x16 wordrg41 = con(0x0);
  while (wordrg41 < con(0x10))
  {
    if (ddata.v1e1044[wordrg41].s_02.warr_00[con(0x0)] == con(0x0))
      longrg2 |= con(0x1) << CUTX8(wordrg41);
    wordrg41++;
  }
  longrg5 |= table1d7042[(longrg2 >> con(0x1)) & con(0x3)];
  x32 longrg11;
  if ((longrg2 & con(0x8)) == con(0x0))
    longrg11 = con(0x0);
  else
    longrg11 = longrg2 & con(0x6);
  longrg3 = longrg2;
  longrg3 = UI32CAST(longrg3) >> con(0x3);
  longrg11 |= longrg3 & con(0x7);
  longrg5 |= table1d7052[longrg11];
  x32 longrg1;
  if ((longrg2 & con(0x40)) == con(0x0))
    longrg1 = con(0x0);
  else
    longrg1 = longrg3 & con(0x6);
  longrg3 = longrg2;
  longrg3 = UI32CAST(longrg3) >> con(0x6);
  longrg1 |= longrg3 & con(0x7);
  longrg5 |= table1d7072[longrg1];
  if ((longrg2 & con(0x800)) == con(0x0))
    longrg3 = con(0x0);
  else
    longrg3 &= con(0x6);
  longrg5 |= table1d7092[((longrg2 >> con(0xb)) & con(0x7)) | longrg3];
  longrg2 |= longrg5;
  if ((longrg2 & con(0x1000)) != con(0x0))
    if ((longrg2 & con(0x4000)) != con(0x0) || (longrg2 & con(0x200)) != con(0x0))
      longrg5 |= con(0x280000);
  if ((longrg2 & con(0x2000)) != con(0x0))
    if ((longrg2 & con(0x8000)) != con(0x0) || (longrg2 &= con(0xffff0400), CUTX16(longrg2) != con(0x0)))
      longrg5 |= con(0x500000);
  longrg3 = con(0x1);
  x16 wordrg42 = con(0x0);
  for(;;)
  {
    longrg2 = signedlong(wordrg42);
    if (longrg2 > con(0x16))
      return;
    if ((longrg3 & longrg5) != con(0x0))
    {
      h12ptrrg1 = &ddata.v1e1044[longrg2];
      if (h12ptrrg1->s_02.warr_00[con(0x0)] == con(0x0))
        h12ptrrg1->s_02.warr_00[con(0x0)] = con(0x7);
    }
    longrg3 += longrg3;
    wordrg42++;
  }
}

void SKW_32cb_5c67(void)
{
  s_hex12* h12ptrrg11;
  s_hex12* h12ptrrg12;
  c_5bytes vs_00;

  for (x16 wordrg3 = con(0x0); ; wordrg3++)
  {
    if (wordrg3 >= con(0x15))
      return;
    h12ptrrg11 = &ddata.v1e1044[wordrg3];
    if (h12ptrrg11->s_02.warr_00[con(0x0)] == con(0x1))
    {
      if (SKW_GET_TELEPORTER_DETAIL(&vs_00, signedword(h12ptrrg11->b_01), signedword(h12ptrrg11->b_00)))
      {
        x16 wordrg402 = con(0x0);
        while (wordrg402 < con(0x4))
        {
          x8 byterg1 = table1d6a74[wordrg3].barr_00[wordrg402];
          if (!(byterg1 & 0x80)) // PROBLEM! if < 0 continue (SKWIN)
          {
            h12ptrrg12 = &ddata.v1e1044[byterg1];
            if (h12ptrrg12->s_02.warr_00[con(0x0)] == con(0x7))
            {
              h12ptrrg12->s_02.warr_00[con(0x0)] = con(0x0);
            }
          }
          wordrg402++;
        }
      }
    }
  }
}

bool SKW_38c8_0224(bool eaxbool, x32 edxl)
{
  x16 wordrg5;

  x16 vw_10 = lextended(ddata.v1e0266);
  x16 vw_08 = lextended(ddata.v1e0270);
  x16 vw_04 = lextended(ddata.v1e0272);
  dm2_dballochandler.v1e0a84 = true;
  i32 longrg6 = con(0x7fffffff); // confirmed long
  wordrg5 = con(0x0);
  x16 vw_0c; // TODO: uninitialized possible?
  while (wordrg5 < unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)]))) // TODO: check the cut!!!
  {
    if ((wordrg5 & con(0x3)) == con(0x0))
    {
      x32 longrg2 = unsignedlong(CUTX8(ddata.savegamep4->w0[con(0x2)]));
      x32 longrg1 = (signedlong(dm2_dballochandler.v1e13fa) - 1) * longrg2; // BUGFIX soundproblem
      longrg2 *= signedlong(dm2_dballochandler.v1e13f8);
      longrg1 = 500 * (signedlong(wordrg5) + con(0x1) + longrg1) / longrg2;
      SKW_DRAW_DIALOGUE_PROGRESS(longrg1);
    }
    SKW_LOAD_NEWMAP(con(0x0), wordrg5, false, con(0x0));
    if (dm2_dballochandler.v1e0a74 < con(0x0) && longrg6 > dm2_dballochandler.v1e0a74)
    {
      longrg6 = dm2_dballochandler.v1e0a74;
      vw_0c = wordrg5;
    }
    x16 longrg1 = dm2_dballochandler.v1e0a8c - edxl;
    if (longrg1 < longrg6)
    {
      longrg6 = longrg1;
      vw_0c = wordrg5;
    }
    if ((longrg6 < con(0x0) && !eaxbool) || dm2_dballochandler.v1e13fe[0] != con(0x0))
      break;
    wordrg5++;
  }
  if (longrg6 > ddata.longv1d70c5)
  {
    ddata.longv1d70c5 = longrg6;
    ddata.v1d70c9 = vw_0c;
  }
  if (eaxbool)
    if (longrg6 < con(0x0))
    {
      ddata.longv1d70c5 = longrg6;
      ddata.v1d70c9 = vw_0c;
      SKW_0aaf_0067(SKW_0aaf_02f8(con(0x2), con(0x0)));
      SKW_SK_PREPARE_EXIT();
    }
  dm2_dballochandler.v1e0a84 = false;
  ddata.v1e0266 = vw_10;
  ddata.v1e0270 = vw_08;
  ddata.v1e0272 = vw_04;
  if (longrg6 >= con(0x0))
  {
    if (dm2_dballochandler.v1e13fe[2] != con(0x0))
      SKW_0aaf_02f8(con(0xe), con(0x20));
    SKW_DRAW_DIALOGUE_PROGRESS(con(0x1f4));
  }
  return longrg6 >= con(0x0);
}

x16 SKW_3929_04e2(const t_text* eaxt, x16* ebxpw, x16 ecxw, t_text* edxt)
{
  t_text textrg5;
  t_text* tptrrg7;
  const t_text* tptrrg3;
  const t_text* tp_00;
  x16 vw_08;
  x16 vw_10;
  x16 vw_14;

  tp_00 = eaxt;
  tptrrg7 = edxt;
  vw_10 = ecxw;
  x16 wordrg4 = *ebxpw;
  x16 wordrg1 = con(0x0);
  x16 wordrg2 = con(0x0);
  vw_08 = con(0xffffffff);
  vw_14 = con(0x0);
  x16 vw_0c = con(0x0);
  for(;;)
  {
    tptrrg7[wordrg2] = NULLBYTE;
    tptrrg3 = &tp_00[wordrg4];
    textrg5 = *tptrrg3;
    if ((textrg5 == con(0xa)) || (*tptrrg3 == NULLBYTE))
      break;
    if (textrg5 == ' ')
    {
      vw_08 = wordrg4;
      vw_14 = wordrg2;
      vw_0c = wordrg1;
    }
    if ((wordrg1 + C_strmetrics.charwidth) > vw_10)
    {
      if (vw_08 == con(0xffffffff))
        break;
      *ebxpw = vw_08 + con(0x1);
      tptrrg7[vw_14] = NULLBYTE;
      return vw_0c;
    }
    if (wordrg1 == con(0x0))
      wordrg1 = -C_strmetrics.xofs;
    wordrg1 += C_strmetrics.charwidth;
    tptrrg7[wordrg2++] = tp_00[wordrg4++];
  }
  *ebxpw = wordrg4;
  return wordrg1;
}

// was SKW_3a15_008e
void SKW___SORT_TIMERS(void)
{
  c_tim* timptrrg3;
  c_tim* timptrrg5;
  c_tim* timptrrg6;
  x16* wptrrg4;
  x16 vw_04;
  x16 vw_0c;

  vw_0c = ddata.savegamew5;
  if (ddata.savegamew5 != con(0x0))
  {
    vw_04 = con(0x0);
    x16 wordrg3 = vw_0c;
    while (wordrg3 > UI16CAST(vw_04))
    {
      ddata.v1e1424[vw_04] = vw_04;
      vw_04 = vw_04 + con(0x1);
    }
    x16 wordrg11 = wordrg3;
    if (wordrg11 != con(0x1))
    {
      wordrg11 -= con(0x2);
      wordrg11 >>= con(0x1);
      x16 vw_00 = wordrg11;
      while (vw_00 >= con(0x0))
      {
        x16 wordrg6 = vw_00;
        vw_04 = wordrg6;
        timptrrg5 = &ddata.savegametimarrp[ddata.v1e1424[wordrg6]];
        for(;;)
        {
          x16 wordrg2 = 2 * vw_04 + con(0x1);
          if (UI16CAST(wordrg2) >= UI16CAST(vw_0c))
          {
            vw_00--;
            break;
          }
          wordrg6 = wordrg2;
          wptrrg4 = &ddata.v1e1424[wordrg6];
          timptrrg3 = &ddata.savegametimarrp[*wptrrg4];
          wordrg6++;
          if (wordrg6 >= vw_0c)
          {
            if (SKW_3a15_0381(timptrrg5, timptrrg3))
            {
              vw_00--;
              break;
            }
          }
          else
          {
            timptrrg6 = &ddata.savegametimarrp[*(wptrrg4 + con(0x1))];
            x16 vw_10 = wordrg2 + con(0x1);
            if (!SKW_3a15_0381(timptrrg5, timptrrg3))
            {
              if (SKW_3a15_0381(timptrrg6, timptrrg3))
                wordrg2 = vw_10;
            }
            else
            {
              if (SKW_3a15_0381(timptrrg5, timptrrg6))
              {
                vw_00--;
                break;
              }
              wordrg2 = vw_10;
            }
          }
          x16 vw_08 = ddata.v1e1424[vw_04];
          ddata.v1e1424[vw_04] = ddata.v1e1424[wordrg2];
          ddata.v1e1424[wordrg2] = vw_08; // BUGFIX 4.1/2014
          vw_04 = wordrg2;
        }
      }
    }
  }
  ddata.v1e1428 = con(0xffffffff);
  SKW_REARRANGE_TIMERLIST();
}

void SKW_3a15_0486(x16 eaxw)
{
  x16* wptrrg1;
  x16* wptrrg6;
  c_tim* timptrrg5;
  c_tim* ebpptim;
  bool flag;
  x16 vw_04;

  ddata.v1e1428 = con(0xffffffff);
  x16 wordrg13 = ddata.savegamew5;
  flag = --wordrg13 == con(0x0);
  vw_04 = wordrg13;
  if (flag)
    return;
  x16 wordrg12 = ddata.v1e1424[eaxw];
  x16 vw_08 = wordrg12;
  timptrrg5 = &ddata.savegametimarrp[wordrg12];
  bool vbool_00 = false;
  x16 wordrg3 = eaxw;
  for(;;)
  {
    if (wordrg3 == con(0x0))
      break;
    x16 wordrg6 = wordrg3;
    x16 wordrg7 = (wordrg6 - con(0x1)) / 2;
    if (!SKW_3a15_0381(timptrrg5, &ddata.savegametimarrp[ddata.v1e1424[wordrg7]]))
      break;
    ddata.v1e1424[wordrg6] = ddata.v1e1424[wordrg7];
    wordrg3 = wordrg7;
    vbool_00 = true;
  }
  if (!vbool_00)
  {
    vw_04 = (vw_04 - 1) / 2;
    for(;;)
    {
      if (wordrg3 > UI16CAST(vw_04))
        break;
      x16 wordrg2 = 2 * wordrg3 + con(0x1);
      if ((wordrg2 + con(0x1)) < ddata.savegamew5)
      {
        ebpptim = &ddata.savegametimarrp[ddata.v1e1424[wordrg2]];
        if (SKW_3a15_0381(&ddata.savegametimarrp[ddata.v1e1424[wordrg2 + con(0x1)]], ebpptim))
          wordrg2++;
      }
      if (!SKW_3a15_0381(&ddata.savegametimarrp[ddata.v1e1424[wordrg2]], timptrrg5))
        break;
      wptrrg1 = ddata.v1e1424;
      wptrrg6 = &wptrrg1[wordrg2];
      wptrrg1 += unsignedlong(wordrg3);
      *wptrrg1 = *wptrrg6;
      wordrg3 = wordrg2;
    }
  }
  ddata.v1e1424[wordrg3] = vw_08;
}

void SKW_ACTUATE_DOOR(c_tim* eaxptim)
{
  x8 byterg5;
  c_record* recoptrrg1;
  c_record* recoptrrg3;

  byterg5 = ddata.savegamepp1[eaxptim->u.b.b_06][eaxptim->u.b.b_07] & con(0x7);
  if (byterg5 == con(0x5))
    return;
  recoptrrg1 = SKW_GET_ADDRESS_OF_TILE_RECORD(unsignedword(eaxptim->u.b.b_06), unsignedword(eaxptim->u.b.b_07));
  recoptrrg3 = recoptrrg1;
  if ((recoptrrg1->u2.b.b1 & con(0x4)) == con(0x0))
  {
    x16 wordrg402 = con(0x0);
    bool skip = false; // added
    if (byterg5 != con(0x0))
    {
      if (byterg5 != con(0x4))
      {
        wordrg402 = (eaxptim->v.b.b_09 == con(0x0)) ? 1 : 0;
        recoptrrg1->u2.w &= con(0xfffffdff);
        wordrg402 <<= con(0x9);
        recoptrrg1->u2.w |= wordrg402;
      }
      else
      {
        if ((eaxptim->v.b.b_09 != con(0x0)) && (eaxptim->v.b.b_09 != con(0x2)))
          skip = true;
        else
          recoptrrg1->u2.b.b1 |= con(0x2);
      }
    }
    else
    {
      if ((eaxptim->v.b.b_09 != con(0x1)) && (eaxptim->v.b.b_09 != con(0x2)))
        skip = true;
      else
        recoptrrg1->u2.b.b1 &= con(0xfffffffd);
    }
    if (!skip)
      wordrg402 = con(0x1);
    wordrg402 &= con(0x1);
    recoptrrg1->u2.b.b1 &= con(0xfffffffb);
    recoptrrg1->u2.w |= (wordrg402 << con(0xa));
    if (wordrg402 != con(0x0))
    {
      if ((recoptrrg1->u2.b.b1 & con(0x2)) == con(0x0))
      {
        recoptrrg1->u2.b.b1 &= con(0xffffffef);
      }
      eaxptim->b_04 = con(0x1);
      SKW_QUEUE_TIMER(eaxptim);
    }
    return;
  }
  x16 wordrg1 = SKW_3a15_1da8(unsignedword(eaxptim->v.b.b_09), ulrshift(recoptrrg1->u2.w, con(0x6), con(0xf))) & con(0x1);
  recoptrrg3->u2.b.b1 &= con(0xfffffffd);
  recoptrrg3->u2.w |= wordrg1 << con(0x9);
  if (wordrg1 == con(0x0))
    recoptrrg3->u2.b.b1 &= con(0xffffffef);
}

void SKW_ACTIVATE_SHOOTER(c_record* eaxprec, c_tim* edxptim)
{
  x16 wordrg5;
  x8 vb_20;
  x16 vw_24;
  x8 vb_30;

  x16 vw_2c = unsignedword(edxptim->u.b.b_06);
  x16 vw_28 = unsignedword(edxptim->u.b.b_07);
  x16 vw_1c = unsignedword(edxptim->v.b.b_08);
  vw_24 = (unsignedword(edxptim->v.b.b_08) + con(0x2)) & con(0x3);
  x16 wordrg1 = eaxprec->u2.w & con(0x7f);
  x16 wordrg3 = urshift(eaxprec->u2.w, con(0x7));
  vb_20 = CUTX8(urshift(eaxprec->u6.w, con(0x4)) & con(0xff));
  vb_30 = CUTX8(urshift(eaxprec->u6.w, con(0xc)));
  bool boolrg2 = wordrg1 == con(0x7) || wordrg1 == con(0x8) || wordrg1 == con(0xe);
  bool boolrg7 = boolrg2;
  wordrg5 = wordrg3 + con(0xff80);
  x16 wordrg6 = wordrg5;
  if (wordrg1 != con(0xe) && wordrg1 != con(0xf))
  {
    if (wordrg1 != con(0x8) && wordrg1 != con(0xa))
    {
      wordrg6 = SKW_ALLOC_NEW_DBITEM(wordrg3);
      if (wordrg6 == con(0xffffffff))
        return;
      if (!boolrg2)
      {
        wordrg5 = SKW_ALLOC_NEW_DBITEM(wordrg3);
        if (wordrg5 == con(0xffffffff))
          boolrg7 = true;
      }
    }
  }
  else
  {
    x16 wordrg100 = SKW_GET_TILE_RECORD_LINK(vw_2c, vw_28);
    for(;;)
    {
      wordrg6 = wordrg100;
      if (wordrg6 == con(0xfffffffe))
        break;
      x16 wordrg101 = urshift(wordrg6, con(0xe));
      if (urshift(wordrg6 & con(0x3c00), con(0xa)) > con(0x3) && (wordrg101 == vw_1c || wordrg101 == ((vw_1c + con(0x1)) & con(0x3))))
        break;
      wordrg100 = SKW_GET_NEXT_RECORD_LINK(wordrg6);
    }
    if (wordrg6 == con(0xfffffffe))
      return;
    SKW_CUT_RECORD_FROM(wordrg6, vw_2c, vw_28, NULL);
    if (!boolrg7)
    {
      wordrg5 = SKW_GET_TILE_RECORD_LINK(vw_2c, vw_28);
      x16 wordrg2 = vw_1c;
      for(;;)
      {
        if (wordrg5 == con(0xfffffffe))
          break;
        x16 wordrg14 = urshift(wordrg5, con(0xe));
        if (urshift(wordrg5 & con(0x3c00), con(0xa)) > con(0x3) && (wordrg14 == wordrg2 || wordrg14 == ((wordrg2 + 1) & con(0x3))))
          break;
        wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
      }
      if (wordrg5 == con(0xfffffffe))
        boolrg7 = true;
      else
        SKW_CUT_RECORD_FROM(wordrg5, vw_2c, vw_28, NULL);
    }
  }
  if (boolrg7)
    vw_24 = (SKW_RAND01() + vw_24) & con(0x3);
  vw_2c += table1d27fc[vw_1c];
  vw_28 += table1d2804[vw_1c];
  ddata.v1e01a8 = con(0x1);
  SKW_SHOOT_ITEM(wordrg6, vw_28, vw_24, vw_2c, CUTX8(vw_1c), vb_20, con(0x64), vb_30);
  if (!boolrg7)
    SKW_SHOOT_ITEM(wordrg5, vw_28, (vw_24 + con(0x1)) & con(0x3), vw_2c, CUTX8(vw_1c), vb_20, con(0x64), CUTX8(vw_1c));
  ddata.v1e01a8 = con(0x0);
}

void SKW_ADVANCE_TILES_TIME(x16 eaxw, x16 edxw)
{
  x16 wordrg5;
  c_tim* timptrrg1;
  x16 vw_04;

  vw_04 = eaxw;
  if (ddata.v1d3248 == ddata.v1e0282 && vw_04 == ddata.v1e0280)
    if (edxw == ddata.v1e027e)
      SKW_MOVE_RECORD_TO(con(0xffff), edxw, vw_04, vw_04, edxw);
  x16 wordrg12 = SKW_GET_CREATURE_AT(vw_04, edxw);
  if (wordrg12 != con(0xffffffff))
    SKW_MOVE_RECORD_TO(wordrg12, edxw, vw_04, vw_04, edxw);
  wordrg5 = SKW_GET_WALL_TILE_ANYITEM_RECORD(vw_04, edxw);
  x16 vw_08 = wordrg5;
  x16 vw_0c = con(0x0);
  while (wordrg5 != con(0xfffffffe))
  {
    if (urshift(wordrg5 & con(0x3c00), con(0xa)) > con(0x4))
      vw_0c++;
    wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
  }
  for(;;)
  {
    wordrg5 = vw_08;
    for(;;)
    {
      if (wordrg5 == con(0xfffffffe) || vw_0c == con(0x0))
        return;
      x16 wordrg6 = wordrg5;
      x16 wordrg11 = SKW_GET_NEXT_RECORD_LINK(wordrg6);
      vw_08 = wordrg11;
      x16 wordrg7 = urshift(wordrg5 & con(0x3c00), con(0xa));
      if (wordrg7 > con(0x4))
      {
        x16 wordrg21 = edxw;
        vw_0c--;
        SKW_MOVE_RECORD_TO(wordrg6, wordrg21, vw_04, vw_04, wordrg21);
        if (wordrg7 != con(0xe))
        {
          if (wordrg7 == con(0xf))
          {
            timptrrg1 = ddata.savegametimarrp;
            x16 wordrg40 = con(0x0);
            while (wordrg40 < ddata.savegamew9)
            {
              if (timptrrg1->b_04 == con(0x19))
              {
                if (wordrg5 == timptrrg1->v.w_08)
                {
                  timptrrg1->u.b.b_06 = CUTX8(ddata.v1e102a);
                  timptrrg1->u.b.b_07 = CUTX8(ddata.v1e1028);
                  timptrrg1->v.w_08 = (timptrrg1->v.w_08 & con(0x3fff)) | (ddata.v1e1026 << con(0xe));
                  timptrrg1->un.l_00 = (timptrrg1->un.l_00 & con(0xffffff)) | (unsignedlong(ddata.v1e102c) << con(0x18));
                }
              }
              timptrrg1++;
              wordrg40++;
            }
          }
        }
        else
        {
          timptrrg1 = &ddata.savegametimarrp[SKW_GET_ADDRESS_OF_RECORD(wordrg6)->u6.w];
          timptrrg1->v.b.b_08 &= con(0xffffffe0);
          x16 wordrg22 = timptrrg1->v.w_08 | (ddata.v1e102a & con(0x1f));
          timptrrg1->v.w_08 = wordrg22;
          timptrrg1->v.w_08 = (wordrg22 & con(0xfffffc1f)) | ((ddata.v1e1028 & con(0x1f)) << con(0x5));
          timptrrg1->v.b.b_09 &= con(0xfffffff3);
          timptrrg1->v.w_08 |= ((ddata.v1e1024 & con(0x3)) << con(0xa));
          wordrg5 &= con(0xffff3fff);
          wordrg5 |= ddata.v1e1026 << con(0xe);
          timptrrg1->u.w_06 = wordrg5;
          x32 longrg2 = timptrrg1->un.l_00 & con(0xffffff);
          longrg2 |= unsignedlong(ddata.v1e102c) << con(0x18);
          timptrrg1->un.l_00 = longrg2;
        }
        break;
      }
      wordrg5 = wordrg11;
    }
  }
}

x16 SKW_476d_030a(x16 eaxw)
{
  const t_text* tptrrg5;
  x8 vba_00[0x10]; // TODO check deeper, just adress_of(0x0); used here

  if (eaxw == con(0x1))
  {
    if (ddata.v1d154a)
    {
      ddata.v1dffd6 = con(0x0);
      return ddata.v1dffd6;
    }
    x16 wordrg1 = ddata.v1dffd4;
    tptrrg5 = ddata.v1d1524;
    for(;;)
    {
      x32 longrg2 = signedlong(wordrg1);
      ui16 uwordrg1 = R_1278(longrg2); // TODO: readsectors?
      x16 wordrg3 = uwordrg1;
      if (uwordrg1 == con(0x0))
      {
        ddata.v1dffd6 = con(0x4);
        return ddata.v1dffd6;
      }
      else if (uwordrg1 > UI16CAST(con(0x2)))
      {
        ddata.v1dffd6 = con(0x3);
        return ddata.v1dffd6;
      }
      wordrg1 = CUTX16(longrg2);
      R_1296(vba_00); // TODO: findfirst
      if (R_52DC0(vba_00, tptrrg5))
      {
        if (wordrg3 != con(0x2))
        {
          if (ddata.gdatfiletype2)
          {
            if (longrg2 == unsignedlong(ddata.v1dffd0) && ddata.v1dffd6 == con(0x0))
            {
              ddata.v1dffd6 = con(0x2);
              return ddata.v1dffd6;
            }
          }
          ddata.v1dffd6 = con(0x1);
          return ddata.v1dffd6;
        }
        ddata.v1dffd6 = con(0x2);
        return ddata.v1dffd6;
      }
      ddata.v1dffd6 = con(0x0);
      if (!ddata.gdatfiletype2 || ddata.gdatfiletype1 || longrg2 == lextended(ddata.v1dffd0))
        return ddata.v1dffd6;
      tptrrg5 = ddata.v1d1528;
    }
  }
  else if (eaxw != con(0x2))
  {
    ddata.v1dffd6 = con(0x4);
    return ddata.v1dffd6;
  }
  if (ddata.v1d154e)
  {
    ddata.v1dffd6 = con(0x1);
    return ddata.v1dffd6;
  }
  ui16 uwordrg1 = R_1278(signedlong(ddata.v1dffd2)); // TODO: readsectors?
  if (uwordrg1 < con(0x1))
  {
    if (uwordrg1 == con(0x0)) // TODO: BUG? what's here possible except 0 ?!? else???
      ddata.v1dffd6 = con(0x4);
    else
      ddata.v1dffd6 = con(0x3);
    return ddata.v1dffd6;
  }
  if (uwordrg1 <= con(0x1))
    ddata.v1dffd6 = con(0x1);
  else if (uwordrg1 == con(0x2))
    ddata.v1dffd6 = con(0x2);
  else
  {
    ddata.v1dffd6 = con(0x3);
    return ddata.v1dffd6;
  }
  // rg1l = signedlong(ddata.v1dffd2);  --- what for?
  R_1296(DOWNCAST(x8, vba_00)); // TODO: findfirst
  if (((!R_52DC0(vba_00, ddata.v1d1524)) || (!R_52DC0(vba_00, ddata.v1d1528))) || (!R_52DC0(vba_00, ddata.v1d1520)))
    ddata.v1dffd6 = con(0x0);
  return ddata.v1dffd6;
}

x16 SKW_GET_ITEM_ORDER_IN_CONTAINER(x16 eaxw, x16 edxw)
{
  x16 wordrg5;
  t_text t_04[0x80];
  t_text* tptrrg7;
  x16 vw_84;

  tptrrg7 = SKW_QUERY_GDAT_TEXT(con(0x14), con(0x40), t_04, SKW_QUERY_CLS2_FROM_RECORD(eaxw));
  if (*tptrrg7 == NULLBYTE)
    return con(0xffffffff);
  vw_84 = con(0x0);
  x16 vw_88 = con(0x0);
  x16 vw_8c = con(0x0);
  for(;;)
  {
    wordrg5 = con(0xffffffff);
    x16 wordrg6 = con(0xffffffff);
    for(;;)
    {
      if (vw_84 != con(0x0))
        return con(0xffffffff);
      ui8 ubyterg1 = *tptrrg7++;
      if (ubyterg1 < con(0x30) || ubyterg1 > con(0x39))
      {
        if (ubyterg1 < con(0x2d))
        {
          if (ubyterg1 == con(0x0))
            vw_84 = con(0x1);
          break;
        }
        if (ubyterg1 <= con(0x2d))
        {
          wordrg5 = vw_88;
          vw_88 = con(0x0);
          continue;
        }
        if (ubyterg1 == con(0x4a))
        {
          if (vw_88 == con(0x0))
          {
            wordrg6 = con(0x100);
            continue;
          }
          tptrrg7--;
        }
        break;
      }
      x16 wordrg4 = vw_88 * con(0xa); // BUGFIX 4/2014
      wordrg4 += unsignedword(ubyterg1) - con(0x30);
      vw_88 = wordrg4;
    }
    if (wordrg5 < con(0x0))
      wordrg5 = vw_88;
    while (wordrg5 <= vw_88)
    {
      if (vw_8c == edxw)
      {
        x16 wordrg12 = con(0x0);
        while (wordrg12 < ddata.v1e03fe)
        {
          if (ddata.v1e0394[wordrg12] == (wordrg6 + wordrg5))
            return wordrg12;
          wordrg12++;
        }
      }
      vw_8c++;
      wordrg5++;
    }
    vw_88 = con(0x0);
  }
}

x16 SKW_075f_0182(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 wordrg5;
  c_record* recoptrrg1;
  x16 vw_00;

  wordrg5 = eaxw;
  vw_00 = ecxw;
  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(edxw, ebxw);
  x16 wordrg3;
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg3))
  {
    wordrg3 = wordrg1;
    if (wordrg3 == con(0xfffffffe))
      return con(0xfffffffe);
    if (urshift(wordrg3 & con(0x3c00), con(0xa)) == con(0x3) && (recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg3), (recoptrrg1->u2.w & con(0x7f)) == con(0x26)))
    {
      x32 longrg44;
      if ((recoptrrg1->u2.w & con(0xffffff80)) == con(0xffffff80))
        longrg44 = con(0x1);
      else
      {
        if (urshift(recoptrrg1->u2.w, con(0x7)) != (wordrg5 - con(0xff80)))
          longrg44 = con(0x0);
        else
          longrg44 = con(0x1);
      }
      longrg44 ^= unsignedlong(ulrshift(recoptrrg1->u4.w, con(0xa), con(0xf))); // TODO: make right side bool, then left variable too
      if ((recoptrrg1->u4.b.b0 & con(0x4)) != con(0x0))
      {
        if (vw_00 < ((wordrg5 != con(0xff82)) ? con(0xff) : con(0x7f)))
          longrg44 = con(0x0);
      }
      bool skip = false;
      x16 wordrg22 = recoptrrg1->u4.w & con(0x18);
      x16 wordrg408;
      if (wordrg22 != con(0x18))
      {
        if (longrg44 == con(0x0))
          skip = true;
        else
        {
          wordrg408 = ulrshift(recoptrrg1->u4.w, con(0xb), con(0xe));
          wordrg22 = con(0x0);
        }
      }
      else
      {
        wordrg22 = con(0x0);
        wordrg408 = (longrg44 == con(0x0)) ? 1 : 0;
      }
      if (!skip)
        SKW_INVOKE_ACTUATOR(recoptrrg1, wordrg22, wordrg408);
    }
  }
}

// TODO: make eaxw unsigned?
ui16 SKW_32cb_54ce(x16 eaxw, x16* ebxpw, x16 ecxw, x16* edxpw, x16 argw0)
{
  x16 wordrg5;
  x16 vw_00;

  x16 wordrg6;
  vw_00 = eaxw;
  if (UI16CAST(eaxw) <= con(0x3))
  {
    switch (vw_00)
    {
      case 0:
        wordrg5 = *ebxpw - argw0;
        wordrg6 = ecxw - *edxpw;
      break;

      case 1:
        wordrg5 = ecxw - *edxpw;
        wordrg6 = argw0 - *ebxpw;
      break;

      case 2:
        wordrg5 = argw0 - *ebxpw;
        wordrg6 = *edxpw - ecxw;
      break;

      case 3:
        wordrg5 = *edxpw - ecxw;
        wordrg6 = *ebxpw - argw0;
      break;

      default: throw(THROW_DMABORT);
    }
  }
  *edxpw = wordrg6;
  *ebxpw = wordrg5;
  if (wordrg5 < con(0x1))
    return con(0x0);
  wordrg5 = wordrg5 * wordrg5 + wordrg6 * wordrg6;
  if (wordrg5 <= con(0x2))
    return con(0x1);
  ui16 uwordrg15 = urshift(wordrg5, con(0x1));
  ui16 uwordrg3;
  ui16 uwordrg16;
  do
  {
    uwordrg3 = uwordrg15;
    uwordrg16 = ((wordrg5 / uwordrg3) + uwordrg3) >> con(0x1);
  } while (uwordrg15 < uwordrg3);
  return uwordrg3;
}

void SKW_3a15_38b6(bool eaxbool)
{
  c_record* recoptrrg5;
  x8* bptrrg4;
  x8* bptrrg1;
  x16* pw_04;
  x8* pb_08;
  x16 vw_10;
  x16 vw_18;
  x16 vw_20;

  vw_20 = ddata.v1d3248;
  SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e0266);
  x16 wordrg4 = ddata.v1d3248;
  vw_18 = ulrshift(ddata.v1e03c8[wordrg4].w8, con(0x5), con(0xb));
  vw_10 = urshift(ddata.v1e03c8[wordrg4].w8, con(0xb));
  x8** hlpptr1 = ddata.v1e03cc[wordrg4];
  pb_08 = *hlpptr1;
  pw_04 = &ddata.v1e038c[ddata.v1e03d8[ddata.v1e03e4[wordrg4]]];
  x16 vw_14 = con(0x0);
  // M_49AC5
  for(;;)
  {
    if (vw_14 > vw_18)
    {
      SKW_CHANGE_CURRENT_MAP_TO(vw_20);
      return;
    }
    x16 vw_1c = con(0x0);
    // M_49AAA
    for (;; vw_1c++)
    {
      if (vw_1c > vw_10)
      {
        vw_14++;
        break;
      }
      bptrrg4 = pb_08;
      bool vbool_0c = urshift(unsignedword(*bptrrg4), con(0x5)) == con(0x0);
      bptrrg1 = bptrrg4++;
      pb_08 = bptrrg4;
      if ((*bptrrg1 & con(0x10)) != con(0x0))
      {
        x16 wordrg6 = *pw_04++;
        // M_49915 with continue-label M_49A94
        for (;; wordrg6 = SKW_GET_NEXT_RECORD_LINK(wordrg6))
        {
          x16 wordrg424 = urshift(wordrg6 & con(0x3c00), con(0xa));
          if (wordrg424 > con(0x3))
            break;
          if (wordrg424 != con(0x3))
          {
            if (wordrg424 == con(0x2))
            {
              recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
              if ((recoptrrg5->u2.w & con(0x6)) == con(0x2))
              {
                x16 wordrg133 = recoptrrg5->u2.w;
                if ((urshift(urshift(wordrg133, con(0x3)), con(0x8)) & con(0x1f)) == con(0x15) && eaxbool)
                {
                  if ((wordrg133 & con(0x1)) == con(0x0))
                  {
                    wordrg133 |= con(0x1);
                    recoptrrg5->u2.w = wordrg133;
                    x16 wordrg2 = SKW_RAND02();
                    SKW_ALLOC_NEW_CREATURE(unsignedword(CUTX8(urshift(recoptrrg5->u2.w, con(0x3)))), wordrg2, vw_14, con(0x7), vw_1c);
                  }
                }
              }
            }
            continue;
          }
          x16 wordrg7 = wordrg6;
          recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
          ui16 uwordrg405 = recoptrrg5->u2.w & con(0x7f);
          if (uwordrg405 < con(0x21))
            continue;
          if (uwordrg405 <= con(0x21))
          {
            if ((recoptrrg5->u4.w & con(0x18)) != con(0x18))
            {
              if (((recoptrrg5->u4.b.b0 & con(0x20)) == con(0x0)) == eaxbool)
                SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe)));
            }
            else
              SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), ((ulrshift(recoptrrg5->u4.w, con(0xa), con(0xf)) ^ (eaxbool ? 1 : 0)) == con(0x0)) ? 1 : 0);
            continue;
          }
          if (uwordrg405 == con(0x2c))
            if (eaxbool)
              if ((recoptrrg5->u4.w & con(0x1)) == con(0x1))
                SKW_TRY_ORNATE_NOISE(recoptrrg5, vw_14, vw_1c, wordrg7, SKW_GET_ORNATE_ANIM_LEN(recoptrrg5, vbool_0c), vbool_0c);
        }
      }
    }
  }
}

void SKW_ACTIVATE_ITEM_TELEPORT(c_tim* eaxptim, x16 ebxw, bool ecxbool, c_record* edxprec, bool argbool0, x16* argp1, bool argbool2, bool argbool3)
{
  s_x40bytes* ptrrg2;
  c_record* recoptrrg1;
  c_tim* ptim_00;
  s_x40bytes* ps_04;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_28;
  x16 vw_30;

  ptim_00 = eaxptim;
  x16 vw_20 = ebxw;
  bool vbool_0c = ecxbool;
  if (!argbool2)
  {
    vw_14 = unsignedword(ptim_00->u.b.b_06);
    vw_10 = unsignedword(ptim_00->u.b.b_07);
    vw_28 = unsignedword(ptim_00->v.b.b_08);
    vw_18 = ulrshift(edxprec->u6.w, con(0x5), con(0xb));
    vw_30 = urshift(edxprec->u6.w, con(0xb));
    vw_1c = ulrshift(edxprec->u6.w, con(0xa), con(0xe));
  }
  else
  {
    vw_14 = ulrshift(edxprec->u6.w, con(0x5), con(0xb));
    vw_10 = urshift(edxprec->u6.w, con(0xb));
    vw_28 = ulrshift(edxprec->u6.w, con(0xa), con(0xe));
    vw_18 = unsignedword(ptim_00->u.b.b_06);
    vw_30 = unsignedword(ptim_00->u.b.b_07);
    vw_1c = unsignedword(ptim_00->v.b.b_08);
  }
  if ((edxprec->u4.b.b0 & con(0x20)) != con(0x0) || ptim_00->v.b.b_09 != con(0x0))
  {
    if ((edxprec->u4.b.b0 & con(0x20)) == con(0x0))
      return;
    if (ptim_00->v.b.b_09 != con(0x1))
      return;
  }
  if (vw_20 == con(0xffffffff))
  {
    vw_20 = SKW_GET_TILE_RECORD_LINK(vw_14, vw_10);
    if (((SKW_GET_TILE_VALUE(vw_14, vw_10) & con(0xff)) >> con(0x5)) != con(0x0))
      vbool_0c = true;
  }
  x16 wordrg5 = vw_20;
  x16 vw_24 = con(0x0);
  for(;;)
  {
    if (wordrg5 == con(0xfffffffe))
      break;
    x16 wordrg11 = urshift(wordrg5 & con(0x3c00), con(0xa));
    if (wordrg11 >= con(0x5) && wordrg11 <= con(0xa) && (vbool_0c || urshift(wordrg5, con(0xe)) == vw_28))
      vw_24++;
    wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
  }
  x16 wordrg51 = vw_20;
  if (argbool0)
  {
    ptrrg2 = UPCAST(s_x40bytes, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x40)));
    ps_04 = ptrrg2;
    SKW_QUERY_CREATURES_ITEM_MASK(CUTX8(urshift(edxprec->u2.w, con(0x7))), ptrrg2, false, CUTX8(3 * ulrshift(edxprec->u4.w, con(0x5), con(0xc)) + con(0x10)));
  }
  for(;;)
  {
    if (wordrg51 == con(0xfffffffe))
      break;
    x16 wordrg23 = urshift(wordrg51 & con(0x3c00), con(0xa));
    x16 vw_2c = SKW_GET_NEXT_RECORD_LINK(wordrg51);
    if (vw_24 <= con(0x0) || wordrg23 < con(0x5) || wordrg23 > con(0xa) || (!vbool_0c && urshift(wordrg51, con(0xe)) != vw_28))
    {
      if (!argbool0)
      {
        if (wordrg23 == con(0x4))
        {
          recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg51);
          SKW_ACTIVATE_ITEM_TELEPORT(ptim_00, recoptrrg1->u2.w, vbool_0c, edxprec, argbool0, &recoptrrg1->u2.w, argbool2, argbool3);
        }
      }
      wordrg51 = vw_2c;
      continue;
    }
    vw_24--;
    x16 wordrg22 = SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg51);
    bool boolrg1;
    if (argbool0)
      boolrg1 = (((con(0x1) << (CUTX16(wordrg22) & con(0x7))) & ps_04->barr_00[signedlong(wordrg22) / 8]) != con(0x0));
    else if (wordrg22 != urshift(edxprec->u2.w, con(0x7)))
      boolrg1 = ((edxprec->u2.w & con(0xffffff80)) == con(0xffffff80));
    else if ((edxprec->u4.b.b0 & con(0x4)) != con(0x0) || SKW_QUERY_CLS1_FROM_RECORD(wordrg51) != con(0x15) || SKW_QUERY_CLS2_FROM_RECORD(wordrg51) != con(0x0))
      boolrg1 = true;
    else
    {
      x16 wordrg45 = wordrg51;
      wordrg51 = vw_2c;
      SKW_CUT_RECORD_FROM(wordrg45, (argp1 == NULL) ? vw_14 : con(0xffffffff), vw_10, argp1);
      SKW_DEALLOC_RECORD(wordrg45);
      SKW_BRING_CHAMPION_TO_LIFE(SKW_ADD_ITEM_CHARGE(wordrg45, con(0x0)));
      continue;
    }
    if (boolrg1)
    {
      SKW_MOVE_ITEM_TO(wordrg51, vw_14, vw_10, edxprec, vw_18, vw_30, vw_1c, argp1 != NULL, ulrshift(edxprec->u4.w, con(0xd), con(0xf)));
      if (argbool3)
        break;
    }
    wordrg51 = vw_2c;
  }
  if (argbool0)
    DM2_DEALLOC_LOBIGPOOL(con(0x40));
}

void SKW_MOVE_ITEM_TO(x16 eaxw, x16 ebxw, x16 ecxw, c_record* edxprec, x16 argw0, x16 argw1, x16 argw2, bool argbool3, x16 argw4)
{
  x16 wordrg5;
  x16 vw_00;

  wordrg5 = eaxw;
  if (SKW_QUERY_CLS1_FROM_RECORD(eaxw) != con(0x15) || SKW_QUERY_CLS2_FROM_RECORD(eaxw) != con(0x0))
  {
    ui16 uwordrg1 = ulrshift(edxprec->u4.w, con(0xb), con(0xe));
    if (uwordrg1 < con(0x1))
    {
      if (uwordrg1 == con(0x0))  // TODO again: what's left except 0 ?!?
        vw_00 = SKW_GET_MAX_CHARGE(wordrg5);
    }
    else if (uwordrg1 <= UI16CAST(con(0x1)))
      vw_00 = con(0xfffffff1);
    else if (uwordrg1 == con(0x2))
      vw_00 = SKW_RAND16(SKW_GET_MAX_CHARGE(wordrg5) + con(0x1));
    SKW_ADD_ITEM_CHARGE(wordrg5, signedlong(vw_00));
  }
  if (((SKW_GET_TILE_VALUE(argw0, argw1) & con(0xff)) >> con(0x5)) != con(0x0))
    argw2 = SKW_RAND16(con(0x4));
  if (ebxw >= con(0x0) && ecxw >= con(0x0))
    SKW_MOVE_RECORD_TO(wordrg5, ecxw, con(0xffffffff), ebxw, ((!argbool3) ? 1 : 0) - con(0x1));
  wordrg5 &= con(0xffff3fff);
  SKW_MOVE_RECORD_TO((argw2 << con(0xe)) | wordrg5, ((argw4 == con(0x0)) ? 1 : 0), argw0, con(0xffffffff), argw1);
}

void SKW_ACTIVATE_CREATURE_KILLER(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x16 argw2, x16 argw3)
{
  x16 wordrg5;
  x16 vw_04;
  x16 vw_10;

  x16 wordrg3 = ecxw;
  x16 wordrg2 = ebxw;
  vw_04 = edxw;
  x16 wordrg4 = DM2_ABS(wordrg2 - argw0);
  x16 wordrg111 = DM2_ABS(wordrg3 - argw1);
  wordrg2 -= wordrg4;
  argw0 = wordrg2;
  wordrg3 -= wordrg111;
  argw1 = wordrg3;
  wordrg5 = 2 * wordrg4 + con(0x1);
  x16 vw_08 = wordrg5;
  x16 vw_0c = 2 * wordrg111 + con(0x1);
  // M_46C93
  for(;;)
  {
    if (--vw_0c == con(0xffffffff))
      return;
    wordrg5 = vw_08;
    // M_46CA7
    for(;;)
    {
      wordrg5--;
      if (wordrg5 == con(0xffffffff))
        break;
      x16 wordrg100 = argw0 + wordrg5;
      if (wordrg100 < con(0x0) || wordrg100 >= ddata.savegamewa)
        continue;
      x16 wordrg3 = vw_0c;
      x16 wordrg40 = argw1 + wordrg3;
      if (wordrg40 < con(0x0) || wordrg40 >= ddata.savegamewb)
        continue;
      vw_10 = SKW_GET_CREATURE_AT(wordrg100, wordrg40);
      if (vw_10 == con(0xffffffff))
        continue;
      x16 vw_00 = vw_10;
      if (!SKW_1c9a_09b9(vw_10, vw_04))
        continue;
      if (argw2 != con(0xb))
      {
        if (argw2 == con(0x28))
        {
          x16 wordrg33;
          if (argw3 == con(0x0))
            wordrg33 = eaxw;
          else
            wordrg33 = eaxw | con(0x8000);
          SKW_ATTACK_CREATURE(vw_10, argw1 + vw_0c, wordrg33, argw0 + wordrg5, con(0x64), con(0x0));
        }
        continue;
      }
      if (eaxw < con(0x1))
      {
        if (eaxw != con(0x0))
          return;
        continue;
      }
      if (eaxw == con(0x1))
        continue;
      if (eaxw != con(0x2))
        return;
      SKW_13e4_0360(vw_00, argw1 + wordrg3, con(0x13), argw0 + wordrg5, true);
    }
  }
}

t_gfxdata* R_B073(t_gfxdata* eaxpg, x16 ebxw, x16 ecxw, x8 edxb, x16* argpw0)
{
  bool flag;
  t_gfxdata* pg_00;
  s_bpp* sptrrg41;
  s_bpp* sptrrg42;
  x8* bptrrg5;
  x8* bptrrg4;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x8 vb_28;

  pg_00 = eaxpg;
  vb_28 = edxb;
  vw_18 = ebxw;
  vw_14 = ecxw;
  if ((pg_00 == NULL) || (edxb == con(0x0)))
    return pg_00;
  vb_28 = CUTX8(DM2_MAX(con(0x0), con(0x40) - unsignedword(edxb)));
  vw_24 = *argpw0;
  bool vbool_08 = vw_24 <= con(0x0);
  flag = vw_24 > con(0x0);
  if (!flag)
  {
    vw_24 = con(0x100);
    *argpw0 = con(0x100);
    if (SKW_3e74_55f9(unsignedlong(vb_28) | ((unsignedlong(CUTX8(vw_18)) << con(0xe)) | con(0x60000000) | (unsignedlong(CUTX8(vw_14)) << con(0x6))), &vw_10))
    {
      SKW_COPY_MEMORY(DOWNCAST(t_gfxdata, SKW_3e74_5817(vw_10)), PAL256, DOWNCAST(t_gfxdata, pg_00));
      return pg_00;
    }
  }
  // M_B2F0
  for (x16 vw_0c = con(0x0); vw_0c < vw_24; vw_0c++)
  {
    x32 longrg47;
    x16 wordrg14;
    if (!vbool_08)
    {
      u_bbw* tmpp2 = UPCAST(u_bbw, &ddata.v1e0210[pg_00[vw_0c]]); // access on both bytes then
      vw_20 = unsignedword(tmpp2->b.b0);
      bptrrg5 = ddata.v1e020c[tmpp2->b.b0].pb1;
      wordrg14 = unsignedword(bptrrg5[tmpp2->b.b1]);
      longrg47 = unsignedlong(vb_28);
    }
    else
    {
      u_bbw* tmpp1 = UPCAST(u_bbw, &ddata.v1e0210[vw_0c]); // access on both bytes then
      vw_20 = unsignedword(tmpp1->b.b0);
      bptrrg5 = ddata.v1e020c[tmpp1->b.b0].pb1;
      longrg47 = unsignedlong(bptrrg5[tmpp1->b.b1]);
      wordrg14 = unsignedword(vb_28);
    }
    x16 wordrg6 = DM2_MAX(CUTX16((wordrg14 * longrg47) >> con(0x6)), con(0x0));
    x16 wordrg18 = con(0x0);
    vw_1c = unsignedword(ddata.v1e020c[vw_20].b0) - con(0x1);
    // M_B1FE
    for (; wordrg18 < vw_1c; wordrg18++) // TODO: ugly loopform
    {
      bptrrg4 = bptrrg5 + wordrg18;
      x16 wordrg31 = wordrg6 - unsignedword(*bptrrg4);
      if (wordrg31 < con(0x0))
        continue;
      x16 wordrg441 = unsignedword(*(bptrrg4 + con(0x1))) - wordrg6;
      if (wordrg441 < con(0x0))
        continue;
      if (wordrg31 > wordrg441)
        wordrg18++;
      break;
    }
    sptrrg41 = &ddata.v1e020c[vw_20];
    x8 byterg405 = sptrrg41->pb5[wordrg18];
    if (unsignedword(byterg405) == vw_18 || unsignedword(byterg405) == vw_14)
    {
      x16 wordrg32 = wordrg18 - con(0x1);
      x16 wordrg26 = wordrg18 + con(0x1);
      // M_B26B
      do
      {
        x16 wordrg17;
        if (wordrg32 < con(0x0))
          wordrg17 = wordrg26++;
        else
        {
          bool skip = false; // added
          if (wordrg26 <= vw_1c)
          {
            wordrg17 = wordrg6;
            if ((unsignedword(bptrrg5[wordrg26]) - wordrg6) < (wordrg6 - unsignedword(bptrrg5[wordrg32])))
            {
              wordrg17 = wordrg26++;
              skip = true;
            }
          }
          if (!skip)
          {
            wordrg17 = wordrg32;
            wordrg32--;
          }
        }
        sptrrg42 = &ddata.v1e020c[vw_20];
        byterg405 = sptrrg42->pb5[wordrg17];
      } while (unsignedword(byterg405) == vw_18 || unsignedword(byterg405) == vw_14);
    }
    pg_00[vw_0c] = byterg405;
  }
  if (vw_18 >= con(0x0))
    pg_00[vw_18] = CUTX8(vw_18);
  if (vw_14 >= con(0x0))
    pg_00[vw_14] = CUTX8(vw_14);
  if (vbool_08)
  {
    SKW_COPY_MEMORY(DOWNCAST(t_gfxdata, pg_00), PAL256, DOWNCAST(s_xmalloc, SKW_ALLOC_CPXHEAP_MEM(vw_10, con(0x100))));
    SKW_3e74_585a(vw_10, false);
  }
  return pg_00;
}

x16* SKW_OVERSEE_RECORD(x16* eaxpw, x16** ebxppw, FPTR_b_WPWP ecxf, x8 edxb, x16* argpw0, x16 argw1, x16 argw2)
{
  x16* wptrrg5;
  x16* wptrrg1;
  x8 vb_08;

  wptrrg5 = eaxpw;
  vb_08 = edxb;
  // M_C9AF: co-label M_CA7E
  for (;; wptrrg5 = &SKW_GET_ADDRESS_OF_RECORD(*wptrrg5)->w0)
  {
    if (*wptrrg5 == con(0xfffffffe) || *wptrrg5 == con(0xffffffff))
      return NULL;
    if (vb_08 != con(0xffffffff) && (urshift(*wptrrg5, con(0xe)) != unsignedword(vb_08)))
      continue;
    if (urshift(*wptrrg5 & con(0x3c00), con(0xa)) == con(0x4) && argw1 != con(0x0))
    {
      wptrrg1 = SKW_OVERSEE_RECORD(&SKW_GET_ADDRESS_OF_RECORD(*wptrrg5)->u2.w, ebxppw, ecxf, con(0xff), argpw0, argw1, argw2);
      if (wptrrg1 != NULL)
        return wptrrg1;
    }
    if ((argw2 != con(0x0)) && SKW_IS_CONTAINER_CHEST(*wptrrg5))
    {
      wptrrg1 = SKW_OVERSEE_RECORD(&SKW_GET_ADDRESS_OF_RECORD(*wptrrg5)->u2.w, ebxppw, ecxf, con(0xff), argpw0, argw1, argw2);
      if (wptrrg1 != NULL)
        return wptrrg1;
    }
    if (INDCALL(ecxf)(wptrrg5, argpw0))
    {
      *ebxppw = eaxpw;
      return wptrrg5;
    }
  }
}

// code doubled for some parts - obviously macros used
// spreaded:
// M_16F11, M_16F91, M_16F0B, M_16F6D, M_16F6F, M_170ED, M_1700F and M_16F74
// moved cases 3 and 18, so more code doubling avoided
// TODO: indexproblem inside
bool SKW_14cd_1316(x8 eaxb, x8 ebxb, x16 edxw)
{
  x8* bptrrg5;
  c_record* recoptrrg3;
  s_d556* sd5ptrrg1;
  x16* wptrrg2;
  x16 vw_0c;
  x16 vw_14;
  x8 vb_18; // and8

  vb_18 = eaxb;
  vw_0c = edxw;
  recoptrrg3 = ddata.s350.v1e054e;
  if ((vb_18 & con(0x40)) != con(0x0))
  {
    if (ebxb == ddata.s350.v1e0556->u.v.b12)
      return true;
    vb_18 &= con(0xffffffbf);
  }
  bool vbool_04 = (vb_18 & con(0xffffff80)) != con(0x0); // made a comparison, makes expressions easier
  vb_18 &= con(0x7f);
  bool vbool_00 = false; // ...solves a lot of silly expressions
  if (UI8CAST(vb_18) > UI8CAST(con(0x16)))
    return !vbool_04 == vbool_00;
  switch (vb_18)
  {
    case 0:
    return !vbool_04;

    case 1:
    case 22:
      if (unsignedword(ddata.s350.v1e0571) != ddata.v1e08d6)
        return !vbool_04 == vbool_00;
      if (SKW_CALC_VECTOR_DIR(ddata.v1e08d8, unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.v1e08d4) != ddata.v1e08da)
        return !vbool_04 == vbool_00;
      if (vb_18 == con(0x1))
        return !vbool_04;
      {
        x16 wordrg15 = SKW_CALC_SQUARE_DISTANCE(ddata.v1e08d8, unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.v1e08d4);
        if (wordrg15 <= con(0x1))
          return !vbool_04;
        if (wordrg15 > vw_0c || ddata.v1e0976 != con(0x0))
          return !vbool_04 == vbool_00;
      }
      if (SKW_19f0_0207(ddata.v1e08d8, unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.v1e08d4, R_1BA1B) == con(0x0))
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 2:
      {
        bool boolrg13;
        if (unsignedword(ddata.s350.v1e0571) != ddata.v1e08d6)
          boolrg13 = false;
        else
        {
          if (unsignedword(ddata.s350.v1e0562.u.b.b_06) != ddata.v1e08d8)
            boolrg13 = false;
          else
            boolrg13 = unsignedword(ddata.s350.v1e0562.u.b.b_07) == ddata.v1e08d4;
        }
        return !vbool_04 == boolrg13;
      }

    case 4:
    return !vbool_04 == (ddata.s350.v1e058d != con(0x0));

    case 5:
    case 13:
      if (unsignedword(ddata.s350.v1e0571) != urshift(recoptrrg3->uc.w, con(0xa)))
        return !vbool_04 == vbool_00;
      if (unsignedword(ddata.s350.v1e0562.u.b.b_06) != (recoptrrg3->uc.w & con(0x1f)))
        return !vbool_04 == vbool_00;
      if (unsignedword(ddata.s350.v1e0562.u.b.b_07) != ulrshift(recoptrrg3->uc.w, con(0x6), con(0xb)))
        return !vbool_04 == vbool_00;
      if (vb_18 != con(0xd))
        return !vbool_04;
    // no break here
    case 3:
      if (SKW_1c9a_0732(vw_0c, con(0xff), recoptrrg3->u2.w) == con(0xfffffffe))
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 6:
      if (((con(0x1) << CUTX8(vw_0c)) & unsignedlong(recoptrrg3->ua.w)) == con(0x0))
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 7:
      if (ddata.s350.v1e0571 != ddata.v1e08d6)
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 8:
      {
        x16 wordrg6 = con(0x0);
        for (;; wordrg6++)
        {
          if (wordrg6 >= con(0x4))
            return (!vbool_04) ? vbool_00 : !vbool_00;
          vw_14 = SKW_GET_PLAYER_AT_POSITION(wordrg6);
          if (vw_14 == con(0xffffffff))
            continue;
          x16 wordrg420 = ddata.hero[vw_14].warrc3[1];
          if (wordrg420 != con(0xffffffff) && SKW_1c9a_0006(wordrg420, con(0xb)) != con(0x0))
            return !vbool_04;
          x16 wordrg421 = ddata.hero[vw_14].warrc3[0];
          if (wordrg421 == con(0xffffffff))
            continue;
          if (SKW_1c9a_0006(wordrg421, con(0xb)) != con(0x0))
            return !vbool_04;
        }
      }
    // deadend

    case 9:
      if (SKW_2c1d_09d9() < vw_0c)
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 10:
      {
        if (unsignedword(ddata.s350.v1e0571) != ddata.v1e08d6)
          return !vbool_04 == vbool_00;
        bool boolrg1;
        if (unsignedword(ddata.s350.v1e0562.u.b.b_06) != ddata.v1e08d8)
          boolrg1 = true;
        else
          boolrg1 = unsignedword(ddata.s350.v1e0562.u.b.b_07) != ddata.v1e08d4;
        if (!boolrg1)
          return !vbool_04 == vbool_00;
        if ((DM2_ABS(unsignedword(ddata.s350.v1e0562.u.b.b_07) - ddata.v1e08d4) + DM2_ABS(unsignedword(ddata.s350.v1e0562.u.b.b_06) - ddata.v1e08d8)) > con(0x1))
          return !vbool_04 == vbool_00;
        x16 wordrg1 = SKW_CALC_VECTOR_DIR(unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.v1e08d8, ddata.v1e08d4, unsignedword(ddata.s350.v1e0562.u.b.b_07));
        vw_14 = unsignedword(SKW_GET_TILE_VALUE(ddata.v1e08d8 + table1d27fc[wordrg1], ddata.v1e08d4 + table1d2804[wordrg1]));
        if ((urshift(vw_14, con(0x5))) != con(0x2))
          return !vbool_04 == vbool_00;
        if ((vw_14 & con(0x8)) == con(0x0))
          return !vbool_04 == vbool_00;
        if ((vw_14 & con(0x1)) != con(0x0))
          return !vbool_04 == vbool_00;
      }
    return !vbool_04;

    case 11:
      vw_14 = (ulrshift(recoptrrg3->ue.w, con(0x6), con(0xe)) + con(0x2)) & con(0x3);
      if ((ddata.s350.v1e057a & con(0x20)) == con(0x0))
        return !vbool_04 == (vbool_00);
      if ((((SKW_GET_TILE_VALUE(unsignedword(ddata.s350.v1e0562.u.b.b_06) + table1d27fc[vw_14], unsignedword(ddata.s350.v1e0562.u.b.b_07) + table1d2804[vw_14]) & con(0xff)) >> con(0x5)) & con(0xff)) != con(0x4))
        return !vbool_04 == (vbool_00);
      if (!SKW_19f0_0d10(con(0x1), unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0xffffffff), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0xffffffff), vw_14))
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 12:
      {
        if (ddata.s350.v1e0571 != ddata.v1e08d6)
          return !vbool_04 == vbool_00;
        x16 wordrg12 = ulrshift(recoptrrg3->ue.w, con(0x6), con(0xe));
        x16 wordrg13 = SKW_GET_CREATURE_AT(unsignedword(ddata.s350.v1e0562.u.b.b_06) + table1d27fc[wordrg12], unsignedword(ddata.s350.v1e0562.u.b.b_07) + table1d2804[wordrg12]);
        if (wordrg13 == con(0xffffffff))
          return !vbool_04 == vbool_00;
        if ((SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(SKW_GET_ADDRESS_OF_RECORD(wordrg13)->u4.b.b0)->u0.b.b0 & con(0x1)) == con(0x0))
          return !vbool_04 == vbool_00;
        x16 wordrg61 = con(0x0);
        // M_174BA:
        for (;; wordrg61++)
        {
          if (wordrg61 >= con(0x4))
            return !vbool_04 == vbool_00;
          x16 vw_08 = ddata.v1e08d8 + table1d27fc[wordrg61];
          x16 wordrg2 = ddata.v1e08d4 + table1d2804[wordrg61];
          vw_14 = SKW_GET_TILE_VALUE(vw_08, wordrg2);
          if (urshift(vw_14, con(0x5)) != con(0x0) || (vw_14 & con(0x10)) == con(0x0))
            continue;
          x16 wordrg12 = SKW_GET_TILE_RECORD_LINK(vw_08, wordrg2);
          // M_1745D
          for(;;)
          {
            x16 wordrg418 = wordrg12;
            if (wordrg418 == con(0xfffffffe))
              break;
            vw_14 = urshift(wordrg418 & con(0x3c00), con(0xa));
            if (vw_14 == con(0x3))
            {
              if ((SKW_GET_ADDRESS_OF_RECORD(wordrg418)->u2.w & con(0x7f)) == con(0x3f))
                return !vbool_04;
            }
            // M_174A1:
            if (vw_14 > con(0x3))
              break;
            wordrg12 = SKW_GET_NEXT_RECORD_LINK(wordrg418);
          }
        }
      }
    // deadend here

    case 14:
      if (UI32CAST(52 * unsignedlong(recoptrrg3->u6.w) / unsignedlong(ddata.s350.v1e0552->w4)) > UI32CAST(signedlong(vw_0c)))
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 15:
      {
        x16 vw_10 = con(0x0);
        x16 wordrg62 = con(0x0);
        bptrrg5 = *ddata.savegamepp1;
        wptrrg2 = &ddata.v1e038c[*ddata.v1e03f4];
        // M_175B1
        for (x16 vw_08_1 = con(0x0); vw_08_1 < ddata.savegamewa; vw_08_1++)
        {
          // M_175A3 and cont-label M_175A2
          for (x16 wordrg3 = con(0x0); wordrg3 < ddata.savegamewb; wordrg3++)
          {
            // M_1753E
            if ((*bptrrg5++ & con(0x10)) != con(0x0))
            {
              x16 wordrg417 = *wptrrg2++;
              // M_1754C:
              for(;;)
              {
                if (urshift(wordrg417 & con(0x3c00), con(0xa)) != con(0x4))
                {
                  // M_17590:
                  wordrg417 = SKW_GET_NEXT_RECORD_LINK(wordrg417);
                  if (wordrg417 == con(0xfffffffe))
                    break;
                }
                else
                {
                  x16 wordrg11 = unsignedword(SKW_GET_ADDRESS_OF_RECORD(wordrg417)->u4.b.b0);
                  vw_14 = wordrg11;
                  if (wordrg11 != vw_0c)
                  {
                    // M_1757E:
                    if (wordrg11 == con(0x34) || wordrg11 == con(0x31))
                      // M_1758A:
                      vw_10++;
                  }
                  else
                    wordrg62++;
                  break;
                }
              }
            }
          }
        }
        if (wordrg62 >= DM2_MIN(con(0x4), vw_10 + con(0x1)))
          return (!vbool_04) ? vbool_00 : !vbool_00;
        return !vbool_04;
      }
    // deadend here

    case 16:
      if (unsignedword(ddata.s350.v1e0571) != urshift(recoptrrg3->uc.w, con(0xa)))
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 17:
      SKW_19f0_045a(unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07));
      if ((ddata.v1e08ae & con(0x10)) == con(0x0))
        return !vbool_04 == vbool_00;
      if (SKW_1c9a_1b16(vw_0c, signedword(recoptrrg3->w8)) != con(0x0))
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 19:
      if (((con(0x1) << CUTX8(vw_0c)) & recoptrrg3->ua.w) != con(0x0))
        return !vbool_04 == vbool_00;
      if (ddata.s350.v1e0571 == ddata.v1e0266)
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 20:
      if (((con(0x1) << CUTX8(vw_0c)) & unsignedlong(recoptrrg3->ua.w)) == con(0x0))
        return !vbool_04 == vbool_00;
      // no break here
    case 18:
      if (ddata.s350.v1e0571 != ddata.v1e0266)
        return !vbool_04 == vbool_00;
    return !vbool_04;

    case 21:
      sd5ptrrg1 = &ddata.s350.v1e0556[2 * signedlong(vw_0c) / 34]; // TODO: indexing correct? check edxw
      if ((sd5ptrrg1->u.v.w0e & con(0x1f)) != unsignedword(ddata.s350.v1e0562.u.b.b_06))
        return !vbool_04 == vbool_00;
      if (ulrshift(sd5ptrrg1->u.v.w0e, con(0x6), con(0xb)) != unsignedword(ddata.s350.v1e0562.u.b.b_07))
        return !vbool_04 == vbool_00;
      if (urshift(sd5ptrrg1->u.v.w0e, con(0xa)) != unsignedword(ddata.s350.v1e0571))
        return !vbool_04 == vbool_00;
    return !vbool_04;

    default: throw(THROW_DMABORT);
  }
}

bool SKW_075f_084d(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1)
{
  bool boolrg3;
  x16 wordrg5;
  c_record* recoptrrg5;
  c_record* recoptrrg7;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_14;
  x16 vw_18;

  vw_0c = eaxw;
  vw_08 = edxw;
  vw_04 = ebxw;
  x16 wordrg6 = argw1;
  boolrg3 = false;
  argw0 = (argw0 + con(0x2)) & con(0x3);
  vw_18 = SKW_GET_TILE_RECORD_LINK(vw_0c, vw_08);
  vw_14 = vw_18;
  recoptrrg7 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
  // M_7085
  for (;; vw_18 = SKW_GET_NEXT_RECORD_LINK(vw_18))
  {
    bool skip = false; // added
    x16 wordrg3;
    wordrg5 = vw_18;
    if (wordrg5 == con(0xfffffffe))
      break;
    x16 vw_10 = urshift(wordrg5, con(0xe));
    if (argw0 != vw_10)
      continue;
    x16 wordrg2;
    if (urshift(recoptrrg7->u2.w & con(0x3c00), con(0xa)) == con(0xf) || boolrg3 || SKW_0cee_317f(vw_14, wordrg5) == con(0x0) || SKW_RAND02() != con(0x0))
    {
      // M_7125
      if (urshift(vw_18 & con(0x3c00), con(0xa)) != con(0x3))
        continue;
      x16 wordrg407 = recoptrrg7->u2.w;
      if (urshift(wordrg407 & con(0x3c00), con(0xa)) == con(0xf))
        continue;
      recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(vw_18);
      x16 wordrg11 = recoptrrg5->u2.w;
      wordrg2 = urshift(wordrg11, con(0x7));
      wordrg11 &= con(0x7f);
      if (wordrg11 < con(0x22))
        continue;
      if (wordrg11 <= con(0x22))
      {
        x32 longrg10;
        // M_7192
        if (wordrg2 == con(0x1ff))
          longrg10 = con(0x1);
        else
        {
          if (wordrg2 != SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg407))
            longrg10 = con(0x0);
          else
            longrg10 = con(0x1);
        }
        longrg10 ^= unsignedlong(ulrshift(recoptrrg5->u4.w, con(0xa), con(0xf)));
        if (longrg10 == con(0x0))
          continue;
        x16 wordrg406;
        if ((recoptrrg5->u4.w & con(0x18)) != con(0x18))
        {
          wordrg406 = ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe));
          wordrg2 = con(0x0);
        }
        else
        {
          wordrg2 = con(0x0);
          wordrg406 = (longrg10 == con(0x0)) ? 1 : 0;
        }
        SKW_INVOKE_ACTUATOR(recoptrrg5, wordrg2, wordrg406);
        if ((boolrg3) || ((recoptrrg5->u4.b.b0 & con(0x4)) == con(0x0)))
          continue;
        wordrg3 = ecxw;
        wordrg2 = vw_04;
        SKW_CUT_RECORD_FROM(wordrg6, wordrg2, ecxw, NULL);
        wordrg6 &= con(0xffff3fff);
        wordrg6 |= argw0 << con(0xe);
      }
      else
      {
        if (wordrg11 != con(0x23))
          continue;
        if (boolrg3 || (wordrg2 != con(0x1ff) && wordrg2 != SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg407)))
          continue;
        wordrg2 = vw_04;
        SKW_CUT_RECORD_FROM(wordrg6, wordrg2, ecxw, NULL);
        x16 wordrg405 = urshift(recoptrrg5->u6.w, con(0xb));
        x8 byterg11 = (SKW_GET_TILE_VALUE(ulrshift(recoptrrg5->u6.w, con(0x5), con(0xb)), wordrg405) & con(0xff)) >> con(0x5);
        wordrg6 &= con(0x3fff);
        x16 wordrg155;
        if (byterg11 != con(0x0))
          wordrg155 = ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe));
        else
          wordrg155 = ulrshift(recoptrrg5->u6.w, con(0xa), con(0xe));
        wordrg6 |= wordrg155 << con(0xe);
        wordrg3 = urshift(recoptrrg5->u6.w, con(0xb));
        wordrg2 = ulrshift(recoptrrg5->u6.w, con(0x5), con(0xb));
        skip = true;
      }
    }
    else
    {
      wordrg3 = ecxw;
      wordrg2 = vw_04;
      wordrg5 = wordrg6;
      SKW_CUT_RECORD_FROM(wordrg5, wordrg2, ecxw, NULL);
      x16 wordrg11 = vw_10 << con(0xe);
      wordrg5 &= con(0x3fff);
      wordrg11 |= wordrg5;
      wordrg6 = wordrg11;
    }
    // M_7112
    if (!skip)
    {
      wordrg3 = vw_08;
      wordrg2 = vw_0c;
    }
    // M_72EB
    SKW_DELETE_MISSILE_RECORD(wordrg6, wordrg2, wordrg3, NULL);
    boolrg3 = true;
  }
  return boolrg3;
}

x16 SKW_RECYCLE_A_RECORD_FROM_THE_WORLD(x16 eaxw, x8 edxb)
{
  x16 wordrg6;
  c_record* recoptrrg1;
  c_record* recoptrrg4;
  c_record* recoptrrg7;
  bool vbool_04;
  x16* pw_10;
  x8* pb_14;
  bool vbool_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x16 vw_28;
  x16 vw_2c;
  x16 vw_30;
  x16 vw_34;
  x8 vb_38;
  x8 vb_3c;

  ui16 uwordrg5 = eaxw;
  vb_38 = edxb;
  if (uwordrg5 == con(0xf))
    return con(0xffff);
  vw_28 = ddata.v1d3248;
  x16 wordrg2 = !ddata.v1e0234 ? con(0xffffffff) : ddata.v1e027c;
  vbool_18 = false;
  vw_34 = vw_30 = unsignedword(ddata.v1e0426[uwordrg5]);
  if (ddata.v1e0426[vw_30] == ddata.v1e0266 || vw_30 == wordrg2)
  {
    if (wordrg2 == con(0xffffffff))
    {
      do
      {
        vw_30++;
        if (vw_30 >= unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)])))
          vw_30 = con(0x0);
      } while (vw_30 == ddata.v1e0266);
      if (vw_30 == vw_34)
        vw_30 = ddata.v1e0266;
    }
    else
    {
      do
      {
        vw_30++;
        if (vw_30 >= unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)])))
          vw_30 = con(0x0);
        if (vw_30 == vw_34)
        {
          vw_30 = wordrg2;
          wordrg2 = con(0xffffffff);
        }
      } while (vw_30 == wordrg2 || vw_30 == ddata.v1e0266);
    }
  }
  vw_34 = vw_30;
  wordrg6 = con(0x0);
  vbool_04 = false;
  for(;;)
  {
    vw_2c = ulrshift(ddata.v1e03c8[vw_30].w8, con(0x5), con(0xb));
    vw_1c = urshift(ddata.v1e03c8[vw_30].w8, con(0xb));
    pb_14 = *(ddata.v1e03cc[vw_30]);
    pw_10 = &ddata.v1e038c[ddata.v1e03d8[ddata.v1e03e4[vw_30]]];
    vw_24 = con(0x0);
    // loop M_DD72
    while (vw_24 <= vw_2c)
    {
      // M_DD5B, co-label M_DD5A
      for (x16 wordrg3 = con(0x0);; wordrg3++)
      {
        if (wordrg3 > vw_1c)
          break;
        if ((*pb_14++ & con(0x10)) == con(0x0))
          continue; // loop M_DD5B
        vb_3c = con(0xffffffff);
        wordrg6 = *pw_10;
        pw_10++;
        bool boolrg1;
        if (vw_30 != ddata.v1e0266)
          boolrg1 = false;
        else
        {
          if ((vw_24 - ddata.v1e0270 + con(0x5)) > con(0xa))
            boolrg1 = false;
          else
          {
            if ((wordrg3 - ddata.v1e0272 + con(0x5)) > con(0xa))
              boolrg1 = false;
            else
              boolrg1 = true;
          }
        }
        bool vbool_0c = boolrg1;
        // loop M_DA34:
        for(;;)
        {
          bool farbreak = false;
          x16 wordrg41 = urshift(wordrg6 & con(0x3c00), con(0xa));
          bool doit = false;
          if (wordrg41 != con(0x3))
          {
            if (wordrg41 != con(0x2))
            {
              if (wordrg41 <= con(0x3) || !vbool_0c)
              {
                if (wordrg41 != uwordrg5)
                {
                  if (wordrg41 != con(0x4))
                    ;
                  else if (uwordrg5 == con(0xe))
                    ;
                  else
                  {
                    recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
                    if (recoptrrg4->u2.w != con(0xfffffffe))
                    {
                      if ((SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg4->u4.b.b0)->u0.b.b0 & con(0x1)) != con(0x0))
                      {
                        vbool_04 = true;
                        vw_20 = wordrg6;
                        wordrg6 = recoptrrg4->u2.w;
                        continue; // loop M_DA34
                      }
                    }
                  }
                }
                else
                {
                  bool dodc51 = false;
                  bool dodc7c = false;
                  recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
                  recoptrrg7 = recoptrrg1;
                  if (uwordrg5 < con(0x6))
                  {
                    if (uwordrg5 < con(0x4))
                      goto M_exit;
                    if (uwordrg5 > con(0x4))
                      dodc51 = true;
                    else
                    {
                      if ((recoptrrg1->ue.b.b1 & con(0x4)) == con(0x0))
                      {
                        if (recoptrrg1->u2.w == con(0xfffffffe))
                        {
                          if (vb_38 == con(0xffffffff) || vb_38 == recoptrrg7->u4.b.b0)
                          {
                            SKW_CHANGE_CURRENT_MAP_TO(vw_30);
                            SKW_DELETE_CREATURE_RECORD(vw_24, con(0x1), con(0xffffffff), wordrg3);
                            goto M_exit;
                          }
                        }
                      }
                    }
                  }
                  else if (uwordrg5 <= con(0x6))
                    dodc51 = true;
                  else if (uwordrg5 < con(0xa))
                  {
                    if (uwordrg5 != con(0x8))
                      goto M_exit;
                    if ((recoptrrg1->u2.b.b1 & con(0xffffff80)) != con(0x0))
                      doit = true;
                    else
                    {
                      wordrg41 = urshift(2 * recoptrrg1->u2.w, con(0x9));
                      dodc7c = true;
                    }
                  }
                  else if (uwordrg5 <= con(0xa))
                    dodc51 = true;
                  else if (uwordrg5 != con(0xe))
                    goto M_exit;
                  else if (vb_38 == con(0xffffffff) || SKW_QUERY_CLS2_FROM_RECORD(recoptrrg1->u2.w) == vb_38)
                  {
                    SKW_075f_056c(wordrg6);
                    x16 vw_08 = wordrg3;
                    x16 vw_00 = vw_24;
                    SKW_CUT_RECORD_FROM(wordrg6, vw_00, vw_08, NULL);
                    SKW_DELETE_MISSILE_RECORD(wordrg6, vw_00, vw_08, NULL);
                    goto M_exit;
                  }
                  if (dodc51)
                  {
                    if ((recoptrrg1->u2.b.b0 & con(0xffffff80)) == con(0x0))
                    {
                      wordrg41 = recoptrrg1->u2.w & con(0x7f);
                      dodc7c = true;
                    }
                  }
                  if (dodc7c)
                  {
                    if (CUTX8(wordrg41) != vb_3c)
                    {
                      if (vb_38 == con(0xffffffff) || CUTX8(wordrg41) == vb_38)
                      {
                        SKW_CHANGE_CURRENT_MAP_TO(vw_30);
                        SKW_MOVE_RECORD_TO(wordrg6, wordrg3, con(0xffffffff), vw_24, unsignedword(!vbool_04 ? 1 : 0) - con(0x1));
                        goto M_exit;
                      }
                    }
                    else
                      vb_3c = con(0xffffffff);
                  }
                }
              }
              doit = true;
            }
            else
            {
              recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
              if ((recoptrrg1->u2.w & con(0x6)) != con(0x2))
                doit = true;
              else
              {
                if ((urshift(urshift(recoptrrg1->u2.w, con(0x3)), con(0x8)) & con(0x1f)) != con(0x4))
                  doit = true;
              }
            }
          }
          else
          {
            recoptrrg7 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
            x16 wordrg42 = recoptrrg7->u2.w & con(0x7f);
            if (wordrg42 >= con(0x2c) || table1d324c[wordrg42] == con(0x0))
            {
              if (vbool_18)
              {
                if (vbool_0c)
                {
                  if (wordrg42 == con(0x30))
                  {
                    vbool_0c = false;
                    x16 wordrg43 = urshift(recoptrrg7->u2.w, con(0x7));
                    if (SKW_GET_ITEMDB_OF_ITEMSPEC_ACTUATOR(wordrg43) == uwordrg5)
                      vb_3c = SKW_GET_ITEMTYPE_OF_ITEMSPEC_ACTUATOR(wordrg43);
                  }
                }
              }
              doit = true;
            }
          }
          for(;;)
          {
            if (doit)
            {
              wordrg6 = SKW_GET_NEXT_RECORD_LINK(wordrg6);
              if (wordrg6 != con(0xfffffffe))
                break;
            }
            if (!vbool_04)
            {
              farbreak = true;
              break;
            }
            wordrg6 = vw_20;
            vbool_04 = false;
          }
          if (farbreak)
            break;
        } // loop M_DA34
      }
      vw_24++;
    }
    if (vw_30 == ddata.v1e0266 || CUTX8(ddata.savegamep4->w0[con(0x2)]) <= con(0x1))
    {
      if (vbool_18)
      {
        ddata.v1e0426[uwordrg5] = CUTX8(vw_30);
        return con(0xffff);
      }
      vbool_18 = true;
    }
    else
    {
      if (wordrg2 == con(0xffffffff))
      {
        do
        {
          vw_30++;
          if (vw_30 >= unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)])))
            vw_30 = con(0x0);
        } while (vw_30 == ddata.v1e0266);
        if (vw_30 == vw_34)
          vw_30 = ddata.v1e0266;
      }
      else
      {
        do
        {
          vw_30++;
          if (vw_30 >= unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)])))
            vw_30 = con(0x0);
          if (vw_30 == vw_34)
          {
            vw_30 = wordrg2;
            wordrg2 = con(0xffffffff);
          }
        } while (vw_30 == wordrg2 || vw_30 == ddata.v1e0266);
      }
    }
  }
  // deadend here

M_exit:
  SKW_CHANGE_CURRENT_MAP_TO(vw_28);
  ddata.v1e0426[uwordrg5] = CUTX8(vw_30);
  return wordrg6 & con(0xffff3fff);
}

x8 SKW_0aaf_02f8(x8 eaxb, x8 edxb)
{
  ui16 uwordrg5;
  t_text* tptrrg2;
  t_text* tptrrg1;
  s_tww* mptrrg5;
  t_gfxdata* gptrrg1;
  t_gfxdata* gptrrg3;
  t_gfxdata* gptrrg4;
  t_gfxdata* gptrrg6;
  t_text t_00[0x320];
  t_text t_320[0x80];
  t_text t_3a0[0x80];
  t_text* tpa_420[0x14];
  t_text t_470[0x3c];
  s_tww v_4ac[0x2];
  c_rect rc_4bc;
  // TODO rest of the sequence a bit critical
  x16 vwa_4c4[0x2];
  x16 vw_4cc;
  x16 vw_4d4;
  x16 vw_4d8;
  x8 vb_4dc;
  x8 vb_4e0;
  x8 vb_4e4;

  vb_4e0 = eaxb;
  vb_4dc = edxb;
  bool vbool_4c8;
  if ((eaxb == con(0xe) || eaxb == con(0xffffff87)) && vb_4dc != con(0x0))
    vbool_4c8 = false;
  else
    vbool_4c8 = true;
  if (vb_4e0 == con(0x7) || vb_4e0 == con(0x13))
    if (SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x1a), con(0x1), con(0x0), con(0x59)))
      vb_4e0 = con(0x59);
  if (vb_4dc != con(0x0) && vb_4e0 != con(0x0) && vb_4e0 != con(0xe))
    if (SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x1a), con(0x1), con(0x0), con(0x0)))
    {
      SKW_0aaf_0067(SKW_0aaf_02f8(con(0x0), vb_4dc));
      vb_4dc = con(0x0);
    }
  if (vbool_4c8)
    SKW_FIRE_FADE_SCREEN(true);
  uwordrg5 = con(0x0);
  vb_4e4 = con(0x0);
  while (UI8CAST(vb_4e4) < UI8CAST(con(0x14)))
  {
    x16 wordrg6 = uwordrg5;
    tptrrg1 = SKW_QUERY_GDAT_TEXT(con(0x1a), vb_4e4, &t_00[40 * wordrg6], vb_4e0);
    tpa_420[wordrg6] = tptrrg1;
    if (*tptrrg1 != NULLBYTE)
      uwordrg5++;
    vb_4e4++;
  }
  bool opt = false; // added
  if (!ddata.v1e0a88)
    opt = true;
  else if (!dm2_dballochandler.gfxalloc_done)
  {
    if ((((unsignedlong(ddata.vx1d270c) * UI32CAST(((ddata.vx1d270a + con(0x1)) & con(0xfffffffe)) >> con(0x1))) & con(0xffff)) + con(0x1e)) > dm2_allochandler.bigpool_available)
      opt = true;
  }
  if (opt)
  {
    SKW_SET_ORIGIN_RECT(&rc_4bc, ddata.vx1d270a, ddata.vx1d270c);
    SKW_FIRE_FILL_BACKBUFF_RECT(&rc_4bc, ddata.paletteptr1[con(0x1)]);
    SKW_INFLATE_RECT(&rc_4bc, con(0xfffffff6), con(0xfffffff6));
    SKW_FIRE_FILL_BACKBUFF_RECT(&rc_4bc, ddata.paletteptr1[con(0x5)]);
    x16 wordrg64;
    if (uwordrg5 < UI16CAST(con(0x3)))
      wordrg64 = con(0x0);
    else if (uwordrg5 <= UI16CAST(con(0x3)))
      wordrg64 = con(0x1);
    else if (uwordrg5 == con(0x4))
      wordrg64 = uwordrg5;
    else
      wordrg64 = con(0x0);
    x16 wordrg31 = con(0x0);
    x16 wordrg11;
    while (wordrg11 = wordrg31, wordrg11 < uwordrg5)
    {
      wordrg11 += wordrg64;
      SKW_0aaf_01db(table1d27c4[wordrg11], false);
      wordrg31++;
    }
  }
  else
  {
    gptrrg1 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x1a), con(0x0), vb_4e0);
    gptrrg4 = gptrrg1;
    gptrrg6 = gptrrg1;
    if (!dm2_dballochandler.gfxalloc_done)
      gptrrg3 = &gptrrg4[SKW_CALC_IMAGE_BYTE_LENGTH(gptrrg1)];
    else
      gptrrg3 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x1a), con(0x0), vb_4e0);
//                               srcbmp                     palette
    SKW_DRAW_DIALOGUE_PARTS_PICT(gptrrg6, con(0xffffffff), gptrrg3, SKW_QUERY_EXPANDED_RECT(con(0x4), &rc_4bc));
    gptrrg1 = gptrrg6;
    SKW_FREE_PICT_ENTRY(gptrrg6);
  }
  SKW_DRAW_VP_RC_STR(con(0x1c2), v1d1044, unsignedword(ddata.paletteptr1[con(0xc)]));
  if (uwordrg5 >= con(0x2))
    vw_4d8 = con(0x1d7);
  else
    vw_4d8 = con(0x1d5);
  x16 wordrg63;
  if (uwordrg5 < UI16CAST(con(0x3)))
  {
    if (uwordrg5 != con(0x2))
      wordrg63 = con(0x0);
    else
      wordrg63 = con(0x1);
  }
  else if (uwordrg5 <= UI16CAST(con(0x3)))
    wordrg63 = con(0x3);
  else if (uwordrg5 == con(0x4))
    wordrg63 = con(0x6);
  else
    wordrg63 = con(0x0);
  x16 wordrg32 = con(0x0);
  x16 wordrg11;
  while (wordrg11 = wordrg32, wordrg11 < uwordrg5)
  {
    tptrrg2 = tpa_420[wordrg11];
    wordrg11 += signedlong(wordrg63);
    SKW_DRAW_VP_RC_STR(table1d27d4[wordrg11], tptrrg2, unsignedword(ddata.paletteptr1[con(0xb)]));
    wordrg32++;
  }
  if (vb_4e0 != con(0xffffff87))
  {
    SKW_QUERY_EXPANDED_RECT(vw_4d8, &rc_4bc);
    vw_4d4 = (rc_4bc.w);
    vw_4cc = (rc_4bc.h);
    if (vb_4dc == con(0x0) || vb_4e0 != con(0x0))
    {
      vwa_4c4[0x0] = unsignedword(ddata.paletteptr1[con(0xb)]);
      v_4ac[0x0].tp_00 = SKW_QUERY_GDAT_TEXT(con(0x1a), con(0x14), t_320, vb_4e0);
      if (vb_4dc == con(0x0))
        tptrrg1 = NULL;
      else
      {
        vwa_4c4[0x1] = unsignedword(ddata.paletteptr1[con(0xf)]);
        tptrrg1 = SKW_QUERY_GDAT_TEXT(con(0x1a), vb_4dc, t_3a0, con(0x0));
      }
      v_4ac[0x1].tp_00 = tptrrg1;
    }
    else
    {
      vwa_4c4[0x0] = unsignedword(ddata.paletteptr1[con(0xf)]);
      v_4ac[0x0].tp_00 = SKW_QUERY_GDAT_TEXT(con(0x1a), vb_4dc, t_320, vb_4e0);
      v_4ac[0x1].tp_00 = NULL;
    }
    x16 wordrg62 = con(0x0);
    mptrrg5 = v_4ac;
    for (x16 vw_4d0 = con(0x0); vw_4d0 < con(0x2); vw_4d0++, mptrrg5++)
    {
      tptrrg1 = mptrrg5->tp_00;
      if (tptrrg1 != NULL)
      {
        C_strmetrics.SKW_QUERY_STR_METRICS(tptrrg1, OO mptrrg5->w_06, OO mptrrg5->w_04);
        x16 wordrg111 = vw_4d4;
        x16 wordrg2 = wordrg111 - wordrg111 / 8;
        x16 wordrg406 = signedlong(mptrrg5->w_04);
        if (wordrg406 > wordrg2)
        {
          wordrg111 += wordrg111 / 4;
          if (wordrg406 >= wordrg111)
            mptrrg5->w_04 = vw_4d4;
          else
          {
            wordrg406 -= wordrg406 / 4;
            mptrrg5->w_04 = wordrg406;
          }
        }
        vw_4d8 = con(0x0);
        for(;;)
        {
          tptrrg1 = mptrrg5->tp_00;
          if (tptrrg1[vw_4d8] == NULLBYTE)
            break;
          SKW_3929_04e2(tptrrg1, &vw_4d8, mptrrg5->w_04, t_470);
          wordrg62 += 2 * ddata.v1d2736 + mptrrg5->w_06 - C_strmetrics.yofs + con(0x1);
          if (mptrrg5->tp_00[vw_4d8] == con(0xa))
          {
            vw_4d8++;
          }
        }
      }
    }
    if (wordrg62 != con(0x0))
    {
      x16 wordrg61 = rc_4bc.y + DM2_MAX(con(0x0), C_strmetrics.height + (vw_4cc - (wordrg62 - 2 * ddata.v1d2736)) / 2 - con(0x1));
      mptrrg5 = v_4ac;
      for (x16 vw_4d0_1 = con(0x0); vw_4d0_1 < con(0x2); vw_4d0_1++, mptrrg5++)
      {
        if (mptrrg5->tp_00 != NULL)
        {
          vw_4d8 = con(0x0);
          for(;;)
          {
            tptrrg1 = mptrrg5->tp_00;
            if (tptrrg1[vw_4d8] == NULLBYTE)
              break;
            SKW_DRAW_VP_STR((ddata.vx1d270a - SKW_3929_04e2(tptrrg1, &vw_4d8, mptrrg5->w_04, t_470)) / 2, vwa_4c4[vw_4d0_1], t_470, wordrg61);
            wordrg61 += ddata.strxplus + ddata.v1d2736;
            if (mptrrg5->tp_00[vw_4d8] == con(0xa))
              vw_4d8++;
          }
        }
      }
    }
  }
  if (vbool_4c8)
  {
    SKW_DRAW_GAMELOAD_DIALOGUE_TO_SCREEN();
    SKW_FIRE_FADE_SCREEN(false);
  }
  ddata.backbuff2 = con(0x1);
  return vb_4e0;
}

// was SKW_3df7_014d
void SKW_UPDATE_WEATHER(bool eaxbool)
{
  x16 wordrg5;
  s_8wordarray vs_00;
  c_5bytes vs_10;
  s_xabytes* psxa_1c;
  x16 vw_28;
  bool flag;

  ddata.v1e147f = table1d6b76[4 * ddata.v1e1472 + 0x70];
  if (eaxbool)
  {
    x32 longrg15 = unsignedlong(++ddata.v1e147b);
    if (longrg15 <= con(0x1f))
    {
      ddata.v1e146e = ddata.v1e1474;
      ddata.v1e1474 += ddata.v1e1484 * signedword(ddata.v1d7108[(unsignedlong(ddata.v1e1478) << con(0x5)) + longrg15]);
      ddata.v1e1474 = DM2_BETWEEN_VALUE(con(0x0), con(0xff), ddata.v1e1474);
      SKW_SET_TIMER_WEATHER(SKW_RAND16(con(0x100)) + con(0x32));
    }
    else
      SKW_3df7_0037(false);
    return;
  }
  if (UI32CAST(ddata.longmallocx) >= UI32CAST(ddata.longv1e1434))
  {
    ddata.v1e1476 = signedword(table1d70f0[((ddata.longmallocx + ddata.longv1e1438) / con(0x555)) % con(0x18)]);
    ddata.longv1e1434 = ddata.longmallocx + con(0x555);
    if (ddata.v1e147f != con(0x0))
      SKW_RECALC_LIGHT_LEVEL();
  }
  vw_28 = con(0x0);
  if (ddata.v1e1474 == con(0x0))
  {
    if (UI8CAST(ddata.v1e147d) > con(0x0))
      if ((ddata.longmallocx % con(0x3)) == con(0x0))
        ddata.v1e147d--;
    vw_28 = (SKW_RAND16(con(0x40)) == con(0x0)) ? 1 : 0;
    ddata.v1e1482 = con(0x0);
    ddata.v1e147e = con(0x1);
  }
  else
  {
    x16 wordrg21 = con(0x100) - ddata.v1e1474 + (CUTX16(SKW_RAND()) & con(0xf));
    wordrg5 = (ddata.v1e1474 < con(0xcd)) ? con(0x7) : con(0x28);
    x8 byterg11 = CUTX8(ddata.v1e1474);
    ddata.v1e147e = byterg11;
    if (ddata.v1e1482 == con(0x0))
      byterg11 = (SKW_RAND16(wordrg21) <= con(0x7)) ? 1 : 0;
    ddata.v1e1482 = byterg11;
    if (ddata.v1e1482 != con(0x0))
    {
      ui32 ulongrg1 = unsignedlong(ddata.v1e147d);
      if (ulongrg1 < con(0xff)) // TODO: being casted unsigned long, less 0xff means != 0xff
      {
        ulongrg1++; // was RG1Blo++ only
        if (ddata.v1e1482 < con(0x80) && (ddata.v1e1482 < con(0x40) || ((CUTLX8(ddata.longmallocx) & con(0x1)) != con(0x0))))
        {
          if ((ddata.v1e1482 >= con(0x10) && ((ddata.longmallocx % con(0x3)) == con(0x0))) || ((CUTLX8(ddata.longmallocx) & con(0x3)) == con(0x0)))
            ddata.v1e147d++;
        }
        else
          ddata.v1e147d = CUTX8(ulongrg1);
      }
    }
    if (ddata.v1e1481 != con(0x0))
    {
      x16 wordrg406 = SKW_RAND16(wordrg21);
      vw_28 = (wordrg406 <= wordrg5) ? 1 : 0;
    }
  }
  if (ddata.v1e147f == con(0x0))
    return;
  if (ddata.v1e024c)
  {
    ddata.v1e024c = false;
    SKW_RECALC_LIGHT_LEVEL();
  }
  psxa_1c = ddata.v1e143c;
  if (ddata.v1e147a != con(0x0))
  {
    x16 wordrg105 = unsignedword(ddata.v1e147e);
    if (wordrg105 >= con(0x10))
    {
      if (wordrg105 < con(0x80))
      {
        if (wordrg105 < con(0x40))
          ddata.v1e143c[0x0].b0 = con(0x67);
        else
          ddata.v1e143c[0x0].b0 = con(0x68);
      }
      else
      {
        ddata.v1e1480 = con(0x1);
        ddata.v1e143c[0x0].b0 = con(0x69);
      }
      if (SKW_RETRIEVE_ENVIRONMENT_CMD_CD_FW(psxa_1c))
        psxa_1c++;
    }
  }
  if (ddata.v1e1479 != con(0x0))
  {
    x16 wordrg104 = unsignedword(ddata.v1e147d);
    if (wordrg104 >= con(0x40))
    {
      if (wordrg104 < con(0xc0))
      {
        if (wordrg104 < con(0x80))
          psxa_1c->b0 = con(0x6a);
        else
          psxa_1c->b0 = con(0x6b);
      }
      else
        psxa_1c->b0 = con(0x6c);
      if (SKW_RETRIEVE_ENVIRONMENT_CMD_CD_FW(psxa_1c))
        psxa_1c++;
    }
  }
  if (vw_28 != con(0x0))
  {
    vw_28 = con(0x0);
    bool vbool_18 = ddata.v1e1474 < con(0xb6);
    if (vbool_18)
      SKW_UPDATE_GLOB_VAR(con(0x40), con(0x6), false);
    x16 vw_2c = con(0x0);
    if (SKW_RAND16(ddata.v1e1474 + con(0x1)) >= con(0x3c))
    {
      vw_2c = (CUTX16(SKW_RAND()) & con(0x7)) + con(0x1);
      x16 wordrg110 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x6c), ddata.v1d6c02);
      if (wordrg110 == con(0x0))
      {
        for(;;)
        {
          bool pass = false; // added
          x16 wordrg405 = SKW_RAND16(con(0x20));
          x16 wordrg6 = wordrg405;
          wordrg5 = SKW_RAND16(con(0x20));
          if (wordrg405 >= con(0x0) && wordrg405 < ddata.savegamewa)
          {
            if (wordrg5 >= con(0x0) && wordrg5 < ddata.savegamewb)
            {
              SKW_SUMMARIZE_STONE_ROOM(&vs_00, wordrg6, wordrg5, con(0x0));
              if (vs_00.warr_00[0x0] == con(0x1))
              {
                if (!SKW_GET_TELEPORTER_DETAIL(&vs_10, wordrg5, wordrg6))
                {
                  if (ddata.v1e0266 != ddata.v1d3248 || wordrg6 != ddata.v1e0270 || wordrg5 != ddata.v1e0272 || ((ddata.v1e1474 >= con(0xb6) && (UI32CAST(ddata.longmallocx) >= UI32CAST(con(0x2ee0)))) && SKW_GET_GLOB_VAR(con(0x40)) > ddata.v1e1470))
                  {
                    x16 wordrg182 = SKW_GET_CREATURE_AT(wordrg6, wordrg5);
                    if (wordrg182 != con(0xffffffff))
                    {
                      if (SKW_QUERY_CREATURE_AI_SPEC_FROM_TYPE(wordrg182)->b2 == con(0xffffffff))
                        pass = true;
                      else
                      {
                        x16 wordrg181 = SKW_CALC_SQUARE_DISTANCE(ddata.v1e0270, wordrg6, wordrg5, ddata.v1e0272);
                        if (wordrg181 > con(0x2))
                        {
                          if (wordrg181 > con(0x3))
                            pass = true;
                          else if (ddata.v1e0258 != SKW_CALC_VECTOR_DIR(ddata.v1e0270, wordrg6, wordrg5, ddata.v1e0272))
                            pass = true;
                        }
                      }
                    }
                    if (!pass)
                    {
                      SKW_CREATE_CLOUD(con(0xffb0), wordrg6, wordrg5, ddata.v1e1474, con(0xff));
                      if ((ddata.v1e0976 != con(0x0) || ddata.v1e0238) && !vbool_18)
                        if (SKW_CALC_SQUARE_DISTANCE(ddata.v1e0270, wordrg6, wordrg5, ddata.v1e0272) <= con(0x3))
                          if (ddata.v1e0258 == SKW_CALC_VECTOR_DIR(ddata.v1e0270, wordrg6, wordrg5, ddata.v1e0272))
                            SKW_UPDATE_GLOB_VAR(con(0x41), con(0x3), true);
                      break;
                    }
                  }
                }
              }
            }
          }
          vw_2c--;
          flag = vw_2c != con(0x0);
          if (!flag)
            break;
        }
      }
      else
      {
        wordrg5 = wordrg110 & con(0xff);
        x16 wordrg61 = urshift(wordrg110, con(0x8));
        SKW_INVOKE_MESSAGE(wordrg61, con(0x0), con(0x0), wordrg5, ddata.longmallocx + con(0x1));
        SKW_QUEUE_NOISE_GEN2(con(0xd), con(0x81), con(0xfe), con(0x30), wordrg61, wordrg5, con(0x1), con(0x6c), SKW_RAND16(con(0x20)) + con(0x80)); // BUGFIX 2/2014
      }
    }
    if (vw_2c == con(0x0) && SKW_RAND01() != con(0x0))
    {
      psxa_1c->b0 = CUTX8(SKW_RAND16(con(0x3))) + con(0x64);
      if (SKW_RETRIEVE_ENVIRONMENT_CMD_CD_FW(psxa_1c))
      {
        vw_28 = con(0x1);
        SKW_098d_04c7(psxa_1c->w2, SKW_RAND16(con(0x64)), UPCAST(x16, psxa_1c + con(0x4)), psxa_1c->w2 + con(0x1), UPCAST(x16, psxa_1c + con(0x6)));
        psxa_1c->b1 = CUTX8(SKW_RAND02());
        psxa_1c++;
      }
    }
    if (vw_28 != con(0x0))
    {
      if (ddata.v1d718c)
        ddata.v1d718c = false;
      else
      {
        x16 wordrg103;
        if (ddata.v1e1474 != con(0x0))
          wordrg103 = con(0x4c) - ddata.v1e1474 / ddata.v1e1484;
        else
          wordrg103 = SKW_RAND16(con(0xa)) + con(0x5);
        SKW_QUEUE_NOISE_GEN1(con(0x17), con(0x0), con(0x19), ddata.v1d6c02, con(0x40), ddata.v1e0270, ddata.v1e0272, DM2_BETWEEN_VALUE(con(0x1), con(0xf), wordrg103));
        ddata.v1d718c = true;
      }
    }
    ddata.v1e024c = true;
    SKW_RECALC_LIGHT_LEVEL();
  }
  psxa_1c->b0 = con(0xffffffff);
}

// was SKW_32cb_5824
void SKW_ENVIRONMENT_DISPLAY_ELEMENTS(x16 eaxw, x16 ebxw, x16 edxw)
{
  x8 byterg5;
  s_xabytes* sxaptrrg5;
  s_xabytes* sxaptrrg1;
  t_text* tptrrg1;
  x16 vw_04;
  x16 vw_08;
  t_text t_0c[0x80];
  x8 vb_90;

  vw_08 = eaxw;
  vw_04 = edxw;
  if (ddata.v1e147f != con(0x0))
  {
    sxaptrrg5 = ddata.v1e143c;
    while (sxaptrrg5->b0 != con(0xffffffff))
    {
      sxaptrrg1 = sxaptrrg5++;
      SKW_ENVIRONMENT_DRAW_DISTANT_ELEMENT(sxaptrrg1, vw_04, ebxw, vw_08);
    }
  }
  if (ddata.v1d7041 != ddata.v1d6c02)
  {
    ddata.v1d7041 = ddata.v1d6c02;
    ddata.v1e13e9 = con(0x1);
    DM2_ZERO_MEMORY(ddata.v1e13dc, con(0xd));
    vb_90 = con(0x0);
    while (vb_90 <= UI8CAST(con(0x63)))
    {
      byterg5 = vb_90;
      if (SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x17), con(0x1), byterg5, ddata.v1d6c02))
      {
        tptrrg1 = SKW_QUERY_GDAT_TEXT(con(0x17), byterg5, t_0c, ddata.v1d6c02);
        if (*tptrrg1 != NULLBYTE)
        {
          byterg5 >>= con(0x3);
          ddata.v1e13dc[byterg5] |= con(0x1) << (vb_90 & con(0x7));
          ddata.v1e13e9 = con(0x0);
        }
      }
      vb_90++;
    }
  }
  if (ddata.v1e13e9 != con(0x0))
    return;
  sxaptrrg5 = ddata.v1e143c;
  vb_90 = ddata.v1e13e9;
  while (UI8CAST(vb_90) <= UI8CAST(con(0x63)))
  {
    x32 longrg400 = unsignedlong(ddata.v1e13dc[vb_90 / 8]);
    if (((con(0x1) << (vb_90 & con(0x7))) & longrg400) != con(0x0))
    {
      SKW_QUERY_GDAT_TEXT(con(0x17), vb_90, t_0c, ddata.v1d6c02);
      if (SKW_ENVIRONMENT_SET_DISTANT_ELEMENT(sxaptrrg5, vw_08, vw_04, t_0c, ebxw))
      {
        sxaptrrg5->b0 = vb_90;
        sxaptrrg5->w2 = SKW_QUERY_CMDSTR_TEXT(t_0c, v1d1134);
        sxaptrrg5->b1 = CUTX8(SKW_QUERY_CMDSTR_TEXT(t_0c, v1d1137));
        SKW_ENVIRONMENT_DRAW_DISTANT_ELEMENT(sxaptrrg5, vw_04, ebxw, vw_08);
      }
    }
    vb_90++;
  }
}

// was SKW_32cb_56bc
void SKW_ENVIRONMENT_DRAW_DISTANT_ELEMENT(s_xabytes* eaxpxa, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 vw_00;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;

  vw_04 = ebxw;
  vw_08 = ecxw;
  if (eaxpxa->w2 == con(0x0))
    return;
  if (unsignedword(eaxpxa->b1) == con(0x8) && SKW_SET_GRAPHICS_FLIP_FROM_POSITION(con(0x1), vw_04, vw_08, edxw) != con(0x0))
    vw_00 = con(0x1);
  else
  {
    if (unsignedword(eaxpxa->b1) == con(0x2) && SKW_SET_GRAPHICS_FLIP_FROM_POSITION(con(0x20), vw_04, vw_08, edxw) != con(0x0))
      vw_00 = con(0x1);
    else
    {
      if (unsignedword(eaxpxa->b1) == con(0x40) && SKW_SET_GRAPHICS_FLIP_FROM_POSITION(con(0x1), vw_04, vw_08, edxw) != con(0x0))
        vw_00 = con(0x1);
      else
      {
        if (unsignedword(eaxpxa->b1) == con(0x20) && SKW_SET_GRAPHICS_FLIP_FROM_POSITION(unsignedword(eaxpxa->b1), vw_04, vw_08, edxw) != con(0x0))
          vw_00 = con(0x1);
        else
          vw_00 = con(0x0);
      }
    }
  }
  x16 wordrg3 = unsignedword(eaxpxa->b8);
  vw_0c = unsignedword(eaxpxa->b9);
  vw_10 = eaxpxa->w4;
  x16 wordrg6 = eaxpxa->w6;
  if (ddata.v1e025c != con(0x0))
  {
    x16 wordrg2 = SKW_CALC_STRETCHED_SIZE(vw_10, con(0x34));
    vw_10 = wordrg2;
    wordrg6 = SKW_CALC_STRETCHED_SIZE(wordrg6, con(0x34));
    wordrg3 = SKW_CALC_STRETCHED_SIZE(wordrg3, con(0x34));
    vw_0c = SKW_CALC_STRETCHED_SIZE(vw_0c, con(0x34));
    if (eaxpxa->b8 != con(0x40))
      wordrg6 += ddata.v1d703d;
    else
    {
      vw_10 = ddata.vx1d2712.x + wordrg2;
      if (eaxpxa->w2 != con(0x1771))
        wordrg6 += ddata.vx1d2712.y;
      else
        wordrg6 += ddata.v1d703f;
    }
  }
  SKW_QUERY_TEMP_PICST(vw_00, vw_0c, con(0x0), wordrg3, con(0x0), con(0x0), eaxpxa->w2 | con(0x8000), con(0xffffffff), ddata.v1d6c00, con(0xffff), con(0x17), ddata.v1d6c02, eaxpxa->b0);
  ddata.v1e118e.w_20 += vw_10;
  ddata.v1e118e.w_22 += wordrg6;
  SKW_DRAW_TEMP_PICST();
}

void SKW_STEP_DOOR(c_tim* eaxptim)
{
  c_record* recoptrrg1;
  x8* ebppb;
  c_record* prec_04;
  x16 vw_14;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_28;

  bool vbool_00 = false;
  bool vbool_10 = false;
  x16 wordrg6 = unsignedword(eaxptim->u.b.b_06);
  vw_28 = unsignedword(eaxptim->u.b.b_07);
  ebppb = ddata.savegamepp1[eaxptim->u.b.b_06] + eaxptim->u.b.b_07;
  vw_20 = unsignedword(*ebppb & con(0x7));
  if (vw_20 == con(0x5))
    return;
  if (ddata.v1d3248 == ddata.v1e0266)
    ddata.v1e0390.l0 = con(0x3);
  recoptrrg1 = SKW_GET_ADDRESS_OF_TILE_RECORD(wordrg6, vw_28);
  prec_04 = recoptrrg1;
  if ((recoptrrg1->u2.b.b1 & con(0x4)) == con(0x0))
    return;
  eaxptim->un.l_00 += con(0x1);
  if ((recoptrrg1->u2.b.b1 & con(0x2)) != con(0x0))
  {
    if (vw_20 == con(0x0))
    {
      recoptrrg1->u2.b.b1 &= con(0xfffffffb);
      return;
    }
  }
  else
  {
    if (vw_20 == con(0x4))
    {
      recoptrrg1->u2.b.b1 &= con(0xfffffffb);
      return;
    }
    x16 vw_18 = ulrshift(recoptrrg1->u2.w, con(0xa), con(0xf));
    x16 vw_24 = SKW_QUERY_DOOR_DAMAGE_RESIST(SKW_IS_REBIRTH_ALTAR(recoptrrg1));
    if (ddata.v1d3248 == ddata.v1e0282 && wordrg6 == ddata.v1e0280)
    {
      if (vw_28 == ddata.v1e027e && vw_20 != con(0x0))
      {
        vbool_10 = true;
        if (UI16CAST(ddata.savegamew2) > con(0x0))
        {
          *ebppb &= con(0xf8);
          vw_1c = SKW_ATTACK_PARTY(vw_24, con(0x2), (((vw_18 | con(0x8)) != con(0x0)) ? 1 : 0) + con(0x3));
          if (vw_1c != con(0x0))
            for (x16 vw_2c = con(0x0); vw_2c < con(0x4); vw_2c++)
              if (((con(0x1) << CUTX8(vw_2c)) & unsignedlong(vw_1c)) != con(0x0))
                SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x8a), con(0xfe), ddata.hero[vw_2c].b101, wordrg6, vw_28, con(0x1), con(0x64), con(0xc8));
        }
      }
    }
    vw_14 = SKW_GET_CREATURE_AT(wordrg6, vw_28);
    if (vw_14 != con(0xffffffff))
    {
      x16 wordrg199 = SKW_QUERY_CREATURE_AI_SPEC_FLAGS(vw_14);
      if ((wordrg199 & con(0x20)) == con(0x0))
      {
        x16 wordrg198;
        if (vw_18 == con(0x0))
          wordrg198 = con(0x1);
        else
          wordrg198 = urshift(wordrg199, con(0x6)) & con(0x3);
        if (vw_20 >= wordrg198)
        {
          if ((SKW_QUERY_CREATURE_AI_SPEC_FROM_TYPE(vw_14)->u18.b.b1 & con(0x10)) != con(0x0))
          {
            vw_24 >>= con(0x1);
            vw_24 = DM2_MAX(con(0x1), vw_24);
          }
          SKW_ATTACK_CREATURE(vw_14, vw_28, con(0x2006), wordrg6, con(0x64), vw_24);
          if (vw_20 != con(0x0))
            vw_20 = vw_20 - con(0x1);
          else
            vw_20 = con(0x0);
          *ebppb = CUTX8(vw_20) | (*ebppb & con(0xfffffff8));
          SKW_QUEUE_NOISE_GEN2(con(0xf), con(0x82), con(0xfe), SKW_QUERY_CLS2_FROM_RECORD(vw_14), wordrg6, vw_28, con(0x1), con(0x46), con(0x80));
          SKW_QUEUE_NOISE_GEN2(con(0x15), con(0x85), con(0xfe), con(0xfe), wordrg6, vw_28, con(0x1), con(0x46), con(0x80));
          vbool_10 = true;
        }
      }
    }
    if (vbool_10)
    {
      vbool_00 = true;
      eaxptim->un.l_00 += con(0x1);
    }
  }
  if (!vbool_00)
  {
    x16 wordrg405;
    if ((prec_04->u2.b.b1 & con(0x2)) == con(0x0))
      wordrg405 = con(0x1);
    else
      wordrg405 = con(0xffffffff);
    vw_20 = vw_20 + wordrg405;
    *ebppb = CUTX8(vw_20) | (*ebppb & con(0xfffffff8));
    if ((prec_04->u2.b.b1 & con(0x2)) == con(0x0))
    {
      if (vw_20 != con(0x4))
        vbool_00 = true;
    }
    else if (vw_20 != con(0x0))
      vbool_00 = true;
    x8 vb_2c_1;
    if (vbool_00 || vw_20 != con(0x4))
      vb_2c_1 = con(0x8e);
    else
      vb_2c_1 = con(0x8f);
    SKW_QUEUE_NOISE_GEN2(con(0xe), vb_2c_1, con(0xfe), SKW_IS_REBIRTH_ALTAR(prec_04), wordrg6, vw_28, con(0x1), con(0x5f), con(0x80));
  }
  if (vbool_00)
  {
    prec_04->u2.b.b1 |= con(0x4);
    SKW_QUEUE_TIMER(eaxptim);
  }
  else
  {
    recoptrrg1 = prec_04;
    recoptrrg1->u2.b.b1 &= con(0xfffffffb);
  }
}

// was SKW_32cb_5340
void SKW_DRAW_PLAYER_TILE(void)
{
  x16 wordrg6;
  c_5bytes vs_00;

  x16 wordrg3;
  bool skip = false;
  ui16 uwordrg5 = ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x0)];
  if (uwordrg5 < con(0x10))
  {
    if (uwordrg5 == con(0x2))
      SKW_DRAW_PIT_TILE(con(0x0));
  }
  else if (uwordrg5 <= UI16CAST(con(0x10)))
  {
    x16 wordrg1 = SKW_GET_ADDRESS_OF_RECORD(ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x4)])->u2.w & con(0x1);
    wordrg3 = con(0x40);
    if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xe), con(0xb), con(0x40), ddata.v1e040e[wordrg1]) == con(0x0))
    {
      wordrg3 = SKW_QUERY_CREATURE_BLIT_RECTI(con(0x0), t_rotate(con(0x0)), con(0x2));
      SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), con(0x6), wordrg3, ddata.v1d6c02, ddata.v1d6c00, ddata.v1e12d0);
    }
  }
  else
  {
    if (uwordrg5 <= UI16CAST(con(0x11)))
    {
      SKW_DRAW_DOOR_TILE(con(0x0));
      wordrg3 = con(0x0);
      skip = true;
    }
    else if (uwordrg5 == con(0x13))
    {
      wordrg6 = ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x3)];
      wordrg3 = (wordrg6 == con(0x0)) ? con(0x338) : con(0x32b);
      SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), wordrg6 == con(0x0) ? con(0x4d) : con(0x39), wordrg3, ddata.v1d6c02, ddata.v1d6c00, con(0x0));
      wordrg3 = (wordrg6 == con(0x0)) ? con(0x339) : con(0x32c);
      SKW_DRAW_DUNGEON_GRAPHIC(con(0x8), wordrg6 == con(0x0) ? con(0x4e) : con(0x3a), wordrg3, ddata.v1d6c02, ddata.v1d6c00, con(0x0));
    }
  }
  if (!skip)
  {
    SKW_DRAW_PIT_ROOF(con(0x0));
    wordrg3 = SKW_GET_TELEPORTER_DETAIL(&vs_00, signedword(ddata.v1e1044->b_01), signedword(ddata.v1e1044->b_00)) ? 1 : 0;
    if (wordrg3 == con(0x0))
      SKW_DRAW_EXTERNAL_TILE(wordrg3);
    SKW_DRAW_STATIC_OBJECT(con(0x0), false, con(0x1ffffff));
    if (uwordrg5 == con(0x5))
      SKW_DRAW_TELEPORTER_TILE(con(0x0), con(0x0), con(0x18));
  }
  SKW_DRAW_RAIN();
  if (wordrg3 != con(0x0))
    SKW_DRAW_EXTERNAL_TILE(con(0x0));
  SKW_32cb_2d8c(ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x2)], con(0x1ffffff), con(0x0));
}

void SKW_12b4_0d75(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 wordrg5;
  c_hero* heroptrrg5;
  s_d556* sd5ptrrg1;
  x16 vw_04;
  x16 vw_10;
  x8 vb_14;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;

  x16 vw_0c = eaxw;
  x16 vw_08 = edxw;
  vw_04 = ebxw;
  if (SKW_IS_CREATURE_MOVABLE_THERE(vw_0c, vw_04, &vw_1c, vw_08))
  {
    x16 wordrg101 = SKW_GET_CREATURE_WEIGHT(vw_1c);
    if (ecxw >= con(0xfe) || wordrg101 <= ecxw || (SKW_RAND16((wordrg101 - ecxw) / 4 + con(0x1))) == con(0x0))
    {
      x16 wordrg6 = vw_0c + table1d27fc[vw_04];
      wordrg5 = vw_08;
      wordrg5 += table1d2804[vw_04];
      x16 wordrg144 = SKW_QUERY_CREATURE_AI_SPEC_FLAGS(vw_1c);
      vb_14 = CUTX16(wordrg144);
      if (ddata.v1d3248 != ddata.v1e0282 || wordrg6 != ddata.v1e0280 || wordrg5 != ddata.v1e027e || (wordrg144 & con(0x8000)) != con(0x0))
      {
        SKW_1c9a_0247(vw_1c);
        x8 byterg15 = SKW_GET_ADDRESS_OF_RECORD(vw_1c)->u4.b.b1;
        if (byterg15 != con(0xffffffff))
        {
          sd5ptrrg1 = &ddata.v1e089c[byterg15]; // BUGFIX 4/2014
          x16 vw_24 = signedword(sd5ptrrg1->u.v.b1a);
          if (sd5ptrrg1->u.v.b1a != con(0xffffffff))
            if (vw_24 != con(0x13))
              if ((table1d613a[vw_24] & con(0x4)) != con(0x0))
              {
                SKW_1c9a_0db0(unsignedlong(vw_1c));
                SKW_1c9a_0cf7(vw_0c, vw_08);
              }
        }
        SKW_MOVE_RECORD_TO(vw_1c, vw_08, wordrg6, vw_0c, wordrg5);
        if (SKW_GET_CREATURE_AT(wordrg6, wordrg5) != con(0xffffffff) && (vb_14 & con(0x1)) == con(0x0))
          SKW_ATTACK_CREATURE(con(0xffff), wordrg5, con(0x4002), wordrg6, con(0xa), con(0x0));
      }
      else
        SKW_12b4_023f(vw_0c, &vw_18, &vw_10, vw_08, ddata.v1e0258, (vw_04 + con(0x2)) & con(0x3));
    }
  }
  if (ddata.v1d3248 != ddata.v1e0282 || vw_0c != ddata.v1e0280 || vw_08 != ddata.v1e027e)
    return;
  x16 wordrg61 = con(0x0);
  vw_20 = con(0x0);
  heroptrrg5 = ddata.hero;
  x16 vw_24_1 = con(0x0);
  for(;;)
  {
    if (wordrg61 >= con(0x4))
    {
      if (vw_24_1 != con(0x0))
      {
        vw_20 = vw_20 / vw_24_1 + con(0x28);
        if (ecxw >= con(0xfe) || ecxw > vw_20)
          SKW_PERFORM_MOVE(((vw_04 - ddata.v1e0258) & con(0x3)) + con(0x3));
      }
      return;
    }
    if (heroptrrg5->w36 != con(0x0))
    {
      SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x8a), con(0xfe), heroptrrg5->b101, vw_0c, vw_08, con(0x1), con(0x64), con(0xc8));
      vw_20 = vw_20 + SKW_GET_PLAYER_WEIGHT(wordrg61) / con(0xa);
      vw_24_1++;
    }
    heroptrrg5++;
    wordrg61++;
  }
}

bool SKW_14cd_2662(x8 eaxb)
{
  x8 vb_04;

  vb_04 = eaxb;
  x16 wordrg2 = con(0xfffe);
  x16 wordrg4 = unsignedword(ddata.s350.v1e0562.u.b.b_06);
  x16 wordrg3 = unsignedword(ddata.s350.v1e0562.u.b.b_07);
  if (vb_04 != con(0xffffffff))
    vb_04 = (vb_04 + CUTX8(ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe))) + con(0x2)) & con(0x3);
  x16 wordrg104 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  wordrg4 += table1d27fc[wordrg104];
  wordrg3 += table1d2804[wordrg104];
  x16 wordrg101 = SKW_GET_CREATURE_AT(wordrg4, wordrg3);
  if (wordrg101 != con(0xffffffff))
  {
    wordrg2 = SKW_GET_ADDRESS_OF_RECORD(wordrg101)->u2.w;
    for (;; wordrg2 = SKW_GET_NEXT_RECORD_LINK(wordrg2))
    {
      if (wordrg2 == con(0xfffffffe))
        break;
      x16 wordrg102 = urshift(wordrg2 & con(0x3c00), con(0xa));
      if (wordrg102 > con(0x4) && wordrg102 < con(0xe) || wordrg102 == con(0x9))
        if (vb_04 == con(0xffffffff) || unsignedword(vb_04) == urshift(wordrg2, con(0xe)))
          if (SKW_1c9a_0006(wordrg2, con(0x10)) == con(0x0) && SKW_1c9a_0006(wordrg2, con(0x7)) == con(0x0))
            break;
    }
  }
  return wordrg2 != con(0xfffffffe);
}

bool SKW_1887_0b1b(void)
{
  x16 wordrg5;
  c_hero* heroptrrg2;
  bool flag;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;

  bool boolrg6 = false;
  if (ddata.v1d3248 != ddata.v1e08d6 || ddata.v1e08a6 != ddata.v1e08d8)
    return true;
  else if (ddata.v1e08a4 != ddata.v1e08d4)
    return true;
  x16 wordrg31 = SKW_GET_PLAYER_AT_POSITION(unsignedword(ddata.s350.v1e0556->u.v.b1c));
  vw_0c = wordrg31;
  if (wordrg31 == con(0xffffffff))
    return true;
  heroptrrg2 = &ddata.hero[wordrg31];
  x16 vw_00 = CUTX16(SKW_RAND());
  wordrg5 = vw_00;
  if (SKW_USE_LUCK_ATTRIBUTE(heroptrrg2, con(0x64) - SKW_USE_DEXTERITY_ATTRIBUTE(wordrg31)))
  {
    wordrg5 &= con(0x70);
    if (wordrg5 == con(0x0))
      return !boolrg6;
  }
  vw_08 = con(0x0);
  x16 wordrg3 = heroptrrg2->warrc3[con(0x0)];
  wordrg5 = heroptrrg2->warrc3[con(0x1)];
  if (wordrg3 != con(0xffffffff) && (SKW_1c9a_0006(wordrg3, signedword(ddata.s350.v1e0556->u.v.b1e)) != con(0x0)))
    vw_04 = R_F958(wordrg3);
  else
    vw_04 = con(0xffffffff);
  x16 wordrg1;
  if (wordrg5 != con(0xffffffff) && (SKW_1c9a_0006(wordrg5, signedword(ddata.s350.v1e0556->u.v.b1e)) != con(0x0)))
    wordrg1 = R_F958(wordrg5); // BUGFIX 4/2014
  else
    wordrg1 = con(0xffffffff);
  if ((vw_00 & con(0x3)) == con(0x0))
    flag = (vw_00 & con(0x4)) == con(0x0);
  else
    flag = wordrg1 <= vw_04;
  if (!flag)
  {
    vw_08 = con(0x1);
    wordrg3 = wordrg5;
  }
  if (wordrg3 != con(0xffffffff) && SKW_1c9a_0006(wordrg3, signedword(ddata.s350.v1e0556->u.v.b1e)) != con(0x0))
  {
    SKW_APPEND_RECORD_TO(SKW_REMOVE_POSSESSION(vw_0c, vw_08), con(0xffffffff), con(0x0), &ddata.s350.v1e054e->u2.w);
    boolrg6 = true;
    if (ddata.v1e0238)
    {
      ddata.v1e0238 = false;
      bool boolrg1 = (CUTX16(SKW_RAND()) & con(0xf)) + SKW_QUERY_PLAYER_SKILL_LV(vw_0c, true, con(0x1)) > con(0x7);
      ddata.v1e0238 = true;
      if (boolrg1)
        SKW_RESUME_FROM_WAKE();
    }
  }
  return !boolrg6;
}

void SKW_2f3f_04ea(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  c_hero* heroptrrg7;
  c_record* recoptrrg1;
  t_text t_08[0x80];

  x16 vw_04 = eaxw;
  x16 vw_00 = edxw;
  x16 vw_8c = ddata.v1e0288 - con(0x1);
  heroptrrg7 = &ddata.hero[vw_8c];
  x16 vw_88 = ddata.v1d3248;
  SKW_CHANGE_CURRENT_MAP_TO(ecxw);
  x16 wordrg4 = SKW_REMOVE_OBJECT_FROM_HAND();
  if (argw0 != con(0x93))
  {
    if (!ddata.v1d6a2d)
      SKW_DRAW_CRYOCELL_LEVER(true);
    if (wordrg4 != con(0xffffffff))
      SKW_ADD_ITEM_TO_PLAYER(vw_8c, wordrg4);
    ddata.v1e0288 = con(0x0);
    vw_04 += table1d27fc[ebxw];
    vw_00 += table1d2804[ebxw];
    for (x16 wordrg5 = con(0x0); wordrg5 < con(0x1e); wordrg5++)
      if (heroptrrg7->warrc3[wordrg5] != con(0xffffffff))
        SKW_CUT_RECORD_FROM(heroptrrg7->warrc3[wordrg5], vw_04, vw_00, NULL);
    x16 wordrg2 = SKW_GET_TILE_RECORD_LINK(vw_04, vw_00);
    for (;; wordrg2 = SKW_GET_NEXT_RECORD_LINK(wordrg2))
      if (urshift(wordrg2 & con(0x3c00), con(0xa)) == con(0x3))
      {
          recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg2);
          if ((recoptrrg1->u2.w & con(0x7f)) == con(0x7e))
            break;
      }
    recoptrrg1->u4.b.b0 &= con(0xfffffffb);
    if (ddata.savegamew2 == con(0x1))
      ddata.longv1e01a0 = ddata.longmallocx;
    if (!ddata.v1d6a2d)
    {
      ddata.v1e098c = vw_8c;
      SKW_DISPLAY_HINT_NEW_LINE();
      SKW_DISPLAY_HINT_TEXT(unsignedword(table1d69d0[vw_8c]), SKW_QUERY_GDAT_TEXT(con(0x1), con(0xe), t_08, con(0x0)));
      if (ddata.v1e0976 != con(0x0))
      {
        SKW_24a5_1798(con(0x4));
        SKW_38c8_0060();
      }
    }
  }
  else
  {
    SKW_24a5_1798(con(0x4));
    SKW_FIRE_HIDE_MOUSE_CURSOR();
    if (ddata.savegamew2 == con(0x1))
      SKW_SELECT_CHAMPION_LEADER(con(0xffffffff));
    if (ddata.v1e0288 >= ddata.savegamew2)
      ddata.savegamew2--;
    ddata.v1e0288 = con(0x0);
    heroptrrg7->w36 = con(0x0);
    ddata.v1e0b1c[vw_8c] = false;
    ddata.v1d67c2.b0[vw_8c] = con(0xffffffff);
    v1d67be[vw_8c] = con(0xffffffff);
    ddata.v1e0b34[vw_8c][1] = con(0x0);
    ddata.v1d67c2.w0[vw_8c + con(0x1)][1] = con(0xffff);
    ddata.v1e0b34[vw_8c][0] = con(0x0);
    ddata.v1d67c2.w0[vw_8c + con(0x1)][0] = con(0xffff);
    ddata.v1e0b34[vw_8c][2] = con(0x0);
    SKW_FIRE_FILL_SCREEN_RECT(vw_8c + con(0xa1), ddata.paletteptr1[0]);
    SKW_38c8_0060();
    SKW_FIRE_SHOW_MOUSE_CURSOR();
  }
  SKW_CHANGE_CURRENT_MAP_TO(vw_88);
}

void SKW_2f3f_0789(void)
{
  c_hero* heroptrrg3;

  x16 wordrg1;
  if (ddata.savegamew8 != con(0x0))
  {
    ddata.savegamewpc.w0 = con(0xffffffff);
    ddata.savegamewpc.b16 = con(0xffffffff);
    x16 wordrg100 = SKW_GET_TILE_RECORD_LINK(con(0x0), con(0x0));
    x16 wordrg4;
    for (;; wordrg100 = SKW_GET_NEXT_RECORD_LINK(wordrg4))
    {
      wordrg4 = wordrg100;
      if (wordrg4 == con(0xfffffffe))
        return;
      if (urshift(wordrg4 & con(0x3c00), con(0xa)) == con(0x3) && (SKW_GET_ADDRESS_OF_RECORD(wordrg4)->u2.w & con(0x7f)) == con(0x7e))
        break;
    }
    ddata.v1d6a2d = true;
    SKW_SELECT_CHAMPION(con(0x0), con(0x0), ddata.v1e0266, con(0x1));
    SKW_2f3f_04ea(con(0x0), con(0x0), ddata.v1e0266, con(0x1), con(0x92));
    ddata.v1d6a2d = false;
    ddata.hero[0].b1c = CUTX8(ddata.v1e0258);
    ddata.hero[0].b1d = CUTX8(ddata.v1e0258);
    SKW_SET_PARTY_HERO_FLAG(con(0x4000));
    wordrg1 = con(0x0);
  }
  else
  {
    if (ddata.savegamewpc.w0 != con(0xffffffff))
    {
      x16 wordrg21 = ddata.mouse_unk0e;
      ddata.mouse_unk0e = con(0xffffffff);
      SKW_TAKE_OBJECT(ddata.savegamewpc.w0, true);
      ddata.mouse_unk0e = wordrg21;
    }
    else
    {
      ddata.savegamewpc.b16 = con(0xffffffff);
      SKW_443c_0434();
    }
    heroptrrg3 = ddata.hero;
    x16 wordrg22 = con(0x0);
    while (wordrg22 < ddata.savegamew2)
    {
      heroptrrg3->u32.b.b1 &= con(0x3);
      ddata.v1d67c2.b0[wordrg22] = con(0xffffffff);
      x16 wordrg402 = wordrg22;
      ddata.v1e0b1c[wordrg22] = false;
      v1d67be[wordrg22] = con(0xffffffff);
      ddata.v1e0b34[wordrg402][1] = con(0x0);
      ddata.v1d67c2.w0[wordrg402 + con(0x1)][1] = con(0xffff);
      ddata.v1e0b34[wordrg402][0] = con(0x0);
      ddata.v1d67c2.w0[wordrg402 + con(0x1)][0] = con(0xffff);
      ddata.v1e0b34[wordrg402][2] = con(0x0);
      wordrg22++;
      heroptrrg3++;
    }
    SKW_SET_PARTY_HERO_FLAG(con(0x4000));
    wordrg1 = signedlong(ddata.mouse_unk0e);
    if (wordrg1 == con(0xffffffff))
      return;
    ddata.mouse_unk0e = con(0xffffffff);
  }
  SKW_SELECT_CHAMPION_LEADER(wordrg1);
}

// was SKW_2fcf_0cdf
bool SKW_TRY_PUSH_OBJECT_TO(x16 eaxw, x16 ebxw, x16* ecxpw, x16 edxw, x16* argpw0)
{
  x16 wordrg5;
  const x8* bptrrg4;
  const x8* pb_00;
  x16 vw_08;

  x16 vw_0c;
  if (eaxw != con(0xffffffff))
  {
    vw_0c = con(0x0);
    bptrrg4 = &table1d6a64[0][0];
  }
  else
  {
    vw_0c = ddata.v1e0258;
    bptrrg4 = &table1d6a54[0][0];
  }
  bptrrg4 += 4 * SKW_RAND02(); // 2nd dimension
  pb_00 = bptrrg4;
  for (x16 wordrg3 = con(0x0);; wordrg3++)
  {
    if (wordrg3 > con(0x3))
      return false;
    x16 wordrg18 = (signedword(pb_00[wordrg3]) + vw_0c) & con(0x3);
    x16 wordrg2 = edxw + table1d27fc[wordrg18];
    wordrg5 = ebxw + table1d2804[wordrg18];
    x8 byterg1 = SKW_GET_TILE_VALUE(wordrg2, wordrg5);
    x16 wordrg48 = unsignedword(byterg1);
    if (SKW_IS_TILE_BLOCKED(byterg1))
      continue;
    x16 wordrg47 = unsignedword(CUTX8(wordrg48 >> con(0x5)));
    if (wordrg47 == con(0x3))
      continue;
    vw_08 = eaxw & con(0x3c00);
    if (urshift(vw_08, con(0xa)) == con(0x4) && (wordrg47 == con(0x5) || wordrg47 == con(0x2)))
      continue;
    x16 wordrg402 = SKW_GET_CREATURE_AT(wordrg2, wordrg5);
    if (wordrg402 == con(0xffffffff) || (eaxw == con(0xffffffff) && (SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg402) & con(0x8000)) != con(0x0)))
    {
      *ecxpw = wordrg2;
      *argpw0 = wordrg5;
      return true;
    }
  }
}

// was SKW_32cb_1f3e
bool SKW_DRAW_EXTERNAL_TILE(ui16 eaxuw)
{
  x8 byterg5;
  x16 wordrg5;
  s_hex12* h12ptrrg2;
  bool boolrg1;
  c_image vs_04;
  c_5bytes vs_140;
  bool vbool_14c;
  x16 vw_160;
  x16 vw_168;
  x16 vw_16c;
  x16 vw_170;
  x16 vw_174;
  x16 vw_17c;
  x16 vw_180;
  x16 vw_188;
  x8 vb_18c;
  x8 vb_190;

  vb_18c = table1d6c1e[eaxuw];
  if (vb_18c == con(0xffffffff))
    return false;
  h12ptrrg2 = &ddata.v1e1044[eaxuw];
  vw_168 = signedword(h12ptrrg2->b_00);
  vw_180 = signedword(h12ptrrg2->b_01);
  vw_17c = table1d6b15[eaxuw];
  boolrg1 = SKW_GET_TELEPORTER_DETAIL(&vs_140, vw_180, vw_168) ? 1 : 0;
  vbool_14c = boolrg1;
  if (vw_17c > con(0x3) && !boolrg1)
    return boolrg1;
  if (vbool_14c && eaxuw != con(0x1) && eaxuw != con(0x2) && unsignedword(vs_140.b_00) != ddata.v1e0258)
    if (unsignedword(vs_140.b_00) != ((ddata.v1e0258 + con(0x2)) & con(0x3)))
      return false;
  x16 wordrg21 = ddata.v1e1044[eaxuw].s_02.warr_00[con(0x5)];
  x8 vb_164 = CUTX8(urshift(wordrg21, con(0x8)));
  vb_18c += vb_164;
  vb_190 = CUTX16(wordrg21);
  if ((vb_190 == con(0xffffffff)) || (vb_190 == con(0x0)))
    return false;
  if (eaxuw == con(0xe) || eaxuw == con(0xf))
    if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xa), con(0xb), con(0x61), vb_190) != con(0x0))
      return false;
  x16 vw_178 = con(0x0);
  if (table1d6afe[eaxuw] != con(0x0))
  {
    if (table1d6afe[eaxuw] >= con(0x1))
      vw_178 = con(0x1);
  }
  else if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xa), con(0xb), con(0x7), vb_190) == con(0x0))
  {
    vw_178 = ddata.v1e12d0;
    if ((vw_17c & con(0x1)) == con(0x0))
      vw_178 ^= con(0x1);
  }
  vw_174 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xa), con(0xb), con(0x4), vb_190);
  if (vw_174 == con(0x0))
    vw_174 = ddata.v1d6c00;
  x16 wordrg161;
  x16 wordrg162 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xa), con(0xb), con(0x5), vb_190);
  if (wordrg162 != con(0x0))
  {
    vw_170 = urshift(wordrg162, con(0x8));
    wordrg161 = unsignedword(CUTX8(wordrg162)) - con(0x1);
  }
  else
  {
    wordrg161 = con(0xc);
    vw_170 = con(0x0);
  }
  vw_16c = SKW_QUERY_CREATURE_BLIT_RECTI(eaxuw, t_rotate(0), wordrg161);
  vw_188 = con(0x40);
  if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0xa), con(0x1), vb_18c, vb_190))
  {
    vb_18c = table1d6c35[eaxuw] + vb_164;
    vw_188 = unsignedword(table1d6b71[vw_17c]);
  }
  if (eaxuw == con(0x1) || eaxuw == con(0x2))
    if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xa), con(0xb), con(0x60), vb_190) != con(0x0))
      vw_188 = con(0x60);
  x16 vw_158;
  if (vw_17c == con(0x0) || (vw_158 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xa), con(0xb), con(0x63), vb_190), !vbool_14c && (vw_158 == con(0x0))))
  {
    SKW_QUERY_TEMP_PICST(vw_178, vw_188, con(0x0), vw_188, con(0x0), vw_17c, vw_16c, vw_170, vw_174, con(0xffff), con(0xa), vb_190, vb_18c);
    SKW_DRAW_TEMP_PICST();
    return false;
  }
  x16 wordrg6 = vw_178;
  SKW_QUERY_TEMP_PICST(wordrg6, vw_188, con(0x0), vw_188, con(0x0), vw_17c, vw_16c, vw_170, con(0xfffd), con(0xfffd), con(0xa), vb_190, vb_18c);
  if (table1d6afe[eaxuw] == con(0x0))
  {
    SKW_QUERY_TEMP_PICST(wordrg6, vw_188, ddata.v1e118e.w_1c, vw_188, ddata.v1e118e.w_1e, vw_17c, vw_16c, vw_170, vw_174, con(0xffff), con(0xa), vb_190, vb_18c + con(0xffffffc8));
    SKW_DRAW_TEMP_PICST();
    vw_168 = unsignedword(vs_140.b_02);
    vw_180 = unsignedword(vs_140.b_03);
    x16 vw_184 = ddata.v1e12c8;
    ddata.v1e12c8 = unsignedword(vs_140.b_01);
    vw_160 = ddata.v1d3248;
    SKW_CHANGE_CURRENT_MAP_TO(unsignedword(vs_140.b_04));
    ddata.v1d6bfa = con(0x1);
    wordrg6 = signedword(table1d6b15[eaxuw]);
    SKW_CALC_VECTOR_W_DIR(ddata.v1e12c8, con(0x0), &vw_168, -wordrg6, &vw_180);
    wordrg5 = con(0x4);
    while (wordrg5 >= wordrg6)
    {
      SKW_32cb_4185(vw_168, table1d6c19[wordrg5], ddata.v1e12c8, vw_180);
      wordrg5--;
    }
    wordrg5 = con(0x4);
    while (wordrg5 > wordrg6)
    {
      SKW_DRAW_STATIC_OBJECT(table1d6c19[wordrg5], true, con(0x1ffffff));
      wordrg5--;
    }
    SKW_CHANGE_CURRENT_MAP_TO(vw_160);
    ddata.v1d6bfa = con(0x0);
    ddata.v1e12c8 = vw_184;
    SKW_DRAW_STATIC_OBJECT(eaxuw, true, con(0x3ff));
  }
  x16 wordrg3 = SKW_QUERY_MULTILAYERS_PIC(&vs_04, vb_190, vb_18c, con(0xa), vw_188, vw_188, vw_17c, vw_178, vw_174, DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xa), con(0xb), con(0x11), vb_190));
  if (vs_04.w_38 > con(0x0))
    byterg5 = vs_04.carr_3a[vw_174];
  else
    byterg5 = vw_174;
  if (vw_158 == con(0x0))
    SKW_FILL_ENTIRE_PICT(SKW_3e74_5817(wordrg3), byterg5);
  else
    SKW_32cb_0c7d(&vs_04, vw_174, wordrg3);
  vs_04.pg_2c = SKW_3e74_5817(wordrg3);
  SKW_DRAW_PICST(&vs_04);
  SKW_0b36_01cd(&vs_04.s_00);
  vs_04.w_30 = unsignedword(byterg5);
  vs_04.pg_2c = ddata.bitmapptr;
  vs_04.w_18 = vw_16c;
  vs_04.w_1a = vw_170;
  vs_04.w_38 = con(0x0);
  SKW_0b36_00c3(wordrg3, &vs_04.s_00);
  SKW_DRAW_PICST(&vs_04);
  SKW_3e74_58a3(wordrg3);
  return vbool_14c;
}

bool SKW_DRAW_ITEM_SURVEY(x16 eaxw, bool edxbool)
{
  x16 wordrg5;
  x8 byterg5;
  c_record* recoptrrg7;
  t_text t_00[0x80];
  x32 vla_80[0x4];

  vla_80[0x0] = con(0x02710270); // original location: 0x289ac
  if (eaxw == con(0xffffffff))
    return false;
  wordrg5 = eaxw;
  recoptrrg7 = SKW_GET_ADDRESS_OF_RECORD(wordrg5);
  SKW_DRAW_GUIDED_STR(v1d10f0);
  vla_80[0x2] = unsignedlong(urshift(eaxw & con(0x3c00), con(0xa)));
  if (vla_80[0x2] == con(0x7))
  {
    SKW_DRAW_SCROLL_TEXT(wordrg5);
    return true;
  }
  ddata.v1d66fc = con(0x3);
  if (!edxbool)
    return false;
  SKW_DRAW_STATIC_PIC(con(0x7), con(0x1), con(0x1ee), con(0x0), con(0xffffffff));
  vla_80[0x1] = UI32CAST(SKW_QUERY_CLS2_FROM_RECORD(wordrg5) & con(0xff));
  byterg5 = unsignedlong(SKW_QUERY_CLS1_FROM_RECORD(wordrg5));
  if (SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(byterg5, con(0x1), con(0x11), CUTLX8(vla_80[0x1])))
    SKW_DRAW_STATIC_PIC(byterg5, con(0x11), con(0x1ee), CUTLX8(vla_80[0x1]), con(0xc));
  SKW_DRAW_STATIC_PIC(con(0x7), con(0x5), con(0x1f8), con(0x0), con(0xc));
  wordrg5 = eaxw;
  SKW_DRAW_VP_RC_STR(con(0x1fa), SKW_GET_ITEM_NAME(wordrg5), unsignedword(ddata.paletteptr1[con(0xd)]));
  SKW_DRAW_ITEM_ICON(wordrg5, con(0x0), false, con(0x2e), false);
  x16 wordrg22 = SKW_QUERY_ITEM_WEIGHT(wordrg5);
  ddata.v1e099a = wordrg22 / con(0xa);
  ddata.v1e098e = wordrg22 % con(0xa);
  SKW_DRAW_GUIDED_STR(SKW_QUERY_GDAT_TEXT(con(0x7), con(0x1f), t_00, con(0x0)));
  if (I16CAST(vla_80[0x2]) == con(0x9))
  {
    if (!SKW_IS_CONTAINER_CHEST(wordrg5))
    {
      if (SKW_IS_CONTAINER_MONEYBOX(wordrg5))
        SKW_MONEY_BOX_SURVEY(wordrg5);
    }
    else
      SKW_DRAW_CONTAINER_SURVEY(recoptrrg7);
    return true;
  }
  x8 byterg3 = con(0x0);
  vla_80[0x3] = con(0x0);
  if (SKW_2759_0155(wordrg5))
  {
    x16 wordrg21 = SKW_ADD_ITEM_CHARGE(wordrg5, con(0x0));
    if (wordrg21 != con(0x0))
    {
      x16 wordrg11 = signedlong(SKW_GET_MAX_CHARGE(wordrg5));
      vla_80[0x3] = con(0x1); // extended
      byterg3 = con(0x71);
      SKW_DRAW_ITEM_STATS_BAR(CUTX16(vla_80[0x0]), wordrg11, byterg3, wordrg21, con(0x4));
    }
  }
  x16 wordrg2;
  ui16 uwordrg23 = urshift(eaxw & con(0x3c00), con(0xa));
  x16 wordrg1;
  if (uwordrg23 < con(0x6))
  {
    if (uwordrg23 != con(0x5))
      return true;
    byterg3 = con(0x72);
    wordrg2 = con(0x50);
    wordrg1 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(eaxw, con(0x8));
    if (wordrg1 == con(0x0))
    {
      wordrg1 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(eaxw, con(0x9));
      byterg3 = con(0x73);
      wordrg2 = con(0x64);
    }
  }
  else
  {
    if (uwordrg23 <= con(0x6))
    {
      byterg3 = con(0x72);
      wordrg1 = unsignedword(CUTX8(SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(eaxw, con(0xb))));
      wordrg2 = con(0xc8);
    }
    else
    {
      if (uwordrg23 != con(0x8))
        return true;
      byterg3 = con(0x75);
      wordrg1 = recoptrrg7->u2.w & con(0xff);
      wordrg2 = con(0xff);
    }
  }
  if (wordrg1 != con(0x0))
    SKW_DRAW_ITEM_STATS_BAR(CUTX16(vla_80[vla_80[0x3] / 2]), wordrg2, byterg3, wordrg1, con(0x5));
  return true;
}

void SKW_2c1d_0009(x16 eaxw, x16 ebxw, x16 ecxw, x8 edxb)
{
  x16 wordrg5;
  c_tim* timptrrg3;
  c_tim vtim_04;
  x16 vw_14;
  x8 vb_18;

  x16 vw_00 = eaxw;
  vb_18 = edxb;
  wordrg5 = ebxw;
  vw_14 = ecxw;
  bool boolrg6 = false;
  for (x16 vw_10 = con(0x0); vw_10 < con(0x4); vw_10++)
  {
    x16 wordrg404 = con(0x1) << CUTX8(vw_10);
    if ((wordrg404 & vw_00) != con(0x0))
    {
      if (ddata.hero[vw_10].w36 == con(0x0))
      {
        wordrg404 = ~wordrg404;
        vw_00 &= wordrg404;
      }
      if ((vb_18 != ddata.hero[vw_10].b102) || (ddata.hero[vw_10].w36 == con(0x0)))
      {
        ddata.hero[vw_10].w103 = con(0x0);
        x16 wordrg420 = con(0x0);
        timptrrg3 = ddata.savegametimarrp;
        while (wordrg420 < ddata.savegamew9)
        {
          if ((timptrrg3->b_04 == con(0x48)))
          {
            x16 wordrg19 = unsignedword(timptrrg3->b_05);
            if ((vw_00 & wordrg19) != con(0x0))
            {
              if ((~vw_00 & wordrg19) != con(0x0))
                timptrrg3->b_05 &= ~CUTX8(vw_00);
              else
                SKW_DELETE_TIMER(wordrg420);
            }
          }
          timptrrg3++;
          wordrg420++;
        }
      }
    }
    if (ddata.hero[vw_10].w103 > con(0x32))
      boolrg6 = true;
  }
  if (boolrg6)
    wordrg5 >>= con(0x2);
  x8 byterg402 = vb_18;
  for (x16 vw_10_1 = con(0x0); vw_10_1 < ddata.savegamew2; vw_10_1++)
    if (((con(0x1) << CUTX8(vw_10_1)) & vw_00) != con(0x0))
    {
      ddata.hero[vw_10_1].b102 = byterg402;
      ddata.hero[vw_10_1].w103 += wordrg5;
    }
  vtim_04.u.w_06 = wordrg5;
  vtim_04.b_04 = con(0x48);
  vtim_04.b_05 = CUTX8(vw_00);
  vtim_04.un.l_00 = (unsignedlong(vw_14) + ddata.longmallocx) | (signedlong(ddata.v1e0266) << con(0x18));
  SKW_QUEUE_TIMER(&vtim_04);
}

x16 SKW_WOUND_PLAYER(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 uwordrg5;
  c_hero* heroptrrg7;
  x16 vw_08;
  x16 vw_10;

  x16 wordrg6 = edxw;
  vw_10 = ebxw;
  x16 vw_0c = ecxw;
  x16 wordrg4 = eaxw;
  if (wordrg4 == con(0xffffffff))
    return con(0x0);
  if ((wordrg4 + con(0x1)) == ddata.v1e0288 || ddata.v1e0240 || wordrg6 <= con(0x0))
    return con(0x0);
  heroptrrg7 = &ddata.hero[wordrg4];
  if (heroptrrg7->w36 == con(0x0))
    return con(0x0);
  vw_08 = ecxw & con(0x8000);
  vw_0c &= con(0x7fff);
  if (vw_0c != con(0x0))
  {
    x16 vw_14 = con(0x0);
    x16 wordrg21 = con(0x0);
    uwordrg5 = con(0x0);
    while (wordrg21 <= con(0x5))
    {
      if (((con(0x1) << wordrg21) & unsignedlong(vw_10)) != con(0x0))
      {
        vw_14++;
        x16 wordrg104;
        if (vw_0c != con(0x4))
          wordrg104 = con(0x0);
        else
          wordrg104 = con(0x8000);
        wordrg104 |= wordrg21;
        uwordrg5 += SKW_2c1d_135d(eaxw, wordrg104);
      }
      wordrg21++;
    }
    if (vw_14 != con(0x0))
      uwordrg5 /= vw_14;
    x16 wordrg3 = con(0x0);
    x16 wordrg2 = con(0x0);
    while (wordrg2 <= con(0x1))
    {
      if (heroptrrg7->b20[wordrg2] == con(0x1))
        wordrg3 += signedword(heroptrrg7->b42[wordrg2]);
      wordrg2++;
    }
    if (wordrg3 != con(0x0))
    {
      wordrg2 = con(0x1);
      if ((SKW_QUERY_PLAYER_SKILL_LV(eaxw, true, con(0x7)) + wordrg3 / 8) > CUTX16(SKW_RAND() & con(0xf)))
      {
        if (vw_08 != con(0x0))
        {
          wordrg6 -= wordrg3;
          if (wordrg6 <= con(0x0))
            return con(0x0);
        }
        uwordrg5 += wordrg3 / 4;
      }
    }
    ui16 uwordrg1 = vw_0c - con(0x1);
    x16 step = -1;
    if (uwordrg1 > con(0x8))
      step = 0;
    else
    {
      x16 secondswitch = uwordrg1;
      switch (uwordrg1)
      {
        case 0:
          wordrg2 = wordrg6;
          wordrg6 = SKW_2c1d_0f2a(heroptrrg7, wordrg2, con(0x6));
          if (heroptrrg7->b102 == con(0x0))
            wordrg6 -= heroptrrg7->w103;
          step = 0;
        break;

        case 1:
        case 7:
          uwordrg5 >>= con(0x1);
          wordrg2 = con(0x1);
          uwordrg5 += SKW_QUERY_PLAYER_SKILL_LV(eaxw, true, con(0x1));
          step = 0;
        break;

        case 2:
        case 3:
        case 6:
        case 8:
          step = 0;
        break;

        case 4:
          wordrg2 = wordrg6;
          wordrg6 = SKW_2c1d_0f2a(heroptrrg7, wordrg2, con(0x5));
          if (heroptrrg7->b102 == con(0x1))
            wordrg6 -= heroptrrg7->w103;
          step = 2;
        break;

        case 5:
          wordrg2 = con(0x73) - SKW_GET_PLAYER_ABILITY(heroptrrg7, con(0x0), con(0x3));
          if (wordrg2 <= con(0x0))
            return con(0x0);
          step = 1;
        break;

        default: throw(THROW_DMABORT);
      }
    }
    switch (step)
    {
      case 0: // no break
        if (wordrg6 <= con(0x0))
          return con(0x0);
        wordrg2 = con(0x82) - uwordrg5;
      case 1: // no break then
        wordrg6 = SKW_0cd5_0176(wordrg6, wordrg2, con(0x6));
      case 2:
        if (wordrg6 <= con(0x0))
          return con(0x0);
        wordrg2 = SKW_2c1d_0f2a(heroptrrg7, (CUTX16(SKW_RAND()) & con(0x7f)) + con(0xa), con(0x4));
        if (wordrg6 > wordrg2)
        {
          do
          {
            ddata.v1e0ba8[eaxw] |= ((con(0x1) << (SKW_RAND() & con(0x7))) & vw_10);
            wordrg2 *= con(0x2);
          } while (wordrg6 > wordrg2 && wordrg2 != con(0x0));
        }
        if (ddata.v1e0238)
          SKW_RESUME_FROM_WAKE();
      break;
    }
  }
  ddata.v1e0bb0[eaxw] += wordrg6;
  return wordrg6;
}

// was SKW_2c1d_210a
void SKW_UPDATE_CHAMPIONS_STATS(void)
{
  x16 wordrg5;
  x16 uwordrg5;
  c_hero* heroptrrg3;
  x32 help; // TODO
  x16 vw_08;

  if (ddata.savegamew2 == con(0x0))
    return;
  ddata.v1e0ff8 += con(0x38);
  if (ddata.v1e0ff8 > con(0x80))
    ddata.v1e0ff8 -= con(0x80);
  wordrg5 = con(0x0);
  ui16 vuw_04 = wordrg5;
  heroptrrg3 = ddata.hero;
  for(;;)
  {
    if (vuw_04 >= ddata.savegamew2)
      return;
    if (heroptrrg3->w36 != con(0x0))
    {
      if ((vuw_04 + con(0x1)) != ddata.v1e0288)
      {
        if (heroptrrg3->w3e >= heroptrrg3->w40)
        {
          if (heroptrrg3->w3e > heroptrrg3->w40)
          {
            wordrg5 = heroptrrg3->w3e - con(0x1);
            heroptrrg3->w3e = wordrg5;
          }
        }
        else
        {
          uwordrg5 = SKW_QUERY_PLAYER_SKILL_LV(vuw_04, true, con(0x3)) + SKW_QUERY_PLAYER_SKILL_LV(vuw_04, true, con(0x2));
          vw_08 = uwordrg5;
          if (ddata.v1e0ff8 < (SKW_GET_PLAYER_ABILITY(heroptrrg3, con(0x0), con(0x3)) + uwordrg5))
          {
            wordrg5 = heroptrrg3->w40 / con(0x28) + con(0x1);
            if (ddata.v1e0238)
              wordrg5 *= con(0x2);
            SKW_ADJUST_STAMINA(vuw_04, DM2_MAX(con(0x7), con(0x10) - vw_08) * wordrg5);
            heroptrrg3->w3e += DM2_MIN(wordrg5, heroptrrg3->w40 - heroptrrg3->w3e);
          }
        }
        ui16 uwordrg6 = con(0x4);
        wordrg5 = heroptrrg3->u3c.w;
        for(;;)
        {
          wordrg5 >>= con(0x1);
          if (wordrg5 <= heroptrrg3->w3a)
            break;
          uwordrg6 += con(0x2);
        }
        wordrg5 = con(0x0);
        x16 wordrg100 = DM2_BETWEEN_VALUE(con(0x1), con(0x6), signedword(heroptrrg3->u3c.b.b1) - con(0x1));
        vw_08 = CUTX16(ddata.longmallocx) - CUTX16(ddata.longv1e01a0); // TODO: really not longs?
        if (vw_08 > con(0x50))
        {
          wordrg100++;
          if (vw_08 > con(0xfa))
            wordrg100++;
        }
        if (ddata.v1e0238)
          wordrg100 *= 2;
        for(;;)
        {
          bool boolrg2 = uwordrg6 <= con(0x4);
          vw_08 = boolrg2 ? 1 : 0;
          if (heroptrrg3->w44 >= con(0xfffffe00))
          {
            x16 wordrg45;
            if (heroptrrg3->w44 >= con(0x0))
              wordrg5 -= wordrg100;
            if (vw_08 == con(0x0))
              wordrg45 = uwordrg6 / 2;
            else
              wordrg45 = con(0x2);
            heroptrrg3->w44 -= wordrg45;
          }
          else
          {
            if (boolrg2)
            {
              wordrg5 += wordrg100;
              heroptrrg3->w44 -= con(0x2);
            }
          }
          if (heroptrrg3->w46 >= con(0xfffffe00))
          {
            if (heroptrrg3->w46 >= con(0x0))
              wordrg5 -= wordrg100;
            x16 wordrg41;
            if (vw_08 == con(0x0))
              wordrg41 = uwordrg6 / 4;
            else
              wordrg41 = con(0x1);
            heroptrrg3->w46 -= wordrg41;
          }
          else
          {
            if (vw_08 != con(0x0))
            {
              wordrg5 += wordrg100;
              heroptrrg3->w46--;
            }
          }
          if (--uwordrg6 == con(0x0) || ((signedlong(heroptrrg3->w3a) - signedlong(wordrg5)) >= signedlong(heroptrrg3->u3c.w)))
          {
            SKW_ADJUST_STAMINA(vuw_04, wordrg5);
            if (heroptrrg3->w44 < con(0xfffffc00))
              heroptrrg3->w44 = con(0xfffffc00);
            if (heroptrrg3->w46 < con(0xfffffc00))
              heroptrrg3->w46 = con(0xfffffc00);
            if (heroptrrg3->w36 < heroptrrg3->w38 && heroptrrg3->w3a >= (heroptrrg3->u3c.w >> con(0x2)))
            {
              if (ddata.v1e0ff8 < (SKW_GET_PLAYER_ABILITY(heroptrrg3, con(0x0), con(0x4)) + con(0xc)))
              {
                x16 wordrg107 = (heroptrrg3->w38 >> con(0x7)) + con(0x1);
                if (ddata.v1e0238)
                  wordrg107 *= 2;
                wordrg107 = DM2_MIN(wordrg107, heroptrrg3->w38 - heroptrrg3->w36);
                heroptrrg3->w36 += wordrg107;
              }
            }
            x16 wordrg106;
            if (!ddata.v1e0238)
              wordrg106 = con(0xff);
            else
              wordrg106 = con(0x3f);
            if ((wordrg106 & CUTX16(ddata.longmallocx)) == con(0x0))
            {
              wordrg5 = con(0x0);
              while (wordrg5 <= con(0x6))
              {
                help = 2 * wordrg5;
                vw_08 = unsignedword(heroptrrg3->b4a[help + con(0x1)]);
                uwordrg6 = unsignedword(heroptrrg3->b4a[help]);
                if (uwordrg6 >= unsignedword(heroptrrg3->b4a[help + con(0x1)]))
                {
                  if (uwordrg6 > vw_08)
                  {
                    uwordrg6 -= uwordrg6 / vw_08;
                    heroptrrg3->b4a[help] = CUTX8(uwordrg6);
                  }
                }
                else
                  heroptrrg3->b4a[help] += con(0x1);
                wordrg5++;
              }
            }
            heroptrrg3->u32.b.b1 |= con(0x8);
            x16 wordrg101 = vuw_04 + con(0x1);
            if (wordrg101 == ddata.v1e0976)
              heroptrrg3->u32.b.b1 |= con(0x30);
            break;
          }
        }
      }
    }
    vuw_04++;
    heroptrrg3++;
  }
}

bool SKW_2e62_03b5(x16 eaxw, bool ebxbool, x16 edxw)
{
  x16 wordrg5;
  x16 vw_10;

  bool boolrg7 = ebxbool;
  bool vbool_0c = false;
  bool vbool_04 = false;
  bool vbool_08 = ebxbool;
  x16 wordrg17 = eaxw + con(0x1);
  if (ddata.v1e0976 == wordrg17)
    wordrg5 = edxw + con(0x8);
  else
  {
    if (edxw > con(0x1) || ddata.v1e0288 == wordrg17)
      return false;
    wordrg5 = 2 * eaxw + edxw;
  }
  x16 wordrg2 = eaxw;
  vw_10 = ddata.hero[wordrg2].warrc3[edxw];
  if (edxw <= con(0x1))
  {
    wordrg2++;
    if (wordrg2 == ddata.v1e0b74)
      if (edxw == ddata.v1e0b76)
        vbool_0c = true;
    if (!vbool_0c != (ddata.v1d653c[wordrg5].b5 & con(0x1)) == con(0x0))
    {
      vbool_08 = true;
      ddata.v1d653c[wordrg5].b5 ^= con(0x1);
    }
  }
  if (edxw <= con(0x5))
  {
    if (((con(0x1) << CUTX8(edxw)) & ddata.hero[eaxw].w34) != con(0x0))
      vbool_04 = true;
    if (!vbool_04 != (ddata.v1d653c[wordrg5].b5 & con(0x2)) == con(0x0))
    {
      vbool_08 = true;
      ddata.v1d653c[wordrg5].b5 ^= con(0x2);
    }
  }
  if (vw_10 != con(0xffffffff))
  {
    x16 wordrg3 = vw_10;
    x8 byterg3 = SKW_2405_014a(wordrg3, (SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg3, con(0x0)) & con(0x8000)) != con(0x0), edxw);
    if (byterg3 != ddata.v1d653c[wordrg5].b3)
    {
      boolrg7 = true;
      ddata.v1d653c[wordrg5].b3 = byterg3;
    }
    x8 byterg1 = SKW_QUERY_CLS2_FROM_RECORD(vw_10);
    if (byterg1 != ddata.v1d653c[wordrg5].b4)
    {
      boolrg7 = true;
      ddata.v1d653c[wordrg5].b4 = byterg1;
    }
  }
  if (!boolrg7 && !vbool_08)
    if (ddata.v1d653c[wordrg5].w6 == vw_10)
      return false;
  if (vw_10 == con(0xffffffff) || wordrg5 < con(0x8))
    vbool_08 = true;
  if (wordrg5 < con(0x8))
    SKW_DRAW_PLAYER_3STAT_PANE(eaxw, false);
  ddata.v1d653c[wordrg5].w6 = vw_10;
  SKW_DRAW_ITEM_ICON(vw_10, vbool_04 ? 1 : 0, vbool_0c, wordrg5, vbool_08);
  return true;
}

void R_3C1E5(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  x16 wordrg5;
  c_record* recoptrrg5;
  x16 vw_00;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  c_tim vtim_10;
  x16 vw_28;
  x16 vw_34;
  x16 vw_38;
  x16 vw_3c;
  x16 vw_40;
  x16 vw_44;
  x16 vw_48;
  x16 vw_4c;
  x16 vw_50;
  x8 vb_58;
  bool flag;

  vw_0c = eaxw;
  vw_08 = edxw;
  vw_04 = ebxw;
  vw_00 = ecxw;
  x16 wordrg6 = argw0;
  bool vbool_20 = false;
  bool vbool_1c = false;
  x16 vw_2c = con(0xffff);
  vw_48 = SKW_GET_TILE_RECORD_LINK(vw_0c, vw_08);
  vw_28 = vw_48;
  bool vbool_24 = false;
  // M_3C226, M_3CDE8 is continue-label
  for (;; vw_48 = SKW_GET_NEXT_RECORD_LINK(vw_48))
  {
    x16 wordrg2 = vw_48;
    if (wordrg2 == con(0xfffffffe) || vbool_24)
      break;
    vw_40 = con(0x0);
    x16 wordrg3 = wordrg2;
    vw_4c = urshift(wordrg3, con(0xe));
    if (vw_4c != vw_04)
      continue;
    if (!SKW_IS_WALL_ORNATE_ALCOVE_FROM_RECORD(vw_28, wordrg3))
    {
      if (!SKW_0cee_319e(wordrg3))
      {
        x16 wordrg130 = urshift(wordrg2 & con(0x3c00), con(0xa));
        if (wordrg130 != con(0x3))
        {
          if (vw_00 != con(0xffffffff) || wordrg130 != con(0x2))
          {
            if (wordrg130 >= con(0x3))
              break;
            continue;
          }
          recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg3);
          if ((recoptrrg5->u2.w & con(0x6)) != con(0x2))
            continue;
          x16 wordrg413 = recoptrrg5->u2.w;
          ui16 uwordrg2 = urshift(wordrg413, con(0x3));
          x16 vw_54 = unsignedword(CUTX8(uwordrg2));
          vb_58 = CUTX8(vw_54);
          if (ddata.mouse_unk0e == con(0xffffffff))
            continue;
          uwordrg2 = urshift(uwordrg2, con(0x8)) & con(0x1f);
          vw_34 = uwordrg2;
          bool doit = false; // added
          if (uwordrg2 < con(0x7))
          {
            if (uwordrg2 < con(0x4))
              continue;
            if (uwordrg2 <= con(0x4))
              doit = true;
            else if (uwordrg2 != con(0x6))
              continue;
          }
          else if (uwordrg2 <= con(0x7))
          {
            if ((wordrg413 & con(0x1)) != con(0x0))
              continue;
          }
          else
          {
            if (uwordrg2 <= con(0x8))
              doit = true;
            else
            {
              if (uwordrg2 == con(0xd) && wordrg6 == con(0xffffffff))
              {
                x16 wordrg21 = wordrg413 ^ con(0x1);
                wordrg413 &= con(0xfffffffe);
                wordrg413 |= wordrg21;
                recoptrrg5->u2.w = wordrg413;
              }
              continue;
            }
          }
          if (doit)
          {
            x16 wordrg411 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0xe), vb_58);
            x16 vw_30 = vw_4c << con(0xe);
            if ((recoptrrg5->u2.b.b0 & con(0x1)) == con(0x0))
            {
              if (vw_34 == con(0x8))
              {
                ddata.v1e0390.b0 |= con(0x1);
                vbool_24 = true;
                continue;
              }
              if ((wordrg6 == con(0xffffffff)) || SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6) != wordrg411)
                continue;
              vbool_1c = true;
              wordrg6 &= con(0xffff3fff);
              SKW_MOVE_RECORD_TO(wordrg6 | vw_30, con(0x0), vw_0c, con(0xffffffff), vw_08);
              wordrg6 = con(0xffff);
              ddata.v1e0390.b0 |= con(0x1);
              vbool_24 = true;
              continue;
            }
            if (wordrg6 != con(0xffffffff))
            {
              vbool_24 = true;
              continue;
            }
            wordrg5 = wordrg411;
            wordrg6 = SKW_FIND_DISTINCTIVE_ITEM_ON_TILE(vw_0c, vw_4c, wordrg5, vw_08);
            if (wordrg6 == con(0xffffffff))
            {
              wordrg6 = SKW_ALLOC_NEW_DBITEM(wordrg5);
              if (wordrg6 == con(0xffffffff))
                continue;
              wordrg6 = vw_30 | (wordrg6 & con(0x3fff));
              SKW_APPEND_RECORD_TO(wordrg6, vw_0c, vw_08, NULL);
            }
            wordrg5 = wordrg6;
            SKW_ADD_ITEM_CHARGE(wordrg5, con(0xf));
            SKW_MOVE_RECORD_TO(wordrg5, vw_08, con(0xffffffff), vw_0c, con(0x0));
            vw_2c = wordrg6;
            wordrg6 = con(0xffff);
            if (vw_34 == con(0x8))
            {
              vtim_10.un.l_00 = (ddata.longmallocx + unsignedlong(DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x12), vb_58)) + con(0x2)) | (signedlong(ddata.v1d3248) << con(0x18));
              vtim_10.b_04 = con(0x5c);
              vtim_10.b_05 = con(0x0);
              vtim_10.u.w_06 = vw_48;
              SKW_QUEUE_TIMER(&vtim_10);
            }
            ddata.v1e0390.b0 |= con(0x1);
            vbool_24 = true;
            continue;
          }
          if (wordrg6 == con(0xffffffff))
          {
            x16 wordrg409 = (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x11), vb_58) == con(0x0)) ? con(0x1) : con(0xffffffff);
            vw_3c = ddata.v1e0270;
            vw_38 = ddata.v1e0272;
            x16 wordrg134 = SKW_LOCATE_OTHER_LEVEL(ddata.v1e0266, &vw_3c, &vw_38, wordrg409, NULL);
            if (wordrg134 >= con(0x0))
            {
              R_3BF83(vw_3c, wordrg134, ddata.v1e0258, vw_38);
              SKW_1031_098e();
            }
          }
          continue;
        }
        recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg3);
        vw_34 = recoptrrg5->u2.w & con(0x7f);
        vw_50 = urshift(recoptrrg5->u2.w, con(0x7));
        vw_44 = ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe));
        if (ddata.mouse_unk0e == con(0xffffffff) && vw_34 != con(0x7e))
          continue;
        x8 byterg40 = SKW_GET_WALL_DECORATION_OF_ACTUATOR(recoptrrg5);
        vb_58 = byterg40;
        ui16 uwordrg20 = vw_34;
        if (uwordrg20 == con(0x0))
          continue;
        bool boolrg7 = true;
        x16 path = 0; // 0 = M_3C614, 1 = M_3CA71, 2 = M_3C693
        if (uwordrg20 < con(0x1a))
        {
          if (uwordrg20 < con(0x3))
          {
            if (uwordrg20 < con(0x1))
              continue;
            if (uwordrg20 <= con(0x1))
            {
              boolrg7 = false;
              if ((recoptrrg5->u4.w & con(0x18)) == con(0x18))
                continue;
            }
            else
              boolrg7 = (((wordrg6 == con(0xffffffff)) ? 1 : 0) != ulrshift(recoptrrg5->u4.w, con(0xa), con(0xf)));
            path = 1;
          }
          else if (uwordrg20 <= con(0x3))
            path = 0;
          else if (uwordrg20 < con(0x17))
          {
            if (uwordrg20 != con(0x15))
              continue;
            if (SKW_ADD_ITEM_CHARGE(unsignedlong(wordrg6), con(0x0)) == con(0x0))
              path = 1;
            else // BUGFIX 4/2014
              path = 0;
          }
          else if (uwordrg20 <= con(0x17))
          {
            if (wordrg6 != con(0xffffffff))
              continue;
            x16 wordrg139 = (ulrshift(recoptrrg5->u4.w, con(0xd), con(0xf)) ^ con(0x1)) & con(0x1);
            recoptrrg5->u4.b.b0 &= con(0xfffffffb);
            recoptrrg5->u4.w |= 4 * wordrg139;
            x32 longrg40 = unsignedlong(ulrshift(recoptrrg5->u4.w, con(0xd), con(0xf)));
            boolrg7 = (unsignedlong(ulrshift(recoptrrg5->u4.w, con(0xa), con(0xf))) ^ longrg40) == con(0x0);
            path = 1;
          }
          else if (uwordrg20 == con(0x18))
            path = 2;
          else
            continue;
        }
        else if (uwordrg20 <= con(0x1a))
        {
          x16 wordrg407 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0xe), byterg40);
          if ((recoptrrg5->u4.b.b0 & con(0x4)) == con(0x0))
          {
            if ((wordrg6 == con(0xffffffff)) || SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6) != wordrg407)
              continue;
            vbool_1c = boolrg7;
            wordrg6 &= con(0xffff3fff);
            SKW_MOVE_RECORD_TO((vw_4c << con(0xe)) | wordrg6, con(0x0), vw_0c, con(0xffffffff), vw_08);
            wordrg6 = con(0xffff);
            ddata.v1e0390.b0 |= con(0x1);
            vbool_24 = true;
            continue;
          }
          if (wordrg6 == con(0xffffffff))
          {
            wordrg5 = wordrg407;
            wordrg6 = SKW_FIND_DISTINCTIVE_ITEM_ON_TILE(vw_0c, vw_4c, wordrg5, vw_08);
            if (wordrg6 == con(0xffffffff))
            {
              wordrg6 = SKW_ALLOC_NEW_DBITEM(wordrg5);
              if (wordrg6 == con(0xffffffff))
                continue;
              wordrg6 &= con(0xffff3fff);
              wordrg6 |= vw_4c << con(0xe);
              SKW_APPEND_RECORD_TO(wordrg6, vw_0c, vw_08, NULL);
            }
            wordrg5 = wordrg6;
            SKW_ADD_ITEM_CHARGE(wordrg5, con(0xf));
            SKW_MOVE_RECORD_TO(wordrg5, vw_08, con(0xffffffff), vw_0c, con(0x0));
            vw_2c = wordrg6;
            wordrg6 = con(0xffff);
            ddata.v1e0390.b0 |= con(0x1);
            vbool_24 = true;
            continue;
          }
          vbool_24 = boolrg7;
          continue;
        }
        else if (uwordrg20 < con(0x3f))
        {
          if (uwordrg20 <= con(0x1b))
          {
            if (vw_50 == con(0x0) || SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6) != DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0xe), byterg40))
              continue;
            vbool_1c = boolrg7;
            wordrg6 = con(0xffff);
            vw_50 = vw_50 - con(0x1);
            flag = vw_50 != con(0x0);
            if (!flag)
            {
              boolrg7 = false;
              recoptrrg5->u4.b.b0 |= con(0x1);
            }
            x16 wordrg402 = recoptrrg5->u2.w & con(0xffff007f);
            recoptrrg5->u2.w = wordrg402 | ((vw_50 & con(0x1ff)) << con(0x7));
          }
          else if (uwordrg20 == con(0x1c))
          {
            if (wordrg6 == con(0xffffffff))
              continue;
            if ((recoptrrg5->u4.b.b0 & con(0x4)) != con(0x0))
              continue;
            x16 wordrg401;
            if ((recoptrrg5->u4.b.b0 & con(0x20)) == con(0x0))
              wordrg401 = (ddata.v1e0258 + ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe))) & con(0x3);
            else
              wordrg401 = ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe));
            x16 wordrg31 = wordrg401;
            x16 wordrg24 = vw_50 & con(0x3f);
            x16 vw_54 = recoptrrg5->u6.w;
            x16 wordrg402 = urshift(recoptrrg5->u6.w, con(0xb));
            vw_54 = ulrshift(vw_54, con(0x5), con(0xb));
            R_3BF83(vw_54, wordrg24, wordrg31, wordrg402);
            SKW_1031_098e();
          }
          else
            continue;
          path = 1;
        }
        else if (uwordrg20 <= con(0x3f))
        {
          if (wordrg6 == con(0xffffffff))
            recoptrrg5->u4.b.b0 &= con(0xfffffffe);
          path = 1;
        }
        else if (uwordrg20 < con(0x4a))
        {
          if (uwordrg20 != con(0x46))
            continue;
          x16 wordrg40 = urshift(recoptrrg5->u6.w, con(0xb));
          if ((SKW_GET_ADDRESS_OF_TILE_RECORD(ulrshift(recoptrrg5->u6.w, con(0x5), con(0xb)), wordrg40)->u2.b.b1 & con(0x20)) != con(0x0))
            path = 2;
          else
            continue;
        }
        else if (uwordrg20 <= con(0x4a))
          path = 2;
        else if (uwordrg20 == con(0x7e))
        {
          if ((recoptrrg5->u4.b.b0 & con(0x4)) != con(0x0))
            if (vw_04 == ((ddata.v1e0258 + con(0x2)) & con(0x3)))
            {
              SKW_SELECT_CHAMPION(ddata.v1e0270, ddata.v1e0258, ddata.v1e0266, ddata.v1e0272);
              vbool_24 = boolrg7;
              boolrg7 = false;
            }
          path = 1;
        }
        else
          continue;
        if (path == 0)
        {
          x8 boolrg1 = vw_50 == SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6);
          boolrg7 = ((boolrg1 ? 1 : 0) == ulrshift(recoptrrg5->u4.w, con(0xa), con(0xf)));
          if (boolrg1)
            if ((recoptrrg5->u4.b.b0 & con(0x4)) != con(0x0))
              SKW_DEALLOC_RECORD(SKW_REMOVE_OBJECT_FROM_HAND());
          path = 1;
        }
        if (path == 2)
        {
          if (wordrg6 != con(0xffffffff) || (recoptrrg5->u4.b.b0 & con(0x1)) != con(0x0))
            continue;
          vtim_10.un.l_00 = (unsignedlong(vw_50) + ddata.longmallocx + con(0x2)) | (signedlong(ddata.v1d3248) << con(0x18));
          vtim_10.b_04 = con(0x57);
          vtim_10.b_05 = con(0x0);
          vtim_10.u.w_06 = vw_48;
          SKW_QUEUE_TIMER(&vtim_10);
          recoptrrg5->u4.b.b0 |= con(0x1);
          boolrg7 = false;
          if ((recoptrrg5->u4.b.b0 & con(0x20)) != con(0x0))
            vw_40 = con(0x10);
          if ((boolrg7) || (vw_44 != con(0x3)))
            path = 1;
          else
          {
            vbool_20 = true;
            if ((recoptrrg5->u4.b.b0 & con(0x40)) != con(0x0))
              SKW_QUEUE_NOISE_GEN2(con(0x9), con(0x88), con(0xfe), vb_58, ddata.v1e0270, ddata.v1e0272, con(0x1), con(0x8c), con(0x80));
            SKW_INVOKE_ACTUATOR(recoptrrg5, vw_40, con(0x0));
            SKW_INVOKE_ACTUATOR(recoptrrg5, vw_50 + con(0x1) + vw_40, con(0x1));
            continue;
          }
        }
        // only path==1 left here!
        if (vw_44 == con(0x3))
        {
          vw_44 = boolrg7 ? 1 : 0;
          boolrg7 = false;
        }
        if (!boolrg7)
        {
          boolrg7 = true;
          vbool_20 = true;
          if ((recoptrrg5->u4.b.b0 & con(0x40)) != con(0x0))
            SKW_QUEUE_NOISE_GEN2(con(0x9), con(0x88), con(0xfe), vb_58, ddata.v1e0270, ddata.v1e0272, con(0x1), con(0x8c), con(0x80));
          SKW_INVOKE_ACTUATOR(recoptrrg5, vw_40, vw_44);
        }
        continue;
      }
      if (wordrg6 != con(0xffffffff))
      {
        if ((SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg6, con(0x0)) & con(0x1)) == con(0x0))
        {
          if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6) != con(0x194))
            break;
          SKW_SET_ITEMTYPE(wordrg6, con(0xf));
        }
        else
          SKW_ADD_ITEM_CHARGE(wordrg6, con(0xf));
        vbool_1c = true;
        vw_2c = wordrg6;
      }
      else
      {
        if (ddata.mouse_unk0e != con(0xffffffff))
        {
          x16 wordrg405 = con(0x0);
          wordrg6 = con(0x800);
          for(;;)
          {
            if (wordrg405 >= con(0x4))
              break;
            if (ddata.hero[wordrg405].w36 != con(0x0))
              ddata.hero[wordrg405].w46 = wordrg6; // BUGFIX 4/2014
            wordrg405++;
          }
          SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x83), con(0xfe), ddata.hero[ddata.mouse_unk0e].b101, ddata.v1e0270, ddata.v1e0272, con(0x0), con(0x96), con(0x80));
        }
      }
    }
    else
    {
      if (wordrg6 != con(0xffffffff))
      {
        vbool_1c = true;
        wordrg6 &= con(0xffff3fff);
        wordrg6 |= vw_4c << con(0xe);
        SKW_MOVE_RECORD_TO(wordrg6, con(0x0), vw_0c, con(0xffffffff), vw_08);
      }
      else
      {
        x16 wordrg171 = SKW_GET_WALL_TILE_ANYITEM_RECORD(vw_0c, vw_08);
        wordrg5 = wordrg6;
        while (wordrg171 != con(0xfffffffe))
        {
          if (vw_4c == urshift(wordrg171, con(0xe)))
            wordrg5 = wordrg171;
          wordrg171 = SKW_GET_NEXT_RECORD_LINK(wordrg171);
        }
        if (wordrg5 != con(0xffffffff))
        {
          x16 wordrg170 = urshift(wordrg5 & con(0x3c00), con(0xa));
          if (wordrg170 >= con(0x5))
            if (wordrg170 <= con(0xa))
            {
              SKW_MOVE_RECORD_TO(wordrg5, vw_08, con(0xffffffff), vw_0c, con(0x0));
              vw_2c = wordrg5;
            }
        }
      }
    }
    break; // ugly, but that's because of all the continues before
    // probably can be arranged that the path-thingy can be placed here
  }
  if (vw_00 != con(0xffffffff))
  {
    recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(vw_00);
    if (!vbool_1c)
      if (argw0 != con(0xffffffff))
        SKW_APPEND_RECORD_TO(argw0, con(0xffffffff), vbool_1c ? 1 : 0, &recoptrrg5->u2.w);
    if (vw_2c != con(0xffffffff))
      SKW_APPEND_RECORD_TO(vw_2c, con(0xffffffff), con(0x0), &recoptrrg5->u2.w);
  }
  else
  {
    if (vbool_1c)
      SKW_REMOVE_OBJECT_FROM_HAND();
    if (vw_2c != con(0xffffffff))
      SKW_TAKE_OBJECT(vw_2c, true);
    ddata.v1e0488 = vbool_20;
  }
}

// TODO: serious original problem inside!
// was SKW_32cb_3672
void SKW_DRAW_ITEM(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, c_record* argprec1, bool argbool2, x16 argw3, bool argbool4)
{
  x16 wordrg5;
  x16 vw_00;
  x16 vw_04;
  x16 vw_0c; vw_0c = 0; // TODO: ORIGINAL BUG ! Problem, can reach it uninitialized
  x16 vw_10;
  x16 vw_14;
  x8 vb_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x8 vb_28;
  x8 vb_2c;
  x8 vb_30;
  x8 vb_34;

  vw_04 = eaxw;
  vw_00 = edxw;
  x16 wordrg6 = ebxw;
  wordrg5 = ecxw;
  if (argprec1 == NULL)
  {
    if (!argbool4)
      vw_0c = SKW_QUERY_OBJECT_5x5_POS(vw_04, ddata.v1e12c8);
    // there is no else here, and because of that vw_0c can stay uninitialized!
  }
  else
  {
    x16 wordrg22 = ((SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(argprec1->u4.b.b0)->u1e.w & con(0xf)) <= con(0x1)) ? 1 : 0;
    x16 wordrg41 = SKW_QUERY_GDAT_CREATURE_WORD_VALUE(argprec1->u4.b.b0, con(0x41));
    if (wordrg41 == con(0x0))
      wordrg41 = signedword(table1d6d86[wordrg22]);
    wordrg5 -= wordrg41;
    x16 wordrg40 = CUTX16(((unsignedlong(vw_04) >> con(0xe)) - signedlong(ddata.v1e12c8)) & con(0x3));
    if (vw_00 != con(0x3) || ddata.v1e12ce == con(0x0))
      vw_0c = con(0xc);
    else
      vw_0c = signedword(table1d6b76[ddata.v1d324a + 0x42]);
    if (!SKW_32cb_35c1(&vw_00, table1d6d76[wordrg22][wordrg40], signedword(table1d6d7e[wordrg22][wordrg40]), &vw_0c))
      return;
  }
  vw_14 = signedword(table1d6b15[vw_00]);
  if (!argbool4)
  {
    vw_1c = con(0x4) - (vw_0c / con(0x5)); // here vw_0c is initialized because of !argbool4
    if (vw_00 == con(0x0))
      if (vw_1c < con(0x2))
        return;
    vw_10 = SKW_QUERY_CREATURE_BLIT_RECTI(vw_00, t_rotate(0), vw_0c) | con(0x8000);
  }
  else
  {
    vw_1c = con(0x0);
    x16 wordrg177 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(ddata.v1e1054.s_00.b_08, con(0xc), con(0xfd), ddata.v1e1054.s_00.b_09);
    vb_18 = CUTX8(wordrg177);
    x16 wordrg23 = ddata.v1e1054.w_1c + signedword(CUTX8(urshift(wordrg177, con(0x8))));
    wordrg6 = table1d6b76[table1d6b76[2 * argw0 + 0x22] + 0x50] + wordrg23;
    wordrg5 = signedword(vb_18) + ddata.v1e1054.w_1e + signedword(table1d6b76[table1d6b76[2 * argw0 + 0x23] + 0x50]);
    vw_10 = ddata.v1e1054.w_18;
  }
  bool vbool_08 = false;
  x8 byterg2 = SKW_QUERY_CLS1_FROM_RECORD(vw_04);
  vb_34 = byterg2;
  vb_28 = SKW_QUERY_CLS2_FROM_RECORD(vw_04);
  if (byterg2 == con(0x14) && vb_28 < con(0x8))
  {
    if (argw3 == con(0x0))
      argw3 += SKW_GET_ADDRESS_OF_RECORD(vw_04)->u4.w & con(0x1);
    vbool_08 = true;
  }
  vb_30 = table1d6d6e[argw3].b0;
  vw_20 = con(0x0);
  if (table1d6afe[vw_00] != con(0x0))
  {
    if (vbool_08 && table1d6afe[vw_00] == con(0x1))
      vw_20 = con(0x1);
  }
  else
  {
    vw_24 = vw_0c % con(0x5); // ...but here is the danger!
    if (vw_24 != con(0x2) && !argbool4 || (vb_2c = table1d6d6e[argw3].b1, !SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(vb_34, con(0x1), vb_2c, vb_28)))
    {
      if (vbool_08 && !argbool4 && vw_24 > con(0x2))
        vw_20 = con(0x1);
    }
    else
      vb_30 = vb_2c;
  }
  if (argw0 != con(0xffffffff))
  {
    x16 wordrg41 = 2 * argw0;
    wordrg6 += signedword(table1d6b76[table1d6b76[wordrg41 + 0x22] + 0x50]);
    if (argprec1 == NULL)
      wordrg5 += signedword(table1d6b76[table1d6b76[wordrg41 + 0x23] + 0x50]);
  }
  x16 wordrg18 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(vb_34, con(0xc), vb_30, con(0xfe));
  vb_18 = CUTX8(wordrg18);
  if (wordrg18 != con(0x0))
  {
    wordrg6 += signedword(CUTX8(urshift(wordrg18, con(0x8))));
    wordrg5 += signedword(vb_18);
  }
  x16 wordrg40 = unsignedword(table1d6b76[vw_1c + 4 * vw_14 + 0x1]);
  SKW_QUERY_TEMP_PICST(vw_20, wordrg40, wordrg6, wordrg40, wordrg5, vw_14, vw_10, con(0x0), con(0xa), con(0xffff), vb_34, vb_28, vb_30);
  if (!argbool2)
    ddata.v1e118e.w_30 = con(0xfffffffe);
  SKW_DRAW_TEMP_PICST();
}

// was SKW_32cb_3991
void SKW_DRAW_PUT_DOWN_ITEM(x16 eaxw, x16 ebxw, c_record* ecxprec, x16 edxw)
{
  x16 wordrg5;
  c_aispec* aiptrrg1;
  c_record* prec_00;
  s_hex12* h12ptrrg4;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;

  x16 wordrg6 = eaxw;
  vw_18 = edxw;
  vw_1c = ebxw;
  prec_00 = ecxprec;
  if (eaxw == con(0xfffffffe) || (table1d6b15[vw_18] > con(0x3)))
    return;
  wordrg5 = con(0x0);
  if (ecxprec != NULL)
  {
    aiptrrg1 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(ecxprec->u4.b.b0);
    vw_10 = aiptrrg1->u1e.w;
    vw_14 = aiptrrg1->w20;
  }
  for(;;)
  {
    x16 wordrg107 = urshift(wordrg6 & con(0x3c00), con(0xa));
    if (wordrg107 >= con(0x5) && wordrg107 <= con(0xa))
    {
      x16 vw_04 = vw_1c;
      if ((((urshift(wordrg6, con(0xe))) - signedlong(ddata.v1e12c8)) & con(0x3)) == signedlong(vw_1c))
      {
        if (prec_00 == NULL)
        {
          SKW_DRAW_ITEM(wordrg6, con(0x0), con(0x0), vw_18, wordrg5, NULL, true, con(0x0), false);
          wordrg5++;
          wordrg5 &= con(0xf);
          if ((vw_18 == con(0x0)) || ((vw_18 == con(0x3)) && (vw_04 > con(0x1))))
          {
            h12ptrrg4 = &ddata.v1e1044[vw_18];
            vw_08 = signedword(h12ptrrg4->b_00);
            vw_0c = signedword(h12ptrrg4->b_01);
            x16 wordrg40 = SKW_1c9a_03cf(&vw_08, urshift(wordrg6, con(0xe)), &vw_0c);
            if (wordrg40 == con(0xffffffff) || SKW_IS_CREATURE_FLOATING(wordrg40) || (SKW_0cee_2df4(wordrg40) & con(0x2000)) != con(0x0))
              SKW_MAKE_PUT_DOWN_ITEM_CLICKABLE_ZONE(vw_1c, CUTX8(vw_18), con(0x1), wordrg6);
          }
        }
        else
        {
          if (((vw_10 & con(0x400)) == con(0x0)))
          {
            if ((urshift(vw_10, con(0x4)) & con(0xf)) == con(0x0))
            {
              SKW_QUERY_EXPANDED_RECT(vw_14, &ddata.v1e02f0[ddata.v1e0404].r0);
              ddata.v1e02f0[ddata.v1e0404].bb = con(0x2);
              ddata.v1e02f0[ddata.v1e0404].w8 = wordrg6;
              ddata.v1e02f0[ddata.v1e0404].ba = CUTX8(vw_18); // BUGFIX 4/2014
              ddata.v1e0404++;
              return;
            }
          }
          SKW_DRAW_ITEM(wordrg6, con(0x0), con(0x0), vw_18, wordrg5, prec_00, true, con(0x0), false);
          wordrg5++;
          wordrg5 &= con(0xf);
          if (((con(0x1) << CUTX8(vw_1c)) & SKW_48ae_01af(vw_10, con(0x0))) != con(0x0))
            SKW_MAKE_PUT_DOWN_ITEM_CLICKABLE_ZONE(vw_1c + con(0x4), CUTX8(vw_18), con(0x2), wordrg6);
        }
      }
    }
    wordrg6 = SKW_GET_NEXT_RECORD_LINK(wordrg6);
    if (wordrg6 == con(0xfffffffe))
      return;
  }
}

// was SKW_32cb_3b9d
void SKW_DRAW_STATIC_OBJECT(x16 eaxw, bool ebxbool, x32 edxl)
{
  x16 wordrg5;
  ui16 uwordrg5;
  const x8* bptrrg7;
  s_hex12* h12ptrrg4;
  x8* bptrrg41;
  bool flag;
  x16 vw_08;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_28;

  vw_08 = eaxw;
  x16 wordrg106 = vw_08;
  if (wordrg106 > con(0xf) || table1d6dd3[wordrg106] == con(0x0))
    return;
  h12ptrrg4 = &ddata.v1e1044[wordrg106];
  vw_1c = h12ptrrg4->s_02.warr_00[con(0x0)];
  vw_18 = h12ptrrg4->s_02.warr_00[con(0x2)];
  x16 vw_24 = signedword(table1d6de3[wordrg106][0]);
  x16 vw_20 = signedword(table1d6de3[wordrg106][1]);
  if (table1d6afe[wordrg106] >= con(0x0))
  {
    if (table1d6afe[wordrg106] != con(0x0))
      bptrrg7 = table1d6da1;
    else
      bptrrg7 = table1d6dba;
  }
  else
    bptrrg7 = table1d6d88;
  ui16 vuw_14 = con(0x0);
  for(;;)
  {
    x16 wordrg105;
    if (vw_08 != con(0x0))
      wordrg105 = con(0x18);
    else
      wordrg105 = con(0xe);
    if (vuw_14 > wordrg105)
    { // BUGFIX 4.2/2014
      if (ebxbool)
        SKW_32cb_2d8c(vw_18, edxl, vw_08);
      return;
    }
    vw_28 = unsignedword(bptrrg7[vuw_14]);
    x32 longrg1 = con(0x1) << bptrrg7[vuw_14];
    flag = (edxl & longrg1) == con(0x0);
    x32 vl_10 = edxl & longrg1;
    if (!flag)
    {
      x32 longrg1 = ddata.v1e104c[vw_08];
      if ((longrg1 & vl_10) != con(0x0))
        SKW_DRAW_PUT_DOWN_ITEM(vw_18, SKW_DIR_FROM_5x5_POS(vw_28), NULL, vw_08);
      x16 wordrg3 = signedword(table1d6e03[vw_28][0]) + vw_24;
      wordrg5 = vw_20 - signedword(table1d6e03[vw_28][1]);
      if (vw_1c == con(0x0) || (unsignedword(ddata.v1e1048[wordrg3].barr_00[wordrg5]) == vw_08))
      {
        x8 byterg1 = ddata.v1e1050[wordrg3].barr_00[wordrg5];
        if (byterg1 != con(0xffffffff) && (edxl & vl_10) != con(0x0))
        {
          x32 longrg2 = edxl;
          if (vw_28 != con(0xc))
            longrg2 &= con(0xbfffffff);
          if (SKW_SUMMARY_DRAW_CREATURE(ddata.v1e1044[byterg1].s_02.warr_00[con(0x2)], longrg2, signedword(byterg1)))
          {
            bptrrg41 = ddata.v1e1050[wordrg3].barr_00;
            bptrrg41[wordrg5] = con(0xffffffff);
            if (ddata.v1e1038[vw_08] != con(0x0))
            {
              uwordrg5 = vuw_14 - con(0x7);
              while (uwordrg5 < vuw_14)
              {
                if (((con(0x1) << bptrrg7[uwordrg5]) & ddata.v1e1038[vw_08]) != con(0x0))
                  SKW_DRAW_FLYING_ITEM(vw_18, unsignedword(bptrrg7[uwordrg5]), vw_08);
                uwordrg5++;
              }
            }
          }
        }
      }
      if ((ddata.v1e1038[vw_08] & vl_10) != con(0x0))
        SKW_DRAW_FLYING_ITEM(vw_18, vw_28, vw_08);
    }
    vuw_14++;
  }
}

// was SKW_32cb_4cdf
void SKW_DRAW_DOOR_TILE(ui16 eaxuw)
{
  if (table1d6f4c[eaxuw] == con(0x0))
    return;
  x32 longrg3 = con(0x0);
  if (ddata.v1e1044[eaxuw].s_02.warr_00[con(0x3)] != con(0x5))
    longrg3 = con(0x40001000);
  SKW_DRAW_STATIC_OBJECT(eaxuw, eaxuw != con(0x0), con(0x3ff));
  x16 wordrg40 = con(0x0);
  x16 wordrg1 = con(0x0);
  bool skip = false; // added
  if (eaxuw < UI16CAST(con(0x7)))
  {
    if (eaxuw < UI16CAST(con(0x4)))
    {
      if (eaxuw == con(0x0))
      {
        if (longrg3 != con(0x0))
          SKW_DRAW_STATIC_OBJECT(eaxuw, false, con(0x1000));
        SKW_DRAW_DOOR(eaxuw, con(0x0), con(0x0), con(0x6));
        return;
      }
      if (eaxuw == con(0x3))
        wordrg1 = con(0x7);
      else
        skip = true;
    }
    else if (eaxuw <= UI16CAST(con(0x4)))
    {
      wordrg1 = con(0x1);
      wordrg40 = con(0x4);
    }
    else if (eaxuw <= UI16CAST(con(0x5)))
    {
      wordrg1 = con(0x1);
      wordrg40 = con(0x2);
    }
    else
      wordrg1 = con(0x7);
  }
  else if (eaxuw <= UI16CAST(con(0x7)))
  {
    wordrg1 = con(0x1);
    wordrg40 = con(0x4);
  }
  else if (eaxuw < UI16CAST(con(0xc)))
  {
    if (eaxuw <= UI16CAST(con(0x8)))
    {
      wordrg1 = con(0x1);
      wordrg40 = con(0x2);
    }
    else if (eaxuw == con(0xb))
      wordrg1 = con(0x6);
    else
      skip = true;
  }
  else if (eaxuw <= UI16CAST(con(0xc)))
  {
    wordrg1 = con(0x2);
    wordrg40 = con(0x4);
  }
  else if (eaxuw <= UI16CAST(con(0xd)))
  {
    wordrg1 = con(0x4);
    wordrg40 = con(0x2);
  }
  else if (eaxuw > UI16CAST(con(0xf)))
    skip = true;
  if (!skip)
    SKW_DRAW_DOOR(eaxuw, wordrg40, longrg3, wordrg1);
  SKW_DRAW_STATIC_OBJECT(eaxuw, true, con(0x1fffc00));
  SKW_32cb_3edd(eaxuw);
}

// was SKW_32cb_5146
void SKW_DRAW_DUNGEON_TILES(void)
{
  ui16 uwordrg5;

  x32 longrg7 = con(0x1ffffff);
  // M_441B0: co-label is M_441AC
  for (ui16 vuw_00 = con(0x0); vuw_00 < con(0x14); vuw_00++)
  {
    bool doit1 = false;
    bool doit2 = false;
    SKW_IBMIO_USER_INPUT_CHECK();
    ui16 uwordrg6 = unsignedword(table1d7029[vuw_00]);
    x16 wordrg3 = table1d7029[vuw_00];
    uwordrg5 = ddata.v1e1044[wordrg3].s_02.warr_00[con(0x0)];
    x16 wordrg400 = ddata.v1e1044[wordrg3].s_02.warr_00[con(0x2)];
    if (wordrg3 <= con(0xf))
    {
      if (uwordrg5 < UI16CAST(con(0x5)))
      {
        if (uwordrg5 < UI16CAST(con(0x1)))
        {
          if (uwordrg5 != con(0x0))
            continue;
          if (wordrg400 == con(0xfffffffe))
          {
            SKW_DRAW_WALL_TILE(uwordrg6);
            continue;
          }
          SKW_SUMMARY_DRAW_CREATURE(wordrg400, con(0x1ffffff), uwordrg6);
          SKW_DRAW_WALL_TILE(uwordrg6);
          continue;
        }
        if (uwordrg5 <= UI16CAST(con(0x1)))
        {
          ;
        }
        else if (uwordrg5 == con(0x2))
          SKW_DRAW_PIT_TILE(uwordrg6);
        else
          continue;
        doit1 = true;
      }
      else if (uwordrg5 <= UI16CAST(con(0x5)))
        doit1 = true;
      else if (uwordrg5 < UI16CAST(con(0x11)))
      {
        if (uwordrg5 == con(0x10))
        {
          if (uwordrg6 == con(0x3))
            if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xe), con(0xb), con(0x40), ddata.v1e040e[SKW_GET_ADDRESS_OF_RECORD(ddata.v1e1044[con(0x3)].s_02.warr_00[con(0x4)])->u2.w & con(0x1)]) == con(0x0))
            {
              SKW_QUERY_TEMP_PICST(ddata.v1e12d0, con(0x2b), con(0x0), con(0x2b), con(0x0), con(0x2), SKW_QUERY_CREATURE_BLIT_RECTI(con(0x3), t_rotate(con(0x0)), con(0x2)), con(0xffffffff), ddata.v1d6c00, con(0xffff), con(0x8), ddata.v1d6c02, con(0x6));
              SKW_DRAW_TEMP_PICST();
            }
        }
        else
          continue;
        doit1 = true;
      }
      else if (uwordrg5 <= UI16CAST(con(0x11)))
      {
        SKW_DRAW_DOOR_TILE(uwordrg6);
        continue;
      }
      else if (uwordrg5 <= UI16CAST(con(0x12)))
      {
        SKW_DRAW_STAIRS_SIDE(uwordrg6);
        doit2 = true;
      }
      else if (uwordrg5 == con(0x13))
      {
        SKW_DRAW_STAIRS_FRONT(uwordrg6);
        doit2 = true;
      }
      else
        continue;
      if (doit1)
      {
        if (!SKW_DRAW_EXTERNAL_TILE(uwordrg6))
          longrg7 = con(0x1ffffff);
        else
          longrg7 = con(0x1fffc00);
        SKW_DRAW_PIT_ROOF(uwordrg6);
        doit2 = true;
      }
      if (doit2)
      {
        SKW_DRAW_STATIC_OBJECT(uwordrg6, true, longrg7);
        if (uwordrg5 == con(0x5))
          SKW_DRAW_TELEPORTER_TILE(uwordrg6, con(0x0), con(0x18));
        continue;
      }
    }
    if (uwordrg5 < UI16CAST(con(0x1)))
    {
      if (uwordrg5 != con(0x0))
        continue;
      if (wordrg400 == con(0xfffffffe))
      {
        SKW_DRAW_WALL_TILE(uwordrg6);
        continue;
      }
      SKW_SUMMARY_DRAW_CREATURE(wordrg400, con(0x1ffffff), uwordrg6);
      SKW_DRAW_WALL_TILE(uwordrg6);
      continue;
    }
    if (uwordrg5 <= UI16CAST(con(0x2)))
      SKW_DRAW_EXTERNAL_TILE(uwordrg6);
    else
    {
      if (uwordrg5 < UI16CAST(con(0x5)))
        continue;
      if (uwordrg5 <= UI16CAST(con(0x5)))
        SKW_DRAW_EXTERNAL_TILE(uwordrg6);
      else if (uwordrg5 != con(0x11))
        continue;
    }
    if (wordrg400 != con(0xfffffffe))
      SKW_SUMMARY_DRAW_CREATURE(wordrg400, con(0x1ffffff), uwordrg6);
  }
}

x16 SKW_1c9a_1b16(x16 eaxw, x16 edxw)
{
  c_record* recoptrrg1;

  x16 wordrg4 = ddata.v1e08b0;
  if (wordrg4 == con(0xffffffff))
    ddata.v1e08b0 = wordrg4 = SKW_GET_TILE_RECORD_LINK(ddata.v1e08a8, ddata.v1e08aa);
  for(;;)
  {
    if (wordrg4 == con(0xfffffffe))
      return con(0xffffffff);
    x16 wordrg1 = urshift(wordrg4 & con(0x3c00), con(0xa));
    if (wordrg1 > con(0x3))
      return con(0xffffffff);
    if (wordrg1 == con(0x2) && (recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg4), (recoptrrg1->u2.w & con(0x6)) == con(0x4)))
    {
      x16 wordrg2 = urshift(recoptrrg1->u2.w, con(0x3));
      if ((((wordrg2 >> con(0x9)) & con(0xf)) == eaxw) && (((wordrg2 >> con(0x5)) & con(0xf)) == signedlong(edxw)))
        return wordrg2 & con(0x1f);
    }
    wordrg4 = SKW_GET_NEXT_RECORD_LINK(wordrg4);
  }
}

x16 SKW_1c9a_1a48(x16 eaxw, x16 edxw)
{
  c_record* recoptrrg1;
  x16 vw_00;
  x16 vw_04;

  vw_04 = edxw;
  if (eaxw != con(0x1))
  {
    vw_00 = con(0xffffffff);
  }
  else
  {
    vw_00 = con(0x2);
  }
  x16 wordrg4 = ddata.v1e08b0;
  if (wordrg4 == con(0xffffffff))
    wordrg4 = ddata.v1e08b0 = SKW_GET_TILE_RECORD_LINK(ddata.v1e08a8, ddata.v1e08aa);
  for(;;)
  {
    if (wordrg4 == con(0xfffffffe))
      return con(0xffffffff);
    x16 wordrg1 = urshift(wordrg4 & con(0x3c00), con(0xa));
    if (wordrg1 > con(0x3))
      return con(0xffffffff);
    if (wordrg1 == con(0x2) && (recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg4), (recoptrrg1->u2.w & con(0x6)) == con(0x4)))
    {
      x16 wordrg11 = urshift(recoptrrg1->u2.w, con(0x3));
      x16 wordrg3 = (wordrg11 >> con(0x9)) & con(0xf);
      if (wordrg3 == eaxw || (wordrg3 == vw_00 && ((recoptrrg1->u2.w & con(0x1)) != con(0x0))))
      {
        if ((vw_04 & (con(0x1) << CUTX8((wordrg11 >> con(0x5)) & con(0xf)))) != con(0x0))
        {
          wordrg11 &= con(0x1f);
          return wordrg11;
        }
      }
    }
    wordrg4 = SKW_GET_NEXT_RECORD_LINK(wordrg4);
  }
}

void SKW_ALLOC_CAII_TO_CREATURE(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_record* recoptrrg6;
  s_d556* sd5ptrrg5;
  c_350* ptrrg2;
  x16 vw_04;
  x16 vw_08;

  vw_08 = edxw;
  vw_04 = ebxw;
  recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  if (recoptrrg6->u4.b.b1 != con(0xffffffff))
    return;
  x16 vw_00 = ulrshift(recoptrrg6->ue.w, con(0x5), con(0xf));
  recoptrrg6->ue.b.b1 |= con(0x4);
  // M_20799:
  for(;;)
  {
    sd5ptrrg5 = ddata.v1e089c;
    ui16 uwordrg26 = con(0x0);
    ui16 uwordrg42 = ddata.v1e08a0;
    // M_207B4:
    while (uwordrg26 < uwordrg42)
    {
      if (sd5ptrrg5->w00 < con(0x0))
      {
        recoptrrg6->ue.b.b1 &= con(0xfffffffb);
        recoptrrg6->ue.w |= (vw_00 & con(0x1)) << con(0xa);
        ddata.v1d4020++;
        DM2_ZERO_MEMORY(DOWNCAST(s_d556, sd5ptrrg5), sizeof(s_d556));
        sd5ptrrg5->w00 = eaxw & con(0x3ff);
        recoptrrg6->u4.b.b1 = CUTX8(uwordrg26);
        sd5ptrrg5->w02 = con(0xffffffff);
        sd5ptrrg5->u.v.b1a = con(0xffffffff);
        ptrrg2 = SKW_13e4_0004(eaxw, CUTX8(vw_04), con(0x22), CUTX8(vw_08));
        SKW_14cd_0802();
        sd5ptrrg5->barr04[con(0x2)] = CUTLX8((ddata.longmallocx >> con(0x2)) - con(0x1));
        sd5ptrrg5->barr04[con(0x0)] = CUTLX8(ddata.longmallocx) - con(0x7f);
        sd5ptrrg5->u0c.b.b0 &= con(0xffffffe0);
        x16 wordrg405 = sd5ptrrg5->u0c.w | (unsignedword(ddata.s350.v1e0562.u.b.b_06) & con(0x1f));
        sd5ptrrg5->u0c.w = wordrg405;
        sd5ptrrg5->u0c.w = (wordrg405 & con(0xfffffc1f)) | ((unsignedword(ddata.s350.v1e0562.u.b.b_07) & con(0x1f)) << con(0x5));
        sd5ptrrg5->u0c.b.b1 &= con(0x3);
        sd5ptrrg5->u0c.w |= (ddata.v1d3248 & con(0x3f)) << con(0xa);
        ddata.s350.v1e07d8.b1 = con(0x0);
        sd5ptrrg5->u.v.barr16[con(0x0)] = con(0xffffffff);
        sd5ptrrg5->u.v.barr16[con(0x1)] = con(0xffffffff);
        sd5ptrrg5->barr04[con(0x3)] = con(0x0);
        SKW_1c9a_0cf7(vw_08, vw_04);
        if (recoptrrg6->w8 != con(0xffffffff))
          sd5ptrrg5->u.v.b1a = con(0x0);
        else
          sd5ptrrg5->u.v.b1a = con(0x11);
        if ((ddata.s350.v1e0552->u0.b.b0 & con(0x1)) == con(0x0))
        {
          ddata.s350.v1e054e->ua.b.b1 |= con(0xffffff80);
          ddata.s350.v1e054e->ua.b.b1 &= con(0xffffffbf);
          SKW_CREATURE_SOMETHING_1c9a_0a48();
        }
        SKW_13e4_0329(ptrrg2);
        return;
      }
      sd5ptrrg5++;
      uwordrg26++;
    }
    ui16 uwordrg25 = ddata.v1d4020;
    for(;;)
    {
      if (uwordrg25 > ddata.v1d4020)
        break;
      if (SKW_RECYCLE_A_RECORD_FROM_THE_WORLD(con(0x4), con(0xff)) == con(0xffffffff))
        SKW_RAISE_SYSERR(con(0x47));
    }
  }
}

bool SKW_1c9a_38a8(void)
{
  x16 wordrg5;
  x16* wptrrg5;
  bool retflag;
  u_bbw vs_00[0x8];

  retflag = false;
  SKW___SET_CURRENT_THINKING_CREATURE_WALK_PATH();
  x16 wordrg6 = con(0x0);
  x16 wordrg21 = ddata.s350.v1e07d8.w4;
  for(;;)
  {
    if (wordrg6 >= ddata.s350.v1e0674)
      return retflag;
    if (ddata.s350.v1e0678[wordrg6].s_00.b_07 == ddata.s350.v1e07d8.b3 && wordrg21 == ddata.s350.v1e0678[wordrg6].u_08.w)
      break;
    wordrg6++;
  }
  if (wordrg6 != con(0x0))
    SKW_COPY_MEMORY(DOWNCAST(c_sizex16, &ddata.s350.v1e0678[wordrg6]), con(0x16), DOWNCAST(c_sizex16*, ddata.s350.v1e0678));
  ddata.s350.v1e0678[0].s_00.b_00 = con(0x0);
  vs_00[0x4].w = ddata.v1d3248;
  SKW_1c9a_0648(urshift(ddata.s350.v1e07d8.w8, con(0xa)));
  vs_00[0x2].w = ulrshift(ddata.s350.v1e07d8.w8, con(0x6), con(0xb));
  wordrg5 = ddata.s350.v1e07d8.w8 & con(0x1f);
  if (SKW_1c9a_1bd8(wordrg5, con(0x2), vs_00[0x2].w, con(0x1), ddata.s350.v1e0678, vs_00) == con(0x0) && (ddata.s350.v1e0678[0].s_00.b_06 == con(0x0)))
  {
    x16 wordrg3 = unsignedword(ddata.s350.v1e0562.u.b.b_06);
    x16 wordrg4 = unsignedword(ddata.s350.v1e0562.u.b.b_07);
    x16 wordrg61 = unsignedword(ddata.s350.v1e07d8.b1);
    if (wordrg61 != con(0x0))
    {
      SKW_1c9a_0648(vs_00[0x4].w);
      vs_00[0x6].w = con(0x5);
      SKW___SET_CURRENT_THINKING_CREATURE_WALK_PATH();
      for(;;)
      {
        wptrrg5 = &ddata.s350.v1e07e6[(unsignedword(ddata.s350.v1e07d8.b0) - wordrg61)];
        x16 wordrg2 = wordrg4;
        wordrg4 = wordrg3;
        if (!SKW_CREATURE_GO_THERE(ddata.s350.v1e0673, wordrg2, con(0xffffffff), wordrg4, con(0xffffffff), *wptrrg5 & con(0x7)))
          break;
        if (ulrshift(*wptrrg5, con(0x8), con(0xb)) != ddata.v1e08a8)
          break;
        if (ulrshift(*wptrrg5, con(0x3), con(0xb)) != ddata.v1e08aa)
          break;
        wordrg4 = (ddata.v1e08ac != ddata.v1d3248) ? 1 : 0;
        if (ulrshift(*wptrrg5, con(0x2), con(0xf)) != wordrg4)
          break;
        SKW_1c9a_0648(ddata.v1e08ac);
        wordrg3 = ddata.v1e08a8;
        wordrg4 = ddata.v1e08aa;
        wordrg61--;
        if (wordrg61 <= con(0x0))
        {
          retflag = true;
          break;
        }
        if (--vs_00[0x6].w <= con(0x0))
        {
          retflag = true;
          break;
        }
      }
    }
    else
    {
      if ((wordrg3 != wordrg5) || (wordrg4 != vs_00[0x2].w))
        retflag = false;
      else
      {
        if (ddata.v1d3248 == vs_00[0x4].w)
          retflag = true;
        else
          retflag = false;
      }
    }
  }
  SKW_1c9a_0648(vs_00[0x4].w);
  return retflag;
}

// was SKW_32cb_0008
bool SKW_LOAD_GDAT_INTERFACE_00_0A(void)
{
  x16 wordrg5;
  c_record* recoptrrg6;
  x16 vw_00;
  x16 vw_04;
  x16 vw_08;

  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(ddata.v1e0270, ddata.v1e0272);
  // M_3C0A3: co-label M_3C1CC
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg5))
  {
    wordrg5 = wordrg1;
    if (wordrg5 == con(0xfffffffe))
      return false;
    x16 wordrg14 = urshift(wordrg5 & con(0x3c00), con(0xa));
    if (wordrg14 > con(0x3))
      return false;
    if (wordrg14 != con(0x2) || (recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(wordrg5), (recoptrrg6->u2.w & con(0x6)) != con(0x2)))
      continue;
    x16 wordrg13 = urshift(urshift(recoptrrg6->u2.w, con(0x3)), con(0x8)) & con(0x1f);
    if (wordrg13 < con(0xf))
      continue;
    bool doit = false; // added
    if (wordrg13 <= con(0xf))
    {
      vw_08 = con(0x4);
      doit = true;
    }
    if (wordrg13 == con(0x10))
    {
      vw_08 = con(0x5);
      doit = true;
    }
    if (doit)
    {
      x16 wordrg101 = R_3D93B(vw_08, unsignedword(CUTX8(urshift(recoptrrg6->u2.w, con(0x3)))), &vw_04, con(0x0), &vw_00);
      if (wordrg101 >= con(0x0))
      {
        R_3BF83(vw_04, wordrg101, ddata.v1e0258, vw_00);
        SKW_QUEUE_NOISE_GEN2(con(0xa), con(0x88), con(0xfe), CUTX8(urshift(recoptrrg6->u2.w, con(0x3))), ddata.v1e0270, ddata.v1e0272, con(0x1), con(0x8c), con(0x80));
        if (vw_08 == con(0x4))
          recoptrrg6->u2.b.b0 |= con(0x1);
        return true;
      }
    }
  }
}

bool SKW_WIELD_WEAPON(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1)
{
  c_hero* heroptrrg5;
  x16 vw_00;
  x16 vw_04;
  x16 vw_08;

  vw_08 = eaxw; // BUGFIX 4/2014
  vw_04 = edxw;
  vw_00 = ecxw;
  heroptrrg5 = &ddata.hero[eaxw];
  if ((ddata.v1e0b4c == con(0xffffffff)) || SKW_GET_CREATURE_AT(ebxw, ecxw) == con(0xffffffff))
    return false;
  x16 wordrg6 = unsignedword(heroptrrg5->b1d);
  ui16 uwordrg1 = (unsignedword(heroptrrg5->b1d) + con(0x4) - unsignedword(heroptrrg5->b1c)) & con(0x3);
  bool doit = false;
  if (uwordrg1 >= con(0x2))
  {
    x16 wordrg4;
    if (uwordrg1 <= con(0x2))
    {
      wordrg4 = con(0x3);
      doit = true;
    }
    else if (uwordrg1 == con(0x3))
    {
      wordrg4 = con(0x1);
      doit = true;
    }
    if (doit)
    {
      wordrg4 += wordrg6;
      wordrg4 &= con(0x3);
      if (SKW_GET_PLAYER_AT_POSITION(wordrg4) != con(0xffffffff))
      {
        ddata.v1e0b7c = con(0xffffffff);
        ddata.v1e0b6c = DM2_MAX(con(0x1), con(0x8) - SKW_UPDATE_GLOB_VAR(con(0x42), con(0x3), true));
        return false;
      }
    }
  }
  if (vw_04 == con(0x1))
    if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(ddata.v1e0b4c) & con(0x20)) == con(0x0))
      return false;
  x16 wordrg3 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0xa));
  x16 wordrg402 = wordrg3;
  x16 wordrg61 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0xb));
  if (SKW_QUERY_CUR_CMDSTR_ENTRY(con(0xf)) != con(0x0))
  {
    wordrg3 |= con(0x8000);
    wordrg402 = wordrg3;
  }
  ddata.v1e0b7c = SKW_CALC_PLAYER_ATTACK_DAMAGE(heroptrrg5, ddata.v1e0b4c, ebxw, vw_08, vw_00, wordrg402, wordrg61, argw0, argw1);
  return true;
}

void SKW_2759_12e6(void)
{
  s_size8* sptrrg3;
  c_hero* heroptrrg1;
  x16 vw_08;

  vw_08 = con(0xffffffff);
  // M_310B0:
  for (x16 vw_04 = con(0x0); vw_04 < ddata.savegamew2; vw_04++)
    // M_3109B: co-label M_31097
    for (x16 vw_00 = con(0x0); vw_00 <= con(0x1); vw_00++)
    {
      x16 wordrg2 = vw_00;
      x16 wordrg61 = vw_04;
      sptrrg3 = &ddata.v1e0adc[wordrg61][wordrg2];
      if (sptrrg3->w2 == con(0x0))
        continue;
      heroptrrg1 = &ddata.hero[wordrg61];
      if (heroptrrg1->w36 != con(0x0))
      {
        if (sptrrg3->w6 == heroptrrg1->warrc3[wordrg2])
        {
          if (sptrrg3->b4 == con(0x0))
          {
            sptrrg3->w2 -= con(0x1);
            vw_08 = ddata.v1e0b76;
            ddata.v1e0b76 = vw_00;
            SKW_IS_ITEM_HAND_ACTIVABLE(vw_04, wordrg2, sptrrg3->w6);
            SKW_ENGAGE_COMMAND(vw_04, unsignedword(sptrrg3->b5) | con(0x8000));
            if (SKW_RAND16(sptrrg3->w0 + con(0x1)) == con(0x0))
              if (R_30DEA(wordrg61))
              {
                sptrrg3->w0 = con(0x0);
                sptrrg3->w2 = sptrrg3->w0;
                sptrrg3->b4 = CUTX8(sptrrg3->w0);
              }
            ddata.v1e0b76 = vw_08;
          }
          else
            sptrrg3->b4 = con(0x0);
          continue;
        }
      }
      sptrrg3->w2 = con(0x0);
    }
  if (ddata.v1e0b74 != con(0x0) && vw_08 >= con(0x0))
    if (vw_08 <= con(0x1))
    {
      x16 wordrg21 = ddata.v1e0b76;
      x16 wordrg6 = ddata.v1e0b74 - con(0x1);
      SKW_IS_ITEM_HAND_ACTIVABLE(wordrg6, wordrg21, ddata.hero[wordrg6].warrc3[wordrg21]);
    }
}

// TODO: ORIGINAL BUG - problem inside
bool SKW_19f0_2813(x8 eaxb, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x16 argw2)
{
  c_record* recoptrrg5;
  x16 vw_00;
  x16 vw_04;
  x8 vb_08;

  // SPX: variables moved here
	x16 wordrg406;
	x16 wordrg62;
	x16 wordrg61;
	x16 wordrg101;
	bool skip = false;

  vb_08 = eaxb;
  vw_04 = ecxw;
  vw_00 = unsignedword(eaxb & con(0xffffff80));
  if (vw_00 != con(0x0))
    vb_08 &= con(0x7f);
  if ((ddata.s350.v1e057e & con(0x1)) == con(0x0))
    goto M_exit;
  if (vw_04 != con(0xffffffff))
  {
    if (edxw == vw_04 && ebxw == argw0)
      goto M_exit;
  }
  else
  {
    vw_04 = table1d27fc[argw1] + edxw;
    argw0 = table1d2804[argw1] + ebxw;
  }
  if (vw_04 < con(0x0) || vw_04 >= ddata.savegamewa)
    goto M_exit;
  if (argw0 < con(0x0) || argw0 >= ddata.savegamewb)
    goto M_exit;
  if (edxw != vw_04 && ebxw != argw0)
    goto M_exit;
  if (argw1 == con(0xffffffff))
    argw1 = SKW_CALC_VECTOR_DIR(edxw, vw_04, argw0, ebxw);
  SKW_19f0_045a(vw_04, argw0);
  if ((ddata.v1e08ae & con(0x10)) == con(0x0))
    goto M_exit;
  if (ddata.v1e08b0 == con(0xffffffff))
    ddata.v1e08b0 = SKW_GET_TILE_RECORD_LINK(ddata.v1e08a8, ddata.v1e08aa);
   wordrg406 = ddata.v1e08b0;
   wordrg62 = con(0x0);
  skip = false; // added
  for (;; wordrg406 = SKW_GET_NEXT_RECORD_LINK(wordrg406))
  {
    if (wordrg406 == con(0xfffffffe))
      break;
    x16 wordrg11 = urshift(wordrg406 & con(0x3c00), con(0xa));
    if (wordrg11 > con(0x3))
      break;
    if (wordrg11 != con(0x3))
      continue;
    if ((wordrg406 >> con(0xe)) != ((argw1 + con(0x2)) & wordrg11))
      continue;
    recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg406);
    wordrg62 = ((recoptrrg5->u2.w & con(0x7f)) == con(0x26)) ? 1 : 0;
    if (wordrg62 != con(0x0))
      break;
    // TODO: ORIGINAL BUG in the following line. wordrg62 was RG1W which can never be smth except 0 or 1 now!
    if (wordrg62 == con(0x4a) && ((recoptrrg5->u4.b.b0 & con(0x1)) == con(0x0)))
    {
      skip = true;
      break;
    }
  }
  if (!skip)
  {
    if (wordrg62 == con(0x0))
      goto M_exit;
    x16 wordrg404 = unsignedword(ddata.s350.v1e054e->u4.b.b0);
    if (urshift(recoptrrg5->u2.w, con(0x7)) != wordrg404 || (recoptrrg5->u4.b.b0 & con(0x4)) == con(0x0))
      goto M_exit;
  }
   wordrg61 = argw2;
   wordrg101 = SKW_19f0_266c(ddata.v1e08b0, vb_08, wordrg61, (argw1 + con(0x2)) & con(0x3));
  if (wordrg101 != con(0xffffffff))
    if (SKW_19f0_2723(wordrg101, wordrg61, ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe)), unsignedword(vb_08)))
    {
      if (vw_00 != con(0x0) && !SKW_19f0_0559(argw1))
      {
        ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
        ddata.s350.v1e0556->u.v.u18.w |= vw_04 & con(0x1f);
        ddata.s350.v1e0556->u.v.u18.w = (ddata.s350.v1e0556->u.v.u18.w & con(0xfffffc1f)) | ((argw0 & con(0x1f)) << con(0x5));
        ddata.s350.v1e0556->u.v.u18.b.b1 &= con(0x3);
        ddata.s350.v1e0556->u.v.u18.w |= ((ddata.v1d3248 & con(0x3f)) << con(0xa));
        ddata.s350.v1e0556->u.v.b1d = CUTX8(argw1);
        ddata.s350.v1e0556->u.v.b1b = CUTX8(argw1);
        ddata.s350.v1e0556->u.v.b1e = CUTX8(argw2);
        ddata.s350.v1e0556->u.v.b20 = vb_08;
        if (vb_08 != con(0x0))
        {
          if (vb_08 != con(0x1))
            ddata.s350.v1e0556->u.v.b1a = con(0x31);
          else
            ddata.s350.v1e0556->u.v.b1a = con(0x30);
        }
        else
          ddata.s350.v1e0556->u.v.b1a = con(0x2f);
        if ((vb_08 != con(0x0)) || (UI16CAST(recoptrrg5->u4.w & con(0x18)) >= UI16CAST(con(0x10))))
          ddata.s350.v1e056f = con(0xfffffffe);
        else
          ddata.s350.v1e056f = con(0xfffffffc);
      }
      return true;
    }
M_exit: // M_1F6CF
  if (vw_00 != con(0x0))
    ddata.s350.v1e056f = con(0xfffffffd);
  return false;
}

bool SKW_19f0_13aa(x16 eaxw, x16 edxw)
{
  x16 wordrg5;
  c_record* recoptrrg1;

  wordrg5 = con(0x0);
  // M_1D5E9:
  for(;;)
  {
    bool skip = false;
    bool pass = false;
    if ((table1d607e[ddata.s350.v1e0584].u.b[1] & con(0x4)) == con(0x0))
    {
      if ((ddata.s350.v1e054e->ua.w & con(0x80)) == con(0x0))
      {
        if (((ddata.s350.v1e0552->u0.b.b0 & con(0x4)) != con(0x0) || unsignedword(ddata.s350.v1e0562.u.b.b_06) != eaxw) || unsignedword(ddata.s350.v1e0562.u.b.b_07) != edxw)
          skip = true;
        else
        {
          if (wordrg5 != ((ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) + con(0x2)) & con(0x3)))
            skip = true;
        }
      }
      if (!skip)
        if ((SKW_RAND() & con(0x7)) != con(0x0))
          pass = true;
    }
    if (!pass)
    {
      x16 wordrg6 = eaxw;
      x16 vw_08 = edxw;
      x16 vw_0c = con(0x0);
      bool boolrg1;
      do
      {
        vw_0c++;
        if (vw_0c >= con(0x3))
          break;
        wordrg6 += table1d27fc[wordrg5];
        vw_08 += table1d2804[wordrg5];
        if (wordrg6 < con(0x0) || wordrg6 >= ddata.savegamewa)
          break;
        if (vw_08 < con(0x0) || vw_08 >= ddata.savegamewb)
          break;
        x16 wordrg1 = SKW_GET_WALL_TILE_ANYITEM_RECORD(wordrg6, vw_08);
        x16 wordrg2;
        for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg2))
        {
          wordrg2 = wordrg1;
          if (wordrg2 == con(0xfffffffe))
            break;
          if (urshift(wordrg2 & con(0x3c00), con(0xa)) == con(0xe))
          {
            recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg2);
            if (ulrshift(ddata.savegametimarrp[recoptrrg1->u6.w].v.w_08, con(0x4), con(0xe)) == ((wordrg5 + con(0x2)) & con(0x3)))
              if (SKW_075f_06bd(recoptrrg1, recoptrrg1->u2.w) != con(0x0))
                return true;
          }
        }
        if (wordrg6 != unsignedword(ddata.s350.v1e0562.u.b.b_06))
          boolrg1 = true;
        else if (unsignedword(ddata.s350.v1e0562.u.b.b_07) == vw_08)
          boolrg1 = false;
        else
          boolrg1 = true;
      } while (!boolrg1 || !R_1BAAD(wordrg6, vw_08));
    }
    wordrg5++;
    if (wordrg5 >= con(0x4))
      return false;
  }
}

void SKW_QUERY_MESSAGE_TEXT(t_text* eaxt, x16 ebxw, x16 edxw)
{
  c_record* recoptrrg1;
  x16* wptrrg7;
  t_text* tptrrg5;
  const t_text* tptrrg2;
  t_text* tp_00;
  t_text t_04[0x80];
  x16 vw_84;
  x16 vw_88;
  x8 vb_8c;
  x8 vb_90;

  // SPX: moved variables to avoid goto problem
	x16 wordrg402;

  bool skip = false; // added
  tp_00 = eaxt;
  x16 wordrg6 = con(0x0);
  tptrrg5 = t_04;
  vb_90 = con(0xffffffff);
  if (urshift(edxw & con(0x3c00), con(0xa)) != con(0x7))
    recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(edxw);
  else
  {
    recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(edxw);
    x16 wordrg49 = recoptrrg1->u2.w;
    x16 wordrg32 = urshift(wordrg49, con(0xa));
    if (wordrg32 != con(0x0))
    {
      vb_90 = CUTX8(wordrg32);
      skip = true;
    }
    else
    {
      wordrg49 &= con(0x3ff);
      recoptrrg1 = UPCAST(c_record, DOWNCAST(c_record, ddata.savegameparr5[2]) + (unsignedlong(wordrg49) << con(0x2))); // TODO: casts have to stay here, because it seems that records are overlapping!
    }
  }
  if (!skip)
  {
    x16 wordrg48 = ulrshift(recoptrrg1->u2.w, con(0xd), con(0xe));
    if (wordrg48 != con(0x0))
    {
      if (wordrg48 != con(0x1))
        goto M_exit;
      vw_84 = urshift(recoptrrg1->u2.w, con(0x3));
      if ((urshift(vw_84, con(0x8)) & con(0x1f)) != con(0xe))
        goto M_exit;
    }
    if ((recoptrrg1->u2.b.b0 & con(0x1)) == con(0x0) && ((ebxw & con(0x8000)) == con(0x0)))
      goto M_exit;
    if (wordrg48 == con(0x1))
      vb_90 = CUTX8(urshift(recoptrrg1->u2.w, con(0x3)));
  }
   wordrg402 = ebxw & con(0x7fff);
  if (wordrg402 == con(0x1))
  {
    *tptrrg5 = con(0xa);
    tptrrg5 += wordrg402;
  }
  vb_8c = con(0xa);
  if (vb_90 != con(0xffffffff))
    tptrrg5 += SKW_SK_STRLEN(SKW_QUERY_GDAT_TEXT(con(0x3), vb_90, tptrrg5, con(0x0)));
  else
  {
    x16 wordrg3 = con(0x0);
    vw_88 = con(0x0);
    wptrrg7 = &ddata.v1e03d0[urshift(recoptrrg1->u2.w, con(0x3))];
    for(;;)
    {
      x16 wordrg21;
      if (wordrg3 != con(0x0))
      {
        if (wordrg3 != con(0x1))
          wordrg21 = wordrg6 & con(0x1f);
        else
          wordrg21 = (wordrg6 >> con(0x5)) & con(0x1f);
      }
      else
      {
        wordrg6 = *wptrrg7++;
        wordrg21 = urshift(wordrg6, con(0xa)) & con(0x1f);
      }
      wordrg3++;
      wordrg3 %= con(0x3);
      if (vw_88 == con(0x0))
      {
        if (wordrg21 >= con(0x1c))
        {
          if (wordrg21 != con(0x1c))
          {
            if (wordrg21 > con(0x1e))
              break;
            vw_88 = wordrg21;
          }
          else
            *tptrrg5++ = vb_8c;
        }
        else
        {
          if (wordrg21 != con(0x1a))
          {
            if (wordrg21 != con(0x1b))
              wordrg21 += con(0x41);
            else
              wordrg21 = con(0x2e);
          }
          else
            wordrg21 = con(0x20);
          *tptrrg5++ = CUTX8(wordrg21);
        }
      }
      else
      {
        *tptrrg5 = NULLBYTE;
        if (vw_88 != con(0x1e))
          tptrrg2 = UPCAST(t_text, &table1d292c[wordrg21]);
        else
          tptrrg2 = &table1d282c[wordrg21 << con(0x3)];
        SKW_SK_STRCAT(tptrrg5, tptrrg2);
        tptrrg5 += SKW_SK_STRLEN(tptrrg2);
        vw_88 = con(0x0);
      }
    }
  }
M_exit: // M_E25F
  *tptrrg5 = NULLBYTE;
  SKW_FORMAT_SKSTR(t_04, tp_00);
}

void SKW_32cb_4185(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 wordrg5;
  x8* bptrrg21;
  x32* lptrrg2;
  c_record* recoptrrg1;
  s_8wordarray* sptrrg11;
  s_8wordarray* sptrrg12;
  x8* bptrrg13;
  s_hex12* h12ptrrg14;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;

  vw_08 = eaxw;
  vw_04 = edxw;
  vw_1c = eaxw;
  vw_10 = edxw;
  wordrg5 = ecxw;
  SKW_CALC_VECTOR_W_DIR(wordrg5, signedword(table1d6ad0[ebxw][0]), &vw_1c, signedword(table1d6ad0[ebxw][1]), &vw_10);
  x16 wordrg46 = ebxw;
  ddata.v1e1044[wordrg46].b_00 = CUTX8(vw_1c);
  ddata.v1e1044[wordrg46].b_01 = CUTX8(vw_10);
  sptrrg11 = &ddata.v1e1044[wordrg46].s_02;
  SKW_SUMMARIZE_STONE_ROOM(sptrrg11, vw_1c, vw_10, wordrg5);
  if (ddata.v1e025c != con(0x0) && (ebxw == con(0x0)))
  {
    if (ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x0)] != con(0x0))
    {
      if (ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x0)] == con(0x11))
      {
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x0)] = con(0x1);
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x1)] = ebxw;
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x5)] = con(0xff);
      }
    }
    else
    {
      if (ddata.v1e1044[con(0x3)].s_02.warr_00[con(0x0)] != con(0x5))
      {
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x3)] = con(0xff);
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x4)] = con(0xff);
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x5)] = con(0xff);
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x6)] = con(0xff);
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x7)] = ebxw;
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x2)] = con(0xfffffffe);
      }
      else
        ddata.v1e1044[con(0x0)].s_02.warr_00[con(0x0)] = con(0x5);
      wordrg5 = con(0x1);
      for (;; ddata.v1e1038[wordrg5] = ddata.v1e104c[wordrg5] = con(0x0), wordrg5++)
      {
        if (wordrg5 <= con(0x2))
        {
          sptrrg12 = &ddata.v1e1044[wordrg5].s_02;
          sptrrg12->warr_00[con(0x2)] = con(0xfffffffe);
          x16 help = wordrg5;
          sptrrg12->warr_00[con(0x1)] = ddata.v1e1044[con(0x3) + help].s_02.warr_00[con(0x1)] & con(0xe0);
          ui16 uwordrg43 = ddata.v1e1044[con(0x3) + help].s_02.warr_00[con(0x0)];
          sptrrg12->warr_00[con(0x0)] = uwordrg43;
          if (uwordrg43 < con(0x2))
          {
            if (uwordrg43 == con(0x0)) // was jug_tst16
            {
              sptrrg12->warr_00[con(0x6)] = con(0xff);
              sptrrg12->warr_00[con(0x5)] = con(0xff);
              sptrrg12->warr_00[con(0x4)] = con(0xff);
              sptrrg12->warr_00[con(0x3)] = con(0xff);
              sptrrg12->warr_00[con(0x7)] = con(0xffffffff);
              continue;
            }
          }
          else
          {
            if (uwordrg43 <= con(0x2))
            {
              sptrrg12->warr_00[con(0x0)] = con(0x1);
              sptrrg12->warr_00[con(0x1)] = con(0x0);
              continue;
            }
            if (uwordrg43 < con(0x5) || uwordrg43 > con(0x5) && uwordrg43 != con(0x10))
              continue;
          }
          sptrrg12->warr_00[con(0x5)] = con(0xff);
          continue;
        }
        break; // TODO: silly loopform because of continues
      }
    }
  }
  ddata.v1e1038[ebxw] = con(0x0);
  ddata.v1e104c[ebxw] = con(0x0);
  if (ebxw < con(0x10) && (ddata.v1e1044[ebxw].s_02.warr_00[con(0x0)] != con(0x0)))
  {
    bptrrg21 = &ddata.v1e1048[table1d6eb3[ebxw].b0].barr_00[table1d6eb3[ebxw].b1];
    wordrg5 = con(0x0);
    while (wordrg5 < con(0x5))
    {
      x16 wordrg11 = con(0x0);
      while (wordrg11 < con(0x4))
      {
        bptrrg21[wordrg11] = CUTX8(ebxw); // relative to the current barr_00-index
        wordrg11++;
      }
      bptrrg21 += sizeof(s_hex11bytes); // ugly! steps one struct ahead, keeps barr_00-index
      wordrg5++;
    }
  }
  wordrg5 = ddata.v1e1044[ebxw].s_02.warr_00[con(0x2)];
  if (wordrg5 == con(0xfffffffe))
    return;
  SKW_098d_000f(vw_08, signedword(table1d6eaf[ecxw]), &vw_0c, vw_04, &vw_18);
  for(;;)
  {
    x16 wordrg13 = urshift(wordrg5 & con(0x3c00), con(0xa));
    if (wordrg13 != con(0x4))
    {
      bool skip = false;
      x32 longrg1;
      if (wordrg13 != con(0xe))
      {
        if (wordrg13 < con(0x5) || wordrg13 > con(0xa) || ((h12ptrrg14 = &ddata.v1e1044[ebxw], h12ptrrg14->s_02.warr_00[con(0x0)] == con(0x1)) && (h12ptrrg14->s_02.warr_00[con(0x6)] == con(0x0))))
          skip = true;
        else
        {
          longrg1 = signedlong(ebxw) << con(0x2);
          lptrrg2 = ddata.v1e104c;
        }
      }
      else
      {
        longrg1 = signedlong(ebxw) << con(0x2);
        lptrrg2 = ddata.v1e1038;
      }
      if (!skip)
      {
        lptrrg2 += longrg1 / 4;
        *lptrrg2 |= con(0x1) << CUTX8(SKW_QUERY_OBJECT_5x5_POS(wordrg5, ddata.v1e12c8));
      }
    }
    else
    {
      x16 wordrg3;
      x16 wordrg14;
      if (ddata.v1e12ce == con(0x0) || ebxw != con(0x3))
        wordrg14 = SKW_QUERY_OBJECT_5x5_POS(wordrg5, con(0x0));
      else
        wordrg14 = SKW_ROTATE_5x5_POS(signedword(table1d6b76[ddata.v1d324a + 0x42]), t_rotate(table1d6eab[ecxw]));
      SKW_098d_000f(vw_1c, wordrg14, &vw_14, vw_10, &vw_20);
      recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg5);
      if (ebxw != con(0x0))
      {
        x16 wordrg21 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg1->u4.b.b0)->barr22[con(0x0)];
        SKW_32cb_4069(vw_0c, wordrg21, &vw_14, vw_18, &vw_20);
      }
      x16 wordrg402;
      if (ecxw > con(0x3))
      {
        wordrg3 = vw_18 - vw_20;
        wordrg402 = vw_0c - vw_14;
      }
      else
      {
        x16 wordrg2 = vw_14 - vw_0c;
        wordrg402 = vw_20 - vw_18;
        switch (ecxw)
        {
          case 0:
            wordrg3 = wordrg2;
            wordrg402 = vw_18 - vw_20;
          break;

          case 1:
            wordrg3 = wordrg402;
            wordrg402 = wordrg2;
          break;

          case 2:
            wordrg3 = vw_0c - vw_14;
          break;

          case 3:
            wordrg3 = vw_18 - vw_20;
            wordrg402 = vw_0c - vw_14;
          break;

          default: throw(THROW_DMABORT);
        }
      }
      if (wordrg402 < con(0x11) && DM2_ABS(wordrg3) < con(0xa))
      {
        for(;;)
        {
          if (wordrg402 < con(0x0))
            break;
          if (ddata.v1e1050[wordrg3 + con(0xa)].barr_00[wordrg402] == con(0xffffffff))
            break;
          wordrg402--;
        }
        if (wordrg402 >= con(0x0))
        {
          bptrrg13 = ddata.v1e1050[wordrg3 + con(0xa)].barr_00;
          bptrrg13 += wordrg402;
          *bptrrg13 = CUTX8(ebxw);
        }
      }
    }
    wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
    if (wordrg5 == con(0xfffffffe))
      return;
  }
}

// was SKW_32cb_3143
void SKW_DRAW_FLYING_ITEM(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 wordrg5;
  c_record* recoptrrg2;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_28;
  x8 vb_2c;
  x8 vb_30;
  x8 vb_34;
  bool flag;

  vw_08 = eaxw;
  vw_04 = edxw;
  if (eaxw == con(0xfffffffe))
    return;
  wordrg5 = SKW_DIR_FROM_5x5_POS(ebxw);
  if (wordrg5 == con(0xffffffff))
    return;
  vw_28 = signedword(table1d6b15[vw_04]);
  if (vw_28 == con(0x0) && wordrg5 >= con(0x2))
    return;
  vw_0c = signedword(table1d6afe[vw_04]);
  if (table1d6b43[vw_04] < con(0x0))
    return;
  vw_10 = signedword(ddata.v1e1044[vw_04].b_00);
  vw_1c = signedword(ddata.v1e1044[vw_04].b_01);
  for(;;)
  {
    x16 wordrg3 = vw_08;
    if (ebxw == SKW_QUERY_OBJECT_5x5_POS(wordrg3, ddata.v1e12c8))
    {
      if (urshift(wordrg3 & con(0x3c00), con(0xa)) == con(0xe))
      {
        x16 wordrg6 = vw_04;
        x16 vw_24 = SKW_QUERY_CREATURE_BLIT_RECTI(wordrg6, t_rotate(0), ebxw);
        x8 vb_14 = SKW_48ae_011a(wordrg3);
        if (vb_14 != con(0xffffffff))
        {
          recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(wordrg3);
          x8 byterg40 = SKW_QUERY_CLS1_FROM_RECORD(wordrg3);
          vb_2c = byterg40;
          vb_34 = SKW_QUERY_CLS2_FROM_RECORD(wordrg3);
          flag = byterg40 != con(0xd);
          x8 boolrg3 = !flag;
          bool skip = false; // added
          if ((flag || recoptrrg2->u4.b.b0 == con(0xffffffff)) && vw_28 == con(0x0))
          {
            vw_18 = con(0x40);
            wordrg6 = con(0x40);
          }
          else
          {
            wordrg6 = 2 * vw_28 - wordrg5 / 2;
            if (wordrg6 < con(0x0))
              skip = true;
            else
            {
              vw_18 = unsignedword(table1d6b76[wordrg6 + 0x1b]);
              wordrg6 = vw_18;
              if (boolrg3)
              {
                x32 longrg1 = unsignedlong(recoptrrg2->u4.b.b0);
                if (recoptrrg2->u2.w == con(0xffffff82))
                  longrg1 = longrg1 / 2 + con(0x80);
                longrg1 = ((longrg1 << con(0x7)) / con(0xff)) + con(0x1);
                vw_18 = DM2_MAX(con(0x8), SKW_CALC_STRETCHED_SIZE(CUTX16(longrg1) >> con(0x1), vw_18));
              }
            }
          }
          if (!skip)
          {
            x16 vw_20 = con(0x0);
            x8 byterg33 = vb_14;
            if (byterg33 != con(0x3))
            {
              x16 wordrg111 = ulrshift(ddata.savegametimarrp[recoptrrg2->u6.w].v.w_08, con(0x4), con(0xe));
              x16 wordrg21 = wordrg111 & con(0x1);
              if (wordrg21 == (ddata.v1e12c8 & con(0x1)))
              {
                if (byterg33 != con(0x0))
                {
                  if (byterg33 == con(0x2) || (byterg33 == con(0x1) && wordrg111 != ddata.v1e12c8))
                    vb_30 = con(0x8);
                  else
                    vb_30 = con(0xa);
                }
                else
                {
                  if (((vw_1c + vw_10) & con(0x1)) == con(0x0))
                  {
                    if (wordrg5 >= con(0x2))
                      vb_30 = con(0x8);
                    else
                      vb_30 = con(0x9);
                  }
                  else
                  {
                    vw_20 = con(0x2);
                    if (wordrg5 >= con(0x2))
                      vb_30 = con(0x9);
                    else
                      vb_30 = con(0x8);
                  }
                }
                if (vw_0c < con(0x1) && (vw_0c != con(0x0) || (wordrg5 != con(0x1) && wordrg5 != con(0x2))))
                  vw_20 |= con(0x1);
                if ((wordrg5 & con(0x1)) != con(0x0) && vb_2c == con(0xd))
                  vw_20 |= con(0x2);
              }
              else
              {
                vb_30 = con(0xc);
                if (byterg33 != con(0x0))
                {
                  if (((ddata.v1e12c8 + con(0x1)) & con(0x3)) == wordrg111)
                    vw_20 = con(0x1);
                }
                else
                {
                  if (wordrg5 == con(0x0))
                    vw_20 |= con(0x1);
                  else
                  {
                    if (wordrg5 == con(0x3))
                      vw_20 |= con(0x1);
                  }
                  if (((vw_1c + vw_10) & con(0x1)) != con(0x0))
                    vw_20 |= con(0x2);
                  else
                    vw_20 ^= con(0x1);
                }
              }
            }
            else
              vb_30 = con(0x8);
            x16 wordrg15;
            if (vb_2c != con(0xd))
              wordrg15 = con(0x3);
            else
              wordrg15 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xd), con(0xb), con(0x1), vb_34);
            wordrg15 &= vw_20;
            SKW_QUERY_TEMP_PICST(wordrg15, vw_18, con(0x0), vw_18, con(0x0), vw_28, vw_24 | con(0x8000), con(0x0), con(0xa), con(0xffff), vb_2c, vb_34, vb_30);
            ddata.v1e118e.w_20 += SKW_CALC_STRETCHED_SIZE(con(0x0), wordrg6);
            ddata.v1e118e.w_22 += SKW_CALC_STRETCHED_SIZE(con(0xffffffa4), wordrg6);
            SKW_DRAW_TEMP_PICST();
          }
        }
        else
        {
          x16 wordrg14 = SKW_GET_ADDRESS_OF_RECORD(wordrg3)->u2.w & con(0x3fff);
          wordrg3 >>= con(0xe);
          wordrg3 <<= con(0xe);
          wordrg14 |= wordrg3;
          SKW_DRAW_ITEM(wordrg14, con(0x0), con(0xffffffa4), wordrg6, con(0xffff), NULL, true, con(0x0), false);
        }
      }
    }
    vw_08 = SKW_GET_NEXT_RECORD_LINK(vw_08);
    if (vw_08 == con(0xfffffffe))
      return;
  }
}

void SKW_32cb_2d8c(x16 eaxw, x32 ebxl, x16 edxw)
{
  x8 byterg5;
  x16 wordrg5;
  c_record* recoptrrg5;
  c_record* recoptrrg6;
  t_gfxdata* gptrrg7;
  bool flag;
  x16 vw_04;
  x16 vw_08;
  c_rect rc_0c;
  x16 vw_20;
  x16 vw_28;
  x16 vw_30;
  x16 vw_34;
  x16 vw_38;
  x8 vb_3c;

  vw_08 = eaxw;
  vw_04 = edxw;
  if (eaxw == con(0xfffffffe))
    return;
  if (table1d6b5a[vw_04] < con(0x0))
    return;
  vw_38 = table1d6b15[vw_04];
  // M_41949:
  for (x16 vw_2c = con(0x0); vw_2c < con(0x5); vw_2c++)
  {
    x16 wordrg1 = signedword(table1d6d5a[ddata.v1e12c8][vw_2c]);
    vw_20 = wordrg1;
    vw_08 = eaxw;
    // note: in the original code the loopcondition is not requested when entering the
    // loop, but wordrg1 cannot have the -2 - value to break the loop, because there
    // is no matching value in the const table
    // M_41549:
    for (; wordrg1 != con(0xfffffffe); wordrg1 = SKW_GET_NEXT_RECORD_LINK(vw_08), vw_08 = wordrg1)
    {
      if (urshift(vw_08 & con(0x3c00), con(0xa)) != con(0xf))
        continue;
      vw_30 = urshift(vw_08, con(0xe));
      recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(vw_08);
      recoptrrg6 = recoptrrg5;
      vb_3c = recoptrrg5->u2.w & con(0x7f);
      bool pass = false; // added
      if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0xd), con(0x1), con(0x14), vb_3c))
      {
        if ((recoptrrg5->u2.b.b0 & con(0xffffff80)) == con(0x0))
          flag = vw_20 == vw_30;
        else
          flag = vw_20 == con(0xffffffff);
        if (!flag)
          continue;
        bool vbool_14 = false;
        byterg5 = vb_3c;
        vw_28 = SKW_RAND02() & DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xd), con(0xb), con(0x0), byterg5);
        if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xd), con(0xb), con(0x41), byterg5) == con(0x0))
          wordrg5 = urshift(recoptrrg6->u2.w, con(0x8));
        else
          wordrg5 = con(0xff);
        if (vw_04 != con(0x0))
        {
          if (vb_3c == con(0x30))
            SKW_UPDATE_GLOB_VAR(con(0x40), con(0x3), true);
          if (vw_38 == con(0x0) && vw_2c >= con(0x3))
            continue;
        }
        else
        {
          vbool_14 = true;
          if (vb_3c != con(0x30))
            pass = true;
          else
            SKW_UPDATE_GLOB_VAR(con(0x41), con(0x3), true);
        }
        if (!pass)
        {
          x16 wordrg7;
          if ((recoptrrg6->u2.b.b0 & con(0xffffff80)) == con(0x0))
            wordrg7 = table1d2752[vw_30];
          else
            wordrg7 = con(0xc);
          x16 wordrg156 = SKW_ROTATE_5x5_POS(wordrg7, t_rotate(ddata.v1e12c8));
          if (((con(0x1) << wordrg156) & ebxl) == con(0x0))
            continue;
          wordrg156 /= con(0x5);
          vw_34 = unsignedword(table1d6b76[4 * vw_38 + con(0x2) - wordrg156]);
          x16 wordrg25 = SKW_QUERY_CREATURE_BLIT_RECTI(vw_04, t_rotate(ddata.v1e0258), wordrg7) | con(0x8000);
          SKW_32cb_2cf3(vb_3c, vw_28, wordrg25, (vw_34 * DM2_MAX(con(0x30), wordrg5 + con(0x1))) >> con(0x8));
          x16 wordrg24 = wordrg5 - con(0xa0);
          if (wordrg24 > con(0x0))
          {
            x16 wordrg23 = con(0xc0) - wordrg24;
            if (vbool_14)
              if (signedword(table1d6b15[0]) == vw_38)
                wordrg23 = con(0x1e);
            ddata.v1e118e.w_22 = signedword(ddata.v1e118e.w_22) + (ddata.vx1d270c << con(0x3)) / wordrg23;
            if ((recoptrrg6->u2.b.b0 & con(0xffffff80)) == con(0x0))
            {
              x16 wordrg22 = (ddata.vx1d270a << con(0x3)) / (wordrg23 - con(0xa));
              if (vw_2c == con(0x1) || vw_2c == con(0x4))
                wordrg22 = -wordrg22;
              ddata.v1e118e.w_20 += wordrg22;
            }
          }
          ddata.v1e118e.w_20 = SKW_CALC_STRETCHED_SIZE(ddata.v1e118e.w_20, vw_34);
          ddata.v1e118e.w_22 = SKW_CALC_STRETCHED_SIZE(ddata.v1e118e.w_22, vw_34);
          SKW_DRAW_TEMP_PICST();
          if (!vbool_14)
            continue;
        }
      }
      else
      {
        if (vw_2c == con(0x4))
          SKW_DRAW_TELEPORTER_TILE(vw_04, vb_3c, con(0xd));
        continue;
      }
      x8 byterg2 = con(0x0);
      vw_30 = urshift(wordrg5, con(0x5));
      if (vw_30 != con(0x0))
      {
        byterg2 = con(0x1);
        if (vw_30 > con(0x3))
          byterg2 = con(0x2);
      }
      byterg5 = byterg2 + con(0x42);
      gptrrg7 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0xd), byterg5, vb_3c);
      s_gfxdatatail* ptrbeforerg7 = getprevious(gptrrg7);
      SKW_3e74_58bf(con(0xd), byterg5, vb_3c);
      x16 wordrg402 = ptrbeforerg7->w2 * ptrbeforerg7->w4 - con(0x28);
      SKW_44c8_20a4(gptrrg7, NULL, SKW_QUERY_EXPANDED_RECT(con(0x4), &rc_0c), UPCAST(t_gfxdata, ddata.bitmapptr), wordrg402 + CUTX16(SKW_RAND() & con(0x1f)), SKW_RAND16(wordrg402), getprevious(ddata.bitmapptr)->w2, con(0x0), SKW_32cb_0649(con(0xd), byterg5, con(0x0), vb_3c));
      SKW_3e74_5992(con(0xd), byterg5, vb_3c);
    }
  }
}

void SKW_QUERY_CREATURE_PICST(x16 eaxw, c_record* ebxprec, s_d556* ecxpd5, x16 edxw, x16 argw0)
{
  x16 wordrg5;
  x16* wptrrg1;
  s_4bytearray* s4baptrrg1;
  x16 vw_04;
  s_8bytearray vs_08;
  s_8bytearray vs_10;
  x16 vw_20;
  x16 vw_28;
  x16 vw_2c;
  x16 vw_30;
  x16 vw_34;
  x16 vw_38;
  x16 vw_3c;
  x8 vb_40;
  x8 vb_44;
  x8 vb_48;

  vw_04 = eaxw;
  bool vbool_1c = false;
  vb_48 = ebxprec->u4.b.b0;
  x16 wordrg6 = con(0x0);
  wptrrg1 = SKW_1c9a_02c3(ebxprec, SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(vb_48));
  R_4DA3(vb_48, wptrrg1 + con(0x1), &vs_10, *wptrrg1);
  if (ecxpd5 != NULL)
    vw_3c = unsignedword(ecxpd5->barr04[con(0x3)]);
  else
    vw_3c = con(0x0);
  x16 vw_24;
  if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(argw0) & con(0x4)) == con(0x0))
    vw_24 = (ddata.v1e12c8 - ulrshift(ebxprec->ue.w, con(0x6), con(0xe))) & con(0x3);
  else
    vw_24 = con(0x2);
  vb_44 = vs_10.barr_00[vw_24];
  if (SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0xf), con(0x1), vb_44, vb_48))
  {
    x16 wordrg144 = (unsignedword(vs_10.barr_00[0x7]) >> (2 * (con(0x3) - CUTX8(vw_24)))) & con(0x3);
    x16 wordrg402 = wordrg144 & con(0x1);
    if (wordrg402 != con(0x0))
      wordrg6 = con(0x1);
    else
    {
      if ((vw_3c & con(0x40)) != con(0x0))
        if ((wordrg144 & con(0x2)) != con(0x0))
          if (wordrg402 == con(0x0))
            wordrg6 = con(0x1);
    }
  }
  else
  {
    x8 byterg13 = CUTX8(vw_24) + con(0x2);
    vb_44 = byterg13 & con(0x3);
    byterg13 &= con(0x1);
    if (byterg13 != con(0x0))
    {
      wordrg6 = con(0x1);
      vbool_1c = true;
    }
    vb_44 = vs_10.barr_00[vb_44];
    if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0xf), con(0x1), vb_44, vb_48) == con(0x0))
    {
      wordrg6 = con(0x0);
      vb_44 = vs_10.barr_00[0x2];
    }
  }
  if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0xf), con(0x1), vb_44, vb_48))
  {
    vw_30 = wordrg6;
    wordrg6 = con(0x0);
    vb_44 = CUTX8(vw_24) + con(0xfffffffa);
    if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0xf), con(0x1), vb_44, vb_48))
    {
      if ((vw_24 & con(0x1)) == con(0x0))
      {
        vb_44 = con(0xfffffffc);
        wordrg6 = vw_30;
      }
      else
      {
        vb_40 = ((CUTX8(vw_24) + con(0x2)) & con(0x3)) + con(0xfffffffa);
        if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0xf), con(0x1), vb_40, vb_48))
        {
          vb_44 = con(0xfffffffc);
          wordrg6 = vw_30;
        }
        else
        {
          wordrg6 = con(0x1);
          vb_44 = vb_40;
          vbool_1c = true;
        }
      }
    }
    if (wordrg6 != vw_30)
      vbool_1c = true;
  }
  vw_38 = unsignedword(table1d6b71[edxw]);
  if (ecxpd5 == NULL || ecxpd5->u.v.b1a != con(0x13))
    SKW_COPY_MEMORY(DOWNCAST(s_8bytearray, &vs_10), con(0x8), DOWNCAST(s_8bytearray, &vs_08));
  else
  {
    vw_20 = ecxpd5->u.v.w10;
    R_4DA3(vb_48, &vw_20, &vs_08, ecxpd5->u.v.w0e);
    vs_10.barr_00[0x5] = vs_08.barr_00[0x5];
  }
  vw_28 = unsignedword(vs_08.barr_00[0x4]);
  if (vw_04 != con(0x3) || ddata.v1e12ce == con(0x0))
  {
    s4baptrrg1 = UPCAST(s_4bytearray, SKW_QUERY_GDAT_ENTRY_DATA_PTR(con(0xf), con(0x7), con(0xfe), vb_48));
    vw_38 = SKW_CALC_STRETCHED_SIZE(unsignedword(s4baptrrg1[vs_10.barr_00[0x5]].barr_00[vw_24]), vw_38);
  }
  else
  {
    wordrg5 = ddata.v1d324a;
    vw_28 = signedword(table1d6b76[wordrg5 + 0x42]);
    vw_38 = signedword(table1d6b76[wordrg5 + 0x49]);
    wordrg5 = con(0x0);
    vw_24 = con(0x0);
  }
  x16 wordrg3 = SKW_QUERY_CREATURE_BLIT_RECTI(vw_04, t_rotate(vw_24), vw_28) | con(0x8000);
  wordrg5 = signedword(vs_08.barr_00[0x6]);
  x16 wordrg2 = wordrg5;
  if (wordrg5 != con(0x0))
  {
    if (UI16CAST(vw_24) <= UI16CAST(con(0x3)))
    {
      switch (vw_24)
      {
        case 0:
          vw_34 = con(0xfffffff9);
          vw_2c = con(0x0);
        break;

        case 1:
        case 3:
          if (!vbool_1c)
            vw_2c = con(0xffffffc0);
          else
            vw_2c = con(0x40);
          vw_34 = con(0x0);
        break;

        case 2:
          vw_34 = con(0x7);
          vw_2c = con(0x0);
        break;

        default: throw(THROW_DMABORT);
      }
    }
    wordrg2 = SKW_CALC_STRETCHED_SIZE(vw_2c, wordrg2);
    wordrg5 = SKW_CALC_STRETCHED_SIZE(vw_34, wordrg5);
  }
  SKW_QUERY_TEMP_PICST(wordrg6, vw_38, signedword(table1d6b76[(vw_3c & con(0x7)) + 0x50]) + wordrg2, vw_38, signedword(table1d6b76[((vw_3c >> con(0x3)) & con(0x7)) + 0x50]) + wordrg5, edxw, wordrg3, con(0xffffffff), SKW_0cee_2e35(vb_48), con(0xffff), con(0xf), vb_48, vb_44);
}

void SKW_CHANCE_TABLE_OPERATION(void)
{
  x16 wordrg5;
  x16 vw_00;
  x16 vw_04;

  bool skip = false; // added
  if (ddata.v1e12ce == con(0x0) || ddata.v1d4000 != con(0xffffffff))
    return;
  SKW_443c_08ab(&vw_00, &ddata.v1e00b2, &vw_04);
  x16 wordrg6 = vw_00 - ddata.v1d26fc;
  wordrg5 = vw_04 - ddata.v1d26fe;
  if (wordrg6 >= con(0x0) && wordrg5 >= con(0x0) && wordrg6 < ddata.vx1d270a && wordrg5 < (ddata.mouse_unk0d - ddata.v1d26fe))
  {
    wordrg6 -= ddata.vx1d270a >> con(0x1); // was long_at(idx(0x1d2708)) >> con(0x11);
    wordrg5 -= ddata.vx1d270c >> con(0x1); // was long_at(idx(0x1d270a)) >> con(0x11);
    if (DM2_ABS(wordrg6) >= con(0x14))
    {
      if (wordrg6 >= con(0x0))
      {
        if (DM2_ABS(wordrg5) >= con(0xf))
        {
          if (wordrg5 < con(0x0))
            wordrg5 = con(0x0);
          else
            wordrg5 = con(0x2);
        }
        else
          wordrg5 = con(0x1);
      }
      else
      {
        if (DM2_ABS(wordrg5) >= con(0xf))
        {
          if (wordrg5 < con(0x0))
            wordrg5 = con(0x0);
          else
            wordrg5 = con(0x4);
        }
        else
          wordrg5 = con(0x5);
      }
    }
    else
    {
      if (DM2_ABS(wordrg5) < con(0xf))
      {
        wordrg5 = con(0x6);
        skip = true;
      }
      else
      {
        if (wordrg5 >= con(0x0))
          wordrg5 = con(0x3);
        else
          wordrg5 = con(0x0);
      }
    }
    if (!skip)
    {
      x16 wordrg61 = wordrg5;
      x16 wordrg103 = (table1d6d54[wordrg61] + ddata.v1e0258) & con(0x3);
      x16 wordrg402 = ddata.v1e0270;
      wordrg402 += table1d27fc[wordrg103];
      if (SKW_IS_TILE_BLOCKED(SKW_GET_TILE_VALUE(wordrg402, ddata.v1e0272 + table1d2804[wordrg103])))
        wordrg5 = con(0x6);
      else
      {
        if (!SKW_IS_CREATURE_MOVABLE_THERE(ddata.v1e0270 + table1d27fc[ddata.v1e0258], (table1d6d4e[wordrg61] + ddata.v1e0258) & con(0x3), NULL, ddata.v1e0272 + table1d2804[ddata.v1e0258]))
          wordrg5 = con(0x6);
        else
          SKW_HIGHLIGHT_ARROW_PANEL(table1d6d48[wordrg61], true, table1d6d3c[wordrg61]);
      }
    }
  }
  else
    wordrg5 = con(0x6);
  ddata.v1d324a = wordrg5;
}

x16 SKW_32cb_15b8(x16 eaxw, bool ebxbool, x16 edxw)
{
  x16 wordrg5;
  x8 byterg5;
  t_gfxdata* gptrrg7;
  c_rect* recoptrrg3;
  t_text* tptrrg6;
  s_hex12* h12ptrrg3;
  c_image vs_04;
  c_image vs_140;
  t_text t_27c[0x50];
  c_rect rc_2cc;
  t_gfxdata* pg_2ec;
  x16 vw_304;
  x16 vw_308;
  x16 vw_30c;
  x16 vw_310;
  x16 vw_314;
  x16 vw_318;
  x16 vw_31c;
  x16 vw_320;
  x16 vw_324;
  x16 vw_328;
  x16 vw_330;
  x16 vw_334;
  x16 vw_338;
  x8 vb_33c;
  x16 vw_340;
  x8 vb_344;
  x8 vb_348; // add8

  wordrg5 = edxw;
  x16 wordrg400;
  if (edxw > con(0xffffffff))
  {
    if (edxw < con(0x1))
      wordrg400 = con(0x5);
    else
      wordrg400 = con(0x6);
  }
  else
    wordrg400 = con(0x4);
  h12ptrrg3 = &ddata.v1e1044[eaxw];
  x16 wordrg499 = h12ptrrg3->s_02.warr_00[wordrg400];
  vb_33c = CUTX8(wordrg499 >> con(0x8));
  vw_310 = signedword(table1d6b15[eaxw]);
  vb_344 = CUTX8(wordrg499);
  if (vb_344 == con(0xffffffff))
    return con(0xffffffff);
  bool vbool_300 = vb_344 == con(0x0);
  vw_308 = SKW_IS_WALL_ORNATE_ALCOVE(vb_344);
  if (!vbool_300)
    DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x7), vb_344); // why? no return
  bool vbool_2fc = ddata.v1d6c15;
  bool skip = false; // added
  x16 wordrg6 = con(0x0);
  if (!vbool_300)
  {
    vw_324 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x4), vb_344);
    if (vw_324 != con(0x0))
      skip = true;
  }
  if (!skip)
    vw_324 = ddata.v1d6c00;
  skip = false; // used for another part now
  x16 wordrg410;
  if (!vbool_300)
  {
    x16 wordrg411 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x5), vb_344);
    if (wordrg411 != con(0x0))
    {
      vw_338 = urshift(wordrg411, con(0x8));
      wordrg410 = unsignedword(CUTX8(wordrg411)) - con(0x1);
      skip = true;
    }
  }
  if (!skip)
  {
    wordrg410 = con(0xc);
    vw_338 = con(0x0);
  }
  vw_30c = SKW_098d_0cd7(eaxw, wordrg5 != con(0x0), wordrg410);
  vw_334 = vw_30c;
  vw_31c = vw_318 = unsignedword(table1d6b71[vw_310]);
  if (vw_308 == con(0x3) && wordrg5 == con(0x0))
  {
    x16 wordrg409 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xc), con(0xfd), vb_344);
    SKW_QUERY_TEMP_PICST(wordrg6, vw_318, urshift(wordrg409, con(0x8)), vw_318, signedword(CUTX8(wordrg409)), vw_310, vw_30c, vw_338, con(0xffff), con(0xffff), con(0x16), CUTX8(ddata.v1e1044[eaxw].s_02.warr_00[0x7]), con(0x1));
    if (!ebxbool)
      ddata.v1e118e.w_30 = con(0xfffffffe);
    SKW_DRAW_TEMP_PICST();
    if (!ebxbool)
      return vw_324;
    if (vw_310 == con(0x1))
      SKW_32cb_0a4c(&ddata.v1e118e.rc_24, CUTX8(eaxw), con(0x6));
  }
  if (vw_310 != con(0x2) || wordrg5 > con(0xfffffffe) && wordrg5 < con(0x2))
  {
    if (vw_310 == con(0x3) && (wordrg5 <= con(0xfffffffe) || wordrg5 >= con(0x2)))
      vw_31c = con(0x4c);
  }
  else
    vw_31c = con(0x72);
  if (!vbool_300)
  {
    if (wordrg5 != con(0x0))
    {
      vb_348 = con(0x0);
      if (wordrg5 >= con(0x1))
      {
        if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x9), con(0x1), vb_33c + con(0x2), vb_344))
          wordrg6 = con(0x1);
        else
          vb_348 = con(0x2);
      }
    }
    else
    {
      vb_348 = con(0x1);
      if (!vbool_2fc)
      {
        if ((table1d6b15[eaxw] & con(0x1)) == con(0x0))
          wordrg6 = ddata.v1e12d0 ^ con(0x1);
        else
          wordrg6 = ddata.v1e12d0;
      }
    }
    vb_348 += vb_33c;
    if (wordrg5 != con(0x0) || (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x63), vb_344) == con(0x0)))
    {
      SKW_QUERY_TEMP_PICST(wordrg6, vw_318, con(0x0), vw_31c, con(0x0), vw_310, vw_334, vw_338, vw_324, con(0xffff), con(0x9), vb_344, vb_348);
      if (!ebxbool)
        ddata.v1e118e.w_30 = con(0xfffffffe);
      SKW_DRAW_TEMP_PICST();
      recoptrrg3 = &ddata.v1e118e.rc_24;
      if (!ebxbool)
        return vw_324;
    }
    else
    {
      SKW_QUERY_TEMP_PICST(wordrg6, vw_318, con(0x0), vw_31c, con(0x0), vw_310, vw_334, vw_338, con(0xfffd), con(0xfffd), con(0x9), vb_344, vb_348);
      SKW_QUERY_TEMP_PICST(wordrg6, vw_318, ddata.v1e118e.w_1c, vw_31c, ddata.v1e118e.w_1e, vw_310, vw_334, vw_338, vw_324, con(0xfffff), con(0x9), vb_344, con(0xc8));
      if (!ebxbool)
        ddata.v1e118e.w_30 = con(0xfffffffe);
      SKW_DRAW_TEMP_PICST();
      vw_328 = SKW_QUERY_MULTILAYERS_PIC(&vs_140, vb_344, vb_348, con(0x9), vw_31c, vw_318, vw_310, wordrg6, vw_324, DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x11), vb_344));
      SKW_32cb_0c7d(&vs_140, vw_324, vw_328);
      vs_140.pg_2c = SKW_3e74_5817(vw_328);
      SKW_DRAW_PICST(&vs_140);
      SKW_0b36_01cd(&vs_140.s_00);
      if (vs_140.w_38 > con(0x0))
        vs_140.w_30 = unsignedword(vs_140.carr_3a[vw_324]);
      else
        vs_140.w_30 = vw_324;
      vs_140.pg_2c = ddata.bitmapptr;
      vs_140.w_18 = vw_334;
      vs_140.w_1a = vw_338;
      vs_140.w_38 = con(0x0);
      SKW_0b36_00c3(vw_328, &vs_140.s_00);
      SKW_DRAW_PICST(&vs_140);
      recoptrrg3 = &vs_140.rc_24;
      SKW_3e74_58a3(vw_328);
    }
    if ((ebxbool && vw_308 != con(0x3)) && (eaxw == con(0x1) || eaxw == con(0x2) || eaxw == con(0x3)))
      SKW_32cb_0a4c(recoptrrg3, CUTX8(eaxw), con(0x6));
    if ((vw_308 != con(0x0)) && (wordrg5 == con(0x0)))
    {
      SKW_COPY_IMAGE(&ddata.v1e118e, &ddata.v1e1054);
      byterg5 = vb_344;
      if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x9), con(0x1), con(0xf), byterg5))
      {
        if (vw_308 == con(0x1))
          SKW_32cb_3f0d(eaxw);
      }
      else
      {
        if (vw_308 != con(0x2))
        {
          SKW_QUERY_TEMP_PICST(wordrg6, vw_318, con(0x0), vw_31c, con(0x0), vw_310, vw_334, vw_338, vw_324, con(0xffff), con(0x9), byterg5, con(0xf));
          if (!ebxbool)
            ddata.v1e118e.w_30 = con(0xfffffffe);
          SKW_DRAW_TEMP_PICST();
        }
        else
          SKW_32cb_0f82(SKW_GET_ADDRESS_OF_RECORD(ddata.v1e1044[eaxw].s_02.warr_00[con(0x7)]), vw_310, eaxw, byterg5, vw_31c, vw_318, vw_334, vw_338, vw_324);
      }
    }
    return vw_324;
  }
  if (wordrg5 != con(0x0))
  {
    if (wordrg5 > con(0xffffffff))
    {
      if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x8), con(0x1), con(0xfe), ddata.v1d6c02))
      {
        vb_348 = con(0xfffffffd);
        wordrg6 = con(0x1);
      }
      else
        vb_348 = con(0xfffffffe);
    }
    else
      vb_348 = con(0xfffffffd);
  }
  else
    vb_348 = con(0xfffffffc);
  SKW_QUERY_TEMP_PICST(wordrg6, vw_318, con(0x0), vw_31c, con(0x0), vw_310, vw_334, vw_338, vw_324, con(0xffff), con(0x8), ddata.v1d6c02, vb_348);
  if (!ebxbool)
    ddata.v1e118e.w_30 = con(0xfffffffe);
  SKW_DRAW_TEMP_PICST();
  if (wordrg5 == con(0x0))
  {
    x16 wordrg61 = ddata.v1e1044[eaxw].s_02.warr_00[0x7];
    if (wordrg61 != con(0xffffffff))
    {
      SKW_QUERY_GDAT_SUMMARY_IMAGE(&vs_04, ddata.v1d6c02, vb_348, con(0x8));
      vw_340 = vs_04.w_1c; // adj
      vw_320 = vs_04.w_1e; // adj
      SKW_QUERY_GDAT_IMAGE_METRICS(con(0x8), vb_348, &vw_314, ddata.v1d6c02, &vw_304);
      vw_328 = SKW_3e74_5888();
      SKW_QUERY_MESSAGE_TEXT(t_27c, con(0x2), wordrg61);
      wordrg5 = con(0x0);
      x16 wordrg62 = con(0x1);
      for(;;)
      {
        t_text txt = t_27c[wordrg5];
        wordrg5++;
        if (txt == con(0x0))
          break;
        if (txt == con(0xa))
          wordrg62++;
      }
      x16 vw_32c = ddata.v1d273e;
      vw_330 = ddata.v1d2740 + con(0x2);
      wordrg5 = vw_328;
      SKW_FILL_ENTIRE_PICT(SKW_ALLOC_NEW_PICT(wordrg5, vw_304, con(0x4), vw_314), CUTX8(vw_324));
      x16 wordrg402 = (wordrg62 * vw_330) / 2;
      rc_2cc.y = (vw_304 >> con(0x1)) - wordrg402;
      pg_2ec = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x8), con(0x3), ddata.v1d6c02);
      rc_2cc.w = vw_32c;
      s_gfxdatatail* ptrbefore = getprevious(pg_2ec);
      rc_2cc.h = ptrbefore->w4;
      gptrrg7 = SKW_3e74_5817(wordrg5);
      tptrrg6 = t_27c;
      do
      {
        wordrg5 = con(0x0);
        for(;;)
        {
          if (tptrrg6[wordrg5] == con(0x0) || tptrrg6[wordrg5] == con(0xa))
            break;
          wordrg5++;
        }
        if (wordrg5 != con(0x0))
        {
          rc_2cc.x = urshift(vw_314, con(0x1)) - vw_32c * wordrg5 / 2;
          if (rc_2cc.x >= con(0x0))
          {
            for(;;)
            {
              wordrg5--;
              if (wordrg5 == con(0xffffffff))
                break;
//                                   srcbmp                                       srcofs                         destbmp                                      palette
              SKW_DRAW_DIALOGUE_PICT(pg_2ec, &rc_2cc, unsignedword(SKW_SKCHR_TO_SCRIPTCHR(*tptrrg6++)) * vw_32c, gptrrg7, con(0x0), vw_324, SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x8), con(0x3), ddata.v1d6c02));
              rc_2cc.x += vw_32c;
            }
          }
          else
            tptrrg6 += wordrg5;
        }
        rc_2cc.y += vw_330;
      } while (*tptrrg6++ != NULLBYTE);
      SKW_QUERY_GDAT_SUMMARY_IMAGE(&vs_04, con(0x0), con(0x0), con(0xff));
      vs_04.s_00.w_0c = vw_328;
      vs_04.s_00.w_06 = con(0xffffffff);
      vs_04.w_34 = vw_31c;
      vs_04.w_36 = vw_318;
      SKW_COPY_MEMORY(DOWNCAST(t_gfxdata, SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x8), con(0x3), ddata.v1d6c02)), PAL16, DOWNCAST(t_gfxdata, vs_04.carr_3a));
      vs_04.w_38 = con(0x10);
      SKW_32cb_0804(vs_04.carr_3a, vw_324, con(0xffffffff), vw_310, &vs_04.w_38);
      vs_04.pg_2c = ddata.bitmapptr;
      vs_04.w_18 = vw_334;
      vs_04.w_1a = vw_338;
      vs_04.w_1c = vw_340;
      vs_04.w_1e = vw_320;
      vs_04.w_30 = vw_324;
      SKW_DRAW_PICST(SKW_QUERY_PICST_IT(&vs_04));
      SKW_3e74_58a3(vw_328);
    }
  }
  return vw_324;
}

void SKW_32cb_0f82(c_record* eaxprec, x16 ebxw, x16 ecxw, x8 edxb, x16 argw0, x16 argw1, x16 argw2, x16 argw3, x16 argw4)
{
  x16 wordrg5;
  x16* wptrrg7;
  t_gfxdata* gptrrg5;
  c_record* recoptrrg6;
  c_rect rc_00;
  t_gfxdata vga_08[0x8];
  s_x40bytes* ps_14;
  x16 vw_20; // x0
  x16 vw_24; // y0
  x16 vw_28;
  x16 vw_2c;
  x16 vw_30;
  x16 vw_34;
  x16 vw_38;
  x16 vw_44;
  x8 vb_4c;
  x8 vb_50;

  vb_50 = edxb;
  vw_38 = ebxw;
  vw_28 = ecxw;
  recoptrrg6 = NULL;
  x16 wordrg26 = SKW_GET_TILE_RECORD_LINK(ulrshift(eaxprec->u6.w, con(0x5), con(0xb)), urshift(eaxprec->u6.w, con(0xb)));
  for (;; wordrg26 = SKW_GET_NEXT_RECORD_LINK(wordrg26))
  {
    if (wordrg26 == con(0xfffffffe))
      break;
    x16 wordrg121 = urshift(wordrg26 & con(0x3c00), con(0xa));
    if (wordrg121 > con(0x3))
      break;
    if (wordrg121 == con(0x3) && (recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(wordrg26), (recoptrrg6->u2.w & con(0x7f)) == con(0x30)))
      break;
  }
  x16 wordrg155 = urshift(recoptrrg6->u2.w, con(0x7));
  x16 vw_40 = wordrg155; // TODO: more often used as loopvariable - dependencies?!?
  x16 vw_3c = wordrg155;
  vb_4c = CUTX8(urshift(eaxprec->u2.w, con(0x7)));
  if (((eaxprec->u4.b.b0 & con(0x1)) == con(0x0)) || ((eaxprec->u4.b.b0 & con(0x4)) != con(0x0)))
  {
    x16 wordrg172 = 3 * ulrshift(eaxprec->u4.w, con(0x5), con(0xc)) + con(0x10);
    ps_14 = UPCAST(s_x40bytes, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x40)));
    if (SKW_QUERY_CREATURES_ITEM_MASK(vb_4c, ps_14, false, CUTX8(wordrg172)))
    {
      wptrrg7 = UPCAST(x16, SKW_QUERY_GDAT_ENTRY_DATA_BUFF(con(0x9), con(0x8), con(0x13), vb_50));
      if (wptrrg7 != NULL)
      {
        vw_44 = (SKW_QUERY_GDAT_ENTRY_DATA_LENGTH(con(0x9), con(0x8), con(0x13), vb_50) & con(0xffff)) / 2;
        for (vw_40 = con(0x0); vw_44 > vw_40; vw_40++)
          if (vw_3c == (wptrrg7[vw_40] & con(0x1ff)))
            break;
      }
      for(;;)
      {
        x16 wordrg21;
        do
        {
          x16 wordrg45;
          if (((eaxprec->u4.b.b0 & con(0x4)) == con(0x0)) && (ddata.v1e12d8 >= con(0x0)))
            wordrg45 = con(0xffffffff);
          else
            wordrg45 = con(0x1);
          vw_40 += wordrg45;
          if (wptrrg7 == NULL)
          {
            vw_40 &= con(0x1ff);
            vw_3c = vw_40;
          }
          else
          {
            if (vw_40 >= con(0x0))
            {
              if (vw_40 >= vw_44)
                vw_40 = con(0x0);
            }
            else
              vw_40 = vw_44 - con(0x1);
            vw_3c = wptrrg7[vw_40] & con(0x1ff);
          }
          wordrg21 = vw_3c;
        } while (((con(0x1) << (CUTX8(vw_3c) & con(0x7))) & ps_14->barr_00[wordrg21 / 8]) == con(0x0));
        if ((DM2_QUERY_GDAT_ENTRY_DATA_INDEX(SKW_QUERY_ITEMDB_FROM_DISTINCTIVE_ITEMTYPE(wordrg21), con(0xb), con(0x0), SKW_GET_ITEMTYPE_OF_ITEMSPEC_ACTUATOR(wordrg21)) & con(0x1000)) == con(0x0))
          break;
        if (SKW_IS_DISTINCTIVE_ITEM_ON_ACTUATOR(eaxprec, true, vw_3c))
          break;
        if (SKW_IS_DISTINCTIVE_ITEM_ON_ACTUATOR(recoptrrg6, false, vw_3c))
          break;
        if (SKW_2fcf_16ff(vw_3c))
          break;
      }
      eaxprec->u4.b.b0 &= con(0xfffffffb);
    }
    eaxprec->u4.b.b0 |= con(0x1);
    recoptrrg6->u4.b.b0 |= con(0x1);
    recoptrrg6->u2.w = (recoptrrg6->u2.w & con(0xffff007f)) | ((vw_3c & con(0x1ff)) << con(0x7));
    DM2_DEALLOC_LOBIGPOOL(con(0x40));
  }
  x8 vb_10 = vb_50;
  x16 wordrg2 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xc), con(0xfd), vb_50);
  vw_34 = wordrg2;
  SKW_QUERY_TEMP_PICST(con(0x0), argw1, signedword(CUTX8(urshift(wordrg2, con(0x8)))), argw0, signedword(CUTX8(vw_34)), vw_38, argw2, argw3, argw4, con(0xffff), SKW_QUERY_ITEMDB_FROM_DISTINCTIVE_ITEMTYPE(vw_3c), SKW_GET_ITEMTYPE_OF_ITEMSPEC_ACTUATOR(vw_3c) & con(0xff), con(0x0));
  SKW_DRAW_TEMP_PICST();
  if (!SKW_IS_DISTINCTIVE_ITEM_ON_ACTUATOR(eaxprec, true, vw_3c))
  {
    if (!SKW_IS_DISTINCTIVE_ITEM_ON_ACTUATOR(recoptrrg6, false, vw_3c))
    {
      bool skip = false; // added
      wptrrg7 = UPCAST(x16, SKW_QUERY_GDAT_ENTRY_DATA_BUFF(con(0x9), con(0x8), con(0x13), vb_10));
      if (wptrrg7 != NULL)
      {
        vw_44 = (SKW_QUERY_GDAT_ENTRY_DATA_LENGTH(con(0x9), con(0x8), con(0x13), vb_10) & con(0xffff)) / 2;
        for (vw_40 = con(0x0); vw_44 > vw_40; vw_40++)
          if (vw_3c == (wptrrg7[vw_40] & con(0x1ff)))
            break;
        if (((wptrrg7[vw_40] & con(0x8000)) != con(0x0)))
        {
          x16 wordrg114 = SKW_ALLOC_NEW_DBITEM_DEEPLY(vw_3c);
          if (wordrg114 != con(0xffffffff))
          {
            SKW_APPEND_RECORD_TO(wordrg114, ulrshift(eaxprec->u6.w, con(0x5), con(0xb)), urshift(eaxprec->u6.w, con(0xb)), NULL);
            skip = true;
          }
        }
      }
      if (!skip)
      {
        SKW_QUERY_TEMP_PICST(con(0x0), argw1, unsignedword(CUTX8(urshift(vw_34, con(0x8)))), argw0, signedword(CUTX8(vw_34)), vw_38, argw2, argw3, argw4, con(0xffff), con(0x9), vb_50, con(0x11));
        SKW_DRAW_TEMP_PICST();
      }
    }
  }
  SKW_QUERY_TEMP_PICST(con(0x0), signedlong(argw1), con(0x0), signedlong(argw0), con(0x0), vw_38, argw2, argw3, argw4, con(0xffff), con(0x9), vb_50, con(0xf));
  SKW_DRAW_TEMP_PICST();
  if (vw_28 == con(0x3))
  {
    SKW_QUERY_TOPLEFT_OF_RECT(argw2, &vw_20, &vw_24);
    vw_34 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xc), con(0xf2), vb_50);
    vw_20 += signedword(CUTX8(urshift(vw_34, con(0x8))));
    vw_24 += signedword(CUTX8(vw_34));
    SKW_DRAW_TEXT_TO_BACKBUFF(vw_20, SKW_QUERY_GDAT_ITEM_NAME(SKW_QUERY_ITEMDB_FROM_DISTINCTIVE_ITEMTYPE(vw_3c), SKW_GET_ITEMTYPE_OF_ITEMSPEC_ACTUATOR(vw_3c)), vw_24);
  }
  if (vw_28 != con(0x3))
    return;
  x16 vw_1c = SKW_48ae_05ae(vw_3c, ulrshift(eaxprec->u4.w, con(0x5), con(0xc)), con(0x1), vb_4c, con(0x1), con(0xffffffff));
  x16 vw_48 = SKW_48ae_05ae(vw_3c, ulrshift(eaxprec->u4.w, con(0x5), con(0xc)), con(0x0), vb_4c, con(0x1), con(0xffffffff));
  for (x16 wordrg6 = con(0x0); wordrg6 < con(0x2); wordrg6++)
  {
    vw_34 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xc), ((wordrg6 == con(0x0)) ? 1 : 0) + con(0xfffffff0), vb_50);
    vw_20 = signedword(CUTX8(urshift(vw_34, con(0x8))));
    vw_24 = signedword(CUTX8(vw_34));
    x16 wordrg19;
    if (wordrg6 == con(0x0))
      wordrg19 = vw_48;
    else
      wordrg19 = vw_1c;
    if (wordrg19 != con(0x0))
    {
      SKW_48ae_0767(wordrg19, vga_08, &vw_2c, con(0x6));
      if (vw_2c > con(0x0))
      {
        vw_30 = SKW_3e74_5888();
        wordrg5 = vw_30;
        SKW_ALLOC_NEW_PICT(wordrg5, con(0x7), con(0x4), 8 * vw_2c);
        SKW_QUERY_TEMP_PICST(con(0x0), con(0x40), con(0x0), con(0x40), con(0x0), vw_38, con(0xffffffff), argw3, con(0xffff), con(0xffff), con(0x9), vb_50, con(0x10));
        gptrrg5 = SKW_3e74_5817(wordrg5);
        SKW_SET_ORIGIN_RECT(&rc_00, con(0x8), con(0x7));
        vw_40 = con(0x0);
      }
      while (vw_40 < vw_2c)
      {
//                                srcbmp                                  srcofs                  destbmp                        palette
        SKW_DRAW_DIALOGUE_PICT(ddata.v1e118e.s_00.pg_00, &rc_00, 8 * unsignedword(vga_08[vw_40]), gptrrg5, con(0x0), con(0xffff), NULL);
        rc_00.x += con(0x8);
        vw_40++;
      }
//                           srcbmp                                                                                   srcofs  destbmp                               palette
      SKW_DRAW_DIALOGUE_PICT(gptrrg5, SKW_QUERY_BLIT_RECT(gptrrg5, argw2 | con(0x8000), &vw_20, &rc_00, &vw_24, argw3), 0, ddata.bitmapptr, con(0x0), argw4, ddata.v1e118e.carr_3a);
      SKW_3e74_58a3(vw_30);
    }
  }
}

// TODO: init problem inside
x16 SKW_32cb_03a6(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x16 argw2, bool argbool3)
{
  x16 wordrg5;
  ui16 uwordrg5;
  x16* wptrrg1;
  c_record* recoptrrg7;
  c_record* recoptrrg1;
  x16 vw_04;
  x16 vw_08;
  c_record* prec_10;
  c_record* prec_14;
  x16 vw_18;
  x16 vw_24;

  vw_08 = eaxw;
  vw_04 = edxw;
  vw_18 = urshift(argw1, con(0xe));
  x16 wordrg1;
  if (argw2 != con(0x2))
  {
    recoptrrg7 = NULL;
    wordrg1 = SKW_GET_TILE_RECORD_LINK(ecxw, argw0);
  }
  else
  {
    recoptrrg7 = SKW_GET_ADDRESS_OF_RECORD(SKW_GET_CREATURE_AT(ecxw, argw0));
    wordrg1 = recoptrrg7->u2.w;
  }
  vw_24 = wordrg1;
  if (vw_24 == con(0xfffffffe))
    return (argbool3) ? argw1 : con(0xffff);
  x16 wordrg6 = (argw2 != con(0x3)) ? con(0x0) : con(0x2);
  x16 vw_1c = con(0xffff);
  prec_14 = NULL;
  x16 vw_20 = 0; // initialization added - TODO: always initialized?
  do
  {
    x16 wordrg11 = urshift(vw_24 & con(0x3c00), con(0xa));
    if (wordrg11 >= con(0x5) && wordrg11 <= con(0xa))
    {
      x16 wordrg12 = vw_24;
      x16 vw_0c = unsignedlong(wordrg12);
      wordrg12 >>= con(0xe);
      if (wordrg12 == vw_18)
      {
        wordrg5 = con(0x0);
        prec_10 = NULL;
        if (SKW_IS_CONTAINER_CHEST(vw_0c))
        {
          if (SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x14), con(0x1), con(0x48), SKW_QUERY_CLS2_FROM_RECORD(vw_0c)))
          {
            prec_10 = SKW_GET_ADDRESS_OF_RECORD(vw_0c);
            if ((prec_10->u4.b.b0 & con(0x1)) == con(0x0))
            {
              if (!argbool3)
                wordrg5 = con(0x2);
            }
            else
              wordrg5 = con(0x3);
          }
        }
        for(;;)
        {
          SKW_DRAW_ITEM(vw_24, con(0x0), con(0x0), ebxw, wordrg6, recoptrrg7, false, wordrg5, argw2 == con(0x3));
          if (SKW_32cb_00f1(vw_08, con(0xa), vw_04))
          {
            prec_14 = prec_10;
            vw_1c = vw_24;
            vw_20 = wordrg5;
            break;
          }
          if (wordrg5 == con(0x0))
            break;
          wordrg5 = con(0x0);
        }
        wordrg6++;
        if (argw2 != con(0x3))
          wordrg6 &= con(0xf);
        else
        {
          if (wordrg6 >= con(0xe))
            wordrg6 = con(0x2);
        }
      }
    }
    vw_24 = SKW_GET_NEXT_RECORD_LINK(vw_24);
  } while (vw_24 != con(0xfffffffe));
  recoptrrg1 = prec_14;
  prec_10 = recoptrrg1;
  if (recoptrrg1 == NULL)
    return (vw_1c == con(0xffffffff)) ? argw1 : vw_1c;
  uwordrg5 = vw_20; // TODO: pretty much paths with vw_20 uninitialized!
  if (uwordrg5 < UI16CAST(con(0x2)))
  {
    if (uwordrg5 != con(0x0))
      return con(0xffff);
    if (argbool3)
      return con(0xfffe);
    x8 byterg2 = recoptrrg1->u4.b.b0;
    if ((byterg2 & con(0x1)) == con(0x0))
      return vw_1c;
    recoptrrg1->u4.b.b0 = byterg2 & con(0xfffffffe);
    return con(0xffff);
  }
  if (uwordrg5 <= UI16CAST(con(0x2)))
  {
    recoptrrg1->u4.b.b0 |= con(0x1);
    return con(0xffff);
  }
  if (uwordrg5 != con(0x3))
    return con(0xffff);
  if (argbool3 && (SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(argw1, con(0x4)) & con(0x8000)) != con(0x0))
    return con(0xfffe);
  wordrg5 = prec_10->u2.w;
  x16 wordrg4 = con(0x0);
  while (wordrg5 != con(0xfffffffe))
  {
    wordrg4++;
    wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
  }
  wptrrg1 = &prec_10->u2.w;
  if (!argbool3)
  {
    if (wordrg4 > con(0x0))
    {
      SKW_CUT_RECORD_FROM(wordrg5, con(0xffffffff), con(0x0), wptrrg1);
      ddata.v1e0ff6 = con(0x1);
      SKW_TAKE_OBJECT(wordrg5, true);
    }
    return con(0xffff);
  }
  if (wordrg4 >= con(0x8))
    return con(0xfffe);
  SKW_APPEND_RECORD_TO(argw1, con(0xffffffff), con(0x0), wptrrg1);
  return con(0xffff);
}

void SKW_2fcf_0b8b(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_5bytes vs_00;
  x16 vw_08;

  vw_08 = ebxw;
  ddata.v1e027c = con(0xffffffff);
  ddata.v1e0234 = SKW_GET_TELEPORTER_DETAIL(&vs_00, edxw, eaxw);
  if (!ddata.v1e0234)
  {
    x16 wordrg3 = con(0x0);
    // M_3AFD7:
    for(;;)
    {
      if (wordrg3 >= con(0x4))
        break;
      x16 wordrg2 = table1d2804[wordrg3] + edxw;
      if (SKW_GET_TELEPORTER_DETAIL(&vs_00, wordrg2, table1d27fc[wordrg3] + eaxw))
      {
        ddata.v1e027c = unsignedword(vs_00.b_04);
        x16 wordrg402 = unsignedword(vs_00.b_01) + con(0x6) - unsignedword(vs_00.b_00);
        wordrg3 += wordrg402;
        wordrg3 += con(0x2);
        wordrg3 &= con(0x3);
        wordrg3 = table1d27fc[wordrg3];
        ddata.v1e0260 = unsignedword(vs_00.b_02) + wordrg3;
        ddata.v1e0262 = unsignedword(vs_00.b_03) + table1d2804[wordrg3];
        wordrg402 += ddata.v1e0258;
        wordrg402 &= con(0x3);
        ddata.v1e0276 = wordrg402;
        break;
      }
      wordrg3++;
    }
  }
  else
  {
    ddata.v1e027c = unsignedword(vs_00.b_04);
    ddata.v1e0260 = unsignedword(vs_00.b_02);
    ddata.v1e0262 = unsignedword(vs_00.b_03);
    ddata.v1e0276 = (unsignedword(vs_00.b_01) - unsignedword(vs_00.b_00) + ddata.v1e0258) & con(0x3);
  }
  ddata.v1d3248 = con(0xffffffff);
  SKW_CHANGE_CURRENT_MAP_TO(vw_08);
}

void SKW_REVIVE_PLAYER(x8 eaxb, x8 ebxb)
{
  x16* wptrrg5; // on an array
  c_hero* heroptrrg6;
  t_text t_00[0x80];
  t_text* tptrrg1;
  x8 vb_84;

  vb_84 = eaxb;
  heroptrrg6 = &ddata.hero[ddata.savegamew2];
  DM2_ZERO_MEMORY(DOWNCAST(c_hero, heroptrrg6), con(0x107));
  heroptrrg6->b101 = vb_84;
  heroptrrg6->b20[con(0x1)] = con(0xffffffff);
  heroptrrg6->b20[con(0x0)] = con(0xffffffff);
  heroptrrg6->w2e = con(0xffffffff);
  heroptrrg6->b1c = ebxb;
  x16 vw_80_6;
  for (vw_80_6 = con(0x0); ; vw_80_6++)
    if ((SKW_GET_PLAYER_AT_POSITION((vw_80_6 + ddata.v1e0258) & con(0x3))) == con(0xffffffff))
      break;
  heroptrrg6->b1d = (CUTX8(vw_80_6) + CUTX8(ddata.v1e0258)) & con(0x3);
  heroptrrg6->t22[0x6] = CUTX8(ddata.v1e0258);
  for (x16 vw_80_5 = con(0x0); vw_80_5 < con(0x1e); vw_80_5++)
    heroptrrg6->warrc3[vw_80_5] = con(0xffffffff);
//  tptrrg1 = SKW_QUERY_GDAT_TEXT(con(0x16), con(0x18), t_00, vb_84);
  tptrrg1 = SKW_QUERY_GDAT_TEXT(con(GDAT_CATEGORY_CHAMPIONS), con(0x18), t_00, vb_84);
  x16 vw_80_4 = con(0x0);
  x8 byterg3;
  for(;;)
  {
    byterg3 = *tptrrg1++;
    if (byterg3 == con(0x20) || byterg3 == con(0x0))
      break;
    x16 wordrg116 = vw_80_4;
    if (wordrg116 >= con(0x7))
      break;
    vw_80_4 = wordrg116 + con(0x1);
    heroptrrg6->t00[wordrg116] = byterg3;
  }
  x16 vw_80_0 = con(0x0);
  if (byterg3 != con(0x0))
  {
    x16 wordrg2;
    do
    {
      x8 byterg31 = *tptrrg1++;
      if (byterg31 == con(0x0))
        break;
      x16 wordrg11 = vw_80_0;
      wordrg2 = wordrg11 + con(0x1);
      vw_80_0 = wordrg2;
      heroptrrg6->t00[con(0x8) + wordrg11] = byterg31;
    } while (wordrg2 != con(0x13));
  }
  //wptrrg5 = UPCAST(x16, SKW_QUERY_GDAT_ENTRY_DATA_PTR(con(0x16), con(0x8), con(0x0), vb_84));
  wptrrg5 = UPCAST(x16, SKW_QUERY_GDAT_ENTRY_DATA_PTR(con(GDAT_CATEGORY_CHAMPIONS), con(dtRaw8), con(0x0), vb_84));
  heroptrrg6->w38 = wptrrg5[con(0x0)];
  heroptrrg6->w36 = wptrrg5[con(0x0)];
  heroptrrg6->u3c.w = wptrrg5[con(0x1)];
  heroptrrg6->w3a = wptrrg5[con(0x1)];
  heroptrrg6->w3e = heroptrrg6->w40 = wptrrg5[con(0x2)];
  for (x16 vw_80_1 = con(0x0); vw_80_1 <= con(0x6); vw_80_1++)
  {
    x8 byterg11 = CUTX8(DM2_MAX(con(0x1e), wptrrg5[vw_80_1 + con(0x3)]));
    heroptrrg6->b4a[2 * vw_80_1 + con(0x1)] = byterg11;
    heroptrrg6->b4a[2 * vw_80_1] = byterg11;
  }
  for (x16 vw_80_2 = con(0x4); vw_80_2 <= con(0x13); vw_80_2++)
  {
    x32 longrg3;
    x16 wordrg3 = wptrrg5[vw_80_2 + con(0x6)];
    if (wordrg3 == con(0x0))
      longrg3 = con(0x0);
    else
      longrg3 = con(0x40) << CUTX8(wordrg3);
    heroptrrg6->l5f[vw_80_2] = longrg3;
  }
  for (x16 vw_80_3 = con(0x0); vw_80_3 <= con(0x3); vw_80_3++)
  {
    x32 longrg2 = con(0x0);
    x16 wordrg31 = 4 * (vw_80_3 + con(0x1));
    x16 wordrg19 = con(0x0);
    x16 wordrg41;
    while (wordrg41 = wordrg19, wordrg41 < con(0x4))
    {
      wordrg41 += wordrg31;
      longrg2 += heroptrrg6->l5f[wordrg41];
      wordrg19++;
    }
    heroptrrg6->l5f[vw_80_3] = longrg2;
  }
  heroptrrg6->w44 = unsignedword(CUTX8(SKW_RAND())) + con(0x5dc);
  heroptrrg6->w46 = unsignedword(CUTX8(SKW_RAND())) + con(0x5dc);
}

bool SKW_2759_0e93(x16 eaxw, x16 ebxw, x16 edxw)
{
  x16 wordrg5;

  wordrg5 = eaxw;
  bool boolrg7 = false;
  if (edxw == con(0xffffffff))
    return false;
  if (SKW_IS_ITEM_HAND_ACTIVABLE(wordrg5, con(0xffffffff), edxw))
  {
    wordrg5 = con(0x0);
    // M_30A4E:
    for (;; wordrg5++)
    {
      if (wordrg5 >= ddata.v1e0b7a)
        break;
      if (SKW_QUERY_CMDSTR_ENTRY(ddata.v1e0b40[wordrg5].b0, ddata.v1e0b40[wordrg5].b2, con(0x2), ddata.v1e0b40[wordrg5].b1) == ebxw)
      {
        boolrg7 = true;
        break;
      }
    }
  }
  wordrg5 = ddata.v1e0b74;
  if (wordrg5 == con(0x0))
    return boolrg7;
  if (ddata.v1e0b76 != con(0x0))
    if (ddata.v1e0b76 != con(0x1))
      return boolrg7;
  x16 wordrg2 = ddata.v1e0b76;
  wordrg5--;
  x16 wordrg402 = ddata.hero[wordrg5].warrc3[wordrg2];
  SKW_IS_ITEM_HAND_ACTIVABLE(wordrg5, wordrg2, wordrg402);
  return boolrg7;
}

void SKW_24a5_1798(x16 eaxw)
{
  x16 wordrg5;
  c_hero* heroptrrg1;

  bool skip = false; // added
  wordrg5 = eaxw;
  bool boolrg6 = false;
  ddata.v1d66fc = con(0x0);
  ddata.v1d66fe = con(0xffffffff);
  if (eaxw < con(0x4) && ddata.hero[eaxw].w36 == con(0x0))
    return;
  if (ddata.v1e0224 || ddata.v1e03a8 || ddata.v1e0220 || ddata.v1e0228)
    return;
  ddata.v1e0488 = true;
  x16 wordrg3 = ddata.v1e0976;
  if ((wordrg5 + con(0x1)) == wordrg3)
    wordrg5 = con(0x4);
  if (wordrg3 == con(0x0) || wordrg5 == con(0x4))
  {
    boolrg6 = true;
    SKW_FIRE_HIDE_MOUSE_CURSOR();
  }
  if (wordrg3 != con(0x0))
  {
    ddata.v1e0976 = con(0x0);
    heroptrrg1 = &ddata.hero[wordrg3 - con(0x1)];
    if (heroptrrg1->w36 != con(0x0))
      if (ddata.v1e0288 == con(0x0))
      {
        heroptrrg1->u32.b.b1 |= con(0x40);
        SKW_REFRESH_PLAYER_STAT_DISP(wordrg3 - con(0x1));
      }
    x16 wordrg2 = con(0x0);
    while (wordrg2 < con(0x4))
    {
      x16 wordrg402 = 4 * wordrg3 + wordrg2;
      ddata.v1e0ffa[wordrg402 - con(0x2)] -= ddata.v1e096c[wordrg2]; // EVIL offset shifted by 2, was 1e0ff8
      wordrg2++;
    }
    if (!ddata.v1e0238)
    {
      if (wordrg5 == con(0x4))
      {
        if (ddata.v1d6727)
          SKW_29ee_000f();
        if (boolrg6)
          SKW_FIRE_SHOW_MOUSE_CURSOR();
        SKW_INIT_BACKBUFF();
      }
      else
        skip = true;
    }
    else if (boolrg6)
    {
      SKW_443c_040e();
      SKW_FIRE_SHOW_MOUSE_CURSOR();
    }
    if (!skip)
    {
      R_107B0();
      return;
    }
  }
  ddata.v1e0976 = wordrg5 + con(0x1);
  if (wordrg3 == con(0x0))
    SKW_FIRE_FILL_HALFTONE_RECTI(con(0x9), con(0x0));
  DM2_ZERO_MEMORY(ddata.v1e096c, con(0x4));
  ddata.hero[wordrg5].u32.b.b1 |= con(0xfffffffc);
  ddata.v1e100c = con(0x0);
  SKW_REFRESH_PLAYER_STAT_DISP(wordrg5);
  if (boolrg6)
    SKW_FIRE_SHOW_MOUSE_CURSOR();
  SKW_1031_0541(con(0x8));
}

x16 SKW_RECALC_LIGHT_LEVEL(void)
{
  x16 wordrg5;
  x16 vwa_00[0x9];

  if ((ddata.v1e03c8[ddata.v1e0266].wc & con(0xf000)) != con(0x0))
  {
    DM2_ZERO_MEMORY(DOWNCAST(x16, vwa_00), con(0x12));
    wordrg5 = con(0x0);
    if ((SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(ddata.savegamewpc.w0, con(0x0)) & con(0x10)) != con(0x0))
    {
      vwa_00[0x0] = SKW_ADD_ITEM_CHARGE(ddata.savegamewpc.w0, con(0x0));
      wordrg5 = con(0x1);
    }
    x16 wordrg6 = con(0x0);
    while (wordrg6 < ddata.savegamew2)
    {
      x16 wordrg3 = con(0x0);
      while (wordrg3 <= con(0x1))
      {
        x16 wordrg12 = ddata.hero[wordrg6].warrc3[wordrg3];
        if ((SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg12, con(0x0)) & con(0x10)) != con(0x0))
        {
          vwa_00[wordrg5] = SKW_ADD_ITEM_CHARGE(wordrg12, con(0x0));
          wordrg5++;
        }
        wordrg3++;
      }
      wordrg6++;
    }
    x16 wordrg61 = con(0x0);
    while (wordrg61 < (wordrg5 - con(0x1)))
    {
      x16 wordrg421 = vwa_00[wordrg61];
      if (wordrg421 > vwa_00[wordrg61 + con(0x1)])
      {
        vwa_00[wordrg61] = vwa_00[wordrg61 + con(0x1)];
        vwa_00[wordrg61] = wordrg421;
      }
      wordrg61++;
    }
    x16 wordrg401 = con(0x6);
    x16 vw_14 = con(0x0);
    x16 wordrg62 = con(0x0);
    while (wordrg62 < wordrg5)
    {
      vw_14 = CUTX16(signedlong(vw_14) + ((signedlong(table1d6702[vwa_00[wordrg62]]) << CUTX8(wordrg401)) >> con(0x6)));
      wordrg401--;
      wordrg401 = DM2_MAX(con(0x0), wordrg401);
      wordrg62++;
    }
    wordrg5 = vw_14 + ddata.v1e0974;
    vw_14 = wordrg5 + ddata.savegames1.w0;
    vw_14 += DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x67), ddata.v1d6c02);
    if (ddata.v1e147f != con(0x0))
      vw_14 += signedword(table1d6712[DM2_BETWEEN_VALUE(con(0x0), con(0x5), ddata.v1e1480 + ddata.v1e1476)]);
    ddata.v1e0286 = con(0x0);
    while (ddata.v1e0286 < con(0x5))
    {
      if (table1d6712[ddata.v1e0286] < vw_14)
        break;
      ddata.v1e0286++;
    }
    x16 wordrg13 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x68), ddata.v1d6c02);
    if (wordrg13 > ddata.v1e0286)
      ddata.v1e0286 = wordrg13;
    if (ddata.v1e147f != con(0x0) && !ddata.v1e024c)
      ddata.v1e0286 = con(0x0);
  }
  else
    ddata.v1e0286 = con(0x1);
  ddata.v1e0286 -= (ddata.v1e0978 > con(0xc)) ? 1 : 0;
  ddata.v1e0286 = DM2_BETWEEN_VALUE(con(0x0), con(0x5), ddata.v1e0286);
  return ddata.v1e0286;
}

bool SKW_READ_DUNGEON_STRUCTURE(bool eaxbool)
{
SPX_DEBUG_PUSH_FUNCTION_INFO("READ_DUNGEON_STRUCTURE");
  x16 wordrg5;
  ui16 uwordrg5;
  x8* bptrrg21; // looks like a buffer
  x8* bptrrg22; // casted when given to bppptrrg4
  x8*** bppptrrg4; // sort of root pointer
  x8* bptrrg7;
  x8* bptrrg1;
  u_mbuf vs_04;
  x8* pb_0c;

  if (!SKW_SKLOAD_READ(DOWNCAST(x8, vs_04.barr_00), con(0x8)) || vs_04.w_00 == con(0xffff8104) || !DM2_FILE_SEEK(signedlong(ddata.filehandle1), ddata.longsavegamel1))
    return false;
  if (ddata.v1d652d)
    ddata.savegamep4 = UPCAST(s_sgwords, DM2_ALLOC_FREEPOOL_MEMORY(con(0x2c)));
  if (!SKW_SKLOAD_READ(DOWNCAST(s_sgwords, ddata.savegamep4), con(0x2c)))
    return false;
  wordrg5 = ddata.savegamep4->w0[con(0x4)];
  ddata.v1e0270 = wordrg5 & con(0x1f);
  wordrg5 >>= con(0x5);
  ddata.v1e0272 = wordrg5 & con(0x1f);
  ddata.v1e0258 = (wordrg5 >> con(0x5)) & con(0x3);
  ddata.v1e0266 = con(0x0);
  x16 vw_10 = unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)]));
  if (ddata.v1d652d)
    ddata.v1e03c8 = UPCAST(s_size10, DM2_ALLOC_FREEPOOL_MEMORY(signedlong(vw_10) << con(0x4)));
  if (!SKW_SKLOAD_READ(DOWNCAST(s_size10, ddata.v1e03c8), vw_10 << con(0x4)))
    return false;
  if (ddata.v1d652d)
    ddata.v1e03e4 = UPCAST(x16, DM2_ALLOC_FREEPOOL_MEMORY(2 * signedlong(vw_10)));
  wordrg5 = con(0x0);
  x16 wordrg6 = con(0x0);
  while (wordrg5 < vw_10)
  {
    ddata.v1e03e4[wordrg5] = wordrg6;
    wordrg6 += ulrshift(ddata.v1e03c8[wordrg5].w8, con(0x5), con(0xb)) + con(0x1);
    wordrg5++;
  }
  ddata.v1e0408 = wordrg6;
  wordrg5 = ddata.savegamep4->w0[con(0x5)];
  if (eaxbool)
    ddata.savegamep4->w0[con(0x5)] = wordrg5 + con(0x12c);
  if (ddata.v1d652d)
  {
    ddata.v1e03d8 = UPCAST(x16, DM2_ALLOC_FREEPOOL_MEMORY(2 * unsignedlong(wordrg6)));
    ddata.v1e038c = UPCAST(x16, DM2_ALLOC_FREEPOOL_MEMORY(2 * unsignedlong(ddata.savegamep4->w0[5])));
    ddata.v1e03d0 = UPCAST(x16, DM2_ALLOC_FREEPOOL_MEMORY(2 * unsignedlong(ddata.savegamep4->w0[3])));
  }
  if (!SKW_SKLOAD_READ(DOWNCAST(x16, ddata.v1e03d8), 2 * wordrg6))
    return false;
  if (!SKW_SKLOAD_READ(DOWNCAST(x16, ddata.v1e038c), 2 * wordrg5))
    return false;
  if (eaxbool)
  {
    x16 wordrg35 = con(0x0);
    while (wordrg35 < con(0x12c))
    {
      ddata.v1e038c[wordrg5++] = con(0xffffffff);
      wordrg35++;
    }
  }
  if (!SKW_SKLOAD_READ(DOWNCAST(x16, ddata.v1e03d0), 2 * ddata.savegamep4->w0[con(0x3)]))
    return false;
  if (!ddata.boolsavegamel2)
    ddata.v1e142c = con(0x32);
  wordrg5 = con(0x0);
  while (wordrg5 < con(0x10))
  {
    x16 wordrg34 = ddata.savegamep4->w0[wordrg5 + con(0x6)];
SPX_DEBUG_MESSAGE_INFO("#Cat %02d => %04d items\n", wordrg5, wordrg34);
    if (eaxbool)
    {
      x16 wordrg408 = unsignedword(table1d281c[wordrg5]) + wordrg34;
      x16 wordrg14;
      if (wordrg5 != con(0xf))
        wordrg14 = con(0x400);
      else
        wordrg14 = con(0x300);
      ddata.savegamep4->w0[wordrg5 + con(0x6)] = DM2_MIN(wordrg14, wordrg408);
    }
    x16 wordrg61 = unsignedword(table1d280c[wordrg5]);
    if (ddata.v1d652d)
      ddata.savegameparr5[wordrg5] = UPCAST(c_record, DM2_ALLOC_FREEPOOL_MEMORY(unsignedlong(wordrg61) * unsignedlong(ddata.savegamep4->w0[wordrg5 + con(0x6)])));
    bptrrg21 = DOWNCAST(c_record, ddata.savegameparr5[wordrg5]);
    if (!SKW_SKLOAD_READ(bptrrg21, wordrg61 * wordrg34))
      return false;
    if (!ddata.boolsavegamel2)
      if ((wordrg5 == con(0x4)) || (wordrg5 >= con(0xe)))
        ddata.v1e142c += ddata.savegamep4->w0[wordrg5 + con(0x6)];
    if (eaxbool)
    {
      wordrg61 = urshift(wordrg61, con(0x1));
      bptrrg21 += 2 * wordrg61 * wordrg34;
      x32 longrg33 = unsignedlong(table1d281c[wordrg5]); // longrange necessary! BUGFIX 4/2014
      while (longrg33 != con(0x0))
      {
        *bptrrg21 = con(0xffffffff);
        *(bptrrg21 + con(0x1)) = con(0xffffffff);
        bptrrg21 += 2 * wordrg61;
        longrg33--;
      }
    }
    wordrg5++;
  }
  if (ddata.v1d652d)
    ddata.v1e03e0 = DM2_ALLOC_FREEPOOL_MEMORY(unsignedlong(ddata.savegamep4->w0[1]));
  if (!SKW_SKLOAD_READ(ddata.v1e03e0, ddata.savegamep4->w0[1]))
    return false;
  if (ddata.v1d652d)
  {
    x16 longrg3 = signedlong(vw_10);
    ddata.v1e03cc = UPCAST(x8**, DM2_ALLOC_FREEPOOL_MEMORY(4 * (unsignedlong(ddata.v1e0408) + longrg3)));
    bppptrrg4 = &ddata.v1e03cc[longrg3];
    x16 wordrg31 = con(0x0);
    while (wordrg31 < vw_10)
    {
      ddata.v1e03cc[wordrg31] = UPCAST(x8*, bppptrrg4);
      bptrrg22 = ddata.v1e03e0 + unsignedlong(CUTX16(ddata.v1e03c8[wordrg31].u0.u.l));
      *bppptrrg4++ = UPCAST(x8*, bptrrg22);
      uwordrg5 = con(0x1);
      while (uwordrg5 <= ulrshift(ddata.v1e03c8[wordrg31].w8, con(0x5), con(0xb)))
      {
        bptrrg22 += urshift(ddata.v1e03c8[wordrg31].w8, con(0xb)) + con(0x1);
        *bppptrrg4++ = UPCAST(x8*, bptrrg22);
        uwordrg5++;
      }
      wordrg31++;
    }
  }
  ddata.longv1e1438 = 65 * 21 * signedlong(DM2_BETWEEN_VALUE(con(0x0), con(0x17), DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x3), con(0xb), con(0x0), con(0x0))));
  SKW_3a15_0002();
  SKW_3df7_0037(!ddata.v1d652d);
  if (ddata.v1d652d)
  {
    ddata.v1e03f0 = DM2_ALLOC_FREEPOOL_MEMORY(con(0x3f));
    ddata.v1e03dc = DM2_ALLOC_FREEPOOL_MEMORY(con(0x7e));
  }
  bptrrg1 = ddata.v1e03dc;
  pb_0c = ddata.v1e03f0;
  x16 wordrg3 = con(0x0);
  *pb_0c++ = con(0x0);
  for (x16 vw_14 = con(0x0); vw_14 < con(0x3f); vw_14++)
  {
    x16 wordrg4 = con(0x0);
    for(;;)
    {
      wordrg5 = wordrg3 + con(0x1);
      bptrrg7 = bptrrg1 + con(0x1);
      if (wordrg4 >= vw_10)
        break;
      if ((ddata.v1e03c8[wordrg4].w8 & con(0x3f)) == vw_14)
      {
        *bptrrg1 = CUTX8(wordrg4);
        bptrrg1 = bptrrg7;
        wordrg3 = wordrg5;
      }
      wordrg4++;
    }
    *bptrrg1 = con(0xffffffff);
    bptrrg1 = bptrrg7;
    wordrg3 = wordrg5;
    *pb_0c++ = CUTX8(wordrg3);
  }
  if (eaxbool)
    SKW_ARRANGE_DUNGEON();
  if (ddata.v1d652d)
    SKW_2066_2498();
  ddata.v1d652d = false;
SPX_DEBUG_POP;
  return true;
}

x16 SKW_CREATE_MINION(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x16 argw2, x8 argb3)
{
  x16 wordrg5;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x8 vb_18;
  x16 vw_20;
  x16 vw_24;

  vw_0c = eaxw;
  vw_08 = edxw;
  vw_04 = ebxw;
  vw_20 = ddata.v1d3248;
  SKW_CHANGE_CURRENT_MAP_TO(argw1);
  x16 vw_1c = con(0xffff);
  bool vbool_14 = argw2 == con(0xffff);
  vw_24 = ecxw;
  wordrg5 = argw0;
  x16 wordrg6 = (argb3 >= con(0x0)) ? con(0x4) : con(0x0);
  if (SKW_RAND01() == con(0x0))
    vb_18 = con(0xffffffff);
  else
    vb_18 = con(0x1);
  // M_20A65:
  for(;;)
  {
    ui8 ubyterg1 = SKW_GET_TILE_VALUE(vw_24, wordrg5);
    ui8 ubyterg4 = ubyterg1 >> con(0x5);
    x16 wordrg48 = unsignedword(ubyterg4);
    if (wordrg48 == con(0x0) || wordrg48 == con(0x3))
    {
      ;
    }
    else if (wordrg48 != con(0x6) || (ubyterg1 & con(0x5)) != con(0x0))
    {
      if (wordrg48 != con(0x4) || (ubyterg1 & con(0x7)) == con(0x0) || (ubyterg1 & con(0x7)) == con(0x5))
      {
        if (SKW_GET_CREATURE_AT(vw_24, wordrg5) == con(0xffffffff))
        {
          x16 wordrg3 = vw_24;
          x16 wordrg2 = vw_04;
          x16 wordrg19;
          if (!vbool_14)
            wordrg19 = vw_0c;
          else
            wordrg19 = vw_0c | con(0x8000);
          vw_1c = SKW_ALLOC_NEW_CREATURE(wordrg19, wordrg2, wordrg3, vw_08, wordrg5);
          if (vw_1c != con(0xffffffff))
            break;
        }
      }
    }
    if (wordrg6 != con(0x0))
    {
      vw_24 = ecxw + table1d27fc[argb3];
      wordrg5 = argw0;
      wordrg5 += table1d2804[argb3];
      argb3 = (argb3 + vb_18) & con(0x3);
    }
    wordrg6--;
    if (wordrg6 == con(0xffffffff))
      break;
  }
  if (vbool_14)
  {
    if (vw_1c != con(0xffffffff))
    {
      x16 wordrg12 = SKW_GET_ADDRESS_OF_RECORD(vw_1c)->u2.w;
      for (;; wordrg12 = SKW_GET_NEXT_RECORD_LINK(wordrg12))
      {
        if (wordrg12 == con(0xfffffffe))
          break;
        if (urshift(wordrg12 & con(0x3c00), con(0xa)) == con(0xe))
          break;
      }
      SKW_GET_ADDRESS_OF_RECORD(wordrg12)->u2.w = argw2;
    }
  }
  SKW_CHANGE_CURRENT_MAP_TO(vw_20);
  return vw_1c;
}

// return is a byte, either 0x80 or 0x1
x8 SKW_1c9a_0006(x16 eaxw, x16 edxw)
{
  x8 byterg5;
  x8* ptrrg3; // bytebuffer
  s_x40bytes* ptrrg7;
  c_record* recoptrrg4;
  x16 vw_00;

  x16 wordrg6 = eaxw;
  x16 wordrg1 = edxw;
  byterg5 = CUTX8(edxw & con(0x80));
  wordrg1 &= con(0xffff003f);
  if (wordrg1 == con(0xffffffff) || wordrg1 == con(0xfffffffe))
    return con(0x0);
  if (wordrg1 == con(0x3f))
    return (byterg5 == con(0x0)) ? 1 : 0;
  if (wordrg1 == con(0x3e))
  {
    if (SKW_IS_CONTAINER_MONEYBOX(wordrg6) && (SKW_GET_ADDRESS_OF_RECORD(wordrg6)->u6.b.b1 & con(0x4)) == con(0x0))
      return (byterg5 == con(0x0)) ? 1 : 0;
    return byterg5;
  }
  if (wordrg1 == con(0x29))
  {
    if (SKW_IS_CONTAINER_MONEYBOX(wordrg6))
    {
      if ((SKW_GET_ADDRESS_OF_RECORD(wordrg6)->u6.b.b1 & con(0x4)) != con(0x0))
        return (byterg5 == con(0x0)) ? 1 : 0;
      return byterg5;
    }
    wordrg1 = con(0x7);
  }
  x8 byterg2 = ddata.s350.v1e054e->u4.b.b0;
  vw_00 = urshift(wordrg6 & con(0x3c00), con(0xa));
  if ((wordrg1 >= con(0x10) && wordrg1 < con(0x13)) || wordrg1 == con(0x28))
  {
    if (wordrg1 == con(0x28))
    {
      if (SKW_IS_CONTAINER_MONEYBOX(wordrg6) && (SKW_GET_ADDRESS_OF_RECORD(wordrg6)->u6.b.b1 & con(0x4)) == con(0x0))
        return (byterg5 == con(0x0)) ? 1 : 0;
      wordrg1 = con(0x10);
    }
    wordrg1 += ddata.s350.v1e054e->w8 * con(0x3);
  }
  x16 wordrg49 = wordrg1;
  ptrrg7 = UPCAST(s_x40bytes, ddata.s350.v1e07ee[wordrg49]);
  if (ptrrg7 == NULL)
  {
    ddata.s350.v1e0896--;
    ptrrg3 = DOWNCAST(x8, ddata.s350.v1e0898);
    ddata.s350.v1e07ee[wordrg49] = ptrrg3;
    ptrrg7 = UPCAST(s_x40bytes, ptrrg3);
    ptrrg3 += con(0x40);
    ddata.s350.v1e0898 = UPCAST(x8, ptrrg3);
    bool boolrg3 = (vw_00 == con(0x4));
    if (!SKW_QUERY_CREATURES_ITEM_MASK(byterg2, ptrrg7, boolrg3, CUTX8(wordrg49)))
      return con(0x0);
  }
  x16 wordrg100;
  if (vw_00 != con(0x4))
  {
    if (vw_00 != con(0x3))
    {
      if (vw_00 < con(0x5) || vw_00 > con(0xa))
        return con(0x0);
      wordrg100 = SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6);
    }
    else
    {
      recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
      wordrg6 = recoptrrg4->u2.w & con(0x7f);
      if (wordrg6 < con(0x1a))
        wordrg100 = recoptrrg4->u2.w & con(0x7f);
      else
      {
        bool skip = false; // added
        if (wordrg6 > con(0x1a))
        {
          if (wordrg6 != con(0x1b))
          {
            wordrg100 = recoptrrg4->u2.w & con(0x7f);
            skip = true;
          }
          else if ((recoptrrg4->u2.w & con(0xffffff80)) == con(0x0))
            return con(0x0);
        }
        if (!skip)
          wordrg100 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0xe), SKW_GET_WALL_DECORATION_OF_ACTUATOR(recoptrrg4));
      }
    }
  }
  else
    wordrg100 = unsignedword(SKW_GET_ADDRESS_OF_RECORD(wordrg6)->u4.b.b0);
  x32 longrg4 = unsignedlong(ptrrg7->barr_00[wordrg100 / 8]);
  wordrg100 &= con(0x7);
  if (((con(0x1) << wordrg100) & longrg4) != con(0x0))
    return (byterg5 == con(0x0)) ? 1 : 0;
  return byterg5;
}

x16 SKW_CALC_CLOUD_DAMAGE(x16 eaxw, x16 edxw)
{
  c_record* recoptrrg7;
  c_record* recoptrrg5;
  bool flag;
  x8 vb_00;
  x8 vb_04;

  recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  ui16 uwordrg2 = recoptrrg5->u2.w & con(0x7f);
  x16 wordrg6 = uwordrg2;
  if (wordrg6 >= con(0x8))
    return con(0x0);
  x8 byterg1 = table1d26c8[wordrg6];
  vb_00 = byterg1;
  if (byterg1 == con(0x0))
    return con(0x0);
  if (edxw != con(0xffffffff))
  {
    wordrg6 = urshift(edxw & con(0x3c00), con(0xa));
    if (wordrg6 != con(0x0) || (vb_04 = vb_00 & con(0x2), vb_04 == con(0x0)))
    {
      if (wordrg6 != con(0x4))
        return con(0x0);
      vb_04 = vb_00 & con(0x8);
      if (vb_04 == con(0x0))
        return con(0x0);
    }
    else
      recoptrrg7 = SKW_GET_ADDRESS_OF_RECORD(edxw);
  }
  else
  {
    byterg1 &= con(0x4);
    if (byterg1 == con(0x0))
      return con(0x0);
    wordrg6 = con(0xffffffff);
  }
  x16 wordrg400 = urshift(recoptrrg5->u2.w, con(0x8));
  if (wordrg6 == con(0x4) && (SKW_QUERY_CREATURE_AI_SPEC_FROM_TYPE(edxw)->u18.b.b1 & con(0x10)) != con(0x0))
  {
    if (uwordrg2 != con(0x0))
      wordrg400 >>= con(0x2);
  }
  vb_04 = vb_00 & con(0x1);
  if (vb_04 != con(0x0))
  {
    wordrg400 = urshift(recoptrrg5->u2.w, con(0x9)) + con(0x1);
    wordrg400 += SKW_RAND16(wordrg400) + con(0x1);
  }
  if (uwordrg2 < con(0x2))
  {
    if (uwordrg2 != con(0x0))
      return wordrg400;
    if (wordrg6 != con(0x0))
      return wordrg400;
    flag = (recoptrrg7->u2.b.b0 & con(0xffffff80)) != con(0x0);
  }
  else if (uwordrg2 <= con(0x2))
  {
    wordrg400 >>= con(0x1);
    if (wordrg6 != con(0x0))
      return wordrg400;
    flag = (recoptrrg7->u2.b.b0 & con(0xffffff80)) != con(0x0);
  }
  else if (uwordrg2 <= con(0x3))
    flag = (SKW_QUERY_CREATURE_AI_SPEC_FLAGS(edxw) & con(0x20)) != con(0x0);
  else
  {
    if (uwordrg2 == con(0x7))
    {
      wordrg400 = DM2_MAX(con(0x1), SKW_RAND01() + DM2_MIN(urshift(recoptrrg5->u2.w, con(0xd)), con(0x4)));
      if (wordrg6 == con(0x4))
        wordrg400 = SKW_APPLY_CREATURE_POISON_RESISTANCE(edxw, wordrg400);
    }
    return wordrg400;
  }
  if (!flag)
    wordrg400 = con(0x0);
  return wordrg400;
}

void SKW_PROCESS_CLOUD(c_tim* eaxptim)
{
  c_record* recoptrrg5;
  c_tim vtim_00;
  x16 vw_10;

  vw_10 = unsignedword(eaxptim->u.b.b_06);
  x16 wordrg6 = unsignedword(eaxptim->u.b.b_07);
  recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(eaxptim->v.w_08);
  if ((((SKW_GET_TILE_VALUE(vw_10, wordrg6) & con(0xff)) >> con(0x5)) & con(0xff)) == con(0x4))
  {
    x16 wordrg11 = SKW_CALC_CLOUD_DAMAGE(eaxptim->v.w_08, SKW_GET_TILE_RECORD_LINK(vw_10, wordrg6));
    if (wordrg11 != con(0x0))
      SKW_ATTACK_DOOR(vw_10, wordrg11, true, wordrg6, con(0x0));
  }
  x16 wordrg43 = recoptrrg5->u2.w & con(0x7f);
  if (wordrg43 != con(0xe) && wordrg43 != con(0x0) && wordrg43 != con(0x2))
  {
    if (ddata.v1d3248 == ddata.v1e0282 && vw_10 == ddata.v1e0280)
      if (wordrg6 == ddata.v1e027e)
      {
        x16 wordrg12 = SKW_CALC_CLOUD_DAMAGE(eaxptim->v.w_08, con(0xffff));
        if (wordrg12 != con(0x0))
          SKW_ATTACK_PARTY(wordrg12, con(0x0), con(0x0));
      }
    x16 wordrg161 = SKW_GET_CREATURE_AT(vw_10, wordrg6);
    if (wordrg161 != con(0xffffffff))
      if (!SKW_1c9a_0958(wordrg161))
      {
        x16 wordrg15 = SKW_CALC_CLOUD_DAMAGE(eaxptim->v.w_08, wordrg161);
        if (wordrg15 != con(0x0))
          SKW_ATTACK_CREATURE(wordrg161, wordrg6, con(0x200d), vw_10, con(0x64), wordrg15);
      }
    x16 wordrg16 = recoptrrg5->u2.w & con(0x7f);
    if (wordrg16 < con(0x28))
    {
      if (wordrg16 == con(0x7))
      {
        if (UI16CAST(recoptrrg5->u2.w & con(0xffffff00)) >= UI16CAST(con(0x600)))
        {
          x16 wordrg47 = unsignedword(CUTX8(urshift(recoptrrg5->u2.w, con(0x8)) - con(0x3))) << con(0x8);
          recoptrrg5->u2.w = unsignedword(CUTX8(recoptrrg5->u2.w)) | wordrg47;
          SKW_COPY_TIMER(eaxptim, &vtim_00);
          vtim_00.un.l_00++;
          SKW_QUEUE_TIMER(&vtim_00);
          return;
        }
      }
    }
    else if (wordrg16 <= con(0x28))
    {
      if (UI16CAST(recoptrrg5->u2.w & con(0xffffff00)) > UI16CAST(con(0x3700)))
      {
        recoptrrg5->u2.w = unsignedword(CUTX8(recoptrrg5->u2.w)) | (unsignedword(CUTX8(urshift(recoptrrg5->u2.w, con(0x8)) - con(0x28))) << con(0x8));
        SKW_COPY_TIMER(eaxptim, &vtim_00);
        vtim_00.un.l_00++;
        SKW_QUEUE_TIMER(&vtim_00);
        return;
      }
    }
    else if (wordrg16 == con(0x64))
    {
      SKW_QUEUE_NOISE_GEN2(con(0xd), con(0x81), con(0xfe), CUTX8(wordrg16), vw_10, wordrg6, con(0x1), con(0x6c), con(0xc8));
      x16 wordrg167 = ((recoptrrg5->u2.w & con(0x7f)) + con(0x1)) & con(0x7f);
      recoptrrg5->u2.b.b0 &= con(0xffffff80);
      recoptrrg5->u2.w |= wordrg167;
      SKW_COPY_TIMER(eaxptim, &vtim_00);
      vtim_00.un.l_00++;
      SKW_QUEUE_TIMER(&vtim_00);
      return;
    }
  }
  if (ddata.v1d3248 == ddata.v1e0266 && (((recoptrrg5->u2.w & con(0x7f)) == con(0x2) || (recoptrrg5->u2.b.b0 & con(0x7f)) == con(0x0)) || (recoptrrg5->u2.w & con(0x7f)) == con(0x30)))
    ddata.v1e0390.b0 |= con(0x1);
  SKW_CUT_RECORD_FROM(eaxptim->v.w_08, vw_10, wordrg6, NULL);
  SKW_DEALLOC_RECORD(eaxptim->v.w_08);
}

// TODO: make edxw unsigned?
x16 SKW_CREATURE_ATTACKS_PLAYER(c_record* eaxprec, x16 edxw)
{
  x16 wordrg5;
  c_aispec* aiptrrg6;
  c_hero* heroptrrg7;
  x16 vw_08;
  x16 vw_0c;

  // SPX: moved variable here
  x16 wordrg2;
  x16 wordrg3;
  x16 vw_00;

  vw_0c = edxw;
  if (UI16CAST(edxw) >= UI16CAST(ddata.savegamew2))
    return con(0x0);
  heroptrrg7 = &ddata.hero[edxw]; // BUGFIX 4/2014
  if (heroptrrg7->w36 == con(0x0))
    return con(0x0);
  wordrg5 = con(0x0);
  x16 vw_04 = 2 * urshift(ddata.v1e03c0->wc, con(0xc));
  aiptrrg6 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(eaxprec->u4.b.b0);
  vw_08 = unsignedword(aiptrrg6->u1c.b.b0);
  x16 wordrg22;
  if ((ddata.savegames1.b2 == con(0x0)) || ((aiptrrg6->u0.b.b1 & con(0x4)) != con(0x0)))
  {
    if ((aiptrrg6->u0.b.b1 & con(0x8)) == con(0x0))
      wordrg22 = 2 * ddata.v1e0286;
    else
      wordrg22 = con(0x0);
  }
  else
    wordrg22 = con(0x10);
  x16 wordrg46 = unsignedword(aiptrrg6->barr06[con(0x2)]);
  if (vw_08 != con(0x9))
  {
    if (vw_08 == con(0x8))
      wordrg46 = con(0xff);
  }
  else
    wordrg46 = DM2_MIN(con(0xff), 2 * wordrg46);
  if (!ddata.v1e0238 && wordrg46 != con(0xff))
  {
    x16 wordrg409 = wordrg22 + (CUTX16(SKW_RAND()) & con(0x1f)) + wordrg46 + vw_04 - con(0x10);
    if ((SKW_USE_DEXTERITY_ATTRIBUTE(vw_0c) >= wordrg409 && SKW_RAND02() != con(0x0)) || SKW_USE_LUCK_ATTRIBUTE(heroptrrg7, con(0x3c)))
      goto M_exit;
  }
   wordrg2 = CUTX16(SKW_RAND());
   wordrg3;
  if ((wordrg2 & con(0x70)) == con(0x0) || aiptrrg6->w1a == con(0x0))
    wordrg3 = (wordrg2 & con(0x1)) + con(0x1);
  else
  {
    ui16 uwordrg408 = aiptrrg6->w1a;
    wordrg2 &= con(0xf);
    if (wordrg2 == con(0x0))
      wordrg2 = con(0x1);
    x16 wordrg31 = con(0x0);
    while (wordrg31 < con(0x3))
    {
      if (wordrg2 <= (uwordrg408 & con(0xf)))
        break;
      uwordrg408 >>= con(0x4);
      wordrg31++;
    }
    wordrg3 = unsignedword(table1d26f8[wordrg31]);
  }
  wordrg5 = unsignedword(aiptrrg6->barr06[con(0x0)]);
  wordrg5 += DM2_MIN(unsignedword(aiptrrg6->barr06[con(0x0)]), CUTX16((SKW_RAND() & con(0xf)) + vw_04));
  vw_08 = unsignedlong(vw_08);
  if (vw_08 != con(0x8))
  {
    wordrg5 -= 2 * SKW_QUERY_PLAYER_SKILL_LV(vw_0c, true, con(0x7));
    if (wordrg5 <= con(0x1))
    {
      if (SKW_RAND01() != con(0x0))
      {
        wordrg5 = con(0x0);
        goto M_exit;
      }
      wordrg5 = SKW_RAND02() + con(0x2);
    }
  }
  wordrg5 >>= con(0x1);
  wordrg5 += SKW_RAND02() + SKW_RAND16(wordrg5);
  wordrg5 += SKW_RAND16(wordrg5);
  wordrg5 >>= con(0x2);
  wordrg5 += SKW_RAND02() + con(0x1);
  if (SKW_RAND01() != con(0x0))
    wordrg5 -= SKW_RAND16(wordrg5 / 2 + con(0x1)) - con(0x1);
   vw_00 = vw_0c;
  wordrg5 = SKW_WOUND_PLAYER(vw_0c, wordrg3, vw_08, wordrg5);
  if (wordrg5 != con(0x0))
  {
    SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x82), con(0xfe), heroptrrg7->b101, ddata.v1e0270, ddata.v1e0272, con(0x2), con(0x69), con(0xc8));
    x16 wordrg21 = unsignedword(aiptrrg6->barr06[con(0x1)]);
    if (wordrg21 != con(0x0) && SKW_RAND01() != con(0x0))
    {
      x16 wordrg13 = SKW_2c1d_0f2a(heroptrrg7, wordrg21, con(0x4));
      if (wordrg13 != con(0x0))
        SKW_PROCESS_POISON(vw_00, wordrg13);
    }
  }
M_exit: // M_8AF0:
  if (ddata.v1e0238)
    SKW_RESUME_FROM_WAKE();
  return wordrg5;
}

x16 SKW_CALC_PLAYER_ATTACK_DAMAGE(c_hero* eaxphero, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x16 argw2, x16 argw3, x16 argw4)
{
  x16 wordrg5;
  c_aispec* aiptrrg3;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;

  vw_0c = ebxw;
  vw_04 = ecxw;
  x16 wordrg2 = argw1;
  if (edxw >= UI16CAST(ddata.savegamew2))
    return con(0x0);
  if (eaxphero->w36 == con(0x0))
    return con(0x0);
  vw_08 = 2 * urshift(ddata.v1e03c0->wc, con(0xc));
  aiptrrg3 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(SKW_GET_ADDRESS_OF_RECORD(vw_0c)->u4.b.b0);
  bool doit = false; // added
  x16 wordrg1;
  if (unsignedword(aiptrrg3->barr06[con(0x2)]) != con(0xffffffff))
  {
    x16 wordrg11 = SKW_GET_CREATURE_AT(vw_04, argw0);
    if (wordrg11 == con(0xffffffff) || !SKW_1c9a_0958(wordrg11))
    {
      x16 wordrg12 = wordrg2 & con(0x8000);
      wordrg2 &= con(0x7fff);
      if ((aiptrrg3->u0.b.b0 & con(0x20)) == con(0x0) || wordrg12 != con(0x0))
      {
        x16 wordrg406 = (2 * ddata.v1e0286 + (vw_08 + unsignedword(aiptrrg3->barr06[con(0x2)]) + (CUTX16(SKW_RAND()) & con(0x1f))) - con(0x10)) / 2;
        if (SKW_USE_DEXTERITY_ATTRIBUTE(edxw) > wordrg406 || SKW_RAND02() == con(0x0) || SKW_USE_LUCK_ATTRIBUTE(eaxphero, con(0x4b) - wordrg2))
        {
          x16 vw_10;
          wordrg5 = SKW_COMPUTE_PLAYER_ATTACK_OR_THROW_STRENGTH(edxw, argw3, ddata.v1e0b76);
          if (wordrg5 != con(0x0))
          {
            wordrg5 += SKW_RAND16(wordrg5 / 2 + con(0x1));
            wordrg5 = (argw2 * wordrg5) >> con(0x5);
            x16 wordrg405 = vw_08 + CUTX16(SKW_RAND() & con(0x1f)) + unsignedword(aiptrrg3->b2);
            wordrg5 += CUTX16(SKW_RAND() & con(0x1f));
            wordrg5 -= wordrg405;
            vw_10 = wordrg5;
            if (wordrg5 > con(0x1))
              doit = true;
          }
          if (!doit)
          {
            x16 wordrg112 = SKW_RAND02();
            if (wordrg112 != con(0x0))
            {
              wordrg5 = wordrg112 + con(0x1);
              vw_10 += CUTX16(SKW_RAND() & con(0xf));
              if (vw_10 > con(0x0) || SKW_RAND01() != con(0x0))
              {
                wordrg5 += SKW_RAND02();
                if (SKW_RAND02() == con(0x0))
                  wordrg5 += DM2_MAX(con(0x0), CUTX16(SKW_RAND()) & con(0xf) + vw_10);
              }
              doit = true;
            }
          }
          if (doit)
          {
            // M_8CF7:
            wordrg5 >>= con(0x1);
            wordrg5 += SKW_RAND02() + SKW_RAND16(wordrg5);
            wordrg5 += SKW_RAND16(wordrg5);
            wordrg5 >>= con(0x2);
            wordrg5 += SKW_RAND02() + con(0x1);
            if (SKW_QUERY_PLAYER_SKILL_LV(edxw, true, argw3) > (CUTX16(SKW_RAND() & con(0x3f))))
              wordrg5 += con(0xa);
            x16 wordrg404 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(eaxphero->warrc3[ddata.v1e0b76], con(0xd));
            if (wordrg404 != con(0x0))
              if (wordrg5 > (CUTX16(SKW_RAND() & con(0x1f))))
                wordrg5 += SKW_APPLY_CREATURE_POISON_RESISTANCE(vw_0c, wordrg404);
            SKW_ADJUST_SKILLS(edxw, ((((urshift(aiptrrg3->w16, con(0x8))) & con(0xf)) * wordrg5) >> con(0x4)) + con(0x3), argw3);
            wordrg1 = SKW_RAND02() + con(0x4);
          }
        }
      }
    }
  }
  if (!doit)
  {
    wordrg5 = con(0x0);
    wordrg1 = SKW_RAND01() + con(0x2);
  }
  SKW_ADJUST_STAMINA(edxw, wordrg1);
  if ((aiptrrg3->u18.b.b1 & con(0x10)) != con(0x0))
    if (argw4 != con(0x1))
      wordrg5 >>= CUTX8(SKW_RAND01() + con(0x1));
  SKW_ATTACK_CREATURE(vw_0c, argw0, con(0x6002), vw_04, con(0x5a), wordrg5);
  return wordrg5;
}

x16 SKW_0cee_1a46(s_8wordarray* eaxps, x16 ebxw, bool ecxbool, x16 edxw)
{
  c_record* recoptrrg3;
  c_record* recoptrrg4;
  bool flag;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_18;
  x8 vb_20;

  vw_18 = edxw;
  x16 vw_1c = con(0x0);
  // M_E5B8, co-label M_E96A
  for (;; vw_18 = SKW_GET_NEXT_RECORD_LINK(vw_18))
  {
    bool doit = false; // added
    x16 wordrg21 = vw_18;
    if (wordrg21 == con(0xfffffffe))
      return vw_18;
    vw_0c = urshift(wordrg21 & con(0x3c00), con(0xa));
    if (vw_0c > con(0x3))
      return vw_18;
    x16 vw_14 = urshift(wordrg21, con(0xe));
    if (((con(0x1) << CUTX8(vw_14)) & vw_1c) != con(0x0))
      continue;
    vw_10 = ((vw_14 - ebxw) & con(0x3)) + con(0x3);
    if (ecxbool && vw_10 != con(0x5))
      continue;
    bool boolrg6 = false;
    x16 wordrg2 = con(0x0);
    x32 longrg7 = ddata.longmallocx;
    x8 vb_04 = con(0x0);
    recoptrrg3 = SKW_GET_ADDRESS_OF_RECORD(vw_18);
    recoptrrg4 = recoptrrg3;
    bool pass = false; // added
    if (vw_0c != con(0x2))
    {
      // M_E77E:
      if (vw_0c != con(0x3))
        continue;
      vb_20 = SKW_GET_WALL_DECORATION_OF_ACTUATOR(recoptrrg3);
      if (vb_20 == con(0xffffffff))
        continue;
      x16 wordrg100 = recoptrrg3->u2.w & con(0x7f);
      if (wordrg100 < con(0x32))
      {
        if (wordrg100 < con(0x1a))
        {
          if (wordrg100 >= con(0x17))
          {
            if (wordrg100 <= con(0x17))
            {
              wordrg2 = ulrshift(recoptrrg3->u4.w, con(0xd), con(0xf));
              flag = wordrg2 == con(0x0);
              if (!flag)
                boolrg6 = true;
            }
            else if (wordrg100 == con(0x18))
              doit = true;
          }
        }
        else if (wordrg100 <= con(0x1a))
        {
          wordrg2 = ulrshift(recoptrrg3->u4.w, con(0xd), con(0xf));
          if (wordrg2 != con(0x0))
          {
            boolrg6 = true;
            vw_1c |= con(0x1) << CUTX8(vw_14);
          }
        }
        else if (wordrg100 <= con(0x1b))
        {
          wordrg2 = recoptrrg3->u4.w & con(0x1);
          if (wordrg2 == ulrshift(recoptrrg3->u4.w, con(0xd), con(0xf)))
            boolrg6 = true;
        }
        else if (wordrg100 == con(0x2c))
        {
          if ((recoptrrg3->u4.b.b0 & con(0x1)) != con(0x0))
          {
            vb_04 = CUTX8(urshift(recoptrrg3->u2.w, con(0x7)));
            boolrg6 = true;
          }
        }
      }
      else if (wordrg100 <= con(0x32))
      {
        if ((recoptrrg3->u4.b.b0 & con(0x1)) != con(0x0))
        {
          longrg7 = unsignedlong(urshift(recoptrrg3->u2.w, con(0x7)));
          boolrg6 = true;
        }
      }
      else if (wordrg100 < con(0x46))
      {
        if (wordrg100 < con(0x3f))
        {
          ;
        }
        else if (wordrg100 <= con(0x3f))
        {
          if (vw_10 != con(0x5))
            eaxps->warr_00[con(0x7)] = con(0xffffffff);
          else
            eaxps->warr_00[con(0x7)] = vw_18;
        }
        else if (wordrg100 == con(0x41))
          wordrg2 = urshift(recoptrrg3->u2.w, con(0x7));
      }
      else if (wordrg100 <= con(0x46))
        wordrg2 = recoptrrg3->u4.w & con(0x1);
      else if (wordrg100 < con(0x4a))
      {
        ;
      }
      else if (wordrg100 <= con(0x4a))
        doit = true;
      else if (wordrg100 == con(0x7e))
      {
        if ((recoptrrg3->u4.b.b0 & con(0x4)) != con(0x0))
        {
          if (vw_10 == con(0x5))
            eaxps->warr_00[con(0x7)] = urshift(recoptrrg3->u2.w, con(0x7));
          vw_1c |= con(0x1) << CUTX8(vw_14);
          boolrg6 = true;
        }
      }
    }
    else
    {
      x16 wordrg19 = ulrshift(recoptrrg3->u2.w, con(0xd), con(0xe));
      if (wordrg19 == con(0x0))
      {
        ;
      }
      else if (wordrg19 == con(0x1))
      {
        vb_20 = CUTX8(urshift(recoptrrg3->u2.w, con(0x3)));
        ui16 uwordrg3 = urshift(urshift(recoptrrg3->u2.w, con(0x3)), con(0x8)) & con(0x1f);
        if (uwordrg3 < con(0x5))
        {
          if (uwordrg3 < con(0x2))
          {
            if (uwordrg3 != con(0x0))
              continue;
          }
          else if (uwordrg3 <= con(0x2))
            boolrg6 = true;
          else if (uwordrg3 == con(0x4))
          {
            wordrg2 = recoptrrg4->u2.w & con(0x1);
            if (wordrg2 != con(0x0))
            {
              boolrg6 = true;
              vw_1c |= con(0x1) << CUTX8(vw_14);
            }
          }
          else
            continue;
          pass = true;
        }
        else if (uwordrg3 <= con(0x5))
        {
          flag = (recoptrrg4->u2.b.b0 & con(0x1)) == con(0x0);
          if (!flag)
            boolrg6 = true;
          pass = true;
        }
        else if (uwordrg3 < con(0x7))
          pass = true;
        else if (uwordrg3 <= con(0x8))
        {
          wordrg2 = recoptrrg4->u2.w & con(0x1);
          if (wordrg2 != con(0x0))
          {
            boolrg6 = true;
            vw_1c |= con(0x1) << CUTX8(vw_14);
          }
          pass = true;
        }
        else if (uwordrg3 < con(0xd))
          continue;
        else if (uwordrg3 <= con(0xd))
        {
          flag = (recoptrrg4->u2.b.b0 & con(0x1)) == con(0x0);
          if (!flag)
            boolrg6 = true;
          pass = true;
        }
        else if (uwordrg3 != con(0xe))
          continue;
      }
      else
        continue;
      if (!pass)
      {
        // M_E693:
        eaxps->warr_00[vw_10] = con(0x0);
        if (vw_10 == con(0x5))
        {
          if ((recoptrrg4->u2.b.b0 & con(0x1)) == con(0x0))
            eaxps->warr_00[con(0x7)] = con(0xffffffff);
          else
            eaxps->warr_00[con(0x7)] = vw_18;
        }
        vw_1c |= con(0x1) << CUTX8(vw_14);
        continue;
      }
    }
    // M_E938:
    if (doit)
      // M_E89D:
      wordrg2 = ulrshift(recoptrrg4->u4.w, con(0xd), con(0xf)) ^ (recoptrrg4->u4.w & con(0x1));
    if (boolrg6)
      wordrg2 = SKW_QUERY_ORNATE_ANIM_FRAME(con(0x9), longrg7, vb_04, vb_20);
    wordrg2 <<= con(0xa);
    wordrg2 |= unsignedword(vb_20);
    eaxps->warr_00[vw_10] = wordrg2;
  }
}

// was SKW_0cee_1dbe
void SKW_SUMMARIZE_STONE_ROOM(s_8wordarray* eaxps, x16 ebxw, x16 ecxw, x16 edxw)
{
  x8 byterg2h;
  x8 byterg1h;
  c_record* recoptrrg4;
  c_record* recoptrrg1;
  x8 vb_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_24;
  x16 vw_2c;
  x16 vw_30;
  x8 vb_34;
  x8 vb_38;
  bool flag;

  vw_24 = edxw;
  vw_18 = ebxw;
  vw_1c = ecxw;
  eaxps->warr_00[con(0x3)] = con(0xff);
  eaxps->warr_00[con(0x4)] = con(0xff);
  eaxps->warr_00[con(0x5)] = con(0xff);
  eaxps->warr_00[con(0x6)] = con(0xff);
  eaxps->warr_00[con(0x7)] = con(0x0);
  x16 wordrg3 = vw_1c;
  x8 byterg2 = SKW_GET_TILE_VALUE(vw_18, wordrg3);
  vb_38 = byterg2;
  eaxps->warr_00[con(0x1)] = unsignedword(byterg2);
  x16 wordrg6 = SKW_GET_TILE_RECORD_LINK(vw_18, wordrg3);
  ui16 uwordrg1 = unsignedword(ubrshift(byterg2, con(0x5)));
  eaxps->warr_00[con(0x0)] = uwordrg1;
  if (uwordrg1 > con(0x6))
  {
    eaxps->warr_00[con(0x2)] = wordrg6;
    return;
  }
  x8 byterg1 = byterg2 & con(0x4);
  byterg2h = byterg2 & con(0x8);
  vw_0c = vw_24 & con(0x1);
  x16 ret;
  bool boolrg7;
  switch (uwordrg1)
  {
    case 0:
      if (UI16CAST(vw_24) <= UI16CAST(con(0x3)))
      {
        x16 wordrg10;
        byterg1h = byterg2 & con(0x1);
        x16 byterg44 = byterg2 & con(0x2);
        switch (vw_24)
        {
          case 0:
            vw_2c = unsignedword(byterg2h);
            vw_30 = unsignedword(byterg1);
            vw_10 = unsignedword(byterg44);
            wordrg10 = unsignedword(byterg1h);
          break;

          case 1:
            vw_2c = unsignedword(byterg1);
            vw_30 = unsignedword(byterg44);
            vw_10 = unsignedword(byterg1h);
            wordrg10 = unsignedword(byterg2h);
          break;

          case 2:
            vw_2c = unsignedword(byterg44);
            vw_30 = unsignedword(byterg1h);
            vw_10 = unsignedword(byterg2h);
            wordrg10 = unsignedword(byterg1);
          break;

          case 3:
            vw_2c = unsignedword(byterg1h);
            vw_30 = unsignedword(byterg2h);
            vw_10 = unsignedword(byterg1);
            wordrg10 = unsignedword(byterg44);
          break;

          default: throw(THROW_DMABORT);
        }
        vw_14 = wordrg10;
      }
      SKW_0cee_185a(eaxps, vw_30, vw_10, vw_2c, vw_14, vw_24, vw_18, vw_1c);
      boolrg7 = false;
      ret = 0;
    break;

    case 1:
      ret = 2;
    break;

    case 2:
      if (byterg2h == con(0x0))
      {
        eaxps->warr_00[con(0x0)] = con(0x1);
        ret = 2;
      }
      else
      {
        eaxps->warr_00[con(0x3)] = unsignedword(byterg1);
        ret = 3;
      }
    break;

    case 3:
      eaxps->warr_00[con(0x0)] = ((((unsignedlong(byterg2h) / 8) & con(0xff)) != signedlong(vw_0c)) ? 1 : 0) + con(0x12);
      eaxps->warr_00[con(0x3)] = unsignedword(byterg2 & con(0x4));
      ret = 1;
    break;

    case 4:
      eaxps->warr_00[con(0x3)] = unsignedword(byterg2 & con(0x7));
      eaxps->warr_00[con(0x4)] = SKW_GET_TILE_RECORD_LINK(vw_18, wordrg3);
      if (unsignedword(byterg2h / 8) != vw_0c)
      {
        eaxps->warr_00[con(0x0)] = con(0x11);
        vw_24 = (vw_24 + con(0x1)) & con(0x3);
        SKW_0cee_1a46(eaxps, vw_24, true, SKW_GET_TILE_RECORD_LINK(vw_18 + table1d27fc[vw_24], vw_1c + table1d2804[vw_24]));
      }
      else
        eaxps->warr_00[con(0x0)] = con(0x10);
      ret = 1;
    break;

    case 5:
      if (byterg2h == con(0x0) || byterg1 == con(0x0))
      {
        eaxps->warr_00[con(0x0)] = con(0x1);
        eaxps->warr_00[con(0x1)] &= con(0xfffff7ff); // mod
      }
      ret = 3;
    break;

    case 6:
      if (byterg1 != con(0x0))
      {
        vb_38 = con(0x1);
        eaxps->warr_00[con(0x0)] = con(0x1);
        ret = 2;
      }
      else
      {
        eaxps->warr_00[con(0x0)] = con(0x0);
        boolrg7 = true;
        ret = 0;
      }
    break;

    default: throw(THROW_DMABORT);
  }
  switch (ret)
  {
    case 0: // M_EB34:
      wordrg6 = SKW_0cee_1a46(eaxps, vw_24, false, wordrg6);
      if (boolrg7 && ddata.v1e0270 != vw_18 && ddata.v1e0272 != vw_1c)
      {
        eaxps->warr_00[con(0x2)] = con(0xfffffffe);
        return;
      }
      if (!boolrg7)
      {
        for (x16 vw_20 = con(0x0); vw_20 < con(0x4); vw_20++)
        {
          x16 wordrg17 = (vw_24 + vw_20) & con(0x3);
          if ((((SKW_GET_TILE_VALUE(vw_18 + table1d27fc[wordrg17], vw_1c + table1d2804[wordrg17]) & con(0xff)) >> con(0x5)) & con(0xff)) == con(0x4))
            eaxps->warr_00[vw_20 + con(0x3)] = con(0xff);
        }
      }
      eaxps->warr_00[con(0x2)] = wordrg6;
    return;

    case 1: // M_EF85:
      for(;;)
      {
        if (wordrg6 == con(0xfffffffe))
          break;
        if (urshift(wordrg6 & con(0x3c00), con(0xa)) > con(0x3))
          break;
        wordrg6 = SKW_GET_NEXT_RECORD_LINK(wordrg6);
      }
      eaxps->warr_00[con(0x2)] = wordrg6;
    return;

    case 2: // M_EC03:
      {
        x16 vw_20_1 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x6b), CUTX8(ulrshift(ddata.v1e03c0->we, con(0x8), con(0xc))));
        if (vw_20_1 != con(0x0))
        {
          if ((vw_20_1 & con(0x8000)) == con(0x0))
            eaxps->warr_00[con(0x5)] = unsignedword(CUTX8(vw_20_1));
          else
            eaxps->warr_00[con(0x5)] = unsignedword(CUTX8(vw_20_1)) | ((SKW_QUERY_ORNATE_ANIM_FRAME(con(0xa), ddata.longmallocx, con(0x0), CUTX8(vw_20_1)) * con(0xa)) << con(0x8));
        }
      }
    break;

    case 3: // M_EC97:
    break;
  }
  // M_EC97, co-label M_EE97, no exit except return here
  for (;; wordrg6 = SKW_GET_NEXT_RECORD_LINK(wordrg6))
  {
    if (wordrg6 == con(0xfffffffe))
    {
      eaxps->warr_00[con(0x2)] = wordrg6;
      return;
    }
    vw_24 = urshift(wordrg6 & con(0x3c00), con(0xa));
    x16 wordrg3 = vw_24;
    if (wordrg3 > con(0x3))
    {
      eaxps->warr_00[con(0x2)] = wordrg6;
      return;
    }
    bool boolrg2 = false;
    x16 vw_28 = con(0x0);
    x32 longrg7 = ddata.longmallocx;
    x8 vb_04 = boolrg2 ? 1 : 0;
    recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
    recoptrrg4 = recoptrrg1;
    if (wordrg3 != con(0x2))
    {
      if (wordrg3 != con(0x3))
        continue;
      if ((recoptrrg1->u2.w & con(0x7f)) == con(0x30))
        eaxps->warr_00[con(0x6)] = con(0x0);
      vb_34 = SKW_GET_FLOOR_DECORATION_OF_ACTUATOR(recoptrrg4);
      if (vb_34 == con(0xffffffff))
        continue;
      x16 wordrg14 = recoptrrg4->u2.w & con(0x7f);
      if (wordrg14 < con(0x2c))
      {
        if (wordrg14 == con(0x27))
        {
          if ((urshift(recoptrrg4->u2.w, con(0x7)) - con(0x1)) != ddata.v1d3248)
            continue;
          flag = (recoptrrg4->u4.b.b0 & con(0x1)) == con(0x0);
          if (!flag)
            boolrg2 = true;
        }
      }
      else if (wordrg14 <= con(0x2c))
      {
        if ((recoptrrg4->u4.b.b0 & con(0x1)) != con(0x0))
        {
          vb_04 = CUTX8(urshift(recoptrrg4->u2.w, con(0x7)));
          boolrg2 = true;
        }
      }
      else if (wordrg14 == con(0x32))
      {
        if ((recoptrrg4->u4.b.b0 & con(0x1)) != con(0x0))
        {
          longrg7 = unsignedlong(urshift(recoptrrg4->u2.w, con(0x7)));
          boolrg2 = true;
        }
      }
    }
    else
    {
      if ((recoptrrg4->u2.w & con(0x6)) != con(0x2))
        continue;
      x8 byterg19 = CUTX8(recoptrrg1->u2.w);
      x16 wordrg401 = urshift(recoptrrg1->u2.w, con(0x3));
      vb_08 = CUTX8(wordrg401);
      vb_34 = vb_08;
      ui16 uwordrg400 = urshift(wordrg401, con(0x8)) & con(0x1f);
      if (uwordrg400 < con(0xa))
      {
        if (uwordrg400 < con(0x2))
        {
          if (uwordrg400 != con(0x0))
            continue;
        }
        else if (uwordrg400 <= con(0x2))
          boolrg2 = true;
        else if (uwordrg400 == con(0x5))
        {
          flag = (byterg19 & con(0x1)) == con(0x0);
          if (!flag)
            boolrg2 = true;
        }
        else
          continue;
      }
      else if (uwordrg400 <= con(0xa))
      {
        ;
      }
      else if (uwordrg400 < con(0x10))
      {
        if (uwordrg400 != con(0xf))
          continue;
        vw_28 = con(0x1);
      }
      else if (uwordrg400 <= con(0x10))
      {
        ;
      }
      else if (uwordrg400 <= con(0x11))
        vw_28 = ((vb_38 & con(0x8)) != con(0x0)) ? 1 : 0;
      else if (uwordrg400 == con(0x14))
      {
        eaxps->warr_00[con(0x6)] = con(0x0);
        continue;
      }
      else
        continue;
    }
    // M_EE65:
    if (boolrg2)
      vw_28 = SKW_QUERY_ORNATE_ANIM_FRAME(con(0xa), longrg7, vb_04, vb_34);
    eaxps->warr_00[con(0x5)] = unsignedword(vb_34) | ((vw_28 * con(0xa)) << con(0x8));
  }
}

// was SKW_1031_156f
void SKW_ADJUST_UI_EVENT(c_event* eaxps)
{
  x16 wordrg5;

  ui16 uwordrg4 = eaxps->warr0[con(0x2)];
  x16 wordrg2;
  if (uwordrg4 < con(0x74) || uwordrg4 > con(0x7b))
  {
    if (uwordrg4 < con(0x5f) || uwordrg4 > con(0x62))
      return;
    wordrg5 = SKW_GET_PLAYER_AT_POSITION((uwordrg4 - con(0x5f) + ddata.v1e0258) & con(0x3));
    if (wordrg5 < con(0x0))
    {
      eaxps->warr0[con(0x2)] = con(0x0);
      return;
    }
    if (uwordrg4 > con(0x60))
      wordrg2 = eaxps->warr0[con(0x1)] - eaxps->r6.y;
    else
      wordrg2 = eaxps->r6.h + eaxps->r6.y - con(0x1) - eaxps->warr0[con(0x1)];
    x16 wordrg11;
    if (uwordrg4 != con(0x60) && uwordrg4 != con(0x61))
      wordrg11 = (eaxps->r6.x + eaxps->r6.w) - con(0x1) - eaxps->warr0[con(0x0)];
    else
      wordrg11 = eaxps->warr0[con(0x0)] - eaxps->r6.x;
    if (wordrg11 > wordrg2)
    {
      if (ddata.hero[wordrg5].b2a[2] != con(0x0))
        uwordrg4 = con(0x0);
    }
    else
      uwordrg4 -= con(0x4f);
    eaxps->warr0[con(0x2)] = uwordrg4;
    return;
  }
  uwordrg4 -= con(0x74);
  x8 byterg6 = ((uwordrg4 & con(0x1)) != con(0x0)) ? 1 : 0; // not bool!
  wordrg5 = SKW_GET_PLAYER_AT_POSITION((ddata.v1e0258 + uwordrg4 / 2) & con(0x3));
  if (wordrg5 < con(0x0))
  {
    eaxps->warr0[con(0x2)] = con(0x0);
    return;
  }
  if (ddata.hero[wordrg5].b2a[byterg6] != con(0x0))
  {
    eaxps->warr0[con(0x2)] = con(0x0);
    return;
  }
  if (SKW_IS_ITEM_HAND_ACTIVABLE(wordrg5, signedword(byterg6), ddata.hero[wordrg5].warrc3[byterg6]))
    eaxps->warr0[con(0x2)] = 2 * wordrg5 + con(0x74) + unsignedword(byterg6);
  else
    eaxps->warr0[con(0x2)] = con(0x0);
}

// was SKW_12b4_0300
// return used only when used recursive
// TODO: problem inside
bool SKW_PERFORM_MOVE(x16 eaxw)
{
  x16 wordrg5;
  c_hero* heroptrrg3;
  c_5bytes vs_04;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_28;
  x16 vw_2c;
  x16 vw_30;
  x16 vw_34;

  x8 byterg1 = SKW_GET_TILE_VALUE(ddata.v1e0280, ddata.v1e027e);
  x16 vw_0c = unsignedword(byterg1);
  vw_18 = ((unsignedword(byterg1) >> con(0x5)) == con(0x3)) ? 1 : 0;
  wordrg5 = con(0x1);
  heroptrrg3 = ddata.hero;
  ui16 uwordrg22 = con(0x0);
  while (uwordrg22 < ddata.savegamew2)
  {
    if (heroptrrg3->w36 != con(0x0))
      wordrg5 = DM2_MAX(wordrg5, SKW_CALC_PLAYER_WALK_DELAY(uwordrg22));
    heroptrrg3++;
    uwordrg22++;
  }
  bool skip = false; // added
  if (wordrg5 > con(0x1) && ddata.v1e025c == con(0x0))
  {
    if (eaxw == con(0x3))
      skip = true;
    else
    {
      if (eaxw == con(0x5))
      {
        if (!ddata.v1e0234 && vw_18 == con(0x0))
          skip = true;
      }
      if (ddata.v1d4000 != con(0xffffffff)) // && !skip not necessary
        skip = true;
    }
  }
  if (skip)
  {
    ddata.v1e025c = wordrg5 / 2;
    ddata.v1e026a = ddata.v1e0270;
    ddata.v1e0268 = ddata.v1e0272;
    ddata.v1e0278 = ddata.v1e0258;
    ddata.v1e0256 = eaxw;
    if (ddata.v1e0256 != con(0x3))
      SKW_CALC_VECTOR_W_DIR(ddata.v1e0258, con(0x0), &ddata.v1e026a, con(0xffffffff), &ddata.v1e0268);
  }
  else
  {
    if (ddata.v1d4000 != con(0xffffffff))
    {
      if (ddata.v1e0258 == ddata.v1e0278)
      {
        if (ddata.v1e0266 == ddata.v1e0540)
        {
          if (ddata.v1e0270 == ddata.v1e0546)
          {
            if (ddata.v1e0272 == ddata.v1e0544)
            {
              if (SKW_GET_CREATURE_AT(ddata.v1e053c, ddata.v1e053a) == ddata.v1d4000)
              {
                ddata.v1d4000 = con(0xffffffff);
                vw_30 = (ddata.v1e0266);
                if (eaxw == con(0x3))
                  SKW_12b4_0d75(ddata.v1e053c, ddata.v1e0542, con(0xfe), ddata.v1e053a);
                if (SKW_PERFORM_MOVE(eaxw))
                {
                  SKW_PERFORM_TURN_SQUAD(ddata.v1e0538);
                  if (eaxw != con(0x3))
                  {
                    SKW_CHANGE_CURRENT_MAP_TO(vw_30);
                    SKW_12b4_0d75(ddata.v1e053c, ddata.v1e0542, con(0xfe), ddata.v1e053a);
                  }
                }
                SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e0266);
              }
            }
          }
        }
      }
      ddata.v1d4000 = con(0xffffffff);
      if (!ddata.v1e03a8)
        ddata.v1d324a = con(0x6);
      return true;
    }
    vw_30 = ddata.v1d3248;
    vw_28 = eaxw - con(0x3);
    if (ddata.v1e0234 && vw_28 == con(0x2))
      SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e027c);
    vw_14 = ddata.v1e0280;
    vw_20 = ddata.v1e027e;
    vw_34 = ddata.v1e0264;
    SKW_CALC_VECTOR_W_DIR(vw_34, table1d3ffc[vw_28], &vw_14, table1d3ff8[vw_28], &vw_20);
    x16 vw_24 = unsignedword(SKW_GET_TILE_VALUE(vw_14, vw_20));
    ddata.v1e0488 = true;
    heroptrrg3 = ddata.hero;
    ui16 uwordrg21 = con(0x0);
    while (uwordrg21 < UI16CAST(ddata.savegamew2))
    {
      if (heroptrrg3->w36 != con(0x0))
        SKW_ADJUST_STAMINA(uwordrg21, 3 * SKW_GET_PLAYER_WEIGHT(uwordrg21) / SKW_MAX_LOAD(heroptrrg3) + con(0x1));
      heroptrrg3++;
      uwordrg21++;
    }
    SKW_RESET_SQUAD_DIR();
    x16 wordrg7 = vw_24;
    i16 ret = 0; // added, default set
    x16 wordrg15 = SKW_12b4_0881(vw_28, vw_24, vw_14, vw_0c, vw_20, &vw_2c) - con(0x1);
    if (UI16CAST(wordrg15) <= con(0x5))
    {
      switch (wordrg15)
      {
        case 1:
          SKW_MOVE_RECORD_TO(con(0xffff), ddata.v1e0272, con(0xffffffff), ddata.v1e0270, con(0x0));
          ddata.v1e0270 = vw_14;
          ddata.v1e0272 = vw_20;
          vw_0c = vw_24;
        case 0: // case 1 running through
          SKW_12b4_00af(vw_0c & con(0x4));
          ret = -1;
        break;

        case 2:
          if (ddata.savegamew2 != con(0x0))
          {
            SKW_12b4_023f(vw_14, &vw_1c, &vw_10, vw_20, vw_34, vw_28);
            if (((wordrg7 >> con(0x5)) & con(0xff)) == con(0x4))
            {
              if ((CUTX8(vw_24) & con(0x7)) == con(0x4))
              {
                wordrg5 = con(0x0);
                if (vw_1c != con(0xffffffff))
                {
                  heroptrrg3 = &ddata.hero[vw_1c];
                  wordrg5 = CUTX16(SKW_RAND() & con(0xf));
                  x16 wordrg111 = SKW_GET_PLAYER_ABILITY(heroptrrg3, con(0x0), con(0x1)) + wordrg5;
                  wordrg5 = SKW_STAMINA_ADJUSTED_ATTR(heroptrrg3, wordrg111); // BUGFIX 4.7/2014 TODO: check again full wordrg5 behaviour
                }
                if (vw_10 != vw_1c && (vw_10 != con(0xffffffff)))
                {
                  heroptrrg3 = &ddata.hero[vw_10];
                  x16 wordrg112 = SKW_GET_PLAYER_ABILITY(heroptrrg3, con(0x0), con(0x1)) + CUTX16(SKW_RAND() & con(0xf));
                  wordrg5 += SKW_STAMINA_ADJUSTED_ATTR(heroptrrg3, wordrg112); // BUGFIX 4.8/2014 TODO: check again full wordrg5 behaviour
                }
                SKW_ATTACK_DOOR(vw_14, wordrg5, false, vw_20, con(0x0));
              }
            }
          }
        break;

        case 3:
          if (ddata.savegamew2 != con(0x0))
          {
            x16 wordrg71 = SKW_QUERY_CREATURE_AI_SPEC_FLAGS(vw_2c) & con(0x1);
            if (wordrg71 != con(0x0) || SKW_GET_CREATURE_WEIGHT(vw_2c) == con(0xff))
              SKW_12b4_023f(vw_14, &vw_1c, &vw_10, vw_20, vw_34, vw_28);
            x16 wordrg6 = (vw_34 + eaxw - con(0x3)) & con(0x3);
            if (SKW_IS_CREATURE_MOVABLE_THERE(vw_14, wordrg6, &vw_2c, vw_20) && SKW_12b4_099e(vw_2c))
            {
              SKW_12b4_0d75(vw_14, wordrg6, con(0xfe), vw_20);
              ret = 1;
            }
            else if (wordrg71 == con(0x0))
              SKW_ATTACK_CREATURE(con(0xffff), vw_20, con(0x4005), vw_14, con(0x5), wordrg71);
          }
        break;

        case 4:
        break;

        case 5:
          ret = 1;
        break;

        default: throw(THROW_DMABORT);
      }
    }
    if (ret == 0) // M_13DAB:
    {
      SKW_1031_098e();
      ddata.v1e0488 = false;
      return false;
    }
    else if (ret == 1) // M_13B7A:
    {
      if (ddata.v1e0234 && vw_28 == con(0x2))
      {
        SKW_CHANGE_CURRENT_MAP_TO(vw_30);
        vw_14 = ddata.v1e0280;
        vw_20 = ddata.v1e027e;
        vw_34 = ddata.v1e0264;
        SKW_CALC_VECTOR_W_DIR(vw_34, con(0x0), &vw_14, con(0xffffffff), &vw_20);
      }
      x16 wordrg3;
      x16 wordrg2;
      x16 wordrg400;
      if (vw_18 == con(0x0))
      {
        if (SKW_GET_TELEPORTER_DETAIL(&vs_04, vw_20, vw_14) && (wordrg3 = unsignedword(vs_04.b_01), ((wordrg3 + con(0x2)) & con(0x3)) != vw_34))
        {
          wordrg2 = unsignedword(vs_04.b_04);
          wordrg400 = unsignedword(vs_04.b_03);
          R_3BF83(unsignedword(vs_04.b_02), wordrg2, wordrg3, wordrg400);
          ret = -1;
        }
        else
        {
          wordrg3 = vw_14;
          wordrg2 = signedword(ddata.v1e0272);
          wordrg400 = signedlong(ddata.v1e0270);
        }
      }
      else
      {
        wordrg3 = vw_14;
        wordrg2 = con(0x0);
        wordrg400 = con(0xffffffff);
      }
      if (ret != -1)
        SKW_MOVE_RECORD_TO(con(0xffff), wordrg2, wordrg3, wordrg400, vw_20);
    }
  }
  ddata.v1e026e += DM2_MAX(signedlong(wordrg5) / 2, (ddata.v1e025c != con(0x0)) ? 1 : 0);
  ddata.v1e025e = con(0x0);
  return true;
}

void SKW_GAME_LOOP(void)
{
  ddata.ticktrig = con(0x8);
  ddata.dialog2 = false;
  SKW_FILL_ORPHAN_CAII();
  bool loadmap = false; // new for better structure
  // M_1475D:
  for(;;)
  {
    if (loadmap)
    {
      // M_14773:
      SKW_LOAD_NEWMAP(ddata.v1e0270, ddata.v1d27f8, true, ddata.v1e0272);
      ddata.v1e025c = con(0x0);
      SKW_MOVE_RECORD_TO(con(0xffff), con(0x0), signedlong(ddata.v1e0270), con(0xffffffff), ddata.v1e0272);
      ddata.v1d27f8 = con(0xffffffff);
      loadmap = false;
    }
    else
    {
      ddata.ticksum = con(0x0);
      if (ddata.v1d27f8 != con(0xffffffff))
      {
        loadmap = true;
        continue;
      }
    }
    // M_147CC:
    SKW_PROCEED_TIMERS();
    if (ddata.v1d27f8 != con(0xffffffff))
    {
      loadmap = true;
      continue;
    }
    SKW_UPDATE_WEATHER(false);
    if (!ddata.v1e0238)
    {
      if (ddata.v1e0288 == con(0x0))
      {
        SKW_38c8_0060();
      }
      if (ddata.v1e0976 == con(0x0))
      {
        if (ddata.v1e0390.l0 != con(0x0))
        {
          SKW_CHECK_RECOMPUTE_LIGHT();
        }
        if (ddata.v1e025c == con(0x0))
          SKW_DISPLAY_VIEWPORT(ddata.v1e0258, ddata.v1e0272, ddata.v1e0270);
        else
          SKW_DISPLAY_VIEWPORT(ddata.v1e0278, ddata.v1e0268, ddata.v1e026a);
        SKW_CHANGE_VIEWPORT_TO_INVENTORY(true);
        ddata.v1e01d8 = false;
      }
      if (ddata.v1e025c != con(0x0))
      {
        if (ddata.v1e025c == con(0x1))
        {
          SKW_PERFORM_MOVE(ddata.v1e0256);
        }
        ddata.v1e025c--;
        if (ddata.v1d27f8 != con(0xffffffff))
        {
          loadmap = true;
          continue;
        }
      }
      ddata.v1e048c = false;
      if (ddata.v1e0254 != con(0x0))
      {
        ddata.v1e0254 = con(0x0);
        SKW_443c_0434();
      }
      SKW_IBMIO_USER_INPUT_CHECK();
    }
    SKW_12b4_0092();
    SKW_482b_05bf(false);
    SKW_PROCESS_PLAYERS_DAMAGE();
    if (ddata.savegames1.b4 != con(0x0))
      ddata.savegames1.b4--;
    x16 wordrg145;
    if (!ddata.v1e0238)
      wordrg145 = con(0x3f);
    else
      wordrg145 = con(0xf);
    if ((wordrg145 & CUTX16(ddata.longmallocx)) == con(0x0))
    {
      SKW_UPDATE_CHAMPIONS_STATS();
    }
    SKW_GLOBAL_UPDATE_UNKNOW1();
    SKW_2e62_0cfa(true);
    if (ddata.v1e0250)
    {
      R_10777();
      return;
    }
    ddata.longmallocx++;
    if ((CUTX16(ddata.longmallocx) & con(0x1ff)) == con(0x0))
    {
      SKW_BURN_PLAYER_LIGHTING_ITEMS();
    }
    if (ddata.savegames1.b3 != con(0x0))
    {
      ddata.savegames1.b3--;
    }
    if (ddata.v1e026e != con(0x0))
      ddata.v1e026e = ddata.v1e026e - con(0x1);
    if (ddata.v1e025e != con(0x0))
      ddata.v1e025e--;
    SKW_3929_086f();
    ddata.tickevent = false;
    SKW_12b4_0092();
    do
    {
      if (ddata.v1e0224)
      {
        x16 wordrg400 = unsignedword(SKW_0cee_04e5(ddata.v1e0258, con(0x0), ddata.v1e0270, con(0x1), ddata.v1e0272));
        if (CUTLX8(urshift(wordrg400, con(0x5))) != con(0x6) || (wordrg400 & con(0x1)) == con(0x0) || (wordrg400 &= con(0x4), wordrg400 != con(0x0)))
        {
          ddata.v1e0224 = false;
          SKW_FIRE_MOUSE_RELEASE_CAPTURE();
          ddata.mouse_visibility = con(0x1);
          SKW_FIRE_SHOW_MOUSE_CURSOR();
        }
      }
      SKW_EVENT_LOOP();
    } while (!ddata.tickevent || !ddata.v1e0248);
    x16 wordrg400 = ddata.v1d27f8;
    if (wordrg400 != con(0xffffffff))
    {
      wordrg400 = ddata.v1d3248;
      SKW_CHANGE_CURRENT_MAP_TO(ddata.v1d27f8);
    }
    SKW_2759_12e6();
    if (wordrg400 != con(0xffffffff))
      SKW_CHANGE_CURRENT_MAP_TO(wordrg400);
    R_BA7(ddata.v1e0266);
  }
}

void SKW_ATTACK_CREATURE(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1)
{
  s_d556* sd5ptrrg6;
  c_record* recoptrrg5;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  c_aispec* pai_1c;
  x16 vw_20;
  bool flag;

  vw_0c = eaxw;
  vw_08 = edxw;
  vw_04 = ebxw;
  x16 vw_00 = ecxw;
  bool vbool_14 = false;
  if (eaxw == con(0xffffffff))
  {
    vw_0c = SKW_GET_CREATURE_AT(vw_08, ebxw);
    if (vw_0c == con(0xffffffff))
      return;
  }
  bool boolrg7 = (vw_00 & con(0x4000)) != con(0x0);
  if (boolrg7)
  {
    vw_00 &= con(0xbfff);
    if (SKW_RAND01() != con(0x0))
      boolrg7 = false;
  }
  x16 wordrg133 = vw_00 & con(0x2000);
  flag = wordrg133 == con(0x0);
  x16 vw_10 = wordrg133;
  if (!flag)
    vw_00 &= con(0xdfff);
  recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(vw_0c);
  pai_1c = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg5->u4.b.b0);
  x16 wordrg166 = pai_1c->u0.w & con(0x1);
  x16 vw_18 = wordrg166;
  if (recoptrrg5->u4.b.b1 == con(0xffffffff))
  {
    if (wordrg166 == con(0x0))
      return;
    SKW_ALLOC_CAII_TO_CREATURE(vw_0c, vw_04, vw_08);
  }
  sd5ptrrg6 = &ddata.v1e089c[recoptrrg5->u4.b.b1];
  x16 wordrg2 = sd5ptrrg6->u.v.w14 + argw1;
  sd5ptrrg6->u.v.w14 = wordrg2;
  argw1 = wordrg2;
  if (vw_18 == con(0x0) && argw0 > con(0x0))
  {
    if ((recoptrrg5->ua.w & con(0x4)) == con(0x0))
    {
      if (wordrg2 > con(0x1e) || (wordrg2 > con(0x4) && SKW_RAND02() == con(0x0)) || UI32CAST(100 * argw1 / pai_1c->w4) > con(0xf))
      {
        recoptrrg5->ua.b.b0 |= con(0x4);
        boolrg7 = true;
      }
    }
    if ((boolrg7 && ((table1d607e[SKW_QUERY_GDAT_CREATURE_WORD_VALUE(recoptrrg5->u4.b.b0, con(0x1))].u.b[0] & con(0xffffff80)) == con(0x0))) && SKW_RAND01() != con(0x0))
    {
      bool skip = false;
      x16 wordrg403 = SKW_CALC_VECTOR_DIR(vw_08, ddata.v1e0270, ddata.v1e0272, vw_04);
      if ((recoptrrg5->ua.w & con(0x8)) == con(0x0) || SKW_RAND02() == con(0x0))
      {
        if (wordrg403 == ulrshift(recoptrrg5->ue.w, con(0x6), con(0xe)) || SKW_RAND02() != con(0x0))
        {
          skip = true;
        }
      }
      if (!skip)
      {
        wordrg403 += con(0x2);
        wordrg403 &= con(0x3);
      }
      x8 byterg400;
      x16 wordrg22 = (wordrg403 + con(0x2)) & con(0x3);
      x16 wordrg17 = ulrshift(recoptrrg5->ue.w, con(0x6), con(0xe));
      if (wordrg17 != wordrg22)
      {
        if (wordrg17 == wordrg403)
        {
          if (SKW_RAND02() != con(0x0))
            byterg400 = con(0xffffffff);
          else
            byterg400 = ((SKW_RAND01() == con(0x0)) ? 1 : 0) + con(0x6);
        }
        else
        {
          wordrg403--;
          wordrg403 &= con(0x3);
          byterg400 = ((wordrg17 == wordrg403) ? 1 : 0) + con(0x6);
        }
      }
      else
        byterg400 = ((SKW_RAND01() != con(0x0)) ? 1 : 0) + con(0x6);
      if (byterg400 != con(0xffffffff))
        SKW_13e4_0360(vw_0c, vw_04, byterg400, vw_08, false);
    }
    vbool_14 = (signedlong(argw0) > SKW_RAND16(con(0x64)));
    flag = !vbool_14;
    if (!flag)
    {
      vw_20 = vw_00 & con(0x8000);
      vw_00 = con(0x1) << CUTX8(vw_00);
      if (vw_20 == con(0x0))
        recoptrrg5->ua.w |= vw_00;
      else
        recoptrrg5->ua.w &= ~vw_00;
    }
  }
  bool boolrg1;
  if ((vw_18 == con(0x0) && vw_10 != con(0x0)) && argw0 == con(0x0))
    boolrg1 = true;
  else if (!vbool_14 || ((vw_20 != con(0x0) || (vw_00 & con(0x40)) == con(0x0)) && vw_10 == con(0x0)))
    boolrg1 = false;
  else
  {
    x8 byterg2 = table1d613a[sd5ptrrg6->u.v.b1a];
    if ((byterg2 & con(0x10)) == con(0x0))
      boolrg1 = true;
    else
    {
      if ((table1d607e[SKW_QUERY_GDAT_CREATURE_WORD_VALUE(recoptrrg5->u4.b.b0, con(0x1))].u.w[0] & con(0x410)) == con(0x0) || (byterg2 & con(0x2)) == con(0x0))
        boolrg1 = false;
      else
        boolrg1 = true;
    }
  }
  if (sd5ptrrg6->u.v.b1a == con(0x13))
    return;
  if (!boolrg1)
    if (UI16CAST(argw1) < UI16CAST(recoptrrg5->u6.w))
      return;
  SKW_1c9a_0db0(unsignedlong(vw_0c));
  SKW_1c9a_0cf7(vw_08, vw_04);
}

bool SKW_2fcf_16ff(x16 eaxw)
{
  x16 wordrg5;
  c_hero* heroptrrg3;
  x16* wptrrg6;

  x16 wordrg2;
  bool boolrg7 = con(0x0);
  heroptrrg3 = ddata.hero;
  // M_3BE94: co-label M_3BE8A
  for (ui16 vuw_04 = con(0x0); ; vuw_04++, heroptrrg3++)
  {
    bool skipfirst = false; // added
    x16 wordrg11;
    if (vuw_04 < UI16CAST(ddata.savegamew2))
    {
      if (heroptrrg3->w36 == con(0x0))
        continue;
      wptrrg6 = heroptrrg3->warrc3;
      wordrg2 = con(0x0);
    }
    else
    {
      if (ddata.v1d67bc == con(0x5))
      {
        wordrg2 = con(0x0);
        // M_3BED1: // co-label M_3BED0
        for (;; wordrg2++)
        {
          if (wordrg2 >= con(0x8))
            break;
          x16 wordrg11 = ddata.v1e095c[wordrg2];
          if (wordrg11 == con(0xffffffff))
            continue;
          if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg11) == eaxw)
            return true;
        }
      }
      if (boolrg7)
        return false;
      boolrg7 = true;
      wordrg11 = ddata.savegamewpc.w0;
      skipfirst = true;
    }
    // M_3BE7C:
    for (;; wordrg2++)
    {
      if (!skipfirst)
      {
        if (wordrg2 >= con(0x1e) || boolrg7)
          break;
        wordrg11 = *wptrrg6++;
      }
      else
        skipfirst = false;
      // M_3BE4D:
      wordrg5 = wordrg11;
      if (SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg5) == eaxw)
        return true;
      if (SKW_2fcf_164e(wordrg5, eaxw))
        return true;
    }
  }
}

// was SKW_2c1d_11bf
x16 SKW_COMPUTE_PLAYER_ATTACK_OR_THROW_STRENGTH(x16 eaxw, ui16 ebxuw, x16 edxw)
{
  ui16 uwordrg5;
  c_hero* heroptrrg6;
  x16 vw_04;
  x16 vw_08;

  vw_04 = eaxw;
  uwordrg5 = ebxuw;
  heroptrrg6 = &ddata.hero[vw_04];
  x16 wordrg31 = CUTX16(SKW_RAND()) & con(0xf);
  wordrg31 += SKW_GET_PLAYER_ABILITY(heroptrrg6, con(0x0), con(0x1));
  vw_08 = heroptrrg6->warrc3[edxw];
  x16 wordrg403 = SKW_QUERY_ITEM_WEIGHT(vw_08);
  x16 wordrg21 = urshift(SKW_MAX_LOAD(heroptrrg6), con(0x4));
  wordrg31 += wordrg403 - con(0xc);
  if (UI16CAST(wordrg403) > UI16CAST(wordrg21))
  {
    wordrg31 -= (wordrg403 - wordrg21) >> con(0x1);
    x16 wordrg22 = (wordrg21 - con(0xc)) / 2 + wordrg21;
    if (UI16CAST(wordrg403) > UI16CAST(wordrg22))
    {
      wordrg403 -= wordrg22;
      wordrg31 -= 2 * wordrg403;
    }
  }
  if (uwordrg5 >= con(0x0))
  {
    wordrg31 += 2 * SKW_QUERY_PLAYER_SKILL_LV(vw_04, true, uwordrg5);
    x16 wordrg2 = con(0x0);
    bool doit = false; // added
    if (uwordrg5 < UI16CAST(con(0x4)))
    {
      if (uwordrg5 == con(0x0))
        wordrg2 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_08, con(0x8));
      else if (uwordrg5 == con(0x1))
        doit = true;
    }
    else if (uwordrg5 <= UI16CAST(con(0x7)))
      wordrg2 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_08, con(0x8));
    else if (uwordrg5 < UI16CAST(con(0x9)))
      ;
    else if (uwordrg5 <= UI16CAST(con(0x9)))
      wordrg2 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_08, con(0x8));
    else if (uwordrg5 > UI16CAST(con(0xb)))
      ;
    else
      doit = true;
    if (doit)
    {
      wordrg2 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_08, con(0x9));
      if (wordrg2 != con(0x0))
      {
        if ((SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_08, con(0x5)) & con(0x8000)) == con(0x0))
        {
          if (uwordrg5 == con(0xb))
            wordrg2 = con(0x0);
        }
        else if (uwordrg5 != con(0xb))
          wordrg2 = con(0x0);
      }
    }
    wordrg31 += wordrg2;
  }
  x16 wordrg3 = SKW_STAMINA_ADJUSTED_ATTR(heroptrrg6, wordrg31);
  if (((((edxw != con(0x0)) ? 1 : 0) + con(0x1)) & heroptrrg6->w34) != con(0x0))
    wordrg3 >>= con(0x1);
  return DM2_BETWEEN_VALUE(con(0x0), con(0x64), wordrg3 / 2);
}

void SKW_29ee_1946(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x16 argw2, x16 argw3)
{
  x16 wordrg5;
  c_record* recoptrrg1;
  c_record* recoptrrg3;
  x16 vw_00;
  x16 vw_0c;
  c_5bytes vs_10;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x16 vw_30;
  x16 vw_34;
  x16 vw_38;
  x16 vw_3c;
  x16 vw_48;
  x16 vw_4c;
  x16 vw_54;
  x16 vw_58;
  x16 vw_5c;
  x16 vw_60;
  x8 vb_64;

  vw_0c = eaxw;
  x16 vw_08 = edxw;
  x16 vw_04 = ebxw;
  vw_00 = ecxw;
  x16 wordrg61 = argw1;
  wordrg5 = argw2;
  if ((argw3 & con(0x8)) == con(0x0))
  {
    ddata.v1e0b82 = CUTX8(vw_08);
    ddata.v1e0b83 = CUTX8(vw_04);
    ddata.v1e0b81 = CUTX8(vw_00);
    ddata.v1e0b84 = CUTX8(argw0);
    ddata.v1e0b5a = wordrg61;
    ddata.v1e0b58 = wordrg5;
  }
  else
  {
    vw_08 = signedword(ddata.v1e0b82);
    vw_04 = signedword(ddata.v1e0b83);
    vw_00 = signedword(ddata.v1e0b81);
    argw0 = signedword(ddata.v1e0b84);
    wordrg61 = ddata.v1e0b5a;
    wordrg5 = ddata.v1e0b58;
  }
  ddata.v1e0b56 = con(0x0);
  vw_60 = ddata.v1d3248;
  SKW_29ee_00a3(false);
  SKW_FILL_RECT_SUMMARY(&ddata.v1d694c, ddata.paletteptr1[con(0x0)], SKW_QUERY_EXPANDED_RECT(con(0x63), &ddata.v1e0b9c));
  x16 wordrg22 = -ddata.v1d2750;
  SKW_INFLATE_RECT(&ddata.v1e0b9c, -ddata.v1d274e, wordrg22);
  x16 vw_28 = ddata.v1e0b9c.x + wordrg61;
  x16 vw_40 = ddata.v1e0b9c.y + wordrg5;
  vw_5c = argw3 & con(0x10);
  vw_34 = argw3 & con(0x20);
  vw_30 = argw3 & con(0x40);
  if (vw_34 != con(0x0) || vw_30 != con(0x0))
  {
    recoptrrg3 = SKW_GET_ADDRESS_OF_RECORD(vw_0c);
    if (vw_34 != con(0x0))
    {
      recoptrrg1 = SKW_GET_MISSILE_REF_OF_MINION(recoptrrg3->u2.w, vw_0c);
      vw_20 = recoptrrg1->u4.w & con(0x1f);
      vw_3c = ulrshift(recoptrrg1->u4.w, con(0x6), con(0xb));
      vw_38 = urshift(recoptrrg1->u4.w, con(0xa));
      SKW_CHANGE_CURRENT_MAP_TO(vw_38);
      if (!SKW_GET_TELEPORTER_DETAIL(&vs_10, vw_3c, vw_20))
        vw_1c = con(0xffffffff);
      else
      {
        vw_54 = unsignedword(vs_10.b_02);
        vw_58 = unsignedword(vs_10.b_03);
        vw_1c = unsignedword(vs_10.b_04);
      }
    }
    if (vw_30 != con(0x0))
    {
      x16 wordrg21 = urshift(recoptrrg3->u6.w, con(0xa));
      x16 wordrg41 = ulrshift(recoptrrg3->u6.w, con(0x6), con(0xb));
      SKW_29ee_18eb(recoptrrg3->u6.w & con(0x1f), wordrg21, wordrg41);
    }
  }
  SKW_CHANGE_CURRENT_MAP_TO(vw_00);
  x16 wordrg106 = con(0x3);
  vw_48 = con(0xfffffffd);
  if (wordrg5 < con(0x0))
    wordrg106 = con(0x4);
  x16 vw_2c = con(0xfffffffd);
  vw_4c = con(0x3);
  if (wordrg61 < con(0x0))
    vw_2c = con(0xfffffffc);
  x16 vw_44 = wordrg106;
  // M_34F71:
  for(;;)
  {
    if (vw_44 < vw_48)
    {
      SKW_CHANGE_CURRENT_MAP_TO(vw_60);
      return;
    }
    x16 vw_50 = vw_28;
    x16 wordrg6 = vw_2c;
    // M_34F4F:
    while (wordrg6 <= vw_4c)
    {
      vw_18 = vw_08;
      vw_24 = vw_04;
      SKW_CALC_VECTOR_W_DIR(argw0, wordrg6, &vw_18, vw_44, &vw_24);
      wordrg5 = vw_00;
      x16 wordrg3 = SKW_LOCATE_OTHER_LEVEL(wordrg5, &vw_18, &vw_24, con(0x0), NULL);
      if (wordrg3 >= con(0x0))
      {
        SKW_CHANGE_CURRENT_MAP_TO(wordrg3);
        vb_64 = CUTX8(ulrshift(ddata.v1e03c0->we, con(0x8), con(0xc)));
      }
      else
      {
        wordrg3 = vw_00;
        SKW_CHANGE_CURRENT_MAP_TO(wordrg5);
        if ((((SKW_GET_TILE_VALUE(vw_18, vw_24) & con(0xff)) >> con(0x5)) & con(0xff)) != con(0x7))
          vb_64 = CUTX8(ulrshift(ddata.v1e03c0->we, con(0x8), con(0xc)));
        else
          vb_64 = ddata.v1e03d4[ddata.v1e03c0->w8 & con(0x3f)];
      }
      argw3 &= con(0xffffff8f);
      if (vw_34 != con(0x0))
        if (vw_18 == vw_20 && vw_24 == vw_3c && wordrg3 == vw_38 || (wordrg3 == vw_1c && vw_18 == vw_54 && vw_24 == vw_58))
          argw3 |= con(0x20);
      if ((vw_30 != con(0x0)) && (ddata.v1e0b56 == con(0x0)))
      {
        if (vw_18 != ddata.v1e0b6e || vw_24 != ddata.v1e0b70 || wordrg3 != ddata.v1e0b64)
        {
          if (vw_18 != ddata.v1e0b68 || vw_24 != ddata.v1e0b6a || wordrg3 != ddata.v1e0b60)
          {
            if (vw_18 == ddata.v1e0b5e && vw_24 == ddata.v1e0b5c && wordrg3 == ddata.v1e0b66)
            {
              ddata.v1e0b56 = con(0x3);
              SKW_29ee_18eb(vw_18, wordrg3, vw_24);
            }
          }
          else
          {
            ddata.v1e0b56 = con(0x2);
            SKW_29ee_18eb(vw_18, wordrg3, vw_24);
          }
        }
        else
          ddata.v1e0b56 = con(0x1);
        if (ddata.v1e0b56 != con(0x0))
          argw3 |= con(0x40);
      }
      if ((vw_5c != con(0x0)) && (wordrg3 == ddata.v1e0282))
        if (vw_18 == ddata.v1e0280)
          if (vw_24 == ddata.v1e027e)
            argw3 |= con(0x10);
      SKW_DRAW_MAP_CHIP(vw_0c, vw_24, argw0, vw_18, vw_50, vw_40, vb_64, argw3);
      vw_50 += ddata.v1d274a + ddata.v1d274e;
      wordrg6++;
    }
    vw_40 += ddata.v1d274c + ddata.v1d2750;
    vw_44--;
  }
}

// was SKW_2759_02d6
bool SKW_IS_ITEM_HAND_ACTIVABLE(x16 eaxw, x16 ebxw, x16 edxw)
{
  x8 byterg5;
  x16 wordrg5;
  ui16 uwordrg5;
  bool flag;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_14;
  x8 vb_18;
  x8 vb_1c;
  x8 vb_20; // inc8

  vw_08 = eaxw;
  vw_04 = edxw;
  if (edxw != con(0xffffffff))
  {
    x16 wordrg40 = vw_04;
    if (SKW_IS_CONTAINER_MONEYBOX(wordrg40))
      return true;
    if (SKW_IS_CONTAINER_CHEST(wordrg40))
      return true;
    vb_18 = SKW_QUERY_CLS1_FROM_RECORD(wordrg40);
    vb_1c = SKW_QUERY_CLS2_FROM_RECORD(wordrg40);
  }
  else
  {
    vb_18 = con(0x16);
    vb_1c = ddata.hero[vw_08].b101;
  }
  x16 vw_10 = con(0x0);
  vb_20 = con(0x8);
  // M_2FCD2: co-label M_2FCCE
  for (;; vb_20++)
  {
    byterg5 = vb_20;
    if (byterg5 >= con(0xc))
      break;
    if (vw_10 >= con(0x3))
      break;
    if (!SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(vb_18, con(0x5), byterg5, vb_1c))
      continue;
    vw_0c = SKW_QUERY_CMDSTR_ENTRY(vb_18, byterg5, con(0x2), vb_1c);
    if (vw_0c == con(0x0))
      continue;
    x16 wordrg1 = SKW_QUERY_CMDSTR_ENTRY(vb_18, byterg5, con(0x11), vb_1c); // BUGFIX 4/2014
    if (wordrg1 != con(0x0))
      if (--wordrg1 != ebxw)
        continue;
    if (vw_04 == con(0xffffffff))
    {
      if (vw_0c == con(0x11))
      {
        flag = SKW_FIND_POUCH_OR_SCABBARD_POSSESSION_POS(vw_08, ebxw) < con(0x0);
        if (flag)
          continue;
      }
    }
    else
    {
      wordrg5 = vw_04;
      // RG1W = vw_08;  unused TODO: check again
      if (!SKW_2759_01fe(vw_0c, wordrg5))
        continue;
      x16 wordrg21 = SKW_QUERY_CMDSTR_ENTRY(vb_18, vb_20, con(0x8), vb_1c);
      if (wordrg21 != con(0x12))
      {
        if (wordrg21 == con(0x10) || wordrg21 == con(0x11))
          wordrg21 = con(0x1);
        if (wordrg21 != con(0x0))
        {
          flag = SKW_ADD_ITEM_CHARGE(vw_04, con(0x0)) < wordrg21;
          if (flag)
            continue;
        }
      }
      else if (SKW_ADD_ITEM_CHARGE(wordrg5, con(0x0)) != con(0x0))
        continue;
    }
    vw_14 = SKW_QUERY_CMDSTR_ENTRY(vb_18, vb_20, con(0x0), vb_1c);
    uwordrg5 = SKW_QUERY_CMDSTR_ENTRY(vb_18, vb_20, con(0x1), vb_1c);
    if (SKW_QUERY_PLAYER_SKILL_LV(vw_08, true, vw_14) >= uwordrg5)
    {
      ddata.v1e0b40[vw_10].b0 = vb_18;
      ddata.v1e0b40[vw_10].b1 = vb_1c;
      ddata.v1e0b40[vw_10].b2 = vb_20;
      vw_10++;
    }
  }
  ddata.v1e0b7a = vw_10;
  ddata.v1e0b50 = vw_04;
  if (SKW_IS_CONTAINER_MAP(vw_04))
    return true;
  return vw_10 > con(0x0);
}

x16 SKW_2066_33e7(void)
{
  x16 wordrg5;
  t_text* tptrrg3;
  c_hex2a* sptrrg1;
  c_rect rc_00;
  x16 vw_08; // x0
  x16 vw_0c; // y0

  x16 wordrg6;
  SKW__OPEN_DIALOG_PANEL(con(0x81), con(0x6));
  if (ddata.savegamew4 < con(0x0))
  {
    wordrg6 = con(0x0);
    for (;; wordrg6++)
    {
      if (wordrg6 >= con(0xa))
        break;
      if (ddata.savegamep1[wordrg6].s_02.l_24 == con(0xdeadbeef))
      {
        SKW_2066_33c4(ddata.v1e0900.s_02.t_00, CUTX8(wordrg6));
        break;
      }
    }
  }
  else
  {
    wordrg6 = ddata.savegamew4;
    SKW_COPY_MEMORY(DOWNCAST(c_hex2a, &ddata.savegamep1[wordrg6]), con(0x2a), DOWNCAST(c_hex2a, &ddata.v1e0900));
  }
  SKW_2066_398a(wordrg6);
  tptrrg3 = ddata.v1e0900.s_02.t_00;
  if (wordrg6 == con(0xa))
    SKW_DRAW_GAMELOAD_DIALOGUE_TO_SCREEN();
  else
    SKW_2066_3820(tptrrg3, false);
  bool boolrg7 = false;
  for(;;)
  {
    SKW_EVENT_LOOP();
    ui16 uwordrg1 = ddata.mouse_unk06 - con(0x1);
    if (uwordrg1 <= UI16CAST(con(0x3)))
    {
      switch (uwordrg1)
      {
        case 0:
          wordrg6 = con(0xffffffff);
          ddata.v1e023c = false;
          boolrg7 = true;
        break;

        case 1:
          ddata.v1e023c = false;
          if (wordrg6 != con(0xa))
          {
            if (*tptrrg3 == con(0x0))
              SKW_2066_33c4(tptrrg3, CUTX8(wordrg6));
            SKW_2066_3820(tptrrg3, false);
            boolrg7 = true;
          }
        break;

        case 2:
          ddata.v1e023c = false;
          SKW_QUERY_EXPANDED_RECT(ddata.mouse_unk05, &rc_00);
          SKW_QUERY_TOPLEFT_OF_RECT(ddata.mouse_unk09, &vw_08, &vw_0c);
          wordrg6 = DM2_MIN((ddata.mouse_unk07 - (rc_00.y + vw_0c)) / ddata.strxplus, con(0xa));
          sptrrg1 = &ddata.savegamep1[wordrg6];
          if (sptrrg1->s_02.l_24 != con(0xdeadbeef))
            SKW_SK_STRCPY(ddata.v1e0900.s_02.t_00, sptrrg1->s_02.t_00);
          else
            SKW_2066_33c4(ddata.v1e0900.s_02.t_00, wordrg6);
          SKW_2066_398a(wordrg6);
          SKW_2066_3820(tptrrg3, false);
        break;

        case 3:
          if (wordrg6 != con(0xa))
            if (!ddata.v1e023c)
            {
              ddata.v1e023c = true;
              SKW_2066_3820(tptrrg3, true);
              wordrg5 = SKW_SK_STRLEN(tptrrg3);
            }
        break;

        default: throw(THROW_DMABORT);
      }
    }
    if (ddata.v1e023c && ddata.mouse_unk0a >= con(0xa5) && ddata.mouse_unk0a <= con(0xd6))
    {
      if (ddata.v1e051e != con(0xe))
      {
        if (ddata.v1e051e != con(0x1c))
        {
          if (wordrg5 < con(0x1f))
          {
            ui8 ubyterg2 = CUTX8(SKW_476d_05b6(ddata.v1e051e));
            if (ubyterg2 >= con(0x61) && ubyterg2 <= con(0x7a))
              ubyterg2 -= con(0x20);
            tptrrg3[wordrg5++] = ubyterg2;
            tptrrg3[wordrg5] = NULLBYTE;
          }
        }
        else
          ddata.v1e023c = false;
      }
      else if (wordrg5 > con(0x0))
        tptrrg3[--wordrg5] = NULLBYTE;
      SKW_2066_3820(tptrrg3, ddata.v1e023c);
    }
    ddata.mouse_unk06 = con(0x0);
    ddata.mouse_unk0a = con(0x0);
    if (boolrg7)
    {
      SKW_2066_37f2();
      return wordrg6;
    }
  }
}

bool SKW_WOUND_CREATURE(x16 eaxw)
{
  c_record* recoptrrg5;
  c_aispec* aiptrrg6;
  bool flag;
  x16 vw_10;

  recoptrrg5 = ddata.s350.v1e054e;
  aiptrrg6 = ddata.s350.v1e0552;
  if (aiptrrg6->b2 == con(0xffffffff))
    return false;
  x16 wordrg1 = aiptrrg6->u0.w & con(0x1);
  flag = wordrg1 != con(0x0);
  x16 vw_08 = wordrg1;
  x16 vw_04; // only requested if vw_08 == 0, but then it is initialized
  if (!flag)
  {
    vw_04 = CUTX16(table1d607e[SKW_QUERY_GDAT_CREATURE_WORD_VALUE(recoptrrg5->u4.b.b0, con(0x1))].u.l); // high word here not requested
    if ((vw_04 & con(0x4)) == con(0x0))
    {
      vw_10 = ddata.v1d3248;
      SKW_CHANGE_CURRENT_MAP_TO(urshift(recoptrrg5->uc.w, con(0xa)));
      SKW_INVOKE_MESSAGE(recoptrrg5->uc.w & con(0x1f), con(0x0), con(0x1), ulrshift(recoptrrg5->uc.w, con(0x6), con(0xb)), ddata.longmallocx + con(0x1));
      SKW_CHANGE_CURRENT_MAP_TO(vw_10);
    }
  }
  if (UI16CAST(recoptrrg5->u6.w) <= UI16CAST(eaxw))
  {
    recoptrrg5->u6.w = con(0x1);
    if (vw_08 == con(0x0))
    {
      if ((vw_04 & con(0x800)) != con(0x0))
        if (!SKW_1c9a_17c7(unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0571), unsignedword(ddata.s350.v1e0562.u.b.b_07)))
          return false;
      if ((vw_04 & con(0x800)) != con(0x0))
        ddata.v1e0526 = con(0xa0);
      SKW_13e4_0360(ddata.s350.v1e054c, unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0x13), unsignedword(ddata.s350.v1e0562.u.b.b_06), true);
      return false;
    }
    SKW_DELETE_CREATURE_RECORD(unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0x0), con(0x1), unsignedword(ddata.s350.v1e0562.u.b.b_07));
    return true;
  }
  if (vw_08 == con(0x0) && (vw_04 & con(0x8000)) != con(0x0))
  {
    bool doit1 = false;
    if ((SKW_RAND() & con(0x7)) == con(0x0))
      doit1 = true;
    else
    {
      x32 longrg2 = unsignedlong(eaxw);
      bool doit2 = false;
      if (longrg2 > (3 * unsignedlong(aiptrrg6->w4) / con(0x64)))
        doit2 = true;
      else
      {
        if (longrg2 > (5 * unsignedlong(recoptrrg5->u6.w) / con(0x64)))
          doit2 = true;
      }
      if (doit2)
        // M_21522:
        if (((recoptrrg5->ua.w & con(0x8)) != con(0x0) && SKW_RAND01() != con(0x0)) || SKW_RAND02() == con(0x0))
          doit1 = true;
    }
    if (doit1)
      // M_21545:
      SKW_QUEUE_NOISE_GEN1(con(0xf), ((SKW_RAND01() != con(0x0)) ? 1 : 0) + con(0x9), con(0x46), recoptrrg5->u4.b.b0, con(0x80), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), con(0x1));
  }
  recoptrrg5->u6.w -= eaxw;
  return false;
}

void SKW_PLAYER_CONSUME_OBJECT(x16 eaxw, x16 ebxw, x16 edxw)
{
  c_hero* heroptrrg5;
  c_record* recoptrrg3;
  x16 vw_00;
  x16 vw_04;
  x16 vw_08;
  x16 vw_1c;

  vw_08 = eaxw;
  vw_04 = edxw;
  vw_00 = ebxw;
  bool boolrg3 = true;
  if (edxw == con(0xffffffff))
  {
    if (ddata.savegamewpc.w0 == edxw)
    {
      SKW_FIRE_MOUSE_SET_CAPTURE();
      ddata.v1e0220 = boolrg3;
      SKW_443c_08ab(&ddata.v1e00b6, &ddata.v1e00b2, &ddata.v1e00b4);
      if ((ddata.v1e00b2 & con(0x2)) != con(0x0))
      {
        SKW_FIRE_HIDE_MOUSE_CURSOR();
        ddata.mouse_visibility = con(0x1);
        return;
      }
      SKW_FIRE_MOUSE_RELEASE_CAPTURE();
      ddata.v1e0220 = false;
      return;
    }
    vw_08 = ddata.v1e0976 - con(0x1);
    vw_04 = ddata.savegamewpc.w0;
    vw_00 = con(0xffffffff);
  }
  else
    boolrg3 = false;
  if (ddata.v1e0288 != con(0x0))
    return;
  x16 vw_10 = vw_08;
  heroptrrg5 = &ddata.hero[vw_08];
  x16 vw_18 = SKW_QUERY_GDAT_FOOD_VALUE_FROM_RECORD(vw_04);
  if (vw_18 == con(0x0)) //elsedone
  {
    if (!SKW_IS_MISCITEM_DRINK_WATER(vw_04)) //elsedone
    {
      if (urshift(vw_04 & con(0x3c00), con(0xa)) != con(0x8))
        return;
      recoptrrg3 = SKW_GET_ADDRESS_OF_RECORD(vw_04);
      vw_1c = unsignedword(CUTX8(recoptrrg3->u2.w));
      x32 longrg21 = unsignedlong(vw_1c);
      x32 longrg43 = longrg21 + con(0x1);
      x32 longrg111 = ((longrg43 - jul_shl32(longrg43, con(0x3))) >> con(0x3)) + con(0x20);
      x32 longrg44 = con(0x1ff) - longrg21;
      x16 wordrg6 = CUTX16((longrg44 / longrg111) >> con(0x1));
      x16 wordrg22 = CUTX16(longrg21 / con(0x19) + con(0x8));
      ui32 ulongrg110 = ulrshift(recoptrrg3->u2.w, con(0x1), con(0x9)) - con(0x6);
      if (ulongrg110 > con(0x9))
        return;
      x16 wordrg31; // in switch
      x16 wordrg32; // in switch
      x16 wordrg33; // in switch
      switch (ulongrg110)
      {
        case 0:
          SKW_2c1d_0300(heroptrrg5, wordrg22, con(0x2));
        break;

        case 1:
          SKW_2c1d_0300(heroptrrg5, vw_1c / con(0x23) + con(0x5), con(0x1));
        break;

        case 2:
          SKW_2c1d_0300(heroptrrg5, wordrg22, con(0x3));
        break;

        case 3:
          SKW_2c1d_0300(heroptrrg5, wordrg22, con(0x4));
        break;

        case 4:
          {
            wordrg31 = vw_1c;
            x16 wordrg63 = wordrg31 / con(0x7);
            wordrg31 += wordrg63 * wordrg63;
            SKW_2c1d_1bb5(vw_10, wordrg22 + wordrg31);
          }
        break;

        case 5:
          heroptrrg5->w3a += DM2_MIN(heroptrrg5->u3c.w - heroptrrg5->w3a, heroptrrg5->u3c.w / wordrg6);
        break;

        case 6:
          {
            x16 wordrg17 = unsignedlong(wordrg22);
            wordrg17 += wordrg17 / 2;
            x16 wordrg26 = wordrg17;
            wordrg17 *= wordrg26;
            SKW_2c1d_0009(CUTX16(con(0x1) << CUTX8(vw_08)), wordrg26, wordrg17, con(0x2));
          }
        break;

        case 7:
          {
            wordrg32 = DM2_MIN(con(0x384), wordrg22 - con(0x8) + heroptrrg5->w3e + wordrg22);
            x16 wordrg25 = wordrg32;
            if (wordrg25 > heroptrrg5->w40)
            {
              wordrg25 -= (wordrg25 - DM2_MAX(heroptrrg5->w3e, heroptrrg5->w40)) / 2;
              wordrg32 = wordrg25;
            }
            heroptrrg5->w3e = wordrg32;
          }
        break;

        case 8:
          {
            wordrg33 = DM2_MAX(con(0x1), vw_1c / con(0x2a));
            heroptrrg5->w36 += heroptrrg5->w38 / wordrg6;
            x16 wordrg41 = heroptrrg5->w34;
            if (wordrg41 != con(0x0))
            {
              x16 wordrg62 = con(0xa);
              ui16 uwordrg22 = con(0x0);
              for(;;)
              {
                while (uwordrg22 < wordrg33)
                {
                  heroptrrg5->w34 &= CUTX16(SKW_RAND());
                  uwordrg22++;
                }
                wordrg33 = con(0x1);
                if (wordrg41 != heroptrrg5->w34)
                  break;
                wordrg62 -= con(0x1);
                if (wordrg62 == con(0x0))
                  break;
                uwordrg22 = con(0x0);
              }
            }
          }
        break;

        case 9:
          heroptrrg5->w46 = DM2_MIN(heroptrrg5->w46 + con(0x640), con(0x800));
        break;

        default: throw(THROW_DMABORT);
      }
      if (vw_00 == con(0xffffffff))
        SKW_REMOVE_OBJECT_FROM_HAND();
      SKW_DEALLOC_RECORD(vw_04);
      x16 wordrg34 = SKW_ALLOC_NEW_RECORD(con(0x8));
      if (wordrg34 == con(0xffffffff))
        return;
      x16 wordrg21 = wordrg34;
      SKW_SET_ITEMTYPE(wordrg21, con(0x14));
      if (vw_00 != con(0xffffffff))
        heroptrrg5->warrc3[vw_00] = wordrg34;
      else
        SKW_TAKE_OBJECT(wordrg21, false);
    }
    else
    {
      heroptrrg5->w46 = DM2_MIN(heroptrrg5->w46 + con(0x320), con(0x800));
      if (vw_00 != con(0xffffffff))
        heroptrrg5->warrc3[vw_00] = vw_04;
    }
  }
  else
  {
    if (boolrg3)
    {
      SKW_FIRE_HIDE_MOUSE_CURSOR();
      SKW_REMOVE_OBJECT_FROM_HAND();
      x16 wordrg61 = con(0x5);
      while (--wordrg61 != con(0x0))
      {
        SKW_DRAW_STATIC_PIC(con(0x7), (((wordrg61 & con(0x1)) == con(0x0)) ? 1 : 0) + con(0x25), con(0x221), con(0x0), con(0xffffffff));
        SKW_CHANGE_VIEWPORT_TO_INVENTORY(false);
        SKW_SLEEP_SEVERAL_TIME(con(0x8));
      }
      SKW_FIRE_SHOW_MOUSE_CURSOR();
    }
    heroptrrg5->w44 = DM2_MIN(heroptrrg5->w44 + vw_18, con(0x800));
    SKW_PROCESS_ITEM_BONUS(vw_08, vw_00, con(0x2), vw_04);
    SKW_DEALLOC_RECORD(vw_04);
    if (vw_00 != con(0xffffffff))
      heroptrrg5->warrc3[vw_00] = con(0xffffffff);
  }
  if (heroptrrg5->w3a > heroptrrg5->u3c.w)
    heroptrrg5->w3a = heroptrrg5->u3c.w;
  if (heroptrrg5->w36 > heroptrrg5->w38)
    heroptrrg5->w36 = heroptrrg5->w38;
  SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x83), con(0xfe), heroptrrg5->b101, ddata.v1e0270, ddata.v1e0272, con(0x0), con(0x96), con(0x80));
  heroptrrg5->u32.b.b1 |= con(0x38);
  if (vw_00 == con(0xffffffff))
    return;
  heroptrrg5->u32.b.b1 |= con(0x40);
  SKW_CALC_PLAYER_WEIGHT(vw_08);
}

t_text* SKW_FORMAT_SKSTR(const t_text* eaxt, t_text* edxt)
{
  t_text* tptrrg7; // non-const!
  t_text* tptrrg6; // non-const!
  t_text* tptrrg4; // non-const!
  const t_text* tptrrg5;
  t_text t_00[0x80];
  t_text t_80[0x80];
  t_text t_104[0x4]; // TODO dim probably just 0x2

  tptrrg4 = edxt;
  tptrrg5 = eaxt;
  tptrrg7 = edxt;
  if (edxt == NULL)
  {
    tptrrg4 = ddata.vp_1e097c[ddata.v1e0988];
    tptrrg7 = tptrrg4;
    ddata.v1e0988++;
    if (ddata.v1e0988 >= con(0x2))
      ddata.v1e0988 = con(0x0);
  }
  // M_2A79E:
  for(;;)
  {
    x8 byterg1;
    for(;;)
    {
      byterg1 = *tptrrg5;
      if (byterg1 == con(0x0))
      {
        *tptrrg4 = byterg1;
        return tptrrg7;
      }
      if (byterg1 == con(0x2e) && tptrrg5[con(0x1)] == con(0x5a))
        break;
      if (byterg1 == con(0x1))
        break;
      *tptrrg4++ = byterg1;
      tptrrg5++;
    }
    x16 wordrg2;
    if (byterg1 != con(0x1))
    {
      wordrg2 = con(0x0);
      x16 wordrg11 = con(0x0);
      tptrrg5 += con(0x2);
      while (wordrg11 < con(0x3))
      {
        wordrg2 = wordrg2 * con(0xa) + unsignedword(*tptrrg5++) - con(0x30);
        wordrg11++;
      }
    }
    else
    {
      tptrrg5 += byterg1;
      wordrg2 = unsignedword(*tptrrg5) - con(0x20);
      tptrrg5 += byterg1;
    }
    *tptrrg4 = NULLBYTE;
    tptrrg6 = t_80;
    if (UI16CAST(wordrg2) > con(0x1c))
    {
      tptrrg6 = v1d10f4;
    }
    else
    {
      switch (wordrg2)
      {
        case 0:
          SKW_SK_LTOA10(unsignedlong(ddata.v1e0218), tptrrg6);
        break;

        case 1:
          SKW_SK_LTOA10((-ddata.longv1d70c5 + con(0x3ff)) >> con(0xa), tptrrg6);
        break;

        case 2:
          SKW_QUERY_GDAT_TEXT(con(0x1), con(0x0), tptrrg6, con(0xfffffffe));
        break;

        case 3:
          tptrrg6 = ddata.v1d153a;
        break;

        case 4:
          tptrrg6 = ddata.v1d153e;
        break;

        case 5:
        case 6:
        case 16:
        case 18:
        case 19:
        case 21:
          tptrrg6 = v1d10f4;
        break;

        case 7:
          if (ddata.v1e098c != con(0xffffffff))
            tptrrg6 = ddata.hero[ddata.v1e098c].t00;
        break;

        case 8:
          tptrrg6 = ddata.v1d1542;
        break;

        case 9:
          tptrrg6 = ddata.v1d1546;
        break;

        case 10:
          SKW_SK_LTOA10(signedlong(ddata.v1e099a), tptrrg6);
        break;

        case 11:
          SKW_SK_LTOA10(signedlong(ddata.v1e098e), tptrrg6);
        break;

        case 12:
          SKW_SK_LTOA10(signedlong(ddata.v1e0998), tptrrg6);
        break;

        case 13:
          SKW_SK_LTOA10(signedlong(ddata.v1e0996), tptrrg6);
        break;

        case 14:
          SKW_SK_LTOA10(signedlong(ddata.v1e098a), tptrrg6);
        break;

        case 15:
          if (ddata.v1e0992 == con(0x1))
            tptrrg6 = ddata.v1d153a;
          else if (ddata.v1e0992 == con(0x2))
            tptrrg6 = ddata.v1d153e;
        break;

        case 17:
          SKW_QUERY_GDAT_TEXT(con(0x7), CUTX8(ddata.v1e0994), tptrrg6, con(0x0));
        break;

        case 20:
          tptrrg6 = ddata.v1d675a;
        break;

        case 22:
          if (!ddata.v1d154e)
            tptrrg6 = ddata.v1d6766;
          else
            tptrrg6 = ddata.datafoldername;
        break;

        case 23:
          t_104[0x0] = ddata.v1e099c;
          t_104[0x1] = NULLBYTE;
          SKW_SK_STRCPY(t_80, t_104);
        break;

        case 24:
          tptrrg6 = table1d674e[ddata.v1d674c];
        break;

        case 25:
          SKW_SK_LTOA10(signedlong(ddata.v1d70c9), tptrrg6);
        break;

        case 26:
          tptrrg6 = ddata.v1d676a;
        break;

        case 27:
          SKW_QUERY_GDAT_TEXT(con(0x1), con(0x6), tptrrg6, con(0xfffffffe));
        break;

        case 28:
          if (ddata.gdatfiletype2)
            tptrrg6 = ddata.v1d676a;
          else
            tptrrg6 = ddata.v1d675a;
        break;

        default: throw(THROW_DMABORT);
      }
    }
    SKW_FORMAT_SKSTR(tptrrg6, t_00);
    SKW_SK_STRCAT(tptrrg7, t_00);
    tptrrg4 = &tptrrg7[SKW_SK_STRLEN(tptrrg7)];
  }
}

// TODO: track & split rg6
void SKW_DRAW_MAP_CHIP(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x8 argb2, x16 argw3)
{
  x8 byterg5;
  x16 wordrg5;
  x8 byterg3h;
  x8 byterg6;
  x16 wordrg6;
  c_record* recoptrrg1;
  c_record* recoptrrg6;
  t_gfxdata* gptrrg1;
  t_gfxdata* gptrrg11;
  t_gfxdata* gptrrg12;
  x8*** bppptrrg41;
  x8** bpptrrg42;
  x8* bptrrg43;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  s_8wordarray vs_10;
  t_gfxdata vcarr_20[PAL16];
  t_gfxdata vcarr_30[PAL16];
  c_rect rc_40;
  t_gfxdata* pg_48;
  t_gfxdata* pg_4c;
  x8* pb_50;
  t_gfxdata* pg_58;
  u_lpg vs_60; // ATTENTION!
  x8* pb_64;
  x16 vw_68;
  x16 vw_6c;
  x16 vw_70;
  x16 vw_78;
  x16 vw_7c;
  x8 vb_80;
  x8 vb_88;
  x16 vw_8c;
  x16 vw_90;
  t_gfxdata* parcarr10;
  t_gfxdata* parcarr12;
  t_gfxdata* parcarr14;
  t_gfxdata* parcarr18;
  bool flag;

  x16 vw_74; // multiple purpose temporary as it seems
  vw_0c = eaxw;
  vw_08 = edxw;
  vw_04 = ebxw;
  pg_48 = NULL;
  SKW_SUMMARIZE_STONE_ROOM(&vs_10, vw_08, vw_04, ecxw);
  SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(con(0x8), &pg_48, vcarr_20, argb2);
  if ((argw3 & con(0x10)) != con(0x0))
  {
    x16 wordrg34 = 2 * ddata.v1d274e + ddata.v1d274a;
    x16 wordrg29 = argw1 - ddata.v1d2750;
    SKW_SET_SRECT(&rc_40, argw0 - ddata.v1d274e, wordrg29, wordrg34, 2 * ddata.v1d2750 + ddata.v1d274c);
    SKW_UNION_RECT(&rc_40, &vw_68, &vw_68, &ddata.v1e0b9c);
    SKW_FILL_RECT_SUMMARY(&ddata.v1d694c, ddata.paletteptr1[con(0x8)], &rc_40);
  }
  bool vbool_54;
  if ((CUTX8(vs_10.warr_00[0x1] >> con(0x5))) != con(0x6))
    vbool_54 = false;
  else
  {
    if ((vs_10.warr_00[0x1] & con(0x1)) == con(0x0))
      vbool_54 = false;
    else
      vbool_54 = true;
  }
  pb_64 = NULL;
  // M_33C2B:
  bool farloop; // added
  do
  {
    farloop = false;
    x16 mode = 0;
    // mode = 0: M_34037
    // mode = 1: M_33C8E
    // mode = 2: M_33E2C
    // mode = 3: M_349E3
    // mode = 4: M_33F66

    ui16 uwordrg11 = vs_10.warr_00[0x0];
    if (uwordrg11 < con(0x5))
    {
      if (uwordrg11 < con(0x1))
      {
        if (uwordrg11 == con(0x0))
          mode = 1;
        else
          mode = 0;
      }
      else if (uwordrg11 <= con(0x1))
      {
        if ((vs_10.warr_00[0x1] & con(0x8)) == con(0x0))
          mode = 2;
        else
          mode = 3; // moved some lines to the switch because it's the only path
      }
      else if (uwordrg11 == con(0x2))
      {
        vw_74 = con(0x3);
        if (vs_10.warr_00[0x3] != con(0x0))
        {
          flag = (argw3 & con(0x2)) == con(0x0);
          vw_74 = con(0x4);
          if (!flag)
            if ((CUTLX8(ddata.longmallocx) & con(0x1)) != con(0x0))
              vw_74 = con(0x5);
        }
        parcarr10 = vcarr_20;
        gptrrg1 = pg_48;
        SKW_DRAW_CHIP_OF_MAGIC_MAP(gptrrg1, argw0, argw1, vw_74, con(0x0), parcarr10);
        mode = 0;
      }
      else
        mode = 0;
    }
    else if (uwordrg11 <= con(0x5))
      mode = 2;
    else if (uwordrg11 < con(0x10))
    {
      if (uwordrg11 == con(0x7))
        mode = 1;
      else
        mode = 0;
    }
    else if (uwordrg11 <= con(0x10))
    {
      vw_74 = con(0xb);
      mode = 4;
    }
    else if (uwordrg11 <= con(0x11))
    {
      vw_74 = con(0xa);
      mode = 4;
    }
    else if (uwordrg11 <= con(0x13))
    {
      x16 wordrg155 = SKW_0cee_06dc(vw_08, vw_04) - ecxw;
      wordrg155 &= con(0x3);
      vw_74 = wordrg155;
      if (vs_10.warr_00[0x3] != con(0x0))
      {
        wordrg5 = (wordrg155 + con(0x2)) & con(0x3);
        vw_74 = wordrg5;
      }
      vw_74 += con(0x6);
      parcarr10 = vcarr_20;
      gptrrg1 = pg_48;
      SKW_DRAW_CHIP_OF_MAGIC_MAP(gptrrg1, argw0, argw1, vw_74, con(0x0), parcarr10);
      mode = 0;
    }
    else
      mode = 0;
    x16 vw_94;
    switch (mode)
    {
      case 1: // M_33C8E:
        if ((argw3 & con(0x2)) == con(0x0) || !vbool_54 || ((CUTLX8(ddata.longmallocx) & con(0x2)) == con(0x0)))
        {
          if (pb_64 == NULL)
            SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_48, argw0, argw1, con(0x0), con(0x0), vcarr_20);
          for (vw_74 = con(0x0); vw_74 <= con(0x3); vw_74++)
          {
            vw_94 = unsignedword(CUTX8(vs_10.warr_00[0x3 + vw_74]));
            if (CUTX8(vw_94) != con(0xffffffff))
            {
              if ((argw3 & con(0x2)) != con(0x0) || DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0xf9), CUTX8(vw_94)) == con(0x0))
              {
                x16 wordrg178 = SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(con(0x9), &pg_4c, vcarr_30, CUTX8(vw_94));
                if (wordrg178 != con(0x0))
                {
                  x32 longrg44 = unsignedlong(urshift(vs_10.warr_00[0x3 + vw_74], con(0x8))); // replacement for mov8(RG4Blo, lst.o_peek8(0x17, 2 * RG4L)) ff.
                  longrg44 <<= con(0x18); // ugly, longsize
                  longrg44 >>= con(0x1a);
                  x16 wordrg32 = CUTX16(longrg44);
                  x32 longrg42 = 2 * signedlong(wordrg32) + con(0x2);
                  x32 longrg21 = signedlong(wordrg178);
                  x16 wordrg177 = vw_74 & con(0x1);
                  if (longrg21 >= longrg42)
                    vw_94 = 2 * wordrg32 + wordrg177;
                  else
                    vw_94 = wordrg177;
                  SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_4c, argw0, argw1, vw_94, unsignedword(table1d6980[vw_74]), vcarr_30);
                }
              }
            }
          }
        }
        else
        {
          vw_74 = con(0x1);
          parcarr10 = vcarr_20;
          gptrrg1 = pg_48;
          SKW_DRAW_CHIP_OF_MAGIC_MAP(gptrrg1, argw0, argw1, vw_74, con(0x0), parcarr10);
        }
      break;

      case 2: // M_33E2C:
        SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_48, argw0, argw1, con(0x2), con(0x0), vcarr_20);
        vw_74 = unsignedword(CUTX8(vs_10.warr_00[0x5]));
        if (CUTX8(vw_74) != con(0xffffffff))
        {
          if ((argw3 & con(0x2)) != con(0x0) || DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xa), con(0xb), con(0xf9), CUTX8(vw_74)) == con(0x0))
          {
            x16 wordrg27 = SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(con(0xa), &pg_4c, vcarr_30, CUTX8(vw_74));
            if (wordrg27 != con(0x0))
            {
              x16 wordrg31 = signedword(CUTX8(vs_10.warr_00[0x5] >> con(0x8))) / con(0xa);
              if (wordrg27 >= (wordrg31 + con(0x1)))
                vw_74 = wordrg31;
              else
                vw_74 = con(0x0);
              SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_4c, argw0, argw1, vw_74, con(0x0), vcarr_30);
            }
          }
        }
        if (vs_10.warr_00[0x0] == con(0x5))
        {
          x16 wordrg168 = SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(con(0x18), &pg_4c, vcarr_30, con(0x0));
          if (wordrg168 != con(0x0))
          {
            parcarr10 = vcarr_30;
            wordrg5 = wordrg168;
            gptrrg1 = pg_4c;
            SKW_DRAW_CHIP_OF_MAGIC_MAP(gptrrg1, argw0, argw1, CUTX16(ddata.longmallocx % wordrg5), con(0x0), parcarr10);
          }
        }
      break;

      case 3: // M_349E3:
        SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(con(0x8), &pg_48, vcarr_20, ddata.v1e03d4[ddata.v1e03c0->w8 & con(0x3f)]);
        SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_48, argw0, argw1, con(0x0), con(0x0), vcarr_20);
      return;

      case 4: // M_33F66:
        recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(vs_10.warr_00[0x4]);
        if ((recoptrrg1->u2.b.b0 & con(0x40)) == con(0x0) && (recoptrrg1->u2.b.b1 & con(0x20)) == con(0x0))
          vw_74 += con(0x2);
        if (vs_10.warr_00[0x3] == con(0x0) || vs_10.warr_00[0x3] == con(0x5))
          vw_74 += con(0x4);
        parcarr10 = vcarr_20;
        gptrrg1 = pg_48;
        SKW_DRAW_CHIP_OF_MAGIC_MAP(gptrrg1, argw0, argw1, vw_74, con(0x0), parcarr10);
      break;
    }

    // M_34037: case 0 and others
    if ((argw3 & con(0x10)) != con(0x0))
    {
      for (vw_74 = con(0x0); ddata.savegamew2 > vw_74; vw_74++)
      {
        x16 vw_5c = vw_74;
        wordrg5 = vw_5c;
        if (ddata.hero[wordrg5].w36 != con(0x0))
        {
          byterg6 = SKW_QUERY_CLS1_FROM_RECORD(vw_0c);
          x8 byterg33 = unsignedlong(SKW_QUERY_CLS2_FROM_RECORD(vw_0c));
          pg_58 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(byterg6, con(0x40), byterg33);
          parcarr12 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(byterg6, con(0x40), byterg33);
          x16 wordrg145;
          if (ddata.savegames1.b2 == con(0x0))
            wordrg145 = vw_5c + con(0x5);
          else
            wordrg145 = con(0x9);
          SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_58, argw0, argw1, wordrg145, unsignedword(table1d6984[(unsignedword(ddata.hero[wordrg5].b1d) + con(0x4) - ecxw) & con(0x3)]), parcarr12);
        }
      }
    }
    if ((argw3 & con(0x40)) != con(0x0))
    {
      ui16 uwordrg1 = ddata.v1e0b56;
      if (uwordrg1 < con(0x2))
        vw_74 = con(0x2);
      else if (uwordrg1 <= con(0x2))
        vw_74 = con(0xb);
      else if (uwordrg1 == con(0x3))
        vw_74 = con(0xa);
      else
        vw_74 = con(0x2);
      x8 byterg32 = SKW_QUERY_CLS1_FROM_RECORD(vw_0c);
      byterg5 = SKW_QUERY_CLS2_FROM_RECORD(vw_0c);
      gptrrg11 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(byterg32, con(0x40), byterg5);
      parcarr14 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(byterg32, con(0x40), byterg5);
      SKW_DRAW_CHIP_OF_MAGIC_MAP(gptrrg11, argw0, argw1, vw_74, con(0x0), parcarr14);
    }
    if ((argw3 & con(0xa5)) == con(0x0))
      return;
    vw_8c = con(0xfffe);
    vw_6c = con(0xfffe);
    vw_90 = con(0xfffe);
    wordrg5 = vs_10.warr_00[0x2];
    // M_341E5: co-label M_3437D
    for (;; wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5))
    {
      if (wordrg5 == con(0xfffffffe))
      {
        if (vw_90 != wordrg5)
        {
          recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(vw_90);
          x16 vw_84 = SKW_QUERY_CREATURE_AI_SPEC_FLAGS(vw_90);
          vb_80 = CUTX8(vw_84);
          if ((argw3 & con(0x20)) == con(0x0))
          {
            vs_60.l_00 = lextended(SKW_QUERY_CLS2_FROM_RECORD(vw_90) & con(0xff));
            x16 wordrg108 = SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(SKW_QUERY_CLS1_FROM_RECORD(vw_90), &pg_4c, vcarr_30, CUTLX8(vs_60.l_00));
            if (wordrg108 == con(0x0))
            {
              if ((vw_84 & con(0x1)) == con(0x0) && (vw_84 & con(0x2000)) == con(0x0))
              {
                byterg5 = SKW_QUERY_CLS1_FROM_RECORD(vw_0c);
                x8 byterg31 = SKW_QUERY_CLS2_FROM_RECORD(vw_0c);
                vs_60.pg_00 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(byterg5, con(0x40), byterg31);
                parcarr18 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(byterg5, con(0x40), byterg31);
                gptrrg12 = vs_60.pg_00;
                SKW_DRAW_CHIP_OF_MAGIC_MAP(gptrrg12, argw0, argw1, CUTX16(ddata.longmallocx) & con(0x1), con(0x0), parcarr18);
              }
            }
            else
            {
              if ((vw_84 & con(0x1)) == con(0x0))
                vw_74 = 2 * CUTX16(ddata.longmallocx % ((wordrg108 - (wordrg108 >> con(0x1f))) >> con(0x1)));
              else
              {
                SKW_1c9a_02c3(recoptrrg6, SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg6->u4.b.b0));
                vw_74 = con(0x0);
              }
              vw_94 = (ecxw - ulrshift(recoptrrg6->ue.w, con(0x6), con(0xe))) & con(0x3);
              gptrrg12 = pg_4c;
              SKW_DRAW_CHIP_OF_MAGIC_MAP(gptrrg12, argw0, argw1, (vw_94 & con(0x1)) + vw_74, unsignedword(table1d6980[vw_94]), vcarr_30);
            }
          }
          else
          {
            byterg3h = SKW_QUERY_CLS1_FROM_RECORD(vw_0c);
            x8 byterg3 = SKW_QUERY_CLS2_FROM_RECORD(vw_0c);
            pg_58 = SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(byterg3h, con(0x40), byterg3);
            parcarr18 = SKW_QUERY_GDAT_IMAGE_LOCALPAL(byterg3h, con(0x40), byterg3);
            gptrrg12 = pg_58;
            SKW_DRAW_CHIP_OF_MAGIC_MAP(gptrrg12, argw0, argw1, (CUTX16(ddata.longmallocx) & con(0x1)) + con(0x3), con(0x0), parcarr18);
          }
          if ((vb_80 & con(0x1)) != con(0x0))
          {
            if ((argw3 & con(0x4)) != con(0x0))
            {
              if ((SKW_0cee_2df4(vw_90) & con(0xf)) != con(0x0))
              {
                wordrg5 = recoptrrg6->w0;
                while (wordrg5 != con(0xfffffffe))
                {
                  vw_74 = urshift(wordrg5 & con(0x3c00), con(0xa));
                  if (vw_74 >= con(0x5) && vw_74 <= con(0xa))
                  {
                    wordrg6 = wordrg5;
                    x8 byterg46 = SKW_QUERY_CLS2_FROM_RECORD(wordrg6);
                    if (SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(SKW_QUERY_CLS1_FROM_RECORD(wordrg6), &pg_4c, vcarr_30, byterg46) != con(0x0))
                    {
                      wordrg6 >>= con(0xe);
                      wordrg6 -= ecxw;
                      SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_4c, argw0, argw1, con(0x0), unsignedword(table1d6984[wordrg6 & con(0x3)]), vcarr_30);
                    }
                  }
                  wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
                }
              }
            }
          }
        }
        wordrg5 = vw_6c;
        break;
      }
      vw_74 = urshift(wordrg5 & con(0x3c00), con(0xa));
      if (vw_74 != con(0x4))
      {
        if ((argw3 & con(0x4)) != con(0x0))
        {
          if (vw_74 != con(0xe))
          {
            if (vw_74 != con(0xf))
            {
              if (vw_74 >= con(0x5) && vw_74 <= con(0xa))
              {
                wordrg6 = wordrg5;
                x8 byterg45 = SKW_QUERY_CLS2_FROM_RECORD(wordrg6);
                x16 wordrg10 = SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(SKW_QUERY_CLS1_FROM_RECORD(wordrg6), &pg_4c, vcarr_30, byterg45);
                if (wordrg10 != con(0x0))
                {
                  wordrg6 >>= con(0xe);
                  wordrg6 -= ecxw;
                  vw_94 = wordrg6 & con(0x3);
                  if (vs_10.warr_00[0x0] != con(0x0) || vbool_54)
                  {
                    wordrg6 = con(0x0);
                    vw_74 = con(0x0);
                    vw_94 = unsignedword(table1d6984[vw_94]);
                    SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_4c, argw0, argw1, vw_74, vw_94, vcarr_30);
                  }
                  else if (wordrg10 > con(0x2))
                  {
                    vw_74 = (vw_94 & con(0x1)) + con(0x1);
                    vw_94 = unsignedword(table1d6980[vw_94]);
                    SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_4c, argw0, argw1, vw_74, vw_94, vcarr_30);
                  }
                }
              }
            }
            else if (vw_8c == con(0xfffffffe))
              vw_8c = wordrg5;
          }
          else if (vw_6c == con(0xfffffffe))
            vw_6c = wordrg5;
        }
        continue;
      }
      wordrg6 = wordrg5;
      vb_88 = CUTX8(SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg6));
      if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xf), con(0xb), con(0xf9), SKW_QUERY_CLS2_FROM_RECORD(wordrg6)) == con(0x0))
      {
        x16 wordrg114;
        if ((vb_88 & con(0x1)) == con(0x0))
          wordrg114 = argw3 & con(0x21);
        else
          wordrg114 = argw3 & con(0x80);
        if (wordrg114 == con(0x0))
          continue;
      }
      vw_90 = wordrg5;
    }
    // M_34657:
    for(;;)
    {
      if (wordrg5 == con(0xfffffffe))
      {
        wordrg5 = vw_8c;
        while (wordrg5 != con(0xfffffffe))
        {
          if (urshift(wordrg5 & con(0x3c00), con(0xa)) == con(0xf))
          {
            wordrg6 = wordrg5;
            if (SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(SKW_QUERY_CLS1_FROM_RECORD(wordrg6), &pg_4c, vcarr_30, SKW_QUERY_CLS2_FROM_RECORD(wordrg6)) != con(0x0))
              SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_4c, argw0, argw1, (CUTX16(ddata.longmallocx) & con(0x1)) + con(0x1), SKW_RAND02(), vcarr_30);
          }
          wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
        }
        if (vs_10.warr_00[0x0] != con(0x0) || pb_64 != NULL)
          break;
        vw_78 = vw_08; // adj
        vw_70 = vw_04; // adj
        pb_50 = pb_64;
        x16 wordrg106 = ddata.v1d3248;
        for(;;)
        {
          vw_74 = wordrg106;
          if (vw_74 != ddata.v1d3248 || vw_74 == con(0xffffffff))
            break;
          wordrg106 = SKW_LOCATE_OTHER_LEVEL(ddata.v1d3248, &vw_08, &vw_04, con(0x0), &pb_50);
        }
        wordrg6 = vw_74;
        if (wordrg6 < con(0x0) || wordrg6 == ddata.v1d3248)
          break;
        bppptrrg41 = &ddata.v1e03cc[vw_74];
        bpptrrg42 = &(*bppptrrg41)[vw_08];
        bptrrg43 = *bpptrrg42;
        if ((UI8CAST(bptrrg43[vw_04]) >> con(0x5)) != con(0x0))
          break;
        pb_64 = UPCAST(x8, con(0x1)); // TODO: UGLY!
        vw_7c = ddata.v1d3248;
        SKW_CHANGE_CURRENT_MAP_TO(vw_74);
        SKW_SUMMARIZE_STONE_ROOM(&vs_10, vw_08, vw_04, ecxw);
        farloop = true;
        break; // goto M_33C2B;
      }
      if (urshift(wordrg5 & con(0x3c00), con(0xa)) == con(0xe))
      {
        wordrg6 = wordrg5;
        x16 wordrg15 = SKW_QUERY_4BPP_PICT_BUFF_AND_PAL(SKW_QUERY_CLS1_FROM_RECORD(wordrg6), &pg_4c, vcarr_30, SKW_QUERY_CLS2_FROM_RECORD(wordrg6));
        if (wordrg15 != con(0x0))
        {
          if (wordrg15 > con(0x3))
          {
            x16 wordrg166 = ulrshift(ddata.savegametimarrp[SKW_GET_ADDRESS_OF_RECORD(wordrg6)->u6.w].v.w_08, con(0x4), con(0xe));
            vw_94 = wordrg166;
            wordrg166 -= ecxw;
            wordrg166 &= con(0x3);
            vw_94 = wordrg166;
            vw_74 = con(0x3);
            ui16 uwordrg1 = unsignedword(SKW_48ae_011a(wordrg6)); // extended from byte
            uwordrg1++;
            if (uwordrg1 <= con(0x4))
            {
              switch (uwordrg1)
              {
                case 0:
                case 1:
                case 3:
                  vw_74 = con(0x0);
                break;

                case 2:
                  vw_74 = vw_94 + con(0x3);
                  wordrg6 >>= con(0xe);
                  wordrg6 -= ecxw;
                  wordrg6 &= con(0x3);
                  // CRITICAL ADRESS:
                  // signedword(byte_at(idx(0x1d697c), 4 * RG1W + wordrg6))
                  // wordrg6 can be 0...3
                  // RG1L comes from vw_74, comes from line @034720, vw_94 + RG2L
                  // vw_94 = 0...3, RG2L = 3!
                  // can be changed to:
                  // signedword(byte_at(idx(0x1d6988), 4 * (RG1W - 3) + wordrg6))
                  // signedword(byte_at(idx(0x1d6984), 4 * (RG1W - 3 + 1) + wordrg6))
                  // signedword(byte_at(table1d6984[4 * (RG1W - 3 + 1) + wordrg6]))
                  vw_74 += signedword(table1d6984[4 * (vw_74 - con(0x2)) + wordrg6]);
                break;

                case 4:
                break;

                default: throw(THROW_DMABORT);
              }
            }
          }
          else
            vw_74 = con(0x0);
          SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_4c, argw0, argw1, vw_74, unsignedword(table1d6984[((wordrg5 >> con(0xe)) - ecxw) & con(0x3)]), vcarr_30);
        }
      }
      wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
    }
  } while (farloop);
  if (pb_64 != NULL)
  {
    vw_08 = vw_78;
    vw_04 = vw_70;
    SKW_CHANGE_CURRENT_MAP_TO(vw_7c);
    SKW_SUMMARIZE_STONE_ROOM(&vs_10, vw_08, vw_04, ecxw);
  }
  x16 wordrg19 = SKW_LOCATE_OTHER_LEVEL(ddata.v1d3248, &vw_08, &vw_04, con(0xffffffff), NULL);
  if (wordrg19 < con(0x0))
    return;
  x8*** hlpptr1 = &ddata.v1e03cc[wordrg19];
  x8** hlpptr2 = *hlpptr1 + signedlong(vw_08);
  x8* hlpptr3 = *hlpptr2 + signedlong(vw_04);
  x16 wordrg41 = unsignedword(*hlpptr3);
  // vw_74 = wordrg41; // TODO: what for? it's not going back anymore
  if (CUTLX8(unsignedlong(*hlpptr3) >> con(0x5)) != con(0x2))
    return;
  if ((wordrg41 & con(0x8)) == con(0x0))
    return;
  SKW_DRAW_CHIP_OF_MAGIC_MAP(pg_48, argw0, argw1, con(0x12), con(0x0), vcarr_20);
}

x16 SKW_CREATE_CLOUD(ui16 eaxuw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  c_record* recoptrrg5;
  c_aispec* aiptrrg2;
  c_tim vtim_04;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x16 vw_28;
  x16 vw_2c;
  x16 vw_30;
  x16 vw_34;
  x16 vw_38;

  vw_34 = ebxw;
  vw_38 = ecxw;
  vw_30 = SKW_ALLOC_NEW_RECORD(con(0xf));
  if (vw_30 == con(0xffffffff))
    return con(0xffffffff);
  recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(vw_30);
  if (ebxw > con(0xff))
  {
    vw_2c = ebxw & con(0xff);
    vw_20 = ecxw & con(0xff);
    x16 wordrg42 = urshift(ebxw, con(0x8));
    vw_34 = wordrg42;
    vw_38 = urshift(ecxw, con(0x8));
    vw_34 = wordrg42 - con(0x1);
  }
  else
  {
    vw_2c = ebxw;
    vw_20 = ecxw;
  }
  if (argw0 != con(0xff))
  {
    recoptrrg5->u2.b.b0 &= con(0x7f);
    vw_30 = (vw_30 & con(0x3fff)) | (argw0 << con(0xe));
  }
  else
    recoptrrg5->u2.b.b0 |= con(0xffffff80);
  x16 wordrg111 = (eaxuw - con(0xff80)) & con(0x7f);
  recoptrrg5->u2.b.b0 &= con(0xffffff80);
  recoptrrg5->u2.w |= wordrg111;
  recoptrrg5->u2.b.b1 = con(0x0);
  recoptrrg5->u2.w |= unsignedword(CUTX8(wordrg111)) << con(0x8);
  if (ddata.v1d3248 != ddata.v1e0282 || vw_34 != ddata.v1e0280 || vw_38 != ddata.v1e027e)
    vw_28 = DM2_MIN(con(0xff), edxw / 2 + con(0x80));
  else
    vw_28 = con(0xff);
  SKW_QUEUE_NOISE_GEN2(con(0xd), con(0x81), con(0xfe), recoptrrg5->u2.b.b0 & con(0x7f), vw_34, vw_38, con(0x1), con(0x6c), vw_28);
  SKW_APPEND_RECORD_TO(vw_30, vw_34, vw_38, NULL);
  x16 wordrg105;
  x16 wordrg104 = eaxuw;
  if (wordrg104 != con(0xffffffe4))
  {
    if (wordrg104 != con(0xffffff8e))
      wordrg105 = con(0x1);
    else
      wordrg105 = edxw / 2;
  }
  else
    wordrg105 = con(0x5);
  x32 longrg45 = signedlong(wordrg105) + ddata.longmallocx;
  longrg45 |= (signedlong(ddata.v1d3248) << con(0x18));
  vtim_04.un.l_00 = longrg45;
  vtim_04.b_04 = con(0x19);
  vtim_04.b_05 = con(0x0);
  vtim_04.v.w_08 = vw_30;
  vtim_04.u.b.b_06 = CUTX8(vw_34);
  vtim_04.u.b.b_07 = CUTX8(vw_38);
  SKW_QUEUE_TIMER(&vtim_04);
  x16 wordrg103 = eaxuw;
  if (wordrg103 != con(0xffffff82) && wordrg103 != con(0xffffff80) && wordrg103 != con(0xffffffb0) && wordrg103 != con(0xffffffb1))
  {
    if (wordrg103 == con(0xffffff84) || wordrg103 == con(0xffffff8d))
    {
      x8 byterg18 = SKW_GET_TILE_VALUE(vw_34, vw_38);
      x8 byterg4 = CUTX8(unsignedlong(byterg18) >> con(0x5));
      if (byterg4 == con(0x4) && (byterg18 & con(0x7)) != con(0x5))
      {
        recoptrrg5 = SKW_GET_ADDRESS_OF_TILE_RECORD(vw_34, vw_38);
        if ((recoptrrg5->u2.b.b0 & con(0x40)) != con(0x0) || (recoptrrg5->u2.b.b1 & con(0x20)) != con(0x0))
        {
          x8 byterg16;
          if (eaxuw != con(0xff84))
            byterg16 = con(0x0);
          else
            byterg16 = con(0x2);
          SKW_INVOKE_MESSAGE(vw_34, con(0x0), unsignedword(byterg16), vw_38, ddata.longmallocx + con(0x1));
        }
      }
    }
  }
  else
  {
    vw_34 = vw_2c;
    vw_24 = vw_2c;
    vw_38 = vw_20;
    vw_1c = vw_20;
    bool vbool_18 = true;
    x16 wordrg61 = edxw / 2 + con(0x1);
    wordrg61 += SKW_RAND16(wordrg61) + con(0x1);
    vw_28 = wordrg61;
    if (eaxuw == con(0xff80) || eaxuw == con(0xffb0) || (wordrg61 = urshift(wordrg61, con(0x1)), wordrg61 != con(0x0)))
    {
      if (ddata.v1d3248 == ddata.v1e0282 && vw_34 == ddata.v1e0280)
        if (vw_38 == ddata.v1e027e)
          SKW_ATTACK_PARTY(wordrg61, con(0x1), con(0x3f));
      vw_30 = SKW_GET_CREATURE_AT(vw_34, vw_38);
      bool skipfirst = false; // added
      if (vw_30 != con(0xffffffff))
        skipfirst = true;
      for(;;)
      {
        if (!skipfirst)
        {
          if (!vbool_18)
            break;
          vw_30 = SKW_1c9a_03cf(&vw_24, argw0, &vw_1c);
          if (vw_30 == con(0xffffffff) == con(0x0) || (vw_24 == vw_2c && vw_1c == vw_20))
            break;
          vw_34 = vw_24;
          vw_38 = vw_1c;
          vbool_18 = false;
          wordrg61 = vw_28 >> con(0x1);
        }
        else
          skipfirst = false;
        // M_6AA9:
        if (!SKW_1c9a_0958(vw_30) == con(0x0))
        {
          x16 wordrg12;
          x8 byterg12 = SKW_GET_ADDRESS_OF_RECORD(vw_30)->u4.b.b0;
          aiptrrg2 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(byterg12);
          wordrg12 = unsignedword(byterg12); // added! TODO: is that correct?
          if ((aiptrrg2->u18.b.b1 & con(0x10)) != con(0x0))
          {
            wordrg12 = eaxuw;
            if (wordrg12 != con(0xffffff80))
              wordrg61 = DM2_MAX(con(0x1), urshift(wordrg61, con(0x2)));
          }
          if (((aiptrrg2->u18.w >> con(0x4)) & con(0xf)) != con(0xf))
          {
            if ((aiptrrg2->u0.b.b0 & con(0x20)) != con(0x0))
              wordrg61 = urshift(wordrg61, con(0x2));
            wordrg61 -= SKW_RAND16(2 * wordrg12 + con(0x1)); // TODO: wordrg12 correct?!?
            if (wordrg61 > con(0x0))
              SKW_ATTACK_CREATURE(vw_30, vw_38, con(0x200d), vw_34, con(0x64), wordrg61);
          }
        }
      }
    }
    if (ddata.v1d3248 == ddata.v1e0266)
      ddata.v1e0390.b0 |= con(0x1);
  }
  return SKW_075f_0182(eaxuw, vw_20, urshift(recoptrrg5->u2.w, con(0x8)), vw_2c);
}

void SKW_13e4_0982(void)
{
  x16* wptrrg6;
  x16 vw_00;
  t_gfxdata* gptrrg5;

  bool skip = false; // added
  if (ddata.savegames1.b3 != con(0x0) && (ddata.s350.v1e0552->u0.b.b1 & con(0x10)) == con(0x0))
  {
    if (ddata.s350.v1e0556->u.v.b1a != con(0x13) && ddata.s350.v1e0556->u.v.barr16[con(0x1)] != con(0x13))
    {
      ddata.s350.v1e0562.un.l_00 += con(0x4);
      skip = true;
    }
  }
  // M_15523:
  if (!skip)
  {
    x16 wordrg41;
    wptrrg6 = ddata.s350.v1e055e;
    bool boolrg7;
    if (ddata.s350.v1e0562.b_04 != con(0x22))
    {
      boolrg7 = false;
      wordrg41 = R_4FCC(ddata.s350.v1e054e->u4.b.b0, &wptrrg6[con(0x1)], &ddata.s350.v1e055a, *wptrrg6) ? 1 : 0;
    }
    else
    {
      boolrg7 = true;
      ddata.s350.v1e0556->u.v.b1a = ddata.s350.v1e0556->u.v.barr16[con(0x1)];
      if (ddata.s350.v1e0556->u.v.b1a == con(0xffffffff))
      {
        SKW_14cd_09e2();
      }
      else
      {
        ddata.s350.v1e0556->u.v.barr16[con(0x1)] = con(0xffffffff);
        if (SKW_14cd_062e() == con(0x0) || ddata.s350.v1e0556->u.v.b1a == con(0x13))
        {
          if ((table1d613a[ddata.s350.v1e0556->u.v.b1a] & con(0x4)) != con(0x0))
          {
            ddata.s350.v1e07d8.b1 = con(0x0);
            ddata.s350.v1e07d8.b3 = con(0xffffffff);
          }
          ui8 ubyterg11 = ddata.s350.v1e0556->u.v.b1a;
          if (ubyterg11 >= con(0x6))
          {
            if (ubyterg11 <= con(0x6))
              ddata.s350.v1e0556->u.v.b1d = CUTX8((ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) - con(0x1)) & con(0x3));
            else if (ubyterg11 == con(0x7))
              ddata.s350.v1e0556->u.v.b1d = CUTX8((ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) + con(0x1)) & con(0x3));
          }
        }
        else
          ddata.s350.v1e0556->u.v.b1a = con(0xffffffff);
      }
      if (ddata.s350.v1e0556->u.v.b1a == con(0x13))
      {
        ddata.s350.v1e0556->u.v.w0e = wptrrg6[0];
        ddata.s350.v1e0556->u.v.w10 = wptrrg6[1];
        if ((table1d607e[SKW_QUERY_GDAT_CREATURE_WORD_VALUE(ddata.s350.v1e054e->u4.b.b0, con(0x1))].u.b[0] & con(0x8)) == con(0x0))
        {
          ui8 ubyterg10 = ddata.s350.v1e0552->barr22[con(0x1)];
          x16 wordrg11;
          if (ubyterg10 < con(0x1))
            wordrg11 = con(0x6e);
          else if (ubyterg10 <= con(0x1))
            wordrg11 = con(0xbe);
          else if (ubyterg10 == con(0x2))
            wordrg11 = con(0xff);
          else
            wordrg11 = con(0x6e);
          SKW_CREATE_CLOUD(con(0xffa8), unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), wordrg11, con(0xff));
        }
      }
      x16 wordrg190 = signedword(ddata.s350.v1e0556->u.v.b1a);
      if ((signedword(ddata.s350.v1e0556->u.v.b1a) < con(0x32)) || wordrg190 > con(0x34))
        wordrg41 = SKW_GET_CREATURE_ANIMATION_FRAME(ddata.s350.v1e054e->u4.b.b0, wptrrg6, &wptrrg6[con(0x1)], wordrg190, &ddata.s350.v1e055a, con(0x0)) ? 1 : 0;
      else
      {
        x32 longrg4 = lextended(wordrg190);
        longrg4 -= con(0x32);
        longrg4 += ddata.longmallocx;
        longrg4 |= unsignedlong(ddata.s350.v1e0571) << con(0x18);
        ddata.s350.v1e0562.un.l_00 = longrg4;
        skip = true;
      }
    }
    if (!skip)
    {
      // M_156EA:
      do
      {
        x8 boolrg1;
        if (boolrg7 || ddata.s350.v1e0556->u.v.b21 == con(0x0))
          boolrg1 = true;
        else
        {
          if (ubrshift(ddata.s350.v1e055a[con(0x2)] & con(0x40), con(0x6)) != con(0x0))
            boolrg1 = false;
          else
            boolrg1 = true;
        }
        if (boolrg1)
        {
          if (ubrshift(ddata.s350.v1e055a[con(0x2)] & con(0xffffff80), con(0x7)) != con(0x0))
          {
            SKW_13e4_01a3();
            ddata.s350.v1e0556->u.v.b21 |= SKW_PROCEED_CCM() ? 1 : 0;
          }
        }
        if ((ddata.s350.v1e0556->u.v.b21 == con(0x0)) || (ubrshift(ddata.s350.v1e055a[con(0x2)] & con(0x40), con(0x6)) == con(0x0)))
          break;
        wordrg41 = R_50CB(ddata.s350.v1e054e->u4.b.b0, &wptrrg6[con(0x1)], &ddata.s350.v1e055a, *wptrrg6);
      } while (wordrg41 != con(0x2));
      ddata.s350.v1e0562.b_04 = ((wordrg41 != con(0x1)) ? 1 : 0) + con(0x21);
      if (ddata.s350.v1e0570 != con(0x0))
        return;
      ddata.s350.v1e0562.un.l_00 = SKW_CREATURE_SOMETHING_1c9a_0a48() | (unsignedlong(ddata.s350.v1e0571) << con(0x18));
    }
  }
  // M_157BC:
  if (ddata.s350.v1e07eb != con(0x0))
  {
    if ((ddata.s350.v1e07d8.b0 != con(0x0)) || (ddata.s350.v1e07d8.b3 != con(0xffffffff)))
    {
      if (SKW_3e74_5673(UI32CAST(ddata.s350.v1e054c & con(0x3ff)) | con(0x20000000), con(0x1), &vw_00) != con(0x0))
      {
        gptrrg5 = SKW_3e74_5817(vw_00);
      }
      else
      {
        gptrrg5 = UPCAST(t_gfxdata, DOWNCAST(s_xmalloc, SKW_ALLOC_CPXHEAP_MEM(vw_00, con(0xe))));
        SKW_3e74_585a(vw_00, true);
      }
      SKW_COPY_MEMORY(DOWNCAST(c_bbbbwwwp, &ddata.s350.v1e07d8), con(0xe), DOWNCAST(t_gfxdata, gptrrg5)); // TODO: special
    }
  }
  if (ddata.s350.v1e0556->w02 != con(0xffffffff))
  {
    SKW_1c9a_0db0(unsignedlong(ddata.s350.v1e054c));
  }
  ddata.s350.v1e0556->w02 = SKW_QUEUE_TIMER(&ddata.s350.v1e0562);
}

void SKW_FILL_CAII_CUR_MAP(void)
{
  x16 wordrg5;
  x16* wptrrg6;
  c_record* recoptrrg4;
  x8* bptrrg7;
  x8* bptrrg1;

  bptrrg7 = *ddata.savegamepp1;
  wptrrg6 = &ddata.v1e038c[*ddata.v1e03f4];
  // M_242C8:
  for (x16 vw_00 = con(0x0); vw_00 < ddata.savegamewa; vw_00++)
  {
    wordrg5 = con(0x0);
    // M_242AF:
    for (;; wordrg5++)
    {
      bool skip = false; // added
      if (wordrg5 >= ddata.savegamewb)
        break;
      bptrrg1 = bptrrg7++;
      if ((*bptrrg1 & con(0x10)) == con(0x0))
        continue;
      x16 wordrg11 = *wptrrg6++;
      while (urshift(wordrg11 & con(0x3c00), con(0xa)) != con(0x4))
      {
        wordrg11 = SKW_GET_NEXT_RECORD_LINK(wordrg11);
        if (wordrg11 == con(0xfffffffe))
        {
          skip = true;
          break;
        }
      }
      if (skip)
        continue;
      x16 wordrg3 = wordrg11;
      recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg3);
      if (recoptrrg4->u4.b.b1 == con(0xffffffff))
      {
        if ((SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg4->u4.b.b0)->u0.b.b0 & con(0x1)) != con(0x0))
        {
          x16 wordrg21 = recoptrrg4->ua.w;
          SKW_1c9a_09db(recoptrrg4);
          x16 wordrg31 = recoptrrg4->ua.w | (wordrg21 & con(0x6000));
          recoptrrg4->ua.w = wordrg31;
          wordrg21 &= con(0x803f);
          if (wordrg21 == con(0xffff8001))
            recoptrrg4->ua.w = (wordrg31 & con(0x7fc0)) | con(0x8001);
        }
        else
          SKW_ALLOC_CAII_TO_CREATURE(wordrg3, wordrg5, vw_00);
      }
    }
  }
}

void SKW_REFRESH_PLAYER_STAT_DISP(x16 eaxw)
{
  x8 byterg4h;
  c_hero* heroptrrg5;
  t_text t_00[0x80];
  c_rect rc_80;
  bool vbool_88;
  bool vbool_8c;
  t_text* tp_90;
  t_gfxdata* pg_94;
  x16 vw_a0;
  x16 vw_a4;
  x16 vw_a8;

  x16 wordrg34 = con(0x0);
  vbool_88 = false;
  bool vbool_9c = false;
  bool vbool_98 = false;
  vbool_8c = false;
  x16 wordrg27 = eaxw;
  heroptrrg5 = &ddata.hero[wordrg27];
  x16 vw_ac = heroptrrg5->u32.w;
  wordrg27++;
  vw_a4 = (wordrg27 == ddata.v1e0976) ? 1 : 0;
  if (vw_a4 != con(0x0))
  {
    if (ddata.backbuff2 != con(0x0))
      vw_ac |= con(0x8000);
    if ((ddata.v1d26a0 != con(0x0)) || (ddata.v1d26a2 != con(0x0)))
      ddata.v1e100c &= con(0xffffffef);
    else
      ddata.v1e100c |= con(0x10);
  }
  bool skip = false; // added
  if (ddata.v1e0976 == ddata.v1e101e)
    if ((vw_ac & con(0x8000)) == con(0x0))
    {
      if (vw_a4 != con(0x0))
        wordrg34 = ddata.v1e100c ^ ddata.v1e101c;
      skip = true;
    }
  if (!skip)
  {
    if (vw_a4 == con(0x0))
      ddata.v1e101e = vw_a4;
    else
    {
      SKW_DRAW_STATIC_PIC(con(0x7), con(0x0), con(0x4), con(0x0), con(0xffffffff));
      vbool_8c = true;
      vbool_9c = true;
      ddata.v1e101e = ddata.v1e0976;
      wordrg34 = con(0x1f);
      vw_ac |= con(0x7c00);
    }
  }
  if (wordrg34 != con(0x0))
  {
    if ((wordrg34 & con(0x10)) != con(0x0))
      SKW_DRAW_CHARSHEET_OPTION_ICON(con(0x11), con(0x10), con(0x238));
    if (ddata.v1e0288 == con(0x0))
    {
      if ((wordrg34 & con(0x1)) != con(0x0))
      {
        SKW_DRAW_CHARSHEET_OPTION_ICON(con(0x13), con(0x1), con(0x267));
        vw_ac |= con(0x400);
      }
      if ((wordrg34 & con(0x8)) != con(0x0))
        SKW_DRAW_CHARSHEET_OPTION_ICON(con(0xf), con(0x8), con(0x232));
      if ((wordrg34 & con(0x4)) != con(0x0))
        SKW_DRAW_CHARSHEET_OPTION_ICON(con(0xd), con(0x4), con(0x234));
    }
    wordrg34 &= con(0x2);
    if (wordrg34 != con(0x0))
      SKW_DRAW_CHARSHEET_OPTION_ICON(con(0xb), con(0x2), con(0x236));
    vbool_9c = true;
    ddata.v1e101c = ddata.v1e100c;
  }
  if ((vw_ac & con(0x4000)) != con(0x0))
  {
    SKW_DRAW_PLAYER_3STAT_PANE(eaxw, true);
    vbool_98 = true;
    if (heroptrrg5->w36 == con(0x0))
      SKW_DRAW_NAME_STR(&ddata.v1d69d4, unsignedword(ddata.paletteptr1[con(0xf)]), unsignedword(ddata.paletteptr1[con(0x1)]) | con(0x4000), eaxw + con(0xa5), heroptrrg5->t00);
    else
    {
      if (vw_a4 == con(0x0))
        vw_ac |= con(0xc00);
      else
      {
        SKW_2e62_061d(eaxw);
        vw_ac |= con(0x800);
      }
      vbool_88 = true;
    }
  }
  if (heroptrrg5->w36 != con(0x0))
  {
    if ((vw_ac & con(0x800)) != con(0x0))
    {
      SKW_DRAW_PLAYER_3STAT_PANE(eaxw, false);
      vbool_98 = true;
      SKW_DRAW_PLAYER_3STAT_HEALTH_BAR(eaxw);
      if (heroptrrg5->w2e != con(0xffffffff))
        SKW_DRAW_PLAYER_DAMAGE(eaxw);
      if (vw_a4 != con(0x0))
      {
        SKW_QUERY_EXPANDED_RECT(con(0x225), &rc_80);
        pg_94 = ddata.bitmapptr;
//                                           srcbmp                                                    srcofs  destbmp                                palette
        SKW_DRAW_DIALOGUE_PICT(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x7), con(0x0), con(0x0)), &rc_80, rc_80.x, pg_94, rc_80.y, con(0xffff), SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x7), con(0x0), con(0x0)));
        SKW_DRAW_PLAYER_3STAT_TEXT(heroptrrg5);
        if (((heroptrrg5->w44 >= con(0x0)) && (heroptrrg5->w46 >= con(0x0))) && (heroptrrg5->b1f == con(0x0)))
          byterg4h = con(0x4);
        else
          byterg4h = con(0x5);
        SKW_DRAW_EYE_MOUTH_COLORED_RECTANGLE(byterg4h, con(0x221));
        byterg4h = con(0x4);
        x16 wordrg33 = con(0x1);
        while (wordrg33 <= con(0x6))
        {
          if (UI8CAST(heroptrrg5->b4a[2 * wordrg33]) >= UI8CAST(heroptrrg5->b4a[2 * wordrg33 + con(0x1)]))
            wordrg33++;
          else
          {
            byterg4h = con(0x5);
            break;
          }
        }
        SKW_DRAW_EYE_MOUTH_COLORED_RECTANGLE(byterg4h, con(0x222));
        vbool_9c = true;
      }
    }
    if (vw_a4 == con(0x0))
    {
      x16 wordrg32 = con(0x0);
      while (wordrg32 <= con(0x1))
      {
        vbool_98 |= SKW_2e62_03b5(eaxw, vbool_88, wordrg32);
        wordrg32++;
      }
    }
    else
    {
      if (!ddata.v1e0228)
      {
        if (!ddata.v1e0220)
          vw_a8 = heroptrrg5->warrc3[con(0x1)]; // BUGFIX 4/2014
        else
          vw_a8 = con(0xffff);
      }
      else
        vw_a8 = ddata.savegamewpc.w0;
      skip = false; // a 2nd purpose
      if (ddata.v1d66fe == vw_a8 && (ddata.v1e0220 == ddata.v1e1018) && (ddata.v1e0228 == ddata.v1e1014))
        if ((vw_ac & con(0x2000)) == con(0x0))
        {
          if (ddata.v1d66fe != con(0xffffffff) && (SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(ddata.v1d66fe, con(0x0)) & con(0x20)) != con(0x0))
          {
            SKW_DRAW_ITEM_SURVEY(ddata.v1d66fe, ddata.v1e0228);
            vbool_9c = true;
          }
          skip = true;
        }
      if (!skip)
      {
        SKW_DRAW_STATIC_PIC(con(0x7), con(0x25), con(0x221), con(0x0), con(0xffffffff));
        SKW_DRAW_STATIC_PIC(con(0x7), (ddata.v1e0228 ? 1 : 0) + con(0x20), con(0x222), con(0x0), con(0xffffffff));
        if (!ddata.v1e0228)
        {
          if (ddata.v1e0288 == con(0x0))
          {
            if (!SKW_DRAW_ITEM_SURVEY(vw_a8, false))
              SKW_DRAW_FOOD_WATER_POISON_PANEL();
          }
          else
          {
            if (ddata.v1e0220)
              SKW_DRAW_FOOD_WATER_POISON_PANEL();
            else
              SKW_DRAW_CRYOCELL_LEVER(false);
          }
        }
        else
        {
          if (vw_a8 != con(0xffffffff))
            SKW_DRAW_ITEM_SURVEY(vw_a8, true);
          else
          {
            SKW_24a5_1532();
          }
        }
        ddata.v1d66fe = vw_a8;
        ddata.v1e1014 = ddata.v1e0228;
        ddata.v1e1018 = ddata.v1e0220;
        vbool_9c = true;
      }
      x16 wordrg31 = con(0x0);
      while (wordrg31 < con(0x1e))
      {
        vbool_9c |= SKW_2e62_03b5(eaxw, vbool_8c, wordrg31);
        wordrg31++;
      }
    }
    if ((vw_ac & con(0x400)) != con(0x0))
    {
      x16 wordrg152;
      if (eaxw != ddata.mouse_unk0e || ddata.v1e0288 != con(0x0))
        wordrg152 = con(0xf);
      else
        wordrg152 = con(0x9);
      x16 wordrg3 = unsignedword(ddata.paletteptr1[wordrg152]);
      if (vw_a4 == con(0x0))
      {
        SKW_DRAW_PLAYER_3STAT_PANE(eaxw, false);
        vbool_98 = true;
        SKW_DRAW_NAME_STR(&ddata.v1d69d4, wordrg3, unsignedword(ddata.paletteptr1[con(0x1)]) | con(0x4000), eaxw + con(0xa5), heroptrrg5->t00);
      }
      else
      {
        SKW_SK_STRCPY(t_00, heroptrrg5->t00);
        x8 byterg1 = heroptrrg5->t00[0x8];
        if (byterg1 != con(0x2c) && byterg1 != con(0x3b))
          if (byterg1 != con(0x2d))
          {
            SKW_SK_STRCAT(t_00, ddata.v1d70e4);
          }
        SKW_SK_STRCAT(t_00, &heroptrrg5->t00[0x8]);
        tp_90 = t_00;
        x16 wordrg42;
        if (ddata.v1e0288 == con(0x0))
          wordrg42 = con(0x4000);
        else
          wordrg42 = unsignedword(ddata.paletteptr1[con(0x1)]);
        SKW_DRAW_LOCAL_TEXT(con(0x229), wordrg42, tp_90, wordrg3);
        vbool_9c = true;
      }
    }
    if (vw_a4 != con(0x0))
    {
      if ((vw_ac & con(0x1000)) != con(0x0))
      {
        SKW_QUERY_EXPANDED_RECT(con(0x22a), &rc_80);
        pg_94 = ddata.bitmapptr;
//                                        srcbmp                                                      srcofs   destbmp                               palette
        SKW_DRAW_DIALOGUE_PICT(SKW_QUERY_GDAT_IMAGE_ENTRY_BUFF(con(0x7), con(0x0), con(0x0)), &rc_80, rc_80.x, pg_94, rc_80.y, con(0xffff), SKW_QUERY_GDAT_IMAGE_LOCALPAL(con(0x7), con(0x0), con(0x0)));
        x16 wordrg41 = SKW_GET_PLAYER_WEIGHT(eaxw);
        vw_a0 = wordrg41;
        x16 wordrg21 = SKW_MAX_LOAD(heroptrrg5);
        x16 wordrg61;
        if (wordrg41 <= wordrg21)
        {
          if ((8 * wordrg41) <= (5 * wordrg21))
            wordrg61 = con(0xd);
          else
            wordrg61 = con(0xb);
        }
        else
          wordrg61 = con(0x8);
        ddata.v1e0998 = vw_a0 / con(0xa);
        ddata.v1e0996 = vw_a0 - ddata.v1e0998 * con(0xa);
        ddata.v1e098a = SKW_MAX_LOAD(heroptrrg5) / con(0xa);
        SKW_QUERY_GDAT_TEXT(con(0x7), con(0x2a), t_00, con(0x0));
        SKW_DRAW_LOCAL_TEXT(con(0x22b), ddata.paletteptr1[con(0x1)] | con(0x4000), t_00, ddata.paletteptr1[wordrg61]);
        vbool_9c = true;
      }
    }
  }
  if (vbool_98)
    SKW_0b36_0cbe(&ddata.v1d69d4, true);
  if (vbool_9c)
  {
    ddata.backbuff2 = con(0x0);
    SKW_CHANGE_VIEWPORT_TO_INVENTORY(false);
  }
  heroptrrg5->u32.b.b1 &= con(0x3);
}

x16 R_3D93B(ui16 eaxuw, x16 ebxw, x16* ecxpw, x16 edxw, x16* argpw0)
{
  c_record* recoptrrg1;
  bool flag;
  x8* pb_00;
  x16* pw_04; // add32(0x4, con(0x2));
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_24;

  x16 vw_14 = edxw;
  vw_0c = ebxw;
  x16 vw_28 = con(0x0);
  x16 vw_2c = con(0xffffffff);
  // M_3DB8E:
  for (x16 vw_1c = con(0x0); vw_1c < unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)])); vw_1c++)
  {
    vw_10 = ulrshift(ddata.v1e03c8[vw_1c].w8, con(0x5), con(0xb));
    vw_24 = urshift(ddata.v1e03c8[vw_1c].w8, con(0xb));
    pb_00 = *(ddata.v1e03cc[vw_1c]);
    pw_04 = &ddata.v1e038c[ddata.v1e03d8[ddata.v1e03e4[vw_1c]]];
    x16 wordrg6 = con(0x0);
    // M_3DB74:
    for (x16 vw_20 = con(0x0); vw_20 <= vw_10; vw_20++)
    {
      // M_3DB59: with co-label M_3DB54
      for (x16 vw_18 = con(0x0); vw_18 <= vw_24; vw_18++)
      {
        x8* hlpptr = pb_00++;
        if ((*hlpptr & con(0x10)) != con(0x0))
        {
          x16 wordrg48 = *pw_04;
          pw_04++;
          // M_3D9FD:
          for(;;)
          {
            if (eaxuw >= UI16CAST(con(0x2)) && eaxuw <= UI16CAST(con(0x5)))
            {
              if (urshift(wordrg48 & con(0x3c00), con(0xa)) == con(0x2) && (recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg48), (recoptrrg1->u2.w & con(0x6)) == con(0x2)))
              {
                x16 wordrg3 = recoptrrg1->u2.w;
                vw_08 = urshift(wordrg3, con(0x3));
                x16 uwordrg28 = urshift(vw_08, con(0x8)) & con(0x1f);
                wordrg6 = vw_08 & con(0xff);
                if (uwordrg28 < con(0xf))
                {
                  if ((uwordrg28 == con(0xb)) && wordrg6 == vw_0c)
                  {
                    if (eaxuw != con(0x3))
                    {
                      wordrg3 = --vw_14;
                      flag = wordrg3 != con(0x0);
                      if (!flag)
                      {
                        *ecxpw = vw_20;
                        *argpw0 = vw_18;
                        return vw_1c;
                      }
                    }
                    else
                      vw_28++;
                  }
                }
                else if (uwordrg28 <= con(0xf))
                {
                  if (eaxuw != con(0x4))
                  {
                    if ((eaxuw == con(0x5)) && ((wordrg3 & con(0x1)) != con(0x0)))
                    {
                      *ecxpw = vw_20;
                      *argpw0 = vw_18;
                      return vw_1c;
                    }
                  }
                  else
                  {
                    wordrg3 &= con(0xfffffffe);
                    recoptrrg1->u2.w = wordrg3;
                  }
                }
                else if (uwordrg28 == con(0x10))
                {
                  if (wordrg6 == vw_0c)
                  {
                    *ecxpw = vw_20;
                    *argpw0 = vw_18;
                    vw_2c = vw_1c;
                  }
                }
              }
            }
            wordrg48 = SKW_GET_NEXT_RECORD_LINK(wordrg48);
            if (wordrg48 == con(0xfffffffe) || urshift(wordrg48 & con(0x3c00), con(0xa)) > con(0x3))
              break;
          }
        }
      }
    }
  }
  SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e0266);
  if (eaxuw != con(0x4))
    return (eaxuw != con(0x5)) ? vw_28 : con(0xffffffff);
  return vw_2c;
}

x16 SKW_14cd_102e(x16 eaxw, x8 ebxb, bool ecxbool, x16 edxw, bool argbool0)
{
  x16 wordrg5;
  x16 vw_04;
  x8 vb_08;

  wordrg5 = edxw;
  x8 byterg2 = ebxb;
  vb_08 = byterg2;
  x16 wordrg6 = con(0x0);
  for(;;)
  {
    if (wordrg5 == con(0xfffffffe))
      return wordrg6;
    vw_04 = urshift(wordrg5 & con(0x3c00), con(0xa));
    if ((ecxbool && vw_04 == con(0x4)) || (argbool0 && SKW_IS_CONTAINER_CHEST(wordrg5)))
    {
      byterg2 = vb_08;
      wordrg6 += SKW_14cd_102e(eaxw, byterg2, ecxbool, SKW_GET_ADDRESS_OF_RECORD(wordrg5)->u2.w, argbool0);
    }
    if (vw_04 < con(0x4) && vw_04 < con(0xe) && (vb_08 == con(0xffffffff) || vb_08 == CUTX8(urshift(wordrg5, con(0xe)))))
      if (SKW_1c9a_0006(wordrg5, eaxw) != con(0x0))
        wordrg6++;
    wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
  }
}

// adress given to a functionpointer
bool R_1BAAD(x16 eaxw, x16 edxw)
{
  x16 vw_00;
  x16 vw_04;

  vw_04 = eaxw;
  vw_00 = edxw;
  x8 byterg18 = SKW_GET_TILE_VALUE(vw_04, vw_00);
  x16 wordrg2 = unsignedword(byterg18);
  x16 wordrg31 = unsignedword(ubrshift(byterg18, con(0x5)));
  if (wordrg31 == con(0x0))
    return true;
  if (wordrg31 == con(0x4))
  {
    x16 byterg15 = CUTX8(wordrg2) & con(0x7);
    if (byterg15 == con(0x3) || byterg15 == con(0x4))
      if (SKW_0cee_3275(SKW_IS_REBIRTH_ALTAR(SKW_GET_ADDRESS_OF_TILE_RECORD(vw_04, vw_00))) == con(0x0) || SKW_RAND01() == con(0x0))
        return true;
  }
  if (wordrg31 == con(0x6))
    if ((wordrg2 & con(0x4)) == con(0x0))
      return true;
  if ((CUTX8(wordrg2) & con(0x10)) == con(0x0))
    return false;
  x16 wordrg1 = SKW_GET_WALL_TILE_ANYITEM_RECORD(vw_04, vw_00);
  x16 wordrg3;
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg3))
  {
    wordrg3 = wordrg1;
    if (wordrg3 == con(0xfffffffe))
      return false;
    x16 wordrg45 = urshift(wordrg3 & con(0x3c00), con(0xa));
    if (wordrg45 == con(0xf))
      if ((SKW_GET_ADDRESS_OF_RECORD(wordrg3)->u2.w & con(0x7f)) == con(0xe))
        return true;
    if (wordrg45 == con(0x4))
    {
      x16 wordrg43 = SKW_1c9a_03cf(&vw_04, con(0xff), &vw_00);
      if (wordrg43 != con(0xffffffff))
      {
        x16 wordrg100 = SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg43);
        if ((wordrg100 & con(0x1)) == con(0x0))
        {
          if ((wordrg100 & con(0x20)) == con(0x0))
            return true;
        }
        else if ((urshift(wordrg100, con(0x6)) & con(0x3)) < con(0x2))
          return true;
      }
    }
  }
}

bool SKW_19f0_05e8(x16 eaxw, x16* ebxpw, x16 ecxw, t_gfxdata* edxpg, x16 argw0, x16 argw1, bool argbool2)
{
  x16 wordrg5;
  t_gfxdata* gptrrg5;
  x16* pw_04;
  t_gfxdata* pg_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_18;
  x16 vw_24;

  vw_0c = eaxw;
  pg_08 = edxpg;
  pw_04 = ebxpw;
  x16 vw_00 = ecxw;
  x16 wordrg6 = argw1;
  x16 wordrg4;
  if ((ddata.s350.v1e0578 & con(0xff8)) == con(0x0))
    wordrg4 = con(0x1);
  else
    wordrg4 = urshift(ddata.s350.v1e0552->w14, con(0xc));
  vw_24 = wordrg4;
  vw_10 = con(0x0);
  if (wordrg6 == con(0xffffffff))
  {
    wordrg6 = con(0x0);
    vw_10 = con(0x3);
  }
  // M_1C1A8:
  x16 vw_1c;
  x16 vw_14;
  for(;;)
  {
    vw_18 = vw_00;
    vw_14 = argw0;
    // M_1C365: co-label M_1C362
    for (vw_1c = con(0x0); vw_1c < vw_24; vw_1c++)
    {
      x16 wordrg24 = vw_18 + table1d27fc[wordrg6];
      vw_18 = wordrg24;
      vw_14 += table1d2804[wordrg6];
      if (wordrg24 < con(0x0) || wordrg24 >= ddata.savegamewa)
        continue;
      if (vw_14 < con(0x0) || vw_14 >= ddata.savegamewb)
        continue;
      x32 longrg22 = signedlong(vw_14);
      wordrg5 = vw_18;
      x8 byterg14 = SKW_GET_TILE_VALUE(wordrg5, CUTX16(longrg22));
      if ((byterg14 & con(0x10)) == con(0x0))
      {
        ;
      }
      else if (ubrshift(byterg14, con(0x5)) != con(0x0))
      {
        if (argbool2)
        {
          bool boolrg1;
          wordrg5 = vw_18;
          if (unsignedword(ddata.s350.v1e0562.u.b.b_06) != wordrg5)
            boolrg1 = true;
          else
          {
            if (unsignedword(ddata.s350.v1e0562.u.b.b_07) == vw_14)
              boolrg1 = false;
            else
              boolrg1 = true;
          }
          if (boolrg1)
          {
            wordrg5 = SKW_GET_CREATURE_AT(vw_18, vw_14);
            if (wordrg5 != con(0xffffffff))
            {
              if (SKW_19f0_0547(wordrg5, vw_0c) != con(0x0))
              {
                goto M_false;
              }
            }
          }
        }
      }
      else if (argbool2)
      {
        x16 wordrg145 = SKW_GET_TILE_RECORD_LINK(wordrg5, CUTX16(longrg22));
        // M_1C25D: co-label M_1C2CD
        for (;; wordrg145 = SKW_GET_NEXT_RECORD_LINK(wordrg5))
        {
          wordrg5 = wordrg145;
          if (wordrg5 == con(0xfffffffe))
            break;
          x16 wordrg144 = urshift(wordrg5 & con(0x3c00), con(0xa));
          if (wordrg144 != con(0x3) && wordrg144 != con(0x2))
            continue;
          if (urshift(wordrg5, con(0xe)) != ((wordrg6 + con(0x2)) & con(0x3)))
            continue;
          x8 byterg17 = SKW_QUERY_CLS2_FROM_RECORD(wordrg144);
          if (byterg17 == con(0xffffffff))
            continue;
          if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0xf0), byterg17) == vw_0c)
            goto M_false;
        }
      }
      else
        break;
      wordrg5 = vw_14;
      if ((pg_08[(vw_18 << con(0x7)) + 4 * wordrg5] != con(0x0)) || R_1BC29(vw_18, vw_14))
        break;
    }
    wordrg6++;
    wordrg5 = vw_10 - con(0x1);
    vw_10 = wordrg5;
    if (wordrg5 < con(0x0))
      return false;
  }

M_false: // M_1C38A:
  vw_10 = pg_08[(signedlong(vw_00) << con(0x7)) + 4 * signedlong(argw0)];
  wordrg6 += con(0x2);
  wordrg6 &= con(0x3);
  for(;;)
  {
    if (++vw_1c >= vw_24)
      break;
    x16 vw_28 = vw_00;
    x16 vw_20 = argw0;
    vw_00 += table1d27fc[wordrg6];
    argw0 += table1d2804[wordrg6];
    x16 wordrg101 = vw_00;
    gptrrg5 = &pg_08[wordrg101 << con(0x7)];
    x8 byterg2 = gptrrg5[4 * signedlong(argw0)];
    if (byterg2 == con(0x0) || unsignedword(byterg2) > vw_10 || R_1BC29(wordrg101, argw0))
    {
      vw_00 = vw_28;
      argw0 = vw_20;
      break;
    }
  }
  wordrg6 += con(0x2);
  wordrg6 &= con(0x3);
  if (SKW_19f0_0891((argbool2 ? 1 : 0) + con(0x2), argw0, vw_18, vw_00, vw_14, wordrg6))
  {
    SKW_19f0_045a(vw_00, argw0);
    *pw_04 &= con(0xffffffe0); // was a byte-access
    wordrg5 = *pw_04;
    wordrg5 |= vw_18 & con(0x1f);
    wordrg6 = wordrg5 & con(0xfffffc1f);
    *pw_04 = wordrg6 | ((vw_14 & con(0x1f)) << con(0x5));
    *pw_04 &= con(0x3ff); // was a highbyte-access, mask adj
    *pw_04 |= (ddata.v1d3248 & con(0x3f)) << con(0xa);
    return true;
  }
  return false;
}

x16 SKW_19f0_124b(x16* eaxpw, x16 ebxw, x16 ecxw, x16* edxpw, x16 argw0)
{
  bool flag;
  c_record* prec_00;
  x16 vw_04;
  x16 vw_08; // mod, was x32
  x16 vw_0c;

  vw_04 = ebxw;
  vw_0c = ecxw;
  bool boolrg7 = false;
  vw_08 = con(0xffffffff);
  SKW_CHANGE_CURRENT_MAP_TO(vw_04);
  x16 wordrg1 = unsignedword(SKW_GET_TILE_VALUE(*eaxpw, *edxpw));
  x8 byterg2 = CUTX8(urshift(wordrg1, con(0x5)));
  if (byterg2 != con(0x3))
  {
    if (byterg2 != con(0x2) || (argw0 & con(0x8)) == con(0x0) || ecxw != con(0x1) || (wordrg1 & con(0x8)) == con(0x0) || (wordrg1 & con(0x1)) != con(0x0))
    {
      wordrg1 &= con(0x2);
      if (wordrg1 == con(0x0) || byterg2 == con(0x0) || byterg2 == con(0x7) || byterg2 == con(0x4))
        return vw_08;
      bool skip = false; // added
      if ((argw0 & con(0x100)) != con(0x0))
        if (SKW_FIND_LADDAR_AROUND(*eaxpw, vw_0c, &prec_00, *edxpw) >= con(0x0))
          skip = true;
      if (!skip)
      {
        if ((argw0 & con(0x10)) == con(0x0) || vw_0c != con(0xffffffff))
          return vw_08;
        boolrg7 = true;
      }
    }
  }
  else
  {
    if ((argw0 & con(0x100)) == con(0x0))
      return vw_08;
    wordrg1 &= con(0x4);
    if (wordrg1 == con(0x0))
      flag = ecxw == con(0x1);
    else
      flag = ecxw == con(0xffffffff);
    if (!flag)
      return vw_08;
  }
  vw_08 = SKW_LOCATE_OTHER_LEVEL(vw_04, eaxpw, edxpw, vw_0c, NULL);
  if (vw_08 < con(0x0) || !boolrg7)
    return vw_08;
  SKW_CHANGE_CURRENT_MAP_TO(vw_08);
  x16 wordrg12 = unsignedword(SKW_GET_TILE_VALUE(*eaxpw, *edxpw));
  if (CUTX8(urshift(wordrg12, con(0x5))) != con(0x2) || (wordrg12 & con(0x8)) == con(0x0) || (wordrg12 & con(0x1)) != con(0x0))
    vw_08 = con(0xffffffff);
  SKW_CHANGE_CURRENT_MAP_TO(vw_04);
  return vw_08;
}

// like other 2fcf-routines arguments are stored as byte, but given as words
void SKW_2fcf_0234(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 wordrg5;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x8 vba_10[0x4];
  x8 vba_14[0x4];
  x16 vw_20;
  x16 vw_24;

  vw_0c = eaxw;
  vw_08 = edxw;
  vw_04 = ebxw;
  bool boolrg7 = false;
  DM2_ZERO_MEMORY(DOWNCAST(x8, vba_10), con(0x4));
  for (x16 vw_28 = con(0x0); vw_28 < con(0x4); vw_28++)
    if (SKW_GET_PLAYER_AT_POSITION(vw_28) >= con(0x0))
      vba_10[vw_28] = CUTX8(vw_28) + con(0x1);
  if (vw_04 >= con(0x0))
  {
    wordrg5 = vw_04;
    if (SKW_CALC_SQUARE_DISTANCE(vw_0c, wordrg5, ecxw, vw_08) == con(0x1))
    {
      x16 wordrg2 = SKW_CALC_VECTOR_DIR(vw_0c, wordrg5, ecxw, vw_08);
      x16 vw_28_1 = wordrg2;
      x16 wordrg3 = (wordrg2 + con(0x1)) & con(0x3);
      DM2_ZERO_MEMORY(DOWNCAST(x8, vba_14), con(0x4));
      vba_14[(wordrg2 + con(0x3)) & con(0x3)] = vba_10[wordrg2];
      if (vba_10[wordrg2] != con(0x0))
        boolrg7 = true;
      vba_14[(wordrg3 + con(0x1)) & con(0x3)] = vba_10[wordrg3];
      if (vba_10[wordrg3] != con(0x0))
        boolrg7 = true;
      if (vba_10[vw_28_1] == con(0x0))
        vba_10[vw_28_1] = vba_10[(vw_28_1 + con(0x3)) & con(0x3)];
      if (vba_10[wordrg3] == con(0x0))
        vba_10[wordrg3] = vba_10[(wordrg3 + con(0x1)) & con(0x3)];
    }
  }
  vw_20 = vw_0c;
  vw_24 = vw_08;
  // M_3A2EA:
  for(;;)
  {
    x16 wordrg100 = SKW_GET_TILE_RECORD_LINK(vw_20, vw_24);
    // M_3A2FD: co-label M_3A385:
    x16 wordrg61;
    for (;; wordrg100 = SKW_GET_NEXT_RECORD_LINK(wordrg61))
    {
      wordrg61 = wordrg100;
      if (wordrg61 == con(0xfffffffe))
      {
        if (!boolrg7)
          return;
        vw_20 = vw_04;
        vw_0c = vw_0c | ((vw_20 << con(0x8)) + con(0x100));
        vw_24 = ecxw;
        vw_08 = vw_08 | (vw_24 << con(0x8));
        SKW_COPY_MEMORY(DOWNCAST(x8, vba_14), con(0x4), DOWNCAST(x8, vba_10));
        boolrg7 = false;
      }
      else
      {
        if (urshift(wordrg61 & con(0x3c00), con(0xa)) != con(0xe))
          continue;
        wordrg5 = wordrg61;
        x16 wordrg42 = SKW_GET_ADDRESS_OF_RECORD(wordrg5)->u6.w;
        if (ddata.savegametimarrp[wordrg42].b_04 == con(0x1d))
          continue;
if (wordrg5 < 0)
  int stop=1;
        x16 wordrg123 = unsignedword(vba_10[wordrg5 >> con(0xe)]); // TODO BUG possible, value 0xf800 in wordrg5 found!
        // vw_28 = wordrg123;  what for?
        if (wordrg123 == con(0x0))
          continue;
        wordrg123--;
        if (!SKW_075f_0af9(con(0xfffffffd), vw_08, wordrg123, vw_0c, wordrg5))
          continue;
        SKW_075f_056c(wordrg5);
      }
      break;
    }
  }
}

void SKW_ARRANGE_DUNGEON(void)
{
  x16 wordrg5;
  c_record* recoptrrg1;
  c_record* recoptrrg2;
  c_record* recoptrrg3;
  c_record* recoptrrg4;
  c_record* recoptrrg6;
  c_aispec* aiptrrg1;
  x16* pw_00;
  x8* pb_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_1c;
  x8 vb_2c;

  // M_2686A:
  for (x16 vw_24 = con(0x0); vw_24 < unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)])); vw_24++)
  {
    vw_18 = ulrshift(ddata.v1e03c8[vw_24].w8, con(0x5), con(0xb));
    vw_1c = urshift(ddata.v1e03c8[vw_24].w8, con(0xb));
    pb_04 = *(ddata.v1e03cc[vw_24]);
    pw_00 = &ddata.v1e038c[ddata.v1e03d8[ddata.v1e03e4[vw_24]]];
    // M_2684F:
    for (x16 vw_28 = con(0x0); vw_28 <= vw_18; vw_28++)
    {
      wordrg5 = con(0x0);
      // M_26834:
      for (x16 vw_20 = con(0x0); vw_20 <= vw_1c; vw_20++)
      {
        vb_2c = *pb_04++;
        if ((vb_2c & con(0x10)) != con(0x0))
        {
          wordrg5 = *pw_00++;
          // M_263B9:
          for(;;)
          {
            bool skip = false;
            ui16 uwordrg10 = urshift(wordrg5 & con(0x3c00), con(0xa)) - con(0x1);
            if (uwordrg10 <= con(0x3))
            {
              switch (uwordrg10)
              {
                case 0:
                  recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg5);
                  recoptrrg6 = recoptrrg4;
                  SKW_CHANGE_CURRENT_MAP_TO(urshift(recoptrrg4->u4.w, con(0x8)));
                  vw_14 = SKW_GET_TILE_RECORD_LINK(recoptrrg4->u2.w & con(0x1f), ulrshift(recoptrrg4->u2.w, con(0x6), con(0xb)));
                  if (vw_14 != con(0xfffffffe))
                  {
                    if (urshift(vw_14 & con(0x3c00), con(0xa)) == con(0x1))
                    {
                      recoptrrg3 = SKW_GET_ADDRESS_OF_RECORD(vw_14);
                      if ((recoptrrg3->u2.w & con(0x1f)) == vw_28)
                      {
                        if (ulrshift(recoptrrg3->u2.w, con(0x6), con(0xb)) == vw_20)
                        {
                          if (urshift(recoptrrg3->u4.w, con(0x8)) == vw_24)
                          {
                            vw_08 = con(0x0);
                            bool boolrg7 = SKW_2066_1f37(vw_14, &vw_08, urshift(recoptrrg6->u4.w, con(0x8)));
                            boolrg7 |= SKW_2066_1f37(wordrg5, &vw_08, vw_24);
                            if (vw_08 != con(0x2))
                            {
                              if (vw_08 == con(0x0) && boolrg7)
                                skip = true;
                            }
                            else
                              recoptrrg6->w0 = recoptrrg3->w0 = SKW_2066_1ec9(SKW_GET_NEXT_RECORD_LINK(wordrg5), SKW_GET_NEXT_RECORD_LINK(vw_14));
                          }
                        }
                      }
                    }
                  }
                break;

                case 1:
                  recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg5);
                  if ((recoptrrg1->u2.w & con(0x6)) == con(0x2))
                  {
                    x16 wordrg3 = recoptrrg1->u2.w;
                    ui16 uwordrg2 = urshift(urshift(wordrg3, con(0x3)), con(0x8)) & con(0x1f);
                    if (uwordrg2 >= con(0x6))
                    {
                      if (uwordrg2 <= con(0x7))
                      {
                        x16 wordrg112 = urshift(wordrg5, con(0xe)); // unsigned-extension necessary! BUGFIX 4/2014
                        x16 wordrg411 = vw_20 + table1d2804[wordrg112];
                        wordrg3 = vw_28;
                        SKW_2066_1ea3(wordrg3 + table1d27fc[wordrg112], vw_24, wordrg411);
                      }
                      else if (uwordrg2 == con(0x8))
                        recoptrrg1->u2.w = wordrg3 | con(0x1);
                    }
                  }
                break;

                case 2:
                  {
                    recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(wordrg5);
                    recoptrrg4 = recoptrrg2;
                    x16 wordrg111 = recoptrrg2->u2.w & con(0x7f);
                    if (wordrg111 < con(0x2c))
                    {
                      if (wordrg111 >= con(0x1c))
                      {
                        if (wordrg111 <= con(0x1c))
                        {
                          x16 wordrg105 = vw_28 + table1d27fc[wordrg5 >> con(0xe)];
                          SKW_2066_1ea3(wordrg105, vw_24, vw_20 + table1d2804[wordrg105]);
                        }
                        else if (wordrg111 == con(0x27))
                        {
                          if ((recoptrrg4->u4.b.b0 & con(0x4)) != con(0x0))
                            recoptrrg4->u4.b.b0 |= con(0x1);
                        }
                      }
                    }
                    else if (wordrg111 <= con(0x2c))
                    {
                      if ((recoptrrg4->u4.b.b0 & con(0x4)) != con(0x0))
                        recoptrrg4->u4.b.b0 |= con(0x1);
                    }
                    else
                    {
                      if (wordrg111 < con(0x3f))
                      {
                        ;
                      }
                      else if (wordrg111 <= con(0x3f))
                        recoptrrg2->u4.b.b0 = (recoptrrg2->u4.b.b0 & con(0xfffffffa)) | con(0x4);
                      else if (wordrg111 == con(0x46))
                      {
                        SKW_CHANGE_CURRENT_MAP_TO(vw_24);
                        x16 wordrg416 = urshift(recoptrrg2->u6.w, con(0xb));
                        if ((((SKW_GET_TILE_VALUE(ulrshift(recoptrrg2->u6.w, con(0x5), con(0xb)), wordrg416) & con(0xff)) >> con(0x5)) & con(0xff)) == con(0x4))
                        {
                          x16 wordrg415 = urshift(recoptrrg2->u6.w, con(0xb));
                          recoptrrg1 = SKW_GET_ADDRESS_OF_TILE_RECORD(ulrshift(recoptrrg2->u6.w, con(0x5), con(0xb)), wordrg415);
                          x16 wordrg414 = ((ulrshift(recoptrrg2->u4.w, con(0xd), con(0xf))) & con(0x1)) << con(0xd);
                          recoptrrg1->u2.b.b1 &= con(0xffffffdf);
                          recoptrrg1->u2.w |= wordrg414;
                        }
                      }
                    }
                  }
                break;

                case 3:
                  recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg5);
                  recoptrrg3 = recoptrrg4;
                  aiptrrg1 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg4->u4.b.b0);
                  recoptrrg4->u6.w = aiptrrg1->w4;
                  if ((aiptrrg1->u0.b.b0 & con(0x1)) != con(0x0))
                  {
                    recoptrrg4->ua.w = con(0x0);
                    recoptrrg4->w8 = recoptrrg4->ua.w;
                    if ((recoptrrg4->ue.b.b0 & con(0xffffff80)) == con(0x0))
                    {
                      x16 wordrg22 = recoptrrg4->u2.w;
                      if (wordrg22 != con(0xfffffffe))
                      {
                        recoptrrg3->u2.w = (wordrg22 & con(0x3fff)) | (SKW_RAND02() << con(0xe));
                        for(;;)
                        {
                          if (wordrg22 == con(0xfffffffe))
                            break;
                          recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg22);
                          if (recoptrrg4->w0 != con(0xfffffffe))
                            recoptrrg4->w0 = (recoptrrg4->w0 & con(0x3fff)) | (SKW_RAND02() << con(0xe));
                          wordrg22 = SKW_GET_NEXT_RECORD_LINK(wordrg22);
                        }
                      }
                    }
                  }
                  else
                  {
                    recoptrrg4->ua.w = con(0x0);
                    recoptrrg4->uc.b.b0 &= con(0xffffffe0);
                    x16 wordrg21 = recoptrrg4->uc.w | (vw_28 & con(0x1f));
                    recoptrrg4->uc.w = (wordrg21 & con(0xfffffc1f)) | ((vw_20 & con(0x1f)) << con(0x5));
                    recoptrrg4->uc.b.b1 &= con(0x3);
                    recoptrrg4->uc.w |= (vw_24 & con(0x3f)) << con(0xa);
                  }
                break;

                default: throw(THROW_DMABORT);
              }
            }
            if (skip)
              break;
            wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
            if (wordrg5 == con(0xfffffffe))
              break;
          }
        }
        if ((ubrshift(vb_2c, con(0x5)) & con(0xff)) == con(0x2))
        {
          if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x6a), CUTX8(ulrshift(ddata.v1e03c8[vw_24].we, con(0x8), con(0xc)))) == con(0x0))
          {
            vw_10 = vw_28;
            vw_0c = vw_20;
            SKW_2066_1ea3(vw_10, SKW_LOCATE_OTHER_LEVEL(vw_24, &vw_10, &vw_0c, con(0x1), NULL), vw_0c);
          }
        }
      }
    }
  }
}

void SKW_LOAD_PROJECTILE_TO_HAND(x16 eaxw, x16 edxw)
{
  x16 wordrg5;
  x16* wptrrg7;
  c_hero* heroptrrg3;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x16 help; // added

  heroptrrg3 = &ddata.hero[eaxw];
  help = signedlong(edxw);
  heroptrrg3->b2a[help] = con(0x0);
  if (heroptrrg3->w36 == con(0x0) || edxw >= con(0x2))
    return;
  vw_04 = edxw ^ con(0x1);
  vw_08 = edxw;
  x16 wordrg2 = unsignedword(heroptrrg3->b20[help]);
  vw_0c = wordrg2;
  heroptrrg3->b20[help] = con(0xffffffff);
  heroptrrg3->b42[help] = con(0x0);
  help = con(0x18);
  if (wordrg2 != con(0x20))
  {
    if (wordrg2 != con(0x2a) || (heroptrrg3->warrc3[edxw] != con(0xffffffff))) // BUGFIX 3/2014 no 'help' here, BUGFIX 4/2014 ...but edxw
      return;
    wordrg5 = con(0xc);
    if (!SKW_2759_0e93(eaxw, vw_0c, heroptrrg3->warrc3[help / 2])) // BUGFIX 3/2014
    {
      wordrg5 = heroptrrg3->warrc3[0xc];
      x16 wordrg412 = wordrg5;
      if (!SKW_IS_CONTAINER_CHEST(wordrg412))
        goto M_exit2;
      wptrrg7 = &SKW_GET_ADDRESS_OF_RECORD(wordrg412)->u2.w;
      wordrg5 = *wptrrg7;
      x16 wordrg61;
      for(;;)
      {
        if (wordrg5 == con(0xfffffffe))
          goto M_exit2;
        wordrg61 = wordrg5;
        if (SKW_2759_0e93(eaxw, vw_0c, wordrg61))
          break;
        wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg61);
      }
      SKW_CUT_RECORD_FROM(wordrg61, con(0xffffffff), con(0x0), wptrrg7);
    }
    else
      wordrg5 = SKW_REMOVE_POSSESSION(eaxw, wordrg5);
    SKW_EQUIP_ITEM_TO_HAND(eaxw, vw_08, wordrg5);
    return;
  }
  if (heroptrrg3->warrc3[vw_04] != con(0xffffffff))
    return;
  wordrg5 = con(0xc);
  if (!SKW_IS_MISSILE_VALID_TO_LAUNCHER(eaxw, heroptrrg3->warrc3[help / 2], edxw)) // BUGFIX 4/2014
  {
    wordrg5 = heroptrrg3->warrc3[0xc];
    x16 wordrg411 = unsignedlong(wordrg5);
    if (!SKW_IS_CONTAINER_CHEST(wordrg411))
      goto M_exit1;
    wptrrg7 = &SKW_GET_ADDRESS_OF_RECORD(wordrg411)->u2.w;
    wordrg5 = *wptrrg7;
    x16 wordrg62;
    for(;;)
    {
      if (wordrg5 == con(0xfffffffe))
        goto M_exit1;
      wordrg62 = wordrg5;
      if (SKW_IS_MISSILE_VALID_TO_LAUNCHER(eaxw, wordrg62, vw_08))
        break;
      wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg62);
    }
    SKW_CUT_RECORD_FROM(wordrg62, con(0xffffffff), con(0x0), wptrrg7);
    SKW_EQUIP_ITEM_TO_HAND(eaxw, vw_04, wordrg5);
  }
  else
  {
    wordrg5 = SKW_REMOVE_POSSESSION(eaxw, wordrg5);
    SKW_EQUIP_ITEM_TO_HAND(eaxw, vw_04, wordrg5);
  }
  return;

M_exit1: // M_30C90:
  wordrg5 = con(0x7);
  for(;;)
  {
    if (wordrg5 > con(0x9))
      return;
    if (SKW_IS_MISSILE_VALID_TO_LAUNCHER(eaxw, heroptrrg3->warrc3[wordrg5], vw_08))
      break;
    wordrg5++;
  }
  wordrg5 = SKW_REMOVE_POSSESSION(eaxw, wordrg5);
  SKW_EQUIP_ITEM_TO_HAND(eaxw, vw_04, wordrg5);
  return;

M_exit2: // M_30D90:
  wordrg5 = con(0x7);
  while (wordrg5 <= con(0x9))
  {
    if (SKW_2759_0e93(eaxw, vw_0c, heroptrrg3->warrc3[wordrg5]))
    {
      wordrg5 = SKW_REMOVE_POSSESSION(eaxw, wordrg5);
      SKW_EQUIP_ITEM_TO_HAND(eaxw, vw_08, wordrg5);
      return;
    }
    wordrg5++;
  }
  wordrg5 = SKW_REMOVE_POSSESSION(eaxw, con(0xc));
  if (wordrg5 != con(0xffffffff))
    SKW_EQUIP_ITEM_TO_HAND(eaxw, vw_08, wordrg5);
}

x16 SKW_14cd_0067(const s_wpm* eaxps)
{
  const s_wpm* sptrrg5;
  c_record* recoptrrg7;
  s_d556* pd556_00;
  x16 vw_04;
  x16 vw_08;

  sptrrg5 = eaxps;
  pd556_00 = ddata.s350.v1e0556;
  recoptrrg7 = ddata.s350.v1e054e;
  x16 wordrg2 = recoptrrg7->ua.w;
  x16 wordrg32 = SKW_RAND();
  x16 wordrg181;
  if (ddata.s350.v1e0571 != ddata.v1e08d6)
  {
    if (pd556_00->u.v.b12 == con(0xffffffff))
      wordrg181 = con(0x30);
    else
      wordrg181 = con(0x70);
    if ((wordrg181 & wordrg32) == con(0x0))
    {
      wordrg2 |= con(0x8000);
      wordrg2 &= con(0xbfff);
    }
  }
  else
    wordrg2 &= con(0x7fff);
  if ((wordrg2 & con(0x8000)) == con(0x0))
  {
    x16 wordrg147;
    if ((wordrg2 & con(0x8)) == con(0x0))
      wordrg147 = con(0xf80);
    else
      wordrg147 = con(0x380);
    if ((wordrg147 & wordrg32) == con(0x0))
      wordrg2 ^= con(0x4000);
  }
  x16 wordrg6 = con(0x10) - (urshift(ddata.s350.v1e0552->w16, con(0x4)) & con(0xf));
  if ((wordrg32 % wordrg6) == con(0x0))
    wordrg2 &= con(0xffffffdf);
  if ((table1d607e[ddata.s350.v1e0584].u.b[1] & con(0x4)) == con(0x0))
  {
    if ((wordrg32 & con(0x38)) == con(0x0))
      wordrg2 &= con(0xdfff);
  }
  else
    wordrg2 |= con(0x2000);
  if ((wordrg32 & con(0x3000)) == con(0x0))
    wordrg2 &= con(0xffffffef);
  if ((wordrg32 & con(0x3)) == con(0x0))
    wordrg2 &= con(0xffffffbf);
  wordrg32 &= con(0x8008);
  if (wordrg32 == con(0x0))
    wordrg2 &= con(0xefff);
  x16 wordrg62 = con(0x2);
  if ((table1d607e[ddata.s350.v1e0584].u.b[0] & con(0x2)) == con(0x0))
    wordrg62 *= 2 * ((ddata.s350.v1e054c & con(0x3)) + con(0x1)) - con(0x1);
  if (SKW_RAND16(wordrg62) == con(0x0))
  {
    wordrg62 = DM2_MAX(con(0x1), ddata.s350.v1e0552->w4);
    if (UI32CAST(100 * recoptrrg7->u6.w / wordrg62) >= UI32CAST(con(0x19)))
      wordrg2 &= con(0xfffffff7);
    else
      wordrg2 |= con(0x8);
  }
  recoptrrg7->ua.w = wordrg2 & con(0xfffffffd);
  vw_08 = con(0xffffffff);
  x16 wordrg63 = con(0xffffffff);
  x16 wordrg3 = con(0x0);
  // M_15C9F: co-label M_15C9B
  x16 wordrg44;
  for (;; wordrg3++, sptrrg5++)
  {
    wordrg44 = sptrrg5->w0;
    if (wordrg44 != con(0x0))
    {
      vw_04 = wordrg44 & con(0xc000);
      if (vw_04 != con(0xffffc000))
      {
        if (vw_08 == con(0xffffffff))
        {
          if ((wordrg2 & wordrg44) != con(0x0))
            vw_08 = wordrg3;
        }
        if (wordrg63 == con(0xffffffff))
        {
          if (wordrg44 == (wordrg2 & wordrg44))
            wordrg63 = wordrg3;
        }
        if (wordrg44 != wordrg2)
          continue;
      }
      else
      {
        vw_04 = wordrg44 & con(0x3fff);
        if (SKW_GET_GLOB_VAR(vw_04) == con(0x0))
          continue;
      }
    }
    break;
  }
  if (wordrg44 == con(0x0) && (wordrg63 != con(0xffffffff) || vw_08 != con(0xffffffff)))
  {
    if (wordrg63 != con(0xffffffff))
      wordrg3 = wordrg63;
    else
      wordrg3 = vw_08;
  }
  if (wordrg3 != signedword(pd556_00->u.v.barr16[con(0x0)]))
  {
    ddata.s350.v1e07d8.b1 = con(0x0);
    pd556_00->u.v.b12 = con(0xffffffff);
    pd556_00->u.v.b13 = con(0x0);
    ddata.s350.v1e07d8.b3 = con(0xffffffff);
  }
  pd556_00->u.v.barr16[con(0x0)] = CUTX8(wordrg3);
  return signedword(CUTX8(wordrg3));
}

bool SKW_CREATURE_ATTACKS_PARTY(void)
{
  x16 wordrg5;
  c_hero* heroptrrg5;
  c_aispec* aiptrrg5;
  x8 vba_00[0x4];
  s_d556* pd556_04;
  x16 vw_0c;
  x16 vw_1c;

  pd556_04 = ddata.s350.v1e0556;
  aiptrrg5 = ddata.s350.v1e0552;
  x16 vw_14 = ddata.v1e08a6;
  x16 vw_10 = ddata.v1e08a4;
  vw_0c = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  if (pd556_04->u.v.b20 == con(0x6))
    vw_0c = (vw_0c + con(0x2)) & con(0x3);
  bool boolrg7;
  if (unsignedword(ddata.s350.v1e0562.u.b.b_06) == vw_14 && (unsignedword(ddata.s350.v1e0562.u.b.b_07) == vw_10))
    boolrg7 = true;
  else
    boolrg7 = false;
  if (!boolrg7)
  {
    if (DM2_ABS(unsignedword(ddata.s350.v1e0562.u.b.b_07) - vw_10) + DM2_ABS(unsignedword(ddata.s350.v1e0562.u.b.b_06) - vw_14) > con(0x1))
      return true;
    if (SKW_CALC_VECTOR_DIR(unsignedword(ddata.s350.v1e0562.u.b.b_06), vw_14, vw_10, unsignedword(ddata.s350.v1e0562.u.b.b_07)) != vw_0c && (aiptrrg5->u0.b.b0 & con(0x4)) == con(0x0))
      return true;
  }
  if (ddata.v1d3248 != ddata.v1e08d6 || vw_14 != ddata.v1e08d8 || vw_10 != ddata.v1e08d4)
  {
    if ((((SKW_GET_TILE_VALUE(vw_14, vw_10) & con(0xff)) >> con(0x5)) & con(0xff)) != con(0x4))
      if (SKW_ATTACK_DOOR(vw_14, SKW_RAND16(unsignedword(aiptrrg5->barr06[con(0x0)]) + unsignedword(aiptrrg5->barr06[con(0x0)]) / 2), false, vw_10, con(0x0)))
        return true;
    if (boolrg7 || SKW_CREATURE_ATTACKS_CREATURE(vw_14, vw_10) < con(0x0))
      return true;
  }
  else
  {
    ddata.longv1d26a4 = ddata.longmallocx;
    bool vbool_08 = false;
    x8 byterg7 = CUTX8(aiptrrg5->u0.w & con(0x10));
    x16 vw_18 = con(0x0);
    x16 wordrg11 = con(0x0);
    x16 wordrg47 = ddata.savegamew2;
    while (wordrg11 < wordrg47)
    {
      if (ddata.hero[wordrg11].w36 != con(0x0))
      {
        vba_00[vw_18] = CUTX8(wordrg11);
        vw_18++;
      }
      wordrg11++;
    }
    if (vw_18 == con(0x0))
      return true;
    if ((aiptrrg5->u0.b.b0 & con(0x8)) == con(0x0))
    {
      if ((aiptrrg5->barr06[con(0x3)] & con(0x20)) == con(0x0))
        vw_1c = con(0x1);
      else
        vw_1c = con(0x2);
    }
    else
    {
      if (byterg7 == con(0x0))
        vw_1c = wordrg47;
      else
        vw_1c = SKW_RAND16(vw_18) + con(0x1);
    }
    if (pd556_04->u.v.b1c == con(0x4))
    {
      x16 wordrg197 = SKW_2c1d_028c(unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0xff), unsignedword(ddata.s350.v1e0562.u.b.b_07));
      if (wordrg197 != con(0xffffffff))
        pd556_04->u.v.b1c = ddata.hero[wordrg197].b1d;
    }
    x16 wordrg6 = unsignedword(pd556_04->u.v.b1c);
    vw_1c = DM2_MIN(vw_1c, ddata.savegamew2);
    for(;;)
    {
      wordrg5 = vw_1c - con(0x1);
      vw_1c = wordrg5;
      if (wordrg5 == con(0xffffffff))
      {
        if (!vbool_08)
          return true;
        break;
      }
      if (byterg7 == con(0x0))
      {
        wordrg5 = SKW_GET_PLAYER_AT_POSITION(wordrg6);
        if (((SKW_CALC_VECTOR_DIR(vw_14, unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07), vw_10) + wordrg6) & con(0x1)) == con(0x0))
          wordrg6++;
        else
          wordrg6--;
        wordrg6 &= con(0x3);
        if (wordrg5 == con(0xffffffff))
          wordrg5 = SKW_2c1d_028c(unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0xff), unsignedword(ddata.s350.v1e0562.u.b.b_07));
        if (wordrg5 == con(0xffffffff))
          continue;
      }
      else
      {
        wordrg5 = SKW_RAND16(vw_18);
        if (vba_00[wordrg5] < con(0x0))
        {
          x16 wordrg17 = con(0x0);
          while (wordrg17 < vw_18)
          {
            wordrg5++;
            if (wordrg5 >= vw_18)
              wordrg5 = con(0x0);
            if (vba_00[wordrg5] >= con(0x0))
              break;
            wordrg17++;
          }
        }
        x16 wordrg103 = wordrg5;
        wordrg5 = signedword(vba_00[wordrg5]);
        vba_00[wordrg103] = con(0xffffffff);
      }
      vbool_08 = true;
      x16 wordrg22 = SKW_CREATURE_ATTACKS_PLAYER(ddata.s350.v1e054e, wordrg5) + con(0x1);
      heroptrrg5 = &ddata.hero[wordrg5];
      if (wordrg22 > unsignedword(heroptrrg5->t22[0x7]))
      {
        heroptrrg5->t22[0x7] = CUTX8(wordrg22);
        heroptrrg5->t22[0x6] = CUTX8((SKW_CALC_VECTOR_DIR(unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.v1e08d8, ddata.v1e08d4, unsignedword(ddata.s350.v1e0562.u.b.b_07)) + con(0x2)) & con(0x3));
      }
    }
  }
  if (pd556_04->u.v.b1a != con(0x26))
    return false;
  if (SKW_GET_CREATURE_WEIGHT(ddata.s350.v1e054c) <= con(0x64) || (CUTX16(SKW_RAND() & con(0xf)) == con(0x0)))
    if (SKW_RAND02() == con(0x0))
      return false;
  SKW_12b4_0d75(vw_14, vw_0c, con(0xfe), vw_10);
  return false;
}

bool SKW_19f0_2723(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw)
{
  x16 wordrg5;
  c_record* recoptrrg4;
  bool flag;
  x16 vw_00;

  wordrg5 = edxw;
  vw_00 = ebxw;
  if (eaxw == con(0xfffffffe) || eaxw == con(0xffffffff))
    return false;
  recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(eaxw);
  x16 wordrg18 = recoptrrg4->u2.w & con(0x7f);
  if (wordrg18 < con(0x17))
  {
    if (wordrg18 < con(0x2))
    {
      if (wordrg18 != con(0x1))
        return false;
      return wordrg5 == con(0x0);
    }
    if (wordrg18 <= con(0x2))
    {
      if (wordrg5 != con(0x0))
        return false;
      return vw_00 != con(0xffffffff);
    }
    if (wordrg18 != con(0x3))
      return false;
    flag = wordrg5 == con(0x0);
    if (!flag)
      return false;
  }
  else if (wordrg18 <= con(0x17))
  {
    if (wordrg5 != con(0x0))
      return false;
    return ecxw != (((recoptrrg4->u4.b.b0 & con(0x4)) == con(0x0)) ? 1 : 0);
  }
  else if (wordrg18 < con(0x1a))
  {
    flag = wordrg18 == con(0x18);
    if (!flag)
      return false;
    return wordrg5 == con(0x0);
  }
  else if (wordrg18 <= con(0x1a))
  {
    if ((recoptrrg4->u4.b.b0 & con(0x4)) == con(0x0))
    {
      if (wordrg5 != con(0x1))
        return false;
    }
    else
    {
      flag = wordrg5 == con(0x2);
      if (!flag)
        return false;
    }
  }
  else if (wordrg18 <= con(0x1b))
  {
    if ((wordrg5 != con(0x1)) || ((recoptrrg4->u2.w & con(0xffffff80)) == con(0x0)))
      return false;
  }
  else
  {
    flag = wordrg18 == con(0x4a);
    if (!flag)
      return false;
    return wordrg5 == con(0x0);
  }
  return SKW_1c9a_0006(eaxw, vw_00) != con(0x0);
}

x16 SKW_FIND_TILE_ACTUATOR(x16 eaxw, x8 ebxb, x16 ecxw, x16 edxw)
{
  bool boolrg5;

  x16 wordrg4 = SKW_GET_TILE_RECORD_LINK(eaxw, edxw);
  boolrg5 = false;
  // M_18AE6: co-label M_18B3F
  for (;; wordrg4 = SKW_GET_NEXT_RECORD_LINK(wordrg4))
  {
    if (wordrg4 == con(0xfffffffe))
      break;
    x16 wordrg14 = urshift(wordrg4 & con(0x3c00), con(0xa));
    if (wordrg14 > con(0x3))
      break;
    if (wordrg14 != con(0x3) || ebxb != con(0xffffffff))
      if (urshift(wordrg4, con(0xe)) != unsignedword(ebxb))
        continue;
    boolrg5 = (SKW_GET_ADDRESS_OF_RECORD(wordrg4)->u2.w & con(0x7f)) == ecxw;
    if (boolrg5)
      break;
  }
  if (boolrg5)
    return wordrg4;
  return con(0xffff);
}

// was SKW_2759_0644
void SKW_UPDATE_RIGHT_PANEL(bool eaxbool)
{
  x8 byterg1h;
  x8 byterg2h;
  x8 byterg4h;
  x16 wordrg5;
  bool flag;
  c_hero* heroptrrg5;
  x8 vba_04[0x4];

  bool vbool_08 = false;
  bool vbool_14 = false;
  bool boolrg7 = false;
  if (ddata.v1e0288 != con(0x0))
    return;
  if (ddata.savegamew2 != con(0x0))
  {
    if (eaxbool)
    {
      for (x16 vw_1c = con(0x0); vw_1c < ddata.savegamew2; vw_1c++)
      {
        x16 wordrg32 = con(0x0);
        while (wordrg32 <= con(0x2))
        {
          wordrg5 = vw_1c;
          if (ddata.hero[wordrg5].b2a[wordrg32] != con(0x0))
          {
            byterg4h = ddata.hero[wordrg5].b2a[wordrg32];
            flag = --byterg4h != con(0x0);
            ddata.hero[wordrg5].b2a[wordrg32] = byterg4h;
            if (!flag)
              SKW_LOAD_PROJECTILE_TO_HAND(wordrg5, wordrg32);
          }
          wordrg32++;
        }
      }
      if (ddata.v1d67bc == con(0x3))
      {
        heroptrrg5 = &ddata.hero[ddata.v1e0b74 - con(0x1)];
        if ((ddata.v1e0b62 & con(0x200)) == con(0x0))
        {
          if (heroptrrg5->w3e != con(0x0))
          {
            ddata.v1e0b6c = con(0x1);
            ddata.v1e0b62 = con(0x0);
          }
        }
        else
        {
          x16 wordrg6 = ddata.v1e0b99;
          flag = --wordrg6 != con(0x0);
          ddata.v1e0b99 = wordrg6;
          if (!flag)
          {
            if (heroptrrg5->w3e == con(0x0))
            {
              ddata.v1e0b6c = con(0x1);
              ddata.v1e0b62 = wordrg6;
            }
            else
            {
              heroptrrg5->w3e--;
              heroptrrg5->u32.b.b1 |= con(0x8);
              ddata.v1e0b99 = con(0x19) / ddata.v1e0b4e;
            }
          }
        }
      }
    }
    if (ddata.v1e0b7c == con(0x0))
    {
      if (ddata.v1e0b74 > con(0x0))
      {
        x16 vw_1c_1 = ddata.v1e0b74 - con(0x1);
        if (ddata.v1e0b76 >= con(0x0) && ddata.v1e0b76 != con(0x2))
        {
          x16 wordrg23 = signedlong(vw_1c_1);
          if (ddata.v1d67c2.w0[wordrg23 + con(0x1)][ddata.v1e0b76] != ddata.hero[wordrg23].warrc3[ddata.v1e0b76])
            SKW_DISPLAY_RIGHT_PANEL_SQUAD_HANDS();
        }
      }
      if (ddata.v1e0b74 >= con(0x0))
      {
        byterg2h = CUTX8(ddata.v1e0258);
        for (x16 vw_1c_2 = con(0x0); vw_1c_2 < ddata.savegamew2; vw_1c_2++)
        {
          heroptrrg5 = &ddata.hero[vw_1c_2];
          vba_04[vw_1c_2] = con(0x0);
          byterg1h = (heroptrrg5->b1c + con(0x4) - byterg2h) & con(0x3);
          x8 byterg1 = (heroptrrg5->b1d + con(0x4) - byterg2h) & con(0x3);
          if (heroptrrg5->w36 == con(0x0) || (ddata.v1e00b8 == signedword(byterg1 + con(0x1))))
            byterg1 = con(0xffffffff);
          if ((byterg1 != ddata.v1d67c2.b0[vw_1c_2]) || (byterg1h != v1d67be[vw_1c_2]))
          {
            vbool_14 = true;
            boolrg7 = true;
            if (byterg1 != con(0xffffffff))
              ddata.v1e0b30 = true;
            ddata.v1d67c2.b0[vw_1c_2] = byterg1;
            v1d67be[vw_1c_2] = byterg1h;
          }
        }
        if (ddata.v1d67d6 != ddata.v1d6c02 || ddata.savegames1.b4 != con(0x0) || (!ddata.v1e0b2c) != (ddata.savegames1.b2 == con(0x0)))
        {
          vbool_14 = true;
          ddata.v1d67d6 = ddata.v1d6c02;
          ddata.v1e0b2c = ddata.savegames1.b2 != con(0x0);
        }
      }
      bool doit = false; // added
      if (!ddata.v1e0b30)
        doit = true;
      else if (ddata.v1e0b6c <= con(0x1))
      {
        SKW_29ee_00a3(true);
        ddata.v1e0b30 = false;
        vbool_08 = true;
        doit = true;
      }
      if (doit)
      {
        if (ddata.v1e0b74 == con(0x0))
        {
          ddata.v1d67bc = ddata.v1e0b74;
          if (vbool_08 || boolrg7)
            ddata.v1d694a = con(0xffffffff);
          for (x16 vw_1c_3 = con(0x0); vw_1c_3 < ddata.savegamew2; vw_1c_3++)
          {
            heroptrrg5 = &ddata.hero[vw_1c_3];
            if (heroptrrg5->w36 != con(0x0) || SKW_GET_PLAYER_AT_POSITION(unsignedword(heroptrrg5->b1d)) < con(0x0))
            {
              bool vbool_10 = vba_04[vw_1c_3] != con(0x0); // TODO vba_04 a boolarray?
              if (heroptrrg5->w36 <= con(0x0) != ddata.v1e0b1c[vw_1c_3])
              {
                ddata.v1e0b1c[vw_1c_3] = heroptrrg5->w36 > con(0x0);
                vbool_10 = true;
                ddata.v1d694a = con(0xffffffff);
              }
              bool vbool_18 = (DM2_ABS(ddata.v1e0b54) - con(0x1)) == vw_1c_3;
              x16 wordrg3 = con(0x0);
              while (wordrg3 <= con(0x1))
              {
                bool boolrg61 = false;
                bool boolrg4 = false;
                if (vbool_18 && ddata.v1e0b52 == wordrg3)
                {
                  if (ddata.v1e0b54 > con(0x0))
                    boolrg61 = true;
                  boolrg4 = true;
                }
                x8 byterg21 = (heroptrrg5->b2a[wordrg3] != con(0x0)) ? 1 : 0;
                if (byterg21 != ddata.v1e0b34[vw_1c_3][wordrg3])
                {
                  ddata.v1e0b34[vw_1c_3][wordrg3] = byterg21;
                  boolrg4 = true;
                }
                if (ddata.v1d67c2.w0[vw_1c_3 + con(0x1)][wordrg3] != heroptrrg5->warrc3[wordrg3] || vbool_08 || vbool_10)
                {
                  ddata.v1d67c2.w0[vw_1c_3 + con(0x1)][wordrg3] = heroptrrg5->warrc3[wordrg3];
                  boolrg4 = true;
                }
                if (vbool_08 || vbool_10 || boolrg4)
                  SKW_DRAW_HAND_ACTION_ICONS(vw_1c_3, boolrg61 ? 1 : 0, wordrg3);
                wordrg3++;
              }
              x16 boolrg6 = false;
              if (vbool_18 && ddata.v1e0b52 == con(0x2))
              {
                if (ddata.v1e0b54 > con(0x0))
                  boolrg6 = true;
                vbool_10 = true;
              }
              x8 byterg2 = (heroptrrg5->b2a[con(0x2)] != con(0x0)) ? 1 : 0;
              if (byterg2 != ddata.v1e0b34[vw_1c_3][2])
              {
                ddata.v1e0b34[vw_1c_3][2] = byterg2;
                vbool_10 = true;
              }
              if (vbool_08 || vbool_10 || (ddata.v1d67d7 != ddata.mouse_unk0e && (ddata.v1d67d7 == vw_1c_3 || ddata.mouse_unk0e == vw_1c_3)))
                SKW_DRAW_SQUAD_SPELL_AND_LEADER_ICON(vw_1c_3, boolrg6);
              if ((ddata.hero[vw_1c_3].w103 != con(0x0)) || ddata.v1d6948 != con(0x0))
                vbool_14 = true;
              x16 wordrg12 = con(0x1) << CUTX8(vw_1c_3);
              if (ddata.hero[vw_1c_3].w103 == con(0x0))
                ddata.v1d6948 &= ~wordrg12;
              else
                ddata.v1d6948 |= wordrg12;
            }
          }
          if (ddata.v1e0b54 < con(0x0))
            ddata.v1e0b54 = con(0x0);
          ddata.v1e0b54 = -ddata.v1e0b54;
          if (vbool_08 || vbool_14)
            SKW_29ee_0396();
        }
        ddata.v1d67d7 = ddata.mouse_unk0e;
        bool skip = false;
        if (ddata.v1e0b74 <= con(0x0) || ((ddata.v1e0b6c == con(0x0) && !vbool_08 && !vbool_14 && ddata.v1d67bc != con(0x3)) || !eaxbool))
        {
          if (ddata.v1e0b74 > con(0x0) && ddata.v1d67bc == con(0x5))
            if (eaxbool)
            {
              SKW_29ee_00a3(false);
              SKW_DRAW_CONTAINER_PANEL(ddata.hero[ddata.v1e0b74 - con(0x1)].warrc3[ddata.v1e0b76], false);
            }
        }
        else
        {
          if (ddata.v1e0b6c > con(0x1))
          {
            ddata.v1e0b6c = ddata.v1e0b6c - con(0x1);
            skip = true;
          }
          else
          {
            if (ddata.v1e0b62 != con(0x0) && (ddata.v1e0b6c == con(0x0) && !vbool_08))
              SKW_29ee_00a3(false);
            else
            {
              SKW_29ee_00a3(true);
              SKW_DRAW_PLAYER_NAME_AT_CMDSLOT();
              ddata.v1e0b62 &= con(0xfffffbff);
            }
            // M_3064A:
            if (ddata.v1e0b76 != con(0x2))
            {
              x16 vw_1c_4 = ddata.v1e0b74 - con(0x1);
              heroptrrg5 = &ddata.hero[vw_1c_4];
              x16 wordrg33 = heroptrrg5->warrc3[ddata.v1e0b76];
              if (!SKW_IS_CONTAINER_MAP(wordrg33) || ddata.v1e0b62 != con(0x0))
              {
                wordrg5 = wordrg33;
                if (!SKW_IS_CONTAINER_MONEYBOX(wordrg5))
                {
                  if (SKW_IS_CONTAINER_CHEST(wordrg5) && ddata.v1d67bc != con(0x5))
                  {
                    SKW__CHECK_ROOM_FOR_CONTAINER(wordrg5, SKW_GET_ADDRESS_OF_RECORD(wordrg5));
                    ddata.v1d67bc = con(0x5);
                  }
                }
                else
                  ddata.v1d67bc = con(0x4);
              }
              else
              {
                ddata.v1e0b4e = con(0x1);
                ddata.v1e0b99 = con(0x19);
                x16 wordrg2 = heroptrrg5->w3e;
                if (wordrg2 == con(0x0))
                  ddata.v1e0b62 = con(0xffff8000);
                else
                {
                  heroptrrg5->w3e = wordrg2 - con(0x1);
                  heroptrrg5->u32.b.b1 |= con(0x8);
                  ddata.v1e0b62 = con(0xffff8200);
                }
                ddata.v1d67bc = con(0x3);
              }
              if (ddata.v1d67bc != con(0x4))
              {
                if (ddata.v1d67bc != con(0x5))
                {
                  if (!SKW_IS_ITEM_HAND_ACTIVABLE(vw_1c_4, ddata.v1e0b76, wordrg33) || ddata.v1d67bc == con(0x3))
                  {
                    if (ddata.v1d67bc != con(0x3))
                    {
                      ddata.v1e0b74 = con(0x0);
                      ddata.v1d67bc = con(0x0);
                    }
                    else
                    {
                      if ((ddata.v1e0b62 & con(0x400)) == con(0x0))
                        ddata.v1d694a = con(0xffffffff);
                      SKW_DRAW_MAJIC_MAP(wordrg33);
                    }
                  }
                  else
                  {
                    ddata.v1d67bc = con(0x1);
                    if (ddata.v1d694a != con(0x1))
                    {
                      R_107B0();
                      ddata.v1d694a = ddata.v1d67bc;
                    }
                    SKW_29ee_0b2b();
                  }
                }
                else
                  SKW_DRAW_CONTAINER_PANEL(wordrg33, true);
              }
              else
                SKW_DRAW_MONEYBOX(wordrg33);
            }
            else
            {
              ddata.v1d67bc = ddata.v1e0b76;
              SKW_DRAW_SPELL_PANEL();
            }
            ddata.v1e0b6c = con(0x0);
          }
        }
        if (!skip)
        {
          // M_3087E:
          if (((ddata.v1e0b74 > con(0x0)) && table1d67d9[ddata.v1d67bc] != con(0x0)) && (ddata.hero[ddata.v1e0b74 - con(0x1)].w103 != con(0x0) || ddata.v1d6948 != con(0x0)))
          {
            SKW_DRAW_PLAYER_ATTACK_DIR();
            x32 longrg43 = 263 * (signedlong(ddata.v1e0b74) - con(0x1));
            x16 wordrg13 = con(0x1) << CUTX8(ddata.v1e0b74 - con(0x1));
            if (ddata.hero[longrg43 / 263].w103 == con(0x0))
              ddata.v1d6948 &= ~wordrg13;
            else
              ddata.v1d6948 |= wordrg13;
          }
        }
      }
      else
        ddata.v1e0b6c--;
    }
    else
    {
      SKW_SHOW_ATTACK_RESULT(ddata.v1e0b7c);
      ddata.v1e0b30 = true;
      ddata.v1e0b7c = con(0x0);
      ddata.v1d67bc = con(0x6);
    }
  }
  else
  {
    if ((ddata.v1e0b30) || (ddata.v1e0b6c != con(0x0)))
    {
      ddata.v1e0b6c = con(0x0);
      ddata.v1e0b30 = false;
      SKW_29ee_00a3(true);
    }
    ddata.v1d67bc = con(0xffffffff);
  }
  if (ddata.v1d694c.s_00.w_00 != con(0xffffffff))
    SKW_0b36_0cbe(&ddata.v1d694c, true);
  if (ddata.v1d67bc != ddata.v1d694a)
  {
    R_107B0();
    ddata.v1d694a = ddata.v1d67bc;
  }
}

void R_39796(c_hero* eaxphero)
{
  bool boolrg5;
  t_text* tptrrg7;
  t_text* tptrrg1;
  c_hero* phero_00;
  s_2ndname vs_04;
  s_1stname vs_18;
  x16 vw_20; // x0 rectB
  x16 vw_24;
  x16 vw_28; // y0 rectA
  x16 vw_2c; // x0 rectA
  x16 vw_30;
  x16 vw_34; // y0 rectB

  phero_00 = eaxphero;
  ddata.v1d66fc = con(0x8);
  SKW_COPY_MEMORY(DOWNCAST(t_text, phero_00->t00), con(0x8), DOWNCAST(s_1stname, &vs_18));
  SKW_COPY_MEMORY(DOWNCAST(t_text, &phero_00->t00[con(0x8)]), con(0x14), DOWNCAST(s_2ndname, &vs_04));
  SKW_QUERY_TOPLEFT_OF_RECT(con(0x229), &vw_2c, &vw_28);
  SKW_QUERY_TOPLEFT_OF_RECT(con(0x273), &vw_20, &vw_34);
  SKW_1031_0675(con(0x9));
  ddata.v1e023c = true;
  SKW_38c8_0002();
  // M_39A39:
  for(;;)
  {
    boolrg5 = true;
    vw_24 = con(0x7);
    x16 wordrg6 = SKW_SK_STRLEN(phero_00->t00);
    x16 vw_38 = vw_2c + wordrg6 * C_strmetrics.charwidth;
    x16 wordrg100 = vw_28;
    bool brk1;
    bool brk2;
    // M_39A72:
    for(;;)
    {
      vw_30 = wordrg100;
      // M_3998A:
      for(;;)
      {
        SKW_DRAW_STATIC_PIC(con(0x7), con(0x14), con(0x267), con(0x0), con(0xffffffff));
        SKW_DRAW_VP_RC_STR(con(0x229), phero_00->t00, unsignedword(ddata.paletteptr1[con(0xb)]));
        SKW_DRAW_VP_RC_STR(con(0x273), &phero_00->t00[con(0x8)], unsignedword(ddata.paletteptr1[con(0xb)]));
        SKW_DRAW_VP_STR(vw_38, unsignedword(ddata.paletteptr1[con(0x9)]), v1d6a4f, vw_30);
        SKW_FIRE_HIDE_MOUSE_CURSOR();
        SKW_CHANGE_VIEWPORT_TO_INVENTORY(false);
        SKW_FIRE_SHOW_MOUSE_CURSOR();
        // M_39A0B:
        // break without flags leads to the M_3998A-loop
        // brk1 && !brk2 leads to M_3981E
        // !brk1 && brk2 leads to M_39A39 without M_3981E
        // both flags set lead to the end
        for(;;)
        {
          brk1 = brk2 = false;
          ddata.mouse_unk06 = con(0x0);
          ddata.mouse_unk0a = con(0x0);
          SKW_EVENT_LOOP();
          if (ddata.mouse_unk0a != con(0x49) || boolrg5)
          {
            if (ddata.mouse_unk0a != con(0x4a) || !boolrg5)
            {
              if (ddata.mouse_unk0a != con(0x4b))
              {
                if (ddata.mouse_unk0a == con(0x0))
                  continue;
                if (ddata.v1e051e != con(0xe))
                {
                  if (ddata.v1e051e != con(0x1c) && ddata.v1e051e != con(0xf))
                  {
                    if (wordrg6 >= vw_24)
                      break;
                    x16 wordrg25 = SKW_476d_05b6(ddata.v1e051e);
                    if (wordrg25 >= con(0x61) && wordrg25 <= con(0x7a))
                      wordrg25 -= con(0x20);
                    x16 wordrg47 = con(0x0);
                    while (wordrg47 < con(0x25))
                    {
                      if (wordrg25 == v1d6a08[wordrg47])
                        break;
                      wordrg47++;
                    }
                    if (wordrg47 == con(0x25) || (wordrg25 == con(0x20) && wordrg6 == con(0x0)))
                      continue;
                    tptrrg7[wordrg6++] = CUTX8(wordrg25);
                    tptrrg7[wordrg6] = NULLBYTE;
                    vw_38 += C_strmetrics.charwidth;
                    break;
                  }
                  wordrg6 = SKW_SK_STRLEN(tptrrg7);
                  for(;;)
                  {
                    wordrg6--;
                    tptrrg1 = &tptrrg7[wordrg6];
                    if (*tptrrg1 != ' ')
                      break;
                    *tptrrg1 = NULLBYTE;
                  }
                  if (boolrg5)
                  {
                    brk1 = true;
                    break;
                  }
                  if (ddata.v1e051e == con(0xf))
                  {
                    brk2 = true;
                    break;
                  }
                  brk1 = brk2 = true;
                  break;
                }
                if (wordrg6 > con(0x0))
                {
                  wordrg6--;
                  tptrrg7[wordrg6] = NULLBYTE;
                  vw_38 -= C_strmetrics.charwidth;
                }
                break;
              }
              SKW_COPY_MEMORY(DOWNCAST(s_1stname, &vs_18), con(0x8), DOWNCAST(t_text, phero_00->t00));
              SKW_COPY_MEMORY(DOWNCAST(s_2ndname, &vs_04), con(0x14), DOWNCAST(t_text, &phero_00->t00[con(0x8)]));
              brk1 = brk2 = true;
              break;
            }
            brk1 = true;
            break;
          }
          brk2 = true;
          break;
        }
        if (brk1 || brk2)
          break;
      }
      if (brk2)
        break;
      // M_3981E:
      boolrg5 = false;
      vw_24 = con(0xf);
      tptrrg7 = &phero_00->t00[con(0x8)];
      wordrg6 = SKW_SK_STRLEN(tptrrg7);
      vw_38 = vw_20 + wordrg6 * C_strmetrics.charwidth;
      wordrg100 = vw_34;
    }
    if (brk1)
      break;
  }
  ddata.v1e023c = false;
  SKW_DRAW_STATIC_PIC(con(0x7), con(0x13), con(0x267), con(0x0), con(0xffffffff));
  phero_00->u32.b.b1 |= con(0x4);
  SKW_REFRESH_PLAYER_STAT_DISP(ddata.v1e0976 - con(0x1));
  SKW_38c8_0060();
  SKW_1031_06a5();
}

x8 SKW_14cd_0684(void)
{
  x8 byterg1h;
  x8 vb_00;
  c_sizex16* sx16ptrrg1;

  bool boolrg6 = (SKW_14cd_0389() != con(0xffffffff));
  vb_00 = con(0xffffffff);
  if ((table1d607e[ddata.s350.v1e0584].u.b[0] & con(0x1)) != con(0x0) || !boolrg6 || SKW_RAND02() == con(0x0))
  {
    ddata.s350.v1e0674 = con(0x0);
    ddata.s350.v1e07ec = SKW_14cd_062e();
    byterg1h = ddata.s350.v1e0556->u.v.b12;
    SKW_14cd_0550(ddata.s350.v1e0588->p2->s0, ddata.s350.v1e0556->u.v.b13, boolrg6, byterg1h);
    if (boolrg6)
      SKW_14cd_0457();
    if (ddata.s350.v1e0674 != con(0x0))
    {
      if ((ddata.s350.v1e054e->ua.w & con(0x2048)) == con(0x0))
        byterg1h = con(0x0);
      else
        byterg1h = ddata.s350.v1e07ed;
      if ((ddata.s350.v1e054e->ua.w & con(0x1000)) != con(0x0))
        byterg1h |= con(0x20);
      ddata.s350.v1e0675 = SKW_1c9a_1bd8(ddata.s350.v1e0562.u.b.b_06, byterg1h, unsignedword(ddata.s350.v1e0562.u.b.b_07), ddata.s350.v1e0674, ddata.s350.v1e0678, ddata.s350.v1e060e);
      if (ddata.s350.v1e0675 == con(0xffffffff))
      {
        if (ddata.s350.v1e07ec != con(0x0))
          return con(0xfffffffd);
      }
      else
      {
        sx16ptrrg1 = &ddata.s350.v1e0678[ddata.s350.v1e0675];
        vb_00 = sx16ptrrg1->b_0e[con(0x0)];
        ddata.s350.v1e0556->u.v.u18.w = sx16ptrrg1->s_00.u_02.w;
        SKW_14cd_0276(sx16ptrrg1);
      }
    }
  }
  if ((vb_00 != con(0xffffffff)) || !boolrg6)
  {
    byterg1h = vb_00;
    if (byterg1h != con(0xffffffff))
    {
      if (ddata.s350.v1e0556->u.v.b12 != con(0xffffffff))
      {
        if (ddata.s350.v1e0556->u.v.b12 != byterg1h)
        {
          ddata.s350.v1e0556->u.v.b12 = con(0xffffffff);
          ddata.s350.v1e0556->u.v.b13 = con(0x0);
        }
        else
          vb_00 = con(0xffffffff);
      }
    }
    else
    {
      vb_00 = con(0x11);
      ddata.s350.v1e07d8.b1 = con(0x0);
      ddata.s350.v1e07d8.b3 = byterg1h;
    }
  }
  return vb_00;
}

void SKW_14cd_0550(s_anientry* eaxpani, x8 ebxb, bool ecxbool, x8 edxb)
{
  s_anientry* aniptrrg5;
  s_anientry* aniptrrg1;
  const s_seven* s7ptrrg7;
  x8 vb_04;
  x8 vb_08;

  aniptrrg5 = eaxpani;
  vb_04 = edxb;
  vb_08 = ebxb;
  bool boolrg6 = false;
  // M_15FB6:
  for(;;)
  {
    bool skip = false;
    x8 byterg2 = aniptrrg5->b0;
    x16 wordrg4;
    if (byterg2 == vb_04)
    {
      boolrg6 = ecxbool || ddata.s350.v1e07ec != con(0x0);
      wordrg4 = signedword(vb_08);
    }
    else if (ddata.s350.v1e07ec != con(0x0))
      skip = true;
    else if (aniptrrg5->b1 == con(0x0))
      wordrg4 = con(0x0);
    else if (aniptrrg5->b1 <= con(0x0))
    {
      if (SKW_RAND16(-signedword(aniptrrg5->b1)) == con(0x0))
        skip = true;
      else
        wordrg4 = con(0x0);
    }
    else if (SKW_RAND16(signedword(aniptrrg5->b1)) != con(0x0))
      skip = true;
    else
      wordrg4 = con(0x0);
    if (!skip)
    {
      s7ptrrg7 = table1d5f82[byterg2];
      SKW_14cd_0f0a(s7ptrrg7[wordrg4].b0[con(0x5)], byterg2, aniptrrg5->ps2, s7ptrrg7[wordrg4].b0[con(0x6)]);
    }
    if (boolrg6)
      return;
    aniptrrg1 = aniptrrg5++;
    if (aniptrrg1->b6 == con(0x0))
      return;
  }
}

x16 SKW_19f0_0207(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, FPTR_b_WW argf0)
{
  x16 wordrg5;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x16 vw_28;

  x16 vw_2c = edxw;
  vw_24 = ebxw;
  vw_20 = ecxw;
  if ((DM2_ABS(vw_2c - ecxw) + DM2_ABS(eaxw - ebxw)) <= con(0x1))
    return con(0x1);
  x16 wordrg31 = ebxw - eaxw;
  if (wordrg31 < con(0x0))
    wordrg31 = -wordrg31;
  x16 wordrg22 = vw_20 - vw_2c;
  x16 wordrg21;
  if (wordrg22 >= con(0x0))
    wordrg21 = wordrg22;
  else
    wordrg21 = -wordrg22;
  vw_10 = (wordrg31 < wordrg21) ? 1 : 0;
  vw_28 = (wordrg31 == wordrg21) ? 1 : 0;
  x16 wordrg32 = vw_24;
  if (vw_24 <= eaxw)
    vw_18 = con(0x1);
  else
    vw_18 = con(0xffffffff);
  x16 wordrg2 = vw_20;
  bool skip = false; // added
  if (vw_20 <= vw_2c)
    wordrg5 = con(0x1);
  else
    wordrg5 = con(0xffffffff);
  x32 longrg41;
  x16 wordrg100;
  x16 wordrg101;
  if (vw_10 == con(0x0))
  {
    wordrg101 = wordrg32 - eaxw;
    if (wordrg101 == con(0x0))
    {
      wordrg100 = con(0x80);
      skip = true;
    }
    else
      longrg41 = signedlong(wordrg2) - signedlong(vw_2c);
  }
  else
  {
    wordrg101 = wordrg2 - vw_2c;
    if (wordrg101 == con(0x0))
    {
      wordrg100 = con(0x80);
      skip = true;
    }
    else
      longrg41 = signedlong(wordrg32) - signedlong(eaxw);
  }
  if (!skip)
  {
    longrg41 <<= con(0x6); // keep longsize!
    wordrg100 = CUTX16(longrg41 / wordrg101);
  }
  vw_08 = wordrg100;
  // M_1BD85:
  for(;;)
  {
    x16 wordrg7;
    bool skip = false;
    x16 wordrg1 = vw_18 + wordrg32;
    vw_0c = wordrg1;
    if (vw_28 == con(0x0))
    {
      x32 wordrg413;
      if (vw_10 == con(0x0))
      {
        wordrg1 = vw_0c - eaxw;
        if (wordrg1 == con(0x0))
        {
          wordrg1 = con(0x80);
          skip = true;
        }
        else
        {
          wordrg413 = vw_2c;
          wordrg7 = wordrg2;
        }
      }
      else if (wordrg1 = wordrg2 - vw_2c, wordrg1 == con(0x0))
      {
        wordrg1 = con(0x80);
        skip = true;
      }
      else
      {
        wordrg7 = wordrg32 + vw_18;
        wordrg413 = eaxw;
      }
      // M_1BE01:
      if (!skip)
      {
        wordrg7 -= wordrg413;
        wordrg1 = CUTX16(lextended(wordrg7 << con(0x6)) / wordrg1);
      }
      // M_1BE3D:
      wordrg1 -= vw_08;
      x16 vw_14;
      if (wordrg1 >= con(0x0))
        vw_14 = wordrg1;
      else
        vw_14 = -wordrg1;
      skip = false; // reset for 2nd usage
      x32 longrg47;
      if (vw_10 == con(0x0))
      {
        wordrg1 = wordrg32 - eaxw;
        if (wordrg1 == con(0x0))
        {
          wordrg1 = con(0x80);
          skip = true;
        }
        else
        {
          longrg47 = signedlong(wordrg5) + signedlong(wordrg2);
          wordrg7 = vw_2c;
          longrg47 -= signedword(wordrg7);
        }
      }
      else if (wordrg1 = wordrg2 + wordrg5 - vw_2c, wordrg1 == con(0x0))
      {
        wordrg1 = con(0x80);
        skip = true;
      }
      else
      {
        wordrg7 = wordrg32 - eaxw;
        longrg47 = signedlong(wordrg7);
      }
      // M_1BE7C:
      if (!skip)
      {
        longrg47 <<= con(0x6); // keep longsize
        wordrg1 = CUTX16(longrg47 / wordrg1);
      }
      // M_1BEB7:
      wordrg1 -= vw_08;
      if (wordrg1 >= con(0x0))
        vw_04 = wordrg1;
      else
        vw_04 = -wordrg1;
      if (vw_14 >= vw_04)
        wordrg2 += wordrg5;
      else
        wordrg32 += vw_18;
      skip = false; // reset for 3rd usage
      if (!INDCALL(argf0)(wordrg32, wordrg2))
        skip = true;
      else
      {
        if (vw_14 != vw_04)
          return con(0x0);
        wordrg2 -= wordrg5;
      }
    }
    else
    {
      if (INDCALL(argf0)(vw_0c, wordrg2))
        if (INDCALL(argf0)(wordrg32, wordrg2 + wordrg5))
          return con(0x0);
      wordrg2 += wordrg5;
    }
    // M_1BDBE:
    if (!skip)
    {
      wordrg32 += vw_18;
      if (INDCALL(argf0)(wordrg32, wordrg2))
        return con(0x0);
    }
    // M_1BF06:
    vw_1c = wordrg2 - vw_2c;
    if ((DM2_ABS(vw_1c) + DM2_ABS(wordrg32 - eaxw)) <= con(0x1))
      return SKW_CALC_SQUARE_DISTANCE(eaxw, vw_24, vw_20, vw_2c);
  }
}

void R_3CE7D(x16 eaxw, x16 ebxw, bool ecxbool, x16 edxw, bool argbool0, bool argbool1)
{
  x16 wordrg5;
  x16* wptrrg4;
  c_record* recoptrrg5;
  c_record* recoptrrg2;
  c_record* recoptrrg4;
  c_aispec* aiptrrg1;
  x16 vw_04;
  t_text t_10[0xc8];
  c_tim vtim_d8;
  x16* pw_f0;
  c_record* prec_100;
  x16 vw_104;
  x16 vw_108;
  x16 vw_10c;
  x16 vw_110;
  x8 vb_118;
  bool flag = false; // PROBLEM! not necessarily initialized when used!!! So, set to false here. TODO

  x16 vw_0c = eaxw;
  x16 vw_08 = edxw;
  vw_04 = ebxw;
  wptrrg4 = NULL;
  pw_f0 = NULL;
  if (ebxw == con(0xffffffff))
  {
    vw_10c = con(0xffffffff);
    vw_110 = con(0xffffffff);
  }
  else
  {
    vw_10c = urshift(ebxw & con(0x3c00), con(0xa));
    vw_110 = SKW_GET_DISTINCTIVE_ITEMTYPE(ebxw);
    x16 wordrg111 = SKW_GET_CREATURE_AT(vw_0c, vw_08);
    if (wordrg111 != con(0xffffffff))
    {
      recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg111);
      aiptrrg1 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(recoptrrg4->u4.b.b0);
      if (argbool1)
      {
        if (!argbool0 || ((aiptrrg1->u0.b.b0 & con(0x1)) != con(0x0) && (aiptrrg1->u1e.b.b1 & con(0x8)) != con(0x0)))
          pw_f0 = &recoptrrg4->u2.w;
      }
    }
  }
  if (!argbool0)
  {
    if (vw_10c != con(0xffffffff))
    {
      x16 wordrg35;
      x16 wordrg25;
      if (pw_f0 != NULL)
      {
        wordrg35 = con(0x0);
        wordrg25 = con(0xffffffff);
        wptrrg4 = pw_f0;
      }
      else
      {
        wordrg35 = vw_08;
        wordrg25 = vw_0c;
        wptrrg4 = NULL;
      }
      SKW_CUT_RECORD_FROM(vw_04, wordrg25, wordrg35, wptrrg4);
    }
  }
  if (ubrshift(ddata.savegamepp1[vw_0c][vw_08], con(0x5)) != con(0x0))
    vw_104 = con(0xffffffff);
  else
    vw_104 = urshift(vw_04, con(0xe));
  bool vbool_e4 = false;
  bool vbool_ec = false;
  bool vbool_fc = false;
  x16 vw_f4 = con(0x0); // TODO: is bool, if wordrg5 is bool
  x16 wordrg6 = SKW_GET_TILE_RECORD_LINK(vw_0c, vw_08);
  if (vw_104 != con(0xffffffff))
  {
    wordrg5 = con(0x1);
    for(;;)
    {
      if (wordrg6 == con(0xfffffffe))
        break;
      if (vw_104 == (wordrg6 >> con(0xe)))
      {
        if ((urshift(wordrg6 & con(0x3c00), con(0xa))) > con(0x4))
        {
          vw_f4 = wordrg5;
          vbool_ec |= SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6) == vw_110;
          vbool_e4 |= SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6) != vw_110;
        }
      }
      wordrg6 = SKW_GET_NEXT_RECORD_LINK(wordrg6);
    }
  }
  else
  {
    for(;;)
    {
      if (wordrg6 == con(0xfffffffe))
        break;
      x16 wordrg415 = urshift(wordrg6 & con(0x3c00), con(0xa));
      if (wordrg415 != con(0x4) || (wordrg5 = wordrg6, SKW_IS_OBJECT_FLOATING(wordrg5)))
      {
        if (wordrg415 != con(0x2) || vw_10c != con(0xffffffff) || !argbool0 || ecxbool)
        {
          if (wordrg415 > con(0x4) && wordrg415 < con(0xe))
          {
            vw_f4 = con(0x1);
            vbool_ec |= SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6) == vw_110;
            vbool_e4 |= SKW_GET_DISTINCTIVE_ITEMTYPE(wordrg6) != vw_110;
          }
        }
        else
        {
          x8 byterg3 = SKW_GET_ADDRESS_OF_RECORD(wordrg6)->u2.b.b0;
          if ((byterg3 & con(0x6)) == con(0x0) && (byterg3 & con(0x1)) != con(0x0))
          {
            SKW_QUERY_MESSAGE_TEXT(t_10, con(0x1), wordrg6);
            SKW_DISPLAY_HINT_TEXT(con(0xf), t_10);
          }
        }
      }
      else
      {
        if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg5) & con(0x1)) != con(0x0) && (SKW_1c9a_06bd(wordrg5, con(0xff), vw_110) != NULL))
          vbool_ec = true;
        vbool_fc = true;
      }
      wordrg6 = SKW_GET_NEXT_RECORD_LINK(wordrg6);
    }
  }
  if (argbool0 && vw_10c != con(0xffffffff))
  {
    x16 wordrg34;
    x16 wordrg24;
    if (pw_f0 != NULL)
    {
      wordrg34 = con(0x0);
      wordrg24 = con(0xffffffff);
      wptrrg4 = pw_f0;
    }
    else
    {
      wordrg34 = vw_08;
      wordrg24 = vw_0c;
      wptrrg4 = NULL;
    }
    SKW_APPEND_RECORD_TO(vw_04, wordrg24, wordrg34, wptrrg4);
  }
  x16 wordrg1 = SKW_GET_TILE_RECORD_LINK(vw_0c, vw_08);
  // M_3D1E2: co-label is M_3D925
  x16 wordrg61;
  for (;; wordrg1 = SKW_GET_NEXT_RECORD_LINK(wordrg61))
  {
    wordrg61 = wordrg1;
    if (wordrg61 == con(0xfffffffe))
      return;
    if (vw_104 != con(0xffffffff))
    {
      if (SKW_IS_WALL_ORNATE_SPRING(wordrg61) != con(0x0))
      {
        x16 wordrg22 = vw_04;
        if (SKW_QUERY_CLS1_FROM_RECORD(wordrg22) == con(0x15))
        {
          if (SKW_QUERY_CLS2_FROM_RECORD(wordrg22) == con(0x0))
          {
            x16 wordrg145 = SKW_ADD_ITEM_CHARGE(wordrg22, con(0x0));
            x8 byterg41 = CUTX8(wordrg145);
            if (wordrg145 < con(0x0))
              return;
            if (wordrg145 >= ddata.savegamew2)
              return;
            vtim_d8.un.l_00 = (ddata.longmallocx + 1) | (signedlong(ddata.v1d3248) << con(0x18));
            vtim_d8.b_04 = con(0xd);
            vtim_d8.b_05 = byterg41;
            vtim_d8.u.b.b_06 = CUTX8(vw_0c);
            vtim_d8.u.b.b_07 = CUTX8(vw_08);
            vtim_d8.v.b.b_08 = CUTX8(vw_104);
            vtim_d8.v.b.b_09 = con(0x2);
            SKW_QUEUE_TIMER(&vtim_d8);
            return;
          }
        }
      }
    }
    x16 wordrg188 = urshift(wordrg61 & con(0x3c00), con(0xa));
    if (wordrg188 != con(0x3))
    {
      if (wordrg188 != con(0x2))
      {
        if (wordrg188 >= con(0x4))
          return;
        continue;
      }
      x16 wordrg414 = wordrg61;
      recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(wordrg414);
      prec_100 = recoptrrg2;
      if ((recoptrrg2->u2.w & con(0x6)) != con(0x2))
        continue;
      if (vw_104 != con(0xffffffff))
      {
        wordrg414 >>= con(0xe);
        if (vw_104 != wordrg414)
          continue;
        x16 wordrg137 = urshift(recoptrrg2->u2.w, con(0xb)) & con(0x1f);
        if (wordrg137 < con(0x4))
          continue;
        if (wordrg137 > con(0x4))
          if (wordrg137 != con(0x8))
            continue;
        if (!vbool_ec)
        {
          if ((prec_100->u2.w & con(0x1)) != (argbool0 ? 1 : 0))
          {
            if (vw_110 == DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0xe), CUTX8(urshift(prec_100->u2.w, con(0x3)))))
            {
              recoptrrg4 = prec_100;
              recoptrrg4->u2.b.b0 &= con(0xfffffffe);
              recoptrrg4->u2.w |= argbool0 ? 1 : 0;
            }
          }
        }
        continue;
      }
      x16 wordrg36 = urshift(recoptrrg2->u2.w, con(0x3));
      x16 wordrg167 = urshift(wordrg36, con(0x8)) & con(0x1f);
      if (wordrg167 < con(0x9))
        continue;
      if (wordrg167 <= con(0x9))
      {
        if (vw_10c != con(0xffffffff))
          continue;
        if (ecxbool)
          continue;
        if (ddata.savegamew2 == con(0x0))
          continue;
        wordrg36 = unsignedword(CUTX8(wordrg36));
        if (UI32CAST(SKW_RAND16(con(0x64))) >= UI32CAST(unsignedlong(wordrg36)))
          continue;
        if ((recoptrrg2->u2.w & con(0x1)) == (argbool0 ? 1 : 0))
          continue;
        wordrg5 = vw_08;
        SKW_INVOKE_MESSAGE(vw_0c, con(0x0), con(0x0), wordrg5, ddata.longmallocx + con(0x1));
        SKW_INVOKE_MESSAGE(vw_0c, con(0x0), con(0x1), wordrg5, ddata.longmallocx + con(0x5)); // BUGFIX 3/2014 + BUGFIX 4/2014
        continue;
      }
      if (wordrg167 == con(0xa))
      {
        if (vw_10c != con(0xffffffff))
          continue;
        if (argbool0)
          continue;
        if (ddata.savegamew2 == con(0x0))
          continue;
        x16 wordrg21 = con(0x0);
        x16 wordrg31 = con(0x0);
        while (wordrg31 < ddata.savegamew2)
        {
          if (ddata.hero[wordrg31].w36 != con(0x0))
          {
            wordrg5 = SKW_MAX_LOAD(&ddata.hero[wordrg31]) / 2; // BUGFIX 4/2014  TODO: check index again
            wordrg21 = wordrg21 + SKW_GET_PLAYER_WEIGHT(wordrg31) / wordrg5;
          }
          wordrg31++;
        }
        x16 wordrg49;
        if ((prec_100->u2.b.b0 & con(0x1)) == con(0x0))
          wordrg49 = con(0x19);
        else
          wordrg49 = con(0x32);
        if (ecxbool || (SKW_RAND16(con(0x64)) >= DM2_MIN(con(0x5a), 10 * wordrg21 + wordrg49)))
        {
          SKW_QUEUE_NOISE_GEN1(con(0xa), con(0x88), con(0x8c), CUTX8(urshift(prec_100->u2.w, con(0x3))), con(0x80), ddata.v1e0270, ddata.v1e0272, con(0x1));
          continue;
        }
        vtim_d8.un.l_00 = ddata.longmallocx | (signedlong(ddata.v1d3248) << con(0x18));
        vtim_d8.b_04 = con(0x5d);
        vtim_d8.b_05 = con(0x0);
        vtim_d8.u.b.b_06 &= con(0xffffffe0);
        wordrg5 = (vtim_d8.u.w_06 | (vw_0c & con(0x1f))) & con(0xfc1f);
        vtim_d8.u.w_06 = wordrg5 | ((vw_08 & con(0x1f)) << con(0x5));
        vtim_d8.v.b.b_08 = CUTX8(ddata.v1e0266);
        vtim_d8.u.b.b_07 &= con(0xfffffff3);
        x16 wordrg159 = (ddata.v1e0258 & con(0x3)) << con(0xa);
        vtim_d8.u.w_06 |= wordrg159;
        SKW_QUEUE_TIMER(&vtim_d8);
        x16 wordrg3 = SKW_RAND02();
        if (ddata.hero[wordrg159].w36 == con(0x0))
          wordrg3 = ddata.mouse_unk0e;
        SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x82), con(0xfe), ddata.hero[wordrg3].b101, ddata.v1e0270, ddata.v1e0272, con(0x1), con(0x69), con(0xc8));
      }
      continue;
    }
    x16 wordrg431 = wordrg61;
    recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg431);
    if ((recoptrrg5->u2.b.b0 & con(0x7f)) == con(0x0))
      continue;
    x16 wordrg100 = urshift(recoptrrg5->u2.w, con(0x7));
    bool vbool_e8 = argbool0;
    x32 wordrg420 = vw_104;
    if (wordrg420 != con(0xffffffff))
    {
      if (wordrg420 != urshift(wordrg431, con(0xe)))
        continue;
      ui16 uwordrg42 = recoptrrg5->u2.w & con(0x7f);
      if (uwordrg42 < con(0x29))
      {
        if (uwordrg42 != con(0x1a))
          continue;
        if (vbool_ec)
          continue;
        if (ulrshift(recoptrrg5->u4.w, con(0xd), con(0xf)) == (argbool0 ? 1 : 0))
          continue;
        if (vw_110 != DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0xe), SKW_GET_WALL_DECORATION_OF_ACTUATOR(recoptrrg5)))
          continue;
        recoptrrg5->u4.b.b0 &= con(0xfffffffb);
        recoptrrg5->u4.w |= argbool0 ? 4 : 0;
      }
      else if (uwordrg42 <= con(0x29))
      {
        flag = vw_f4 != con(0x0);
        if (flag)
          continue;
      }
      else if (uwordrg42 <= con(0x2a))
      {
        if (vbool_ec)
          continue;
        flag = urshift(recoptrrg5->u2.w, con(0x7)) != vw_110;
        if (flag)
          continue;
      }
      else if (uwordrg42 == con(0x2b))
      {
        if (vbool_e4)
          continue;
        if (wordrg100 == vw_110)
          continue;
      }
      else
        continue;
    }
    else
    {
      ui16 uwordrg4 = (recoptrrg5->u2.w & con(0x7f)) - con(0x1);
      if (uwordrg4 > con(0x7))
        continue;
      switch (uwordrg4)
      {
        case 0:
          if (!ecxbool)
            flag = vw_f4 != con(0x0);
// TODO: check flag here (maybe uninitialized)
          if (flag || (flag = vbool_fc)) // yes, flag is assignment
            continue;
        break;

        case 1:
          if (vw_10c <= con(0x4))
            flag = ecxbool;
// TODO: check flag here (maybe uninitialized)
          if (flag || (flag = vbool_fc)) // yes, flag is assignment
            continue;
        break;

        case 2:
          if (vw_10c != wordrg420 || ddata.savegamew2 == con(0x0))
            continue;
          if (wordrg100 != con(0x0))
          {
            if (argbool0)
              vbool_e8 = wordrg100 == (ddata.v1e0258 + con(0x1));
            else
              vbool_e8 = argbool0;
          }
          else if (flag = ecxbool) // yes, assignment!
            continue;
        break;

        case 3:
          if (wordrg100 != vw_110 || (flag = vbool_ec)) // BUGFIX 4.3/2014, yes assignment
            continue;
        break;

        case 4:
        case 5:
          continue;

        case 6:
          if (vw_10c > con(0x4) || vw_10c == wordrg420 || (flag = vbool_fc)) // yes, flag is assignment
            continue;
        break;

        case 7:
          if (vw_10c != wordrg420)
            continue;
          vbool_e8 = SKW_2fcf_16ff(wordrg100);
        break;

        default: throw(THROW_DMABORT);
      }
    }
    // M_3D4C9:
    bool boolrg3 = vbool_e8;
    boolrg3 ^= (unsignedlong(ulrshift(recoptrrg5->u4.w, con(0xa), con(0xf))) != con(0x0));
    vbool_e8 = boolrg3;
    vw_108 = ulrshift(recoptrrg5->u4.w, con(0xb), con(0xe));
    if (vw_108 != con(0x3))
    {
      if (!boolrg3)
        continue;
    }
    else
      vw_108 = !boolrg3 ? 1 : 0;
    if ((recoptrrg5->u4.b.b0 & con(0x40)) != con(0x0))
    {
      x8 byterg4;
      if (vw_104 != con(0xffffffff))
        byterg4 = SKW_GET_WALL_DECORATION_OF_ACTUATOR(recoptrrg5);
      else
        byterg4 = SKW_GET_FLOOR_DECORATION_OF_ACTUATOR(recoptrrg5);
      vb_118 = ((vw_104 == con(0xffffffff)) ? 1 : 0) + con(0x9);
      SKW_QUEUE_NOISE_GEN2(vb_118, con(0x88), con(0xfe), byterg4, vw_0c, vw_08, con(0x1), con(0x8c), con(0x80));
    }
    SKW_INVOKE_ACTUATOR(recoptrrg5, con(0x0), vw_108);
  }
}

void SKW_STEP_MISSILE(c_tim* eaxptim)
{
  x16 wordrg5;
  c_tim vtim_00;
  c_tim* timptrrg1;
  c_record* recoptrrg7;
  c_record* recoptrrg3;
  c_record* recoptrrg2;
  x8** bpptrrg11;
  x8* bptrrg12;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x16 vw_28;
  x16 vw_2c;
  x16 vw_30;

  SKW_COPY_TIMER(eaxptim, &vtim_00);
  vw_30 = vtim_00.u.w_06;
  vw_28 = vtim_00.u.w_06;
  recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(vtim_00.u.w_06);
  recoptrrg7 = recoptrrg2;
  x16 vw_38 = CUTX16(vtim_00.v.l_08) & con(0x1f);
  x16 vw_34 = ulrshift(vtim_00.v.l_08, con(0x6), con(0xb));
  if (vtim_00.b_04 != con(0x1d))
  {
    x16 wordrg65 = urshift(vw_30, con(0xe));
    x16 wordrg142 = SKW_GET_CREATURE_AT(vw_38, vw_34);
    if (wordrg142 == con(0xffffffff) || ((recoptrrg3 = SKW_GET_ADDRESS_OF_RECORD(wordrg142), (SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg142) & con(0x2)) == con(0x0)) || (UI16CAST(recoptrrg2->u2.w) < UI16CAST(con(0xffffff80)))))
    {
      if (ddata.v1d3248 == ddata.v1e0282 && vw_38 == ddata.v1e0280 && vw_34 == ddata.v1e027e)
        if (SKW_075f_0af9(con(0xfffffffd), vw_34, wordrg65, vw_38, vw_30))
          return;
      if (SKW_075f_0af9(con(0xffffffff), vw_34, wordrg65, vw_38, vw_28))
        return;
    }
    else
    {
      x16 wordrg412 = 4 * wordrg65 + ((ulrshift(recoptrrg3->ue.w, con(0x6), con(0xe)) & con(0x1)) << con(0x4));
      x16 wordrg144 = ulrshift(vtim_00.v.l_08, con(0x4), con(0xe)) + wordrg412;
      x16 wordrg411 = signedword(table1d26a8[wordrg144]);
      if (table1d26a8[wordrg144] < con(0x4))
      {
        wordrg411 &= con(0x3);
        vtim_00.v.b.b_09 &= con(0xfffffff3);
        wordrg411 <<= con(0xa);
        vtim_00.v.w_08 |= wordrg411;
        ddata.savegametimarrp[recoptrrg2->u6.w].v.b.b_09 &= con(0xfffffff3);
        ddata.savegametimarrp[recoptrrg2->u6.w].v.w_08 |= wordrg411;
      }
    }
    x16 wordrg27 = urshift(vtim_00.v.w_08, con(0xc));
    x8 byterg42 = recoptrrg7->u4.b.b0;
    if (unsignedword(recoptrrg7->u4.b.b0) <= wordrg27)
    {
      wordrg5 = vw_38;
      SKW_CUT_RECORD_FROM(vw_28, wordrg5, vw_34, NULL);
      SKW_DELETE_MISSILE_RECORD(vw_28, wordrg5, vw_34, NULL);
      return;
    }
    byterg42 -= CUTX8(wordrg27);
    recoptrrg7->u4.b.b0 = byterg42;
    if (unsignedword(recoptrrg7->u4.b.b1) >= wordrg27)
      recoptrrg7->u4.b.b1 = recoptrrg7->u4.b.b1 - CUTX8(wordrg27);
    else
      recoptrrg7->u4.b.b1 = con(0x0);
  }
  else
    vtim_00.b_04 = con(0x1e);
  vw_30 = vtim_00.u.w_06;
  x16 wordrg6 = urshift(vw_30, con(0xe));
  x16 wordrg411 = wordrg6;
  vw_24 = ulrshift(vtim_00.v.w_08, con(0x4), con(0xe));
  x16 wordrg189 = vw_24;
  if (wordrg189 == wordrg411)
    vw_20 = con(0x1);
  else
  {
    wordrg189++;
    wordrg189 &= con(0x3);
    if (wordrg189 != wordrg411)
      vw_20 = con(0x0);
    else
      vw_20 = con(0x1);
  }
  if (vw_20 != con(0x0))
  {
    vw_1c = vw_38;
    vw_2c = vw_34;
    vw_38 += table1d27fc[vw_24];
    vw_34 += table1d2804[vw_24];
    bool pass = false; // added
    x8 byterg11 = SKW_GET_TILE_VALUE(vw_38, vw_34);
    x16 wordrg26 = unsignedword(byterg11);
    if (ubrshift(byterg11, con(0x5)) != con(0x0))
    {
      if ((urshift(wordrg26, con(0x5)) & con(0xff)) != con(0x6) || (wordrg26 & con(0xff05)) != con(0x0))
      {
        if ((urshift(wordrg26, con(0x5)) & con(0xff)) != con(0x3))
          pass = true;
        else
        {
          bpptrrg11 = &ddata.savegamepp1[vw_1c];
          bptrrg12 = *bpptrrg11;
          if (ubrshift(bptrrg12[vw_2c], con(0x5)) != con(0x3))
            pass = true;
        }
      }
    }
    if (!pass)
      if (SKW_075f_0af9(unsignedword(CUTX8(urshift(wordrg26, con(0x5)))), vw_2c, wordrg6, vw_1c, vw_30))
        return;
    x16 wordrg188 = SKW_GET_WALL_TILE_ANYITEM_RECORD(vw_38, vw_34);
    bool skip = false; // added
    for(;;)
    {
      x16 wordrg46;
      if (wordrg46 = wordrg188, wordrg46 == con(0xfffffffe))
      {
        skip = true;
        break;
      }
      if (urshift(wordrg46 & con(0x3c00), con(0xa)) == con(0xf) && (SKW_GET_ADDRESS_OF_RECORD(wordrg46)->u2.w & con(0x7f)) == con(0xe))
        break;
      wordrg188 = SKW_GET_NEXT_RECORD_LINK(wordrg46);
    }
    if (!skip)
    {
      timptrrg1 = &ddata.savegametimarrp[recoptrrg7->u6.w];
      x16 wordrg45 = ((ulrshift(timptrrg1->v.w_08, con(0x4), con(0xe)) + con(0x2)) & con(0x3)) << con(0xa);
      vtim_00.v.b.b_09 &= con(0xfffffff3);
      vtim_00.v.w_08 |= wordrg45;
      timptrrg1->v.b.b_09 &= con(0xfffffff3);
      timptrrg1->v.w_08 |= wordrg45;
      vw_38 = vw_1c;
      vw_34 = vw_2c;
      vw_20 = con(0x0);
    }
  }
  x16 wordrg24 = wordrg6;
  if ((vw_24 & con(0x1)) != (wordrg6 & con(0x1)))
    wordrg6++;
  else
    wordrg6--;
  wordrg6 &= con(0x3);
  if (vw_20 == con(0x0))
  {
    if ((((SKW_GET_TILE_VALUE(vw_38, vw_34) & con(0xff)) >> con(0x5)) & con(0xff)) == con(0x4))
      if (SKW_075f_0af9(con(0x4), vw_34, wordrg24, vw_38, vw_28))
        return;
    SKW_CUT_RECORD_FROM(vw_30, vw_38, vw_34, NULL);
    wordrg6 <<= con(0xe);
    vw_30 = (vw_30 & con(0x3fff)) | wordrg6;
    SKW_APPEND_RECORD_TO(vw_30, vw_38, vw_34, NULL);
  }
  else
  {
    wordrg6 <<= con(0xe);
    wordrg6 |= vw_30 & con(0x3fff);
    SKW_MOVE_RECORD_TO(wordrg6, vw_2c, vw_38, vw_1c, vw_34);
    if (recoptrrg7->u2.w == con(0xffffff80))
      if (ddata.v1d3248 == ddata.v1e0266)
        ddata.v1e0390.b0 |= con(0x1);
    vtim_00.v.b.b_08 &= con(0xffffffe0);
    x16 wordrg22 = vtim_00.v.w_08 | (ddata.v1e102a & con(0x1f));
    vtim_00.v.w_08 = wordrg22;
    vtim_00.v.w_08 = (wordrg22 & con(0xfffffc1f)) | ((ddata.v1e1028 & con(0x1f)) << con(0x5));
    vtim_00.v.b.b_09 &= con(0xfffffff3);
    vtim_00.v.w_08 |= (ddata.v1e1024 & con(0x3)) << con(0xa);
    x16 wordrg410 = vw_30 & con(0x3fff);
    wordrg410 |= ddata.v1e1026 << con(0xe);
    vw_30 = wordrg410;
    vtim_00.un.l_00 = vtim_00.un.l_00 & con(0xffffff) | (unsignedlong(ddata.v1e102c) << con(0x18));
    vw_38 = ddata.v1d3248;
    if (ddata.v1e102c != vw_38)
      SKW_CHANGE_CURRENT_MAP_TO(ddata.v1e102c);
    x16 wordrg21 = ddata.v1e102a += table1d27fc[ddata.v1e1024];
    ddata.v1e102a = wordrg21;
    ddata.v1e1028 += table1d2804[ddata.v1e1024];
    x16 wordrg151 = SKW_GET_CREATURE_AT(wordrg21, ddata.v1e1028);
    if (wordrg151 != con(0xffffffff))
      SKW_ATTACK_CREATURE(wordrg151, ddata.v1e1028, con(0x2006), ddata.v1e102a, con(0x64), con(0x0));
    x8 byterg21 = SKW_GET_TILE_VALUE(ddata.v1e102a, ddata.v1e1028);
    x16 wordrg63 = unsignedword(ubrshift(byterg21, con(0x5)));
    if (wordrg63 != con(0x0) && (wordrg63 != con(0x6) || (byterg21 & con(0x4)) != con(0x0)))
      if (wordrg63 != con(0x4) || (byterg21 & con(0x7)) == con(0x5) || (byterg21 & con(0x7)) <= con(0x1))
      {
        x16 wordrg64 = ddata.v1e102a + table1d27fc[ddata.v1e1024];
        ddata.v1e102a = wordrg64;
        ddata.v1e1028 += table1d2804[ddata.v1e1024];
        x16 wordrg142 = SKW_GET_CREATURE_AT(wordrg64, ddata.v1e1028);
        if (wordrg142 != con(0xffffffff))
          SKW_ATTACK_CREATURE(wordrg142, ddata.v1e1028, con(0x2006), ddata.v1e102a, con(0x64), con(0x0));
      }
    if (ddata.v1e102c != vw_38)
      SKW_CHANGE_CURRENT_MAP_TO(vw_38);
  }
  vtim_00.un.l_00 += con(0x1);
  vtim_00.u.w_06 = vw_30;
  recoptrrg7->u6.w = SKW_QUEUE_TIMER(&vtim_00);
}

x16 SKW_2759_222e(x16 eaxw, x16 ebxw, s_802* edxps)
{
  x16 wordrg3;
  x16 wordrg5;
  c_record* recoptrrg4;
  c_hero* heroptrrg7;
  s_d556* sd5ptrrg4;
  c_record* recoptrrg1;
  c_tim vtim_04;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;

  x16 vw_10;
  vw_24 = ebxw;
  heroptrrg7 = &ddata.hero[eaxw];
  x32 wordrg4 = urshift(edxps->w6, con(0xa)) & con(0x3f);
  wordrg4 *= vw_24 + con(0x12);
  vw_18 = wordrg4 / con(0x18);
  wordrg5 = vw_24 + unsignedword(edxps->b4);
  x16 wordrg2 = 8 * (unsignedword(edxps->b4) * (vw_24 - con(0x1)));
  wordrg2 += 16 * wordrg5 + (CUTX16(SKW_RAND()) & con(0x7));
  wordrg2 += wordrg5 * wordrg5;
  vw_1c = wordrg2;
  ui16 uwordrg1 = SKW_QUERY_PLAYER_SKILL_LV(eaxw, true, unsignedword(edxps->b5));
  vw_20 = uwordrg1;
  x16 wordrg32 = wordrg5 - uwordrg1;

  // SPX: moved variables
  x16 wordrg21;

  // M_3244E:
  do
  {
    bool doit;
    if (wordrg32-- <= con(0x0))
    {
      x16 wordrg170 = (edxps->w6 & con(0xf)) - con(0x1);
      if (wordrg170 <= con(0x3))
      {
        x16 wordrg411 = 2 * vw_20;
        switch (wordrg170)
        {
          case 0:
            {
              x16 wordrg24 = SKW_FIND_HAND_WITH_EMPTY_FLASK(heroptrrg7);
              if (wordrg24 < con(0x0))
              {
                wordrg3 = con(0x30);
                goto M_exit;
              }
              x16 wordrg7 = SKW_REMOVE_POSSESSION(eaxw, wordrg24);
              vw_10 = urshift(edxps->w6, con(0x4)) & con(0x3f);
              SKW_SET_ITEMTYPE(wordrg7, CUTX8(vw_10));
              recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg7);
              recoptrrg4->u2.b.b0 = con(0x0);
              recoptrrg4->u2.w |= unsignedword(CUTX8(unsignedlong(vw_24) * con(0x28) + CUTX16(SKW_RAND()) & con(0xf)));
              SKW_EQUIP_ITEM_TO_HAND(eaxw, wordrg24, wordrg7);
            }
          break;

          case 1:
            {
              if ((urshift(edxps->w6, con(0x4)) & con(0x3f)) == con(0x4))
                vw_20 = wordrg411;
              x16 wordrg23 = DM2_BETWEEN_VALUE(con(0x15), con(0xff), (2 * vw_20 + con(0x4)) * (vw_24 + con(0x2)));
              SKW_CAST_CHAMPION_MISSILE_SPELL(eaxw, wordrg23, con(0x0), (urshift(edxps->w6, con(0x4)) & con(0x3f)) + con(0xff80));
            }
          break;

          case 2:
            {
              vtim_04.b_05 = con(0x0);
              wordrg5 = (vw_24 + 1) * 4;
              ui16 uwordrg11 = urshift(edxps->w6, con(0x4)) & con(0x3f);
              if (UI16CAST(uwordrg11) <= UI16CAST(con(0xf)))
              {
                // switch splitted here
                x16 secondswitch = uwordrg11; // extravariable
                bool doit = false; // extraflag
                x16 wordrg31;
                switch (uwordrg11)
                {
                  case 0:
                    wordrg31 = con(0x27);
                  break;

                  case 1:
                    wordrg31 = con(0x6);
                  break;

                  case 2:
                    wordrg31 = con(0x1);
                  break;

                  case 3:
                    vtim_04.b_04 = con(0x47);
                    if (ddata.savegames1.b2++ == con(0x0) && ddata.v1e0976 != con(0x0))
                      ddata.hero[ddata.v1e0976 - con(0x1)].u32.b.b1 |= con(0x40);
                  break;

                  case 4:
                    wordrg31 = con(0x2);
                  break;

                  case 5:
                    wordrg31 = con(0x26);
                  break;

                  case 6:
                    wordrg31 = con(0x5);
                  break;

                  case 7:
                    wordrg31 = con(0x4);
                  break;

                  case 8:
                    wordrg31 = con(0x0);
                  break;

                  case 9:
                    wordrg31 = con(0x6);
                  break;

                  case 10:
                    wordrg31 = con(0x3);
                  break;

                  case 11:
                    ddata.savegames1.b4 = CUTX8(DM2_MIN(8 * wordrg5 + unsignedword(ddata.savegames1.b4), con(0xff)));
                  break;

                  case 12:
                  case 13:
                  break;

                  case 14:
                    wordrg31 = ddata.v1e0272;
                    wordrg5 = ddata.v1e0270;
                    SKW_CREATE_CLOUD(con(0xff8e), wordrg5, wordrg31, DM2_BETWEEN_VALUE(con(0x15), con(0xff), (wordrg411 + con(0x4)) * (vw_24 + con(0x2))), con(0xff));
                  break;

                  case 15:
                    {
                      wordrg31 = con(0x42);
                      x16 wordrg410 = SKW_ALLOC_NEW_DBITEM(DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xd), con(0xb), con(0x42), con(0xf)));
                      if (ddata.savegamewpc.w0 != con(0xffffffff))
                      {
                        wordrg5 = (SKW_RAND01() + ddata.v1e0258) & con(0x3);
                        wordrg31 = signedlong(ddata.v1e0270);
                        wordrg410 &= con(0x3fff);
                        wordrg5 <<= con(0xe);
                        wordrg5 |= wordrg410;
                        SKW_MOVE_RECORD_TO(wordrg5, con(0x0), wordrg31, con(0xffffffff), ddata.v1e0272);
                      }
                      else
                        SKW_TAKE_OBJECT(wordrg410, true);
                    }
                  break;

                  default: throw(THROW_DMABORT);
                }
                switch (secondswitch)
                {
                  case 2:
                  case 8:
                    wordrg5 *= wordrg5;
                    wordrg5 += con(0x64);
                    doit = true;
                  break;

                  case 6:
                  case 7:
                  case 9:
                  case 10:
                    wordrg5 += con(0x3);
                  case 4: // no break before!
                    wordrg5 *= wordrg5;
                    doit = true;
                  break;
                }
                if (doit)
                  SKW_2c1d_0186(heroptrrg7, wordrg5, con(0x0), CUTX8(wordrg31));
                else
                {
                  switch (secondswitch)
                  {
                    case 0:
                    case 1:
                    case 5:
                      wordrg5 *= con(0x9);
                      SKW_2759_15d0(wordrg31, wordrg5);
                    break;

                    case 3:
                      wordrg5 *= 8;
                      vtim_04.un.l_00 = (ddata.longmallocx + unsignedlong(wordrg5)) | (signedlong(ddata.v1e0266) << con(0x18));
                      SKW_QUEUE_TIMER(&vtim_04);
                    break;

                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    break;
                  }
                }
              }
            }
          break;

          case 3:
            doit = false;
            if (((unsignedlong(edxps->w6) >> 4) & con(0x3f)) != con(0x35))
              doit = true;
            else
            {
              recoptrrg1 = ddata.savegameparr5[4];
              wordrg5 = ddata.savegamep4->w0[con(0xa)];
              // M_32639: // co-label M_32636
              for (;; recoptrrg1++)
              {
                wordrg5--;
                if (wordrg5 == con(0xffffffff))
                {
                  doit = true;
                  break;
                }
                if (recoptrrg1->w0 == con(0xffffffff))
                  continue;
                if (recoptrrg1->u4.b.b0 != con(0x35))
                  continue;
                if (recoptrrg1->u4.b.b1 == con(0xff))
                  continue;
                x16 wordrg22 = signedlong(recoptrrg1->u4.b.b1);
                sd5ptrrg4 = &ddata.v1e089c[wordrg22];
                if (sd5ptrrg4->u.v.b1a != con(0x13))
                {
                  sd5ptrrg4->u.v.barr16[con(0x1)] = con(0x13);
                  break;
                }
              }
            }
            if (doit)
            {
              // M_32640:
              x16 wordrg22 = (ddata.v1e0258 + con(0x2)) & con(0x3);
              wordrg5 = con(0x6);
              if (SKW_CREATE_MINION(((edxps->w6) >> 4) & con(0x3f), wordrg22, ddata.v1e0270, (2 * wordrg22 + SKW_RAND02() + vw_20) * vw_24 / wordrg5, ddata.v1e0272, ddata.v1e0266, con(0xffff), CUTX8(ddata.v1e0258)) == con(0xffffffff))
                SKW_CREATE_CLOUD(con(0xffa8), ddata.v1e0270, ddata.v1e0272, con(0x6e), con(0xff));
            }
          break;

          default: throw(THROW_DMABORT);
        }
      }
      wordrg3 = con(0x0);
      if (vw_18 != con(0x0))
      {
        SKW_ADJUST_SKILLS(eaxw, vw_1c, unsignedword(edxps->b5));
        SKW_ADJUST_HAND_COOLDOWN(eaxw, con(0x2), vw_18);
      }
      goto M_exit;
    }
    vw_10 = CUTX16(SKW_RAND()) & con(0x7f);
  } while (DM2_MIN(SKW_GET_PLAYER_ABILITY(heroptrrg7, con(0x0), con(0x3)) + con(0xf), con(0x73)) >= vw_10);
   wordrg21 = urshift(vw_1c, CUTX8(wordrg5) - CUTX8(vw_20));
  SKW_ADJUST_SKILLS(eaxw, wordrg21, unsignedword(edxps->b5));
  wordrg3 = con(0x10);
M_exit: // M_32928:
  if (wordrg3 != con(0x0))
  {
    wordrg5 = unsignedword(edxps->b5);
    if (wordrg5 > con(0x3))
      wordrg5 = (wordrg5 - con(0x4)) / 4;
    wordrg3 |= wordrg5;
  }
  return wordrg3;
}

x32 SKW_ENGAGE_COMMAND(x16 eaxw, x16 edxw)
{
  x16 wordrg34;
  c_hero* heroptrrg5;
  c_record* recoptrrg1;
  c_record* recoptrrg7;
  c_aispec* aiptrrg2;
  s_size8* sptrrg4;
  x16 vw_04;
  c_tim vtim_08;
  x16 vw_24;
  x16 vw_2c;
  x16 vw_34;
  x16 vw_38;
  x16 vw_3c;
  x16 vw_40;
  x16 vw_44;
  x16 vw_48;
  x16 vw_4c;
  x16 vw_50;
  x16 vw_58;
  x16 vw_5c;
  x16 vw_60;
  x16 vw_64;
  x8 vb_6c;
  x8 vb_70;
  bool flag;

	// SPX: moved variables before goto
  x16 secondjump;
  x16 wordrg2;
  x16 byterg49;
  x16 wordrg109;


  vw_04 = eaxw;
  x16 vw_00 = edxw;
  bool vbool_14 = false;
  vw_48 = vw_00 & con(0x8000);
  vw_00 &= con(0x7fff);
  ddata.v1e0b7f = ddata.v1e0b40[vw_00].b0;
  ddata.v1e0b80 = ddata.v1e0b40[vw_00].b1;
  ddata.v1e0b7e = ddata.v1e0b40[vw_00].b2;
  vw_34 = ddata.v1e0b76;
  vw_4c = ddata.v1e0b76 ^ con(0x1);
  heroptrrg5 = &ddata.hero[vw_04];
  if (heroptrrg5->w36 == con(0x0))
    return con(0x0);
  x16 vw_54 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x2));
  vb_6c = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0xd));
  vw_3c = con(0x0);
  heroptrrg5->b20[vw_34] = CUTX8(vw_54);
  recoptrrg7 = NULL;
  vw_58 = heroptrrg5->warrc3[vw_34];
  if (vw_58 != con(0xffffffff))
    recoptrrg7 = SKW_GET_ADDRESS_OF_RECORD(vw_58);
  vw_44 = unsignedword(heroptrrg5->b1c);
  vw_5c = ddata.v1e0270 + table1d27fc[heroptrrg5->b1c];
  vw_24 = ddata.v1e0272 + table1d2804[heroptrrg5->b1c];
  ddata.v1e0b4c = SKW_GET_CREATURE_AT(vw_5c, vw_24);
  if (ddata.v1e0b4c != con(0xffffffff))
  {
    vb_70 = SKW_QUERY_CLS2_FROM_RECORD(ddata.v1e0b4c);
    aiptrrg2 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(vb_70);
  }
  ui16 vuw_20 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x3));
  vw_50 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x0));
  vw_40 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x4)) + SKW_RAND01();
  x16 vw_68 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x9));
  vw_60 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x5));
  vw_64 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x10));
  x16 wordrg3 = vw_34;
  heroptrrg5->b42[wordrg3] = CUTX8(SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x7)));
  vw_38 = unsignedword(SKW_GET_TILE_VALUE(vw_5c, vw_24));
  bool boolrg6 = true;
  ui16 uwordrg1 = vw_54 - con(0x1);
  if (uwordrg1 > con(0x35))
    goto M_exit;
   secondjump = uwordrg1; // 2nd switchgate for those not running to M_exit

  switch (uwordrg1)
  {
    case 0:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 36:
    case 39:
    case 40:
    case 42:
    case 51:
    case 52:
    goto M_exit;

    case 1:
      vw_60 = DM2_MAX(con(0x20), vw_60);
      vtim_08.b_04 = con(0x47);
      if (ddata.savegames1.b2++ == con(0x0))
        if (ddata.v1e0976 != con(0x0))
          ddata.hero[ddata.v1e0976 - con(0x1)].u32.b.b1 |= con(0x40);
      vtim_08.un.l_00 = (signedlong(vw_60) + ddata.longmallocx) | (signedlong(ddata.v1e0266) << con(0x18));
      SKW_QUEUE_TIMER(&vtim_08);
    goto M_exit;

    case 2:
      {
        x16 wordrg67 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x6)) + con(0xff80);
        x16 wordrg163 = con(0x7) - DM2_MIN(con(0x6), SKW_QUERY_PLAYER_SKILL_LV(vw_04, true, vw_50));
        if (wordrg163 > heroptrrg5->w3e)
        {
          vw_60 = DM2_MAX(con(0x2), vw_60 * heroptrrg5->w3e / wordrg163);
          wordrg163 = heroptrrg5->w3e;
        }
        boolrg6 = SKW_CAST_CHAMPION_MISSILE_SPELL(vw_04, vw_60, wordrg163, wordrg67);
        if (!boolrg6)
          vw_68 >>= con(0x1);
      }
    goto M_exit;

    case 3:
    case 7:
      if ((urshift(vw_38, con(0x5)) & con(0xff)) != con(0x4) || (vw_38 & con(0x7)) != con(0x4))
      {
        if (ddata.v1e0b4c == con(0xffffffff) || (aiptrrg2->u0.b.b0 & con(0x1)) == con(0x0) || aiptrrg2->b2 != con(0xffffffff) || aiptrrg2->barr06[con(0x2)] != con(0xff))
        {
          boolrg6 = SKW_WIELD_WEAPON(vw_04, vw_5c, vw_24, SKW_QUERY_CUR_CMDSTR_ENTRY(con(0x6)), vw_50, vw_64);
          if (boolrg6)
          {
            if (ddata.v1e0b4c == con(0xffffffff))
              goto M_exit;
          }
          else
          {
            vw_68 >>= con(0x1);
            vuw_20 >>= con(0x1);
            goto M_exit;
          }
        }
        else
          vw_68 >>= con(0x1);
        SKW_QUEUE_NOISE_GEN1(con(0xf), con(0x8d), con(0x3c), vb_70, con(0xc8), vw_5c, vw_24, CUTX16(unsignedlong(vw_3c) + 1));
      }
      else
      {
        SKW_ATTACK_DOOR(vw_5c, SKW_COMPUTE_PLAYER_ATTACK_OR_THROW_STRENGTH(vw_04, vw_50, vw_34), false, vw_24, con(0x2));
        vuw_20 = con(0x6);
        recoptrrg1 = SKW_GET_ADDRESS_OF_TILE_RECORD(vw_5c, vw_24);
        vw_2c = vw_3c + con(0x1);
        SKW_QUEUE_NOISE_GEN2(con(0xe), con(0x8d), con(0xfe), SKW_IS_REBIRTH_ALTAR(recoptrrg1), vw_5c, vw_24, vw_2c, con(0x3c), con(0xc8));
      }
    goto M_exit;

    case 4:
      vw_60 += SKW_QUERY_PLAYER_SKILL_LV(vw_04, boolrg6, con(0xe));
      boolrg6 = SKW_CONFUSE_CREATURE(vw_60, vw_24, vw_5c);
      if (!boolrg6)
        vw_68 >>= con(0x2);
      vw_3c = con(0x0);
    goto M_exit;

    case 5:
    case 37:
    case 38:
      SKW_2759_15d0(vw_54, vw_60);
    goto M_exit;

    case 6:
      SKW_CREATE_CLOUD(con(0xff8e), ddata.v1e0270, ddata.v1e0272, DM2_MAX(con(0x2), vw_60), con(0xff));
    goto M_exit;

    case 8:
      vw_60 = DM2_MAX(con(0x20), vw_60);
      ddata.savegames1.b4 = CUTX8(DM2_MIN(unsignedword(ddata.savegames1.b4) + vw_60, con(0xff)));
    goto M_exit;

    case 9:
      {
        vw_5c = ddata.v1e0270 + table1d27fc[ddata.v1e0258];
        vw_24 = ddata.v1e0272 + table1d2804[ddata.v1e0258];
        bool boolrg7 = true;
        x16 wordrg160 = SKW_GET_CREATURE_AT(vw_5c, vw_24);
        if (wordrg160 != con(0xffffffff) && (SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg160) & con(0x8000)) == con(0x0))
          boolrg7 = false;
        if ((((SKW_GET_TILE_VALUE(vw_5c, vw_24) & con(0xff)) >> con(0x5)) & con(0xff)) != con(0x2) || !boolrg7)
          vuw_20 = con(0x0);
        else
        {
          ddata.v1e102e = con(0x1);
          SKW_MOVE_RECORD_TO(con(0xffff), ddata.v1e0272, vw_5c, ddata.v1e0270, vw_24);
          ddata.v1e102e = con(0x0);
        }
      }
    goto M_exit;

    case 10:
      ddata.savegames1.b3 = CUTX8(DM2_MIN(con(0xc8), unsignedword(ddata.savegames1.b3) + vw_60));
    goto M_exit;

    case 11:
      wordrg3 = con(0x5);
    break;

    case 12:
      wordrg3 = con(0x4);
    break;

    case 13:
      wordrg3 = con(0x6);
    break;

    case 14:
      wordrg3 = con(0x3);
    break;

    case 15:
      SKW_PLAYER_CONSUME_OBJECT(vw_04, vw_34, vw_58);
    goto M_exit;

    case 16:
      {
        vbool_14 = boolrg6;
        x16 wordrg159 = SKW_FIND_POUCH_OR_SCABBARD_POSSESSION_POS(vw_04, vw_34);
        if (wordrg159 >= con(0x0))
        {
          vw_58 = SKW_REMOVE_POSSESSION(vw_04, wordrg159);
          SKW_EQUIP_ITEM_TO_HAND(vw_04, wordrg3, vw_58);
        }
      }
    goto M_exit;

    case 31:
      if (SKW_IS_MISSILE_VALID_TO_LAUNCHER(vw_04, heroptrrg5->warrc3[vw_4c], wordrg3))
      {
        vw_2c = SKW_REMOVE_POSSESSION(vw_04, vw_4c);
        x16 wordrg32 = SKW_QUERY_PLAYER_SKILL_LV(vw_04, boolrg6, con(0xb));
        x16 tmp = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_2c, con(0xc));
        x16 vw_18 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_58, con(0xa)) + 2 * wordrg32;
        wordrg32 += SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_2c, con(0x9)) + SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_58, con(0x9));
        SKW_SHOOT_CHAMPION_MISSILE(heroptrrg5, wordrg32, vw_18, vw_2c, tmp);
        vbool_14 = boolrg6;
      }
      else
      {
        if (vw_48 == con(0x0))
        {
          ddata.v1e0b6c = DM2_MAX(con(0x1), con(0x8) - SKW_UPDATE_GLOB_VAR(con(0x43), con(0x3), true));
          ddata.v1e0b7c = con(0xfffffffe);
          ddata.v1e0b78 = SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(vw_58, con(0x5));
          ddata.v1e0b72 = vw_4c;
          vw_68 = con(0x0);
        }
        boolrg6 = false;
      }
    goto M_exit;

    case 32:
    case 33:
    case 34:
      x16 wordrg33;
      if (vw_54 != con(0x21))
      {
        if (vw_54 != con(0x22))
          wordrg33 = con(0x2);
        else
          wordrg33 = con(0x0);
      }
      else
        wordrg33 = con(0x1);
      vw_60 = DM2_MAX(con(0x20), vw_60) * con(0x3);
      wordrg2 = vw_60;
      byterg49 = CUTX8(wordrg33);
      wordrg3 = con(0x1);
    break;

    case 35:
      wordrg34 = heroptrrg5->w38 - heroptrrg5->w36;
      if (wordrg34 > con(0x0) && heroptrrg5->w3e != con(0x0))
      {
        x16 wordrg22 = DM2_MIN(con(0xa), SKW_QUERY_PLAYER_SKILL_LV(vw_04, boolrg6, con(0xd)));
        vw_68 = con(0x2);
        for(;;)
        {
          x16 wordrg60 = DM2_MIN(wordrg34, wordrg22);
          heroptrrg5->w36 += wordrg60;
          vw_68 += con(0x2);
          x16 wordrg158 = heroptrrg5->w3e - con(0x2);
          heroptrrg5->w3e = wordrg158;
          if (wordrg158 <= con(0x0) || (wordrg34 -= wordrg60, wordrg34 == con(0x0)))
          {
            if (heroptrrg5->w3e < con(0x0))
              heroptrrg5->w3e = con(0x0);
            heroptrrg5->u32.b.b1 |= con(0x8);
            boolrg6 = true;
            break;
          }
        }
      }
    goto M_exit;

    case 41:
      {
        x16 wordrg155 = ddata.v1e0258;
        x32 longrg22 = (signedlong(ddata.v1e0258) + (boolrg6 ? 1 : 0)) & con(0x3);
        x16 wordrg156;
        if (unsignedlong(heroptrrg5->b1d) != longrg22)
        {
          wordrg155 += con(0x2);
          wordrg155 &= con(0x3);
          if (unsignedword(heroptrrg5->b1d) != wordrg155)
            wordrg156 = con(0x0);
          else
            wordrg156 = con(0x1);
        }
        else
          wordrg156 = con(0x1);
        boolrg6 = SKW_2c1d_1de2(vw_04, wordrg156, vw_34);
      }
    goto M_exit;

    case 43:
      boolrg6 = SKW_SET_DESTINATION_OF_MINION_MAP(vw_58, ddata.v1e0272, ddata.v1e0266, ddata.v1e0270);
      if (!boolrg6)
      {
        vw_68 = con(0x0);
        vuw_20 = con(0x1);
      }
    goto M_exit;

    case 44:
    case 45:
      if (SKW_GET_MISSILE_REF_OF_MINION(recoptrrg7->u2.w, vw_58) == NULL)
      {
        if (vw_54 != con(0x2e))
        {
          vb_70 = con(0x32);
          vw_5c = ddata.v1e0270;
          vw_24 = ddata.v1e0272;
          wordrg2 = (ddata.v1e0258 + con(0x2)) & con(0x3);
          wordrg3 = ddata.v1e0266;
        }
        else
        {
          vb_70 = con(0x33);
          wordrg2 = ddata.v1e0258;
          vw_5c = recoptrrg7->u6.w & con(0x1f);
          vw_24 = ulrshift(recoptrrg7->u6.w, con(0x6), con(0xb));
          vw_44 = con(0xffffffff);
          wordrg3 = urshift(recoptrrg7->u6.w, con(0xa));
        }
      }
      else
      {
        SKW_GET_ADDRESS_OF_RECORD(recoptrrg7->u2.w)->u4.b.b0 = ((vw_54 != con(0x2d)) ? 1 : 0) + con(0x32);
        SKW_1c9a_0247(recoptrrg7->u2.w);
        goto M_exit;
      }
    break;

    case 46:
      vb_70 = con(0x30);
      vw_5c = ddata.v1e0270;
      vw_24 = ddata.v1e0272;
      wordrg2 = (ddata.v1e0258 + con(0x2)) & con(0x3);
      wordrg3 = ddata.v1e0266;
    break;

    case 47:
      SKW_RELEASE_MINION(recoptrrg7->u2.w);
    goto M_exit;

    case 48:
      wordrg109 = con(0x31);
    break;

    case 49:
      wordrg109 = con(0x34);
    break;

    case 50:
      wordrg109 = con(0x35);
    break;

    case 53:
      if (!SKW_LOAD_GDAT_INTERFACE_00_0A())
      {
        ddata.v1e0b6c = DM2_MAX(boolrg6 ? 1 : 0, con(0x8) - SKW_UPDATE_GLOB_VAR(con(0x47), con(0x3), true));
        ddata.v1e0b7c = con(0xfffffffa);
      }
    goto M_exit;

    default: throw(THROW_DMABORT);
  }
  switch (secondjump)
  {
    case 11:
    case 12:
    case 13:
    case 14: // no break for those
      wordrg2 = DM2_MAX(con(0x20), vw_60) << con(0x2);
      vw_60 = wordrg2;
      byterg49 = CUTX8(wordrg3);
      wordrg3 = con(0x0);
    case 32:
    case 33:
    case 34:
      if (!SKW_2c1d_0186(heroptrrg5, wordrg2, wordrg3, byterg49))
      {
        vw_68 >>= con(0x2);
        vuw_20 >>= con(0x1);
      }
    break;

    case 44:
    case 45:
    case 46:
      {
        x16 wordrg188;
        wordrg188 = SKW_CREATE_MINION(unsignedword(vb_70), wordrg2, vw_5c, SKW_QUERY_PLAYER_SKILL_LV(vw_04, true, vw_50), vw_24, wordrg3, vw_58, CUTX8(vw_44));
        flag = wordrg188 == con(0xffffffff);
        boolrg6 = wordrg188 != con(0xffffffff);
        if (flag)
        {
          vw_68 >>= con(0x2);
          vuw_20 >>= con(0x1);
          SKW_CREATE_CLOUD(con(0xffa8), vw_5c, vw_24, con(0x6e), con(0xff));
        }
        else
        {
          if (vw_54 == con(0x2f))
            SKW_SET_DESTINATION_OF_MINION_MAP(vw_58, ddata.v1e1028, ddata.v1e102c, ddata.v1e102a);
          recoptrrg7->u2.w = wordrg188;
        }
      }
    break;

    case 48:
    case 49:
    case 50:
      if (SKW_CREATE_MINION(wordrg109, (ddata.v1e0258 + con(0x2)) & con(0x3), ddata.v1e0270, urshift(vw_60, con(0x3)), ddata.v1e0272, ddata.v1e0266, vw_58, CUTX8(ddata.v1e0258)) == con(0xffffffff))
        SKW_CREATE_CLOUD(con(0xffa8), ddata.v1e0270, ddata.v1e0272, con(0x6e), con(0xff));
    break;

    default: throw(THROW_DMABORT);
  }
M_exit: // M_3219E:
  if (!vbool_14)
    SKW_QUEUE_NOISE_GEN2(ddata.v1e0b7f, vb_6c, con(0xfe), ddata.v1e0b80, ddata.v1e0270, ddata.v1e0272, vw_3c, con(0x73), con(0xc8));
  if (heroptrrg5->w36 == con(0x0) || vw_48 != con(0x0))
    return boolrg6;
  if (vuw_20 != con(0x0))
    SKW_ADJUST_HAND_COOLDOWN(vw_04, vw_34, vuw_20);
  if (vw_40 != con(0x0))
    SKW_ADJUST_STAMINA(vw_04, vw_40);
  if (vw_68 != con(0x0))
    SKW_ADJUST_SKILLS(vw_04, vw_68, vw_50);
  if (boolrg6)
  {
    x32 tmp = unsignedlong(vw_34) << con(0x3);
    sptrrg4 = &ddata.v1e0adc[vw_04][tmp];
    x16 wordrg12 = SKW_QUERY_CUR_CMDSTR_ENTRY(con(0xe));
    sptrrg4->w2 = wordrg12;
    if (wordrg12 != con(0x0))
    {
      sptrrg4->w0 = wordrg12;
      sptrrg4->b4 = con(0x1);
      sptrrg4->w6 = vw_58;
      sptrrg4->b5 = CUTX8(vw_00);
    }
  }
  return boolrg6;
}

// was SKW_24a5_036a
void SKW_ADD_BACKGROUND_LIGHT_FROM_TILE(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  x16 wordrg5;
  c_record* recoptrrg1;
  c_record* recoptrrg3;
  x16 vw_04;
  x16 vw_08;
  s_8wordarray vs_0c;
  c_5bytes vs_1c;
  x16 vw_24;
  x8 vb_30;

  vw_08 = eaxw;
  vw_04 = ebxw;
  x16 wordrg6 = con(0x0);
  vw_24 = con(0x0);
  wordrg5 = con(0x0);
  SKW_SUMMARIZE_STONE_ROOM(&vs_0c, vw_04, ecxw, edxw);
  ui16 uwordrg3 = vs_0c.warr_00[0x0];
  x16 ret; // added, selects what to be processed in the end
  x16 vw_2c;
  x16 vw_28;
  if (uwordrg3 < con(0x1))
  {
    if (uwordrg3 == con(0x0))
    {
      if ((argw0 & con(0x4)) != con(0x0))
      {
        vw_2c = vs_0c.warr_00[0x5];
        vb_30 = CUTX8(vw_2c);
        if (vb_30 != con(0xffffffff))
        {
          vw_28 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0xf8), vb_30);
          if (vw_28 != con(0x0))
          {
            bool boolrg7 = (vw_28 & con(0x8000)) != con(0x0);
            vw_28 &= con(0x7fff);
            if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x9), con(0xb), con(0x63), vb_30) == con(0x0))
            {
              if (!boolrg7 || (vw_2c & con(0xff00)) != con(0x0))
                wordrg6 += vw_28;
            }
            else
              vw_24 += vw_28 * signedword(table1d6712[DM2_BETWEEN_VALUE(con(0x0), con(0x5), ddata.v1e1480 + ddata.v1e1476)]) / con(0x64);
          }
        }
      }
    }
    ret = 0;
  }
  else if (uwordrg3 <= con(0x2) || (uwordrg3 >= con(0x5) && (uwordrg3 <= con(0x5) || (uwordrg3 >= con(0x10) && uwordrg3 <= con(0x13)))))
  {
    if ((argw0 = con(0x1)) == con(0x0))
      ret = 1;
    else
    {
      x16 wordrg181 = vs_0c.warr_00[0x0];
      if (wordrg181 != con(0x1) && wordrg181 != con(0x2) && wordrg181 != con(0x5))
        ret = 2;
      else
      {
        vw_2c = vs_0c.warr_00[0x5];
        vb_30 = CUTX8(vw_2c);
        if (vb_30 == con(0xffffffff))
          ret = 2;
        else
        {
          x16 wordrg17 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xa), con(0xb), con(0xf8), vb_30);
          vw_28 = wordrg17;
          if (wordrg17 != con(0x0))
          {
            wordrg17 &= con(0x8000);
            bool boolrg3 = wordrg17 != con(0x0);
            vw_28 &= con(0x7fff);
            if (!SKW_GET_TELEPORTER_DETAIL(&vs_1c, ecxw, vw_04))
            {
              if (!boolrg3 || (vw_2c & con(0xff00)) != con(0x0))
                wordrg6 += vw_28;
            }
            else
              vw_24 += CUTX16(unsignedlong(vw_28) * signedlong(table1d6712[DM2_BETWEEN_VALUE(con(0x0), con(0x5), ddata.v1e1480 + ddata.v1e1476)]) / con(0x64));
            ret = 2;
          }
          else
            ret = 0;
        }
      }
    }
  }
  else
    ret = 0;
  // M_28F61:
  if (ret == 2)
  {
    x16 wordrg4 = vs_0c.warr_00[0x2]; // adj
    // M_28F65: // co-label M_28FF7
    for (;; wordrg4 = SKW_GET_NEXT_RECORD_LINK(wordrg4))
    {
      if (wordrg4 == con(0xfffffffe))
        break;
      x16 wordrg162 = urshift(wordrg4 & con(0x3c00), con(0xa));
      if (wordrg162 != con(0xf))
      {
        if (wordrg162 != con(0xe) || (recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg4), recoptrrg1->u2.w != con(0xffffff80)))
          continue;
        wordrg5 += unsignedword(recoptrrg1->u4.b.b0) / 2 - signedword(table1d673d[0x3]);
      }
      else
      {
        recoptrrg3 = SKW_GET_ADDRESS_OF_RECORD(wordrg4);
        x16 wordrg24 = recoptrrg3->u2.w & con(0x7f);
        if ((wordrg24 != con(0x2) && ((recoptrrg3->u2.b.b0 & con(0x7f)) != con(0x0))) && wordrg24 != con(0x30))
          continue;
        wordrg5 += urshift(recoptrrg3->u2.w, con(0x9));
      }
    }
    ret = 1;
  }
  // M_29008:
  if (ret == 1)
    if ((argw0 & con(0x2)) != con(0x0))
    {
      x16 wordrg171 = SKW_GET_CREATURE_AT(vw_04, ecxw);
      if (wordrg171 != con(0xffffffff))
        wordrg6 += (SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg171, con(0xf8)) & con(0x7fff));
    }
  // M_29043: always ends here
  if (vw_08 <= con(0x8) && vw_24 != con(0x0))
    vw_24 = DM2_MAX(con(0x3), vw_24 - table1d672b[vw_08]);
  else
    vw_24 = con(0x0);
  if (vw_08 > con(0x5))
    vw_08 = con(0x5);
  if (wordrg6 != con(0x0))
  {
    wordrg6 -= table1d673d[vw_08];
    wordrg6 = DM2_MAX(con(0x2), wordrg6);
  }
  wordrg6 += vw_24;
  ddata.v1e0974 += wordrg6;
  if (wordrg5 != con(0x0))
  {
    wordrg5 -= table1d673d[vw_08];
    wordrg5 = DM2_MAX(con(0x2), wordrg5);
  }
  ddata.v1e0978 += wordrg5;
}

bool SKW_075f_0af9(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  ui16 uwordrg5;
  c_record* recoptrrg1;
  c_record* recoptrrg6;
  c_aispec* aiptrrg4;
  x16 vw_0c;
  x16* p16_10;
  c_record* prec_14;
  c_aispec* pai_18;
  x16 vw_30;
  x16 vw_34;
  x16 vw_38;
  x16 vw_40;
  x16 vw_48;
  x16 vw_4c;
  x16 vw_50;
  x16 vw_54;
  x16 vw_58;
  x16 vw_5c;
  x16 vw_60;

  bool skip = false; // added
  bool farskip = false; // added
  bool hugeskip = false; // added
  bool pass = false; // added
  vw_0c = eaxw;
  x16 vw_08 = edxw;
  x16 vw_04 = ebxw;
  vw_58 = con(0x0);
  vw_38 = con(0x0);
  recoptrrg6 = SKW_GET_ADDRESS_OF_RECORD(argw0);
  uwordrg5 = recoptrrg6->u2.w; // TODO: unsigned
  x16 vw_2c;
  x16 vw_3c;
  vw_34 = urshift(uwordrg5 & con(0x3c00), con(0xa));
  if (vw_34 == con(0x8))
  {
    prec_14 = SKW_GET_ADDRESS_OF_RECORD(uwordrg5);
    ui16 uwordrg1 = urshift(2 * prec_14->u2.w, con(0x9));
    if (uwordrg1 >= con(0x3))
    {
      bool doit = false; // added
      if (uwordrg1 <= con(0x3))
      {
        vw_2c = con(0xff87);
        doit = true;
      }
      else if (uwordrg1 == con(0x13))
      {
        vw_2c = con(0xff80);
        doit = true;
      }
      if (doit)
      {
        vw_38 = con(0x1);
        vw_3c = unsignedword(CUTX8(prec_14->u2.w));
        vw_40 = uwordrg5; // TODO: unsigned
      }
    }
  }
  if (vw_34 != con(0xf) || uwordrg5 == con(0xff81) || uwordrg5 == con(0xff86))
    vw_50 = con(0x0);
  else
    vw_50 = con(0x1);
  p16_10 = NULL;
  bool vbool_20 = false;
  if (vw_08 > con(0xff))
  {
    vw_54 = (vw_08 >> con(0x8)) - con(0x1);
    vw_60 = unsignedword(vw_04 >> con(0x1));
    vw_08 &= con(0xff);
    vw_04 &= con(0xff);
  }
  else
  {
    vw_54 = vw_08;
    vw_60 = vw_04;
  }
  x16 vw_28 = vw_54;
  vw_30 = vw_54;
  x16 vw_24 = vw_60;
  vw_48 = vw_60;
  x16 vw_44;
  x16 wordrg2 = vw_0c;
  if (wordrg2 < con(0xffffffff))
  {
    if (wordrg2 >= con(0xfffffffd))
    {
      wordrg2 = SKW_GET_PLAYER_AT_POSITION(ecxw);
      if (wordrg2 >= con(0x0))
      {
        vbool_20 = true;
        vw_44 = SKW_075f_06bd(recoptrrg6, uwordrg5);
        if (vw_44 != con(0x0))
        {
          if (uwordrg5 == ucon16(0xff86))
            ddata.v1e01a4 *= 2;
          x16 wordrg32 = ulrshift(ddata.savegametimarrp[recoptrrg6->u6.w].v.w_08, con(0x4), con(0xe)) + con(0x2);
          if (unsignedword(ddata.hero[wordrg2].b1c) == wordrg32)
            ddata.v1e01a6 |= con(0x8000);
          if (SKW_WOUND_PLAYER(wordrg2, con(0xc), ddata.v1e01a6, vw_44) != con(0x0) && ddata.v1e01a4 != con(0x0))
            if ((CUTX16(SKW_RAND()) & con(0x7)) != con(0x0))
              SKW_PROCESS_POISON(wordrg2, ddata.v1e01a4);
        }
        if (vw_0c == con(0xfffffffe))
        {
          hugeskip = true;
          pass = true;
        }
      }
      else if (vw_0c != con(0xfffffffd))
        return false;
    }
    else
      hugeskip = true;
    pass = true;
  }
  if (!pass)
  {
    if (wordrg2 != con(0xffffffff))
    {
      if (wordrg2 <= con(0x0))
      {
        x16 wordrg124 = ulrshift(ddata.savegametimarrp[recoptrrg6->u6.w].v.w_08, con(0x4), con(0xe));
        vw_4c = wordrg124;
        vw_30 = vw_54 + table1d27fc[wordrg124];
        vw_48 = vw_60 + table1d2804[wordrg124];
        if (SKW_075f_084d(vw_30, vw_54, vw_60, vw_48, wordrg124, argw0))
          return true;
      }
      else
      {
        if (wordrg2 == con(0x4))
        {
          x8 byterg3 = ddata.savegamepp1[vw_08][vw_04] & con(0x7);
          recoptrrg1 = SKW_GET_ADDRESS_OF_TILE_RECORD(vw_08, vw_04);
          if (byterg3 == con(0x5) || ((uwordrg5 != con(0xff84)) && uwordrg5 != con(0xff8d)))
          {
            if (byterg3 == con(0x5) || byterg3 <= con(0x1))
              return false;
            bool boolrg19;
            if (SKW_0cee_3275(SKW_IS_REBIRTH_ALTAR(recoptrrg1)) != con(0x0))
            {
              if (vw_34 != con(0xf))
              {
                x16 wordrg414 = CUTX16(SKW_RAND()) & con(0x7f);
                if (unsignedword(recoptrrg6->u4.b.b1) <= wordrg414 || (SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(uwordrg5, con(0x0)) & con(0x2)) == con(0x0))
                  boolrg19 = false;
                else
                  boolrg19 = true;
              }
              else
                boolrg19 = uwordrg5 >= con(0xff83);
              if (boolrg19)
                return false;
            }
            vw_44 = SKW_075f_06bd(recoptrrg6, uwordrg5) + con(0x1);
            SKW_ATTACK_DOOR(vw_08, SKW_RAND16(vw_44) + vw_44, false, vw_04, con(0x0));
          }
        }
      }
      hugeskip = true;
    }
  }
  pass = false; // prepare for 2nd usage

  // M_7700:
  if (!hugeskip)
  {
    vw_30 = vw_08;
    vw_48 = vw_04;
    vw_5c = SKW_1c9a_03cf(&vw_30, ecxw, &vw_48);
    bool pass = false;
    if (vw_5c != con(0xffffffff))
    {
      x16 wordrg411 = vw_5c;
      if (SKW_1c9a_0958(wordrg411))
      {
        if (vw_0c != con(0xfffffffd))
          return false;
        farskip = true;
        pass = true;
      }
      else
      {
        prec_14 = SKW_GET_ADDRESS_OF_RECORD(wordrg411);
        pai_18 = SKW_QUERY_CREATURE_AI_SPEC_FROM_RECORD(prec_14->u4.b.b0);
        if ((pai_18->u0.b.b0 & con(0x20)) == con(0x0) || uwordrg5 == con(0xff83))
        {
          if ((pai_18->u0.b.b0 & con(0x1)) != con(0x0))
          {
            if (((pai_18->u1e.b.b1 & con(0x1)) != con(0x0)) && (uwordrg5 < UI16CAST(con(0xffffff80))))
            {
              if (vw_0c != con(0xfffffffd))
                return false;
              farskip = true;
            }
            else
            {
              aiptrrg4 = pai_18;
              if (((aiptrrg4->u0.w >> con(0x6)) & con(0x3)) > con(0x1))
              {
                if (vw_0c != con(0xfffffffd))
                  return false;
                farskip = true;
              }
              else if ((aiptrrg4->u1e.b.b1 & con(0x8)) != con(0x0))
                skip = true;
            }
          }
          else if (pai_18->u1c.b.b1 != con(0xffffffff))
            skip = true;
          pass = true;
        }
      }
    }
    if (!pass)
    {
      if (vw_0c != con(0xfffffffd))
        return false;
      farskip = true;
    }
    if (!farskip)
    {
      if (!skip)
      {
        x16 wordrg102 = ulrshift(ddata.savegametimarrp[recoptrrg6->u6.w].v.w_08, con(0x4), con(0xe));
        vw_4c = wordrg102;
        wordrg102 += con(0x2);
        wordrg102 &= con(0x3);
        vw_4c = wordrg102;
        vw_28 += table1d27fc[vw_4c];
        vw_24 += table1d2804[vw_4c];
        x16 wordrg118 = urshift(argw0, con(0xe));
        if ((vw_4c & con(0x1)) != (wordrg118 & con(0x1)))
          wordrg118++;
        else
          wordrg118--;
        x16 wordrg410 = (wordrg118 & con(0x3)) << con(0xe);
        argw0 = (argw0 & con(0x3fff)) | wordrg410;
      }
      // M_784F:
      vw_44 = (SKW_075f_06bd(recoptrrg6, uwordrg5) << con(0x6)) / pai_18->b2;
      if (vw_44 != con(0x0))
      {
        x16 wordrg116 = SKW_APPLY_CREATURE_POISON_RESISTANCE(vw_5c, ddata.v1e01a4) + vw_44;
        aiptrrg4 = pai_18;
        if ((aiptrrg4->u18.b.b1 & con(0x10)) != con(0x0))
          if (ddata.v1e01a6 != con(0x1))
            wordrg116 >>= con(0x2);
        SKW_ATTACK_CREATURE(vw_5c, vw_48, con(0x200d), vw_30, con(0x64), wordrg116);
        if (vw_50 == con(0x0) && (pai_18->u0.b.b1 & con(0x2)) != con(0x0))
          if ((SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(uwordrg5, con(0x0)) & con(0x40)) != con(0x0))
            p16_10 = &prec_14->u2.w;
      }
      if (vw_38 != con(0x0) || vw_34 == con(0x5) || (vw_34 == con(0xf) && uwordrg5 != con(0xff84) && (uwordrg5 < con(0xff89) || uwordrg5 > con(0xff8e))))
      {
        x16 wordrg115;
        if (vw_44 >= con(0x5) || uwordrg5 == con(0xff87))
          wordrg115 = con(0x5f);
        else
          wordrg115 = con(0x1e);
        SKW_ATTACK_CREATURE(vw_5c, vw_48, con(0x2), vw_30, wordrg115, con(0x0));
      }
      vbool_20 = true;
    }
  }
  // M_7991:
  skip = false; // reset for 2nd usage
  if ((vw_0c == con(0xfffffffd)) && !vbool_20)
    return con(0x0);
  ui16 uwordrg4; // silly operations in the conditions left
  if (vw_50 != con(0x0) || vw_38 != con(0x0) || uwordrg5 == con(0xff86))
  {
    if (vw_38 == con(0x0))
    {
      uwordrg4 = unsignedword(recoptrrg6->u4.b.b0);
      if ((uwordrg5 == con(0xff86) && (uwordrg4 >>= con(0x2), uwordrg4 == con(0x0))))
        skip = true;
      else if (uwordrg5 == con(0xff82) && (uwordrg4 >>= con(0x1), uwordrg4 == con(0x0)))
        skip = true;
    }
    else
    {
      uwordrg4 = vw_3c;
      SKW_DEALLOC_RECORD(vw_40);
      uwordrg5 = vw_2c;
      recoptrrg6->u2.w = uwordrg5; // TODO: unsigned
    }
  }
  else
    skip = true;
  if (!skip)
  {
    if (uwordrg5 >= UI16CAST(con(0xffffff89)) && uwordrg5 <= UI16CAST(con(0xffffff8a)))
    {
      vw_4c = ulrshift(ddata.savegametimarrp[recoptrrg6->u6.w].v.w_08, con(0x4), con(0xe));
      vw_58 = unsignedword(recoptrrg6->u4.b.b0);
    }
    x16 wordrg191;
    if (uwordrg5 != con(0xff87) && uwordrg5 != con(0xff84) && uwordrg5 != con(0xff8d))
      wordrg191 = ecxw;
    else
      wordrg191 = con(0xff);
    SKW_CREATE_CLOUD(uwordrg5, vw_54, vw_60, unsignedlong(uwordrg4), wordrg191);
  }
  // M_7A98:
  SKW_CUT_RECORD_FROM(argw0, vw_54, vw_60, NULL);
  SKW_DELETE_MISSILE_RECORD(argw0, vw_28, vw_24, p16_10);
  if (vw_58 != con(0x0))
  {
    x16 wordrg3 = DM2_MAX(DM2_MIN(vw_58, con(0xfe)), con(0x28));
    x16 wordrg105;
    if (uwordrg5 != con(0xff89))
      wordrg105 = (vw_4c + con(0x2)) & con(0x3);
    else
      wordrg105 = vw_4c;
    SKW_12b4_0d75(vw_08, wordrg105, wordrg3, vw_04);
  }
  return true;
}

// TODO: BUG: uninitialized wordrg6 possible now (example: pick up a dagger from button)
x16 SKW_MOVE_RECORD_TO(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0)
{
  x16 wordrg6 = 0; // TODO: init shouldn't be necessary
  x16 wordrg5;
  c_tim* timptrrg1;
  c_record* prec_34;
  x16 vw_4c;
  x16 vw_50;
  x16 vw_58;
  x16 vw_5c;
  x16 vw_60;
  x8 vb_64;
  x16 vw_6c;
  x16 vw_70;
  x16 vw_74;
  x16 vw_78;
  x16 vw_7c;
  x16 vw_80;
  x16 vw_84;

	// SPX: moved variables before goto
	x16 wordrg41;
	x16 wordrg2;

  wordrg5 = eaxw;
  vw_60 = edxw;
  vw_58 = ebxw;
  x16 vw_68 = ecxw;
  ddata.v1e1020 = con(0x0);
  bool vbool_3c = false;
  bool vbool_44 = false;
  vw_84 = ddata.v1d3248;
  vw_80 = (ddata.v1e0258);
  if (wordrg5 != con(0xffffffff))
  {
    vw_78 = urshift(wordrg5 & con(0x3c00), con(0xa));
    if (vw_78 == con(0x4))
      prec_34 = SKW_GET_ADDRESS_OF_RECORD(wordrg5);
    vw_74 = urshift(wordrg5, con(0xe));
  }
  else
  {
    ddata.v1e0390.l0 = con(0x3);
    vw_78 = con(0xffffffff);
    if (vw_60 >= con(0x0))
      SKW_2fcf_0234(vw_60, vw_68, argw0, vw_58);
  }
  x16 vw_54 = con(0x0); // TODO: ATTENTION! ORIGINAL BUG? WAS UNINITIALIZED!
  if (vw_68 >= con(0x0))
  {
    wordrg6 = wordrg5;
    vbool_3c = SKW_2fcf_0434(wordrg6, vw_58, vw_68, vw_60, signedlong(argw0), true);
    if (wordrg5 != con(0xffffffff))
    {
      if (SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg6, con(0xf8)) != con(0x0))
        if (vw_84 == ddata.v1e0266 || ddata.v1e102c == ddata.v1e0266)
          ddata.v1e0390.b0 |= con(0x1);
      wordrg5 &= con(0xffff3fff);
      x16 wordrg177 = wordrg5;
      wordrg5 = ddata.v1e1026;
      wordrg5 <<= con(0xe);
      wordrg5 |= wordrg177;
    }
    vw_68 = ddata.v1e102a;
    argw0 = ddata.v1e1028;
    vw_54 = ddata.v1e1024;
    wordrg6 = ddata.v1e102c;
    SKW_CHANGE_CURRENT_MAP_TO(wordrg6);
    if (vw_78 == con(0x4))
      if (!SKW_IS_CREATURE_ALLOWED_ON_LEVEL(wordrg5, wordrg6))
      {
        SKW_DROP_CREATURE_POSSESSION(wordrg5, argw0, con(0x0), vw_68, con(0x1));
        SKW_CHANGE_CURRENT_MAP_TO(vw_84);
        wordrg6 = vw_60;
        if (wordrg6 >= con(0x0))
          SKW_DELETE_CREATURE_RECORD(wordrg6, con(0x2), con(0xffffffff), vw_58);
        return con(0x1);
      }
    if (wordrg6 != vw_84 || vw_68 != vw_60 || argw0 != vw_58)
      vbool_44 = false;
    else
      vbool_44 = true;
    if (!vbool_44)
    {
      if (wordrg6 != vw_84)
      {
        if (wordrg5 != con(0xffffffff) || ddata.v1e0266 == vw_84)
          SKW_CHANGE_CURRENT_MAP_TO(vw_84);
        else
          SKW_LOAD_LOCALLEVEL_GRAPHICS_TABLE(ddata.v1e0270, vw_84, ddata.v1e0272);
      }
    }
    else if (wordrg5 != con(0xffffffff))
    {
      if (ddata.v1e1026 == vw_74 && vw_78 != con(0xe))
        goto M_exit;
    }
    else if (ddata.v1e0258 == vw_80)
      goto M_exit;
  }
  // M_3B444:
  if (vw_60 >= con(0x0))
  {
    if (wordrg5 != con(0xffffffff))
    {
      if (!vbool_3c)
      {
        bool parbool06;
        if (vw_68 >= con(0x0) || argw0 >= con(0x0))
          parbool06 = false;
        else
          parbool06 = true;
        bool boolrg3;
        if (ddata.v1d3248 != ddata.v1e0282 || vw_60 != ddata.v1e0280 || vw_58 != ddata.v1e027e)
          boolrg3 = false;
        else
          boolrg3 = true;
        R_3CE7D(vw_60, wordrg5, boolrg3, vw_58, false, parbool06);
      }
      else
        SKW_CUT_RECORD_FROM(wordrg5, vw_60, vw_58, NULL);
      if (vw_78 == con(0x4) && vw_68 < con(0xffffffff))
      {
        vw_7c = unsignedword(prec_34->u4.b.b1);
        if (vw_7c != con(0xff))
          SKW_1c9a_0fcb(vw_7c);
      }
    }
    else
      R_3CE7D(vw_60, con(0xffff), vbool_44, vw_58, false, false);
  }
   wordrg2 = vw_68;
  if (wordrg2 < con(0x0))
    goto M_exit;
  if (wordrg5 != con(0xffffffff))
  {
    if (vw_78 != con(0x4))
    {
      SKW_CHANGE_CURRENT_MAP_TO(wordrg6);
      if (vw_78 != con(0xe))
      {
        x32 longrg21;
        if ((vw_60 >= con(0x0)) || (vw_58 >= con(0x0)))
          longrg21 = con(0x0);
        else
          longrg21 = con(0x1);
        if (longrg21 == con(0x0) && wordrg6 != vw_84)
        {
          x16 wordrg195 = SKW_GET_CREATURE_AT(vw_68, argw0);
          if (wordrg195 != con(0xffffffff))
            longrg21 = lextended(SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg195) & con(0x1)); // was just a word-to-word operation here
        }
        bool boolrg3;
        if (ddata.v1d3248 != ddata.v1e0282 || vw_68 != ddata.v1e0280 || argw0 != ddata.v1e027e)
          boolrg3 = false;
        else
          boolrg3 = true;
        R_3CE7D(vw_68, wordrg5, boolrg3, argw0, true, longrg21 != con(0x0));
      }
      else
        SKW_APPEND_RECORD_TO(wordrg5, vw_68, argw0, NULL);
      goto M_exit;
    }
    SKW_CHANGE_CURRENT_MAP_TO(wordrg6);
    vw_7c = unsignedword(prec_34->u4.b.b1);
    if (wordrg6 == ddata.v1e0282 && wordrg2 == ddata.v1e0280 && argw0 == ddata.v1e027e)
      if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg5) & con(0x8000)) == con(0x0))
      {
        if (!SKW_TRY_PUSH_OBJECT_TO(con(0xffff), argw0, &vw_4c, vw_68, &vw_70))
          goto M_exit2;
        SKW_ATTACK_PARTY(SKW_RAND16(con(0xa)) + SKW_GET_CREATURE_WEIGHT(wordrg5) / 8, con(0x2), con(0x4));
        SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x8a), con(0xfe), con(0xfe), vw_68, argw0, con(0x1), con(0x64), con(0xc8));
        SKW_MOVE_RECORD_TO(con(0xffff), argw0, vw_4c, vw_68, vw_70);
      }
  }
  else
  {
    SKW_CHANGE_CURRENT_MAP_TO(wordrg6);
    SKW_2fcf_0b8b(vw_68, wordrg6, argw0);
    wordrg5 = SKW_GET_CREATURE_AT(ddata.v1e0270, ddata.v1e0272);
    bool skip = false;
    x16 rg4helper = wordrg5;
    x16 wordrg165 = SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg5);
    if (wordrg5 == con(0xffffffff) || (wordrg165 & con(0x8000)) != con(0x0))
      skip = true;
    else if ((wordrg165 & con(0x1)) == con(0x0) || SKW_GET_CREATURE_WEIGHT(rg4helper) <= con(0xfd))
    {
      if (SKW_TRY_PUSH_OBJECT_TO(wordrg5, argw0, &vw_4c, vw_68, &vw_70))
      {
        x16 wordrg108 = SKW_GET_PARTY_SPECIAL_FORCE();
        SKW_ATTACK_CREATURE(wordrg5, argw0, con(0x2000), vw_68, con(0x0), wordrg108 / 4 + (SKW_RAND16(wordrg108 / 2 + con(0x1))));
        SKW_MOVE_RECORD_TO(wordrg5, argw0, vw_4c, vw_68, vw_70);
        skip = true;
      }
    }
    else
    {
      if (SKW_TRY_PUSH_OBJECT_TO(con(0xffff), argw0, &vw_4c, vw_68, &vw_70))
      {
        SKW_LOAD_LOCALLEVEL_GRAPHICS_TABLE(vw_4c, argw0, vw_70);
        ddata.v1d27f8 = wordrg6;
        SKW_MOVE_RECORD_TO(con(0xffff), con(0x0), vw_4c, con(0xffffffff), vw_70);
        SKW_LOAD_LOCALLEVEL_GRAPHICS_TABLE(ddata.v1e0270, vw_84, ddata.v1e0272);
        if (ddata.v1d27f8 != vw_84)
          goto M_exit;
        ddata.v1d27f8 = con(0xffffffff);
        skip = true;
      }
    }
    if (!skip)
    {
      // M_3B6E5:
      SKW_1c9a_0db0(wordrg5);
      if (SKW_MOVE_RECORD_TO(wordrg5, ddata.v1e0272, con(0xfffffffd), ddata.v1e0270, con(0x0)) == con(0x0))
        SKW_2fcf_01c5(wordrg5, ddata.v1e0272, wordrg6, ddata.v1e0270, con(0x0));
    }
    // M_3B735:
    if (wordrg6 != vw_84)
      ddata.v1d27f8 = wordrg6;
    else
      R_3CE7D(ddata.v1e0270, con(0xffff), vbool_44, ddata.v1e0272, true, false);
    goto M_exit;
  }
  // M_3B885:
   wordrg41 = SKW_GET_CREATURE_AT(vw_68, argw0);
  vw_50 = wordrg41;
  if (vw_50 != con(0xffffffff))
  {
    vw_5c = SKW_GET_CREATURE_WEIGHT(wordrg5);
    vw_6c = vw_5c;
    x16 wordrg3 = SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg41);
    vb_64 = CUTX8(wordrg3);
    if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg5) & con(0x1)) == con(0x0) || vw_5c <= con(0xfd))
    {
      if (((vb_64 & con(0x1)) == con(0x0)) || SKW_GET_CREATURE_WEIGHT(vw_50) <= con(0xfd))
      {
        if (!SKW_TRY_PUSH_OBJECT_TO(vw_50, argw0, &vw_4c, vw_68, &vw_70))
          goto M_exit2;
      }
      else
      {
        if (!SKW_TRY_PUSH_OBJECT_TO(wordrg5, argw0, &vw_4c, vw_68, &vw_70))
          goto M_exit2;
        SKW_MOVE_RECORD_TO(wordrg5, con(0x0), vw_4c, con(0xffffffff), vw_70);
        goto M_exit;
      }
    }
    else if ((wordrg3 & con(0x1)) == con(0x0) || SKW_GET_CREATURE_WEIGHT(wordrg41) <= con(0xfd))
    {
      if (!SKW_TRY_PUSH_OBJECT_TO(vw_50, argw0, &vw_4c, vw_68, &vw_70))
      {
        SKW_1c9a_0db0(wordrg5);
        SKW_2fcf_01c5(wordrg5, argw0, wordrg6, vw_68, con(0x0));
        goto M_exit;
      }
    }
    else
      goto M_exit2;
    // M_3BA24:
    x16 wordrg109 = urshift(vw_6c, con(0x2));
    SKW_ATTACK_CREATURE(vw_50, argw0, con(0x2000), vw_68, con(0x0), wordrg109 + SKW_RAND16(wordrg109 / 2 + con(0x1)));
    SKW_MOVE_RECORD_TO(vw_50, argw0, vw_4c, vw_68, vw_70);
  }
  // M_3BA8D:
  if (!vbool_3c)
    R_3CE7D(vw_68, wordrg5, false, argw0, true, vbool_3c);
  else
    SKW_APPEND_RECORD_TO(wordrg5, vw_68, argw0, NULL);
  SKW_SET_MINION_RECENT_OPEN_DOOR_LOCATION(wordrg5, argw0, wordrg6, CUTX8(vw_68), false);
  if (vw_7c != con(0xff))
  {
    vw_7c = ddata.v1e089c[vw_7c].w02;
    x16 wordrg41 = vw_7c;
    if (wordrg41 != con(0xffffffff))
    {
      ddata.savegametimarrp[wordrg41].u.b.b_06 = CUTX8(vw_68);
      ddata.savegametimarrp[wordrg41].u.b.b_07 = CUTX8(argw0);
      timptrrg1 = &ddata.savegametimarrp[wordrg41];
      timptrrg1->un.l_00 = (unsignedlong(wordrg6) << con(0x18)) | (timptrrg1->un.l_00 & con(0xffffff));
    }
  }
  else if ((SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg5) & con(0x1)) == con(0x0))
    SKW_ALLOC_CAII_TO_CREATURE(wordrg5, argw0, vw_68);
M_exit: // M_3BC5B:
  ddata.v1e1024 = vw_54;
  ddata.v1e102a = vw_68;
  ddata.v1e1028 = argw0;
  ddata.v1e102c = wordrg6;
  SKW_CHANGE_CURRENT_MAP_TO(vw_84);
  return con(0x0);

M_exit2: // M_3B9E4:
  if (vw_7c != con(0xff))
    SKW_1c9a_0fcb(vw_7c);
  SKW_2fcf_01c5(wordrg5, argw0, wordrg6, vw_68, ddata.v1e1020);
  return con(0x2);
}

bool SKW_2fcf_0434(x16 eaxw, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, bool argbool1)
{
  x16 wordrg5;
  x8 byterg5;
  x8* bptrrg1;
  c_hero* heroptrrg5;
  c_record* recoptrrg5;
  c_record* recoptrrg1;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_18;
  x16 vw_1c;
  x16 vw_20;
  x16 vw_24;
  x16 vw_28;
  x16 vw_2c;
  x16 vw_30;
  x16 vw_38;
  bool flag;

  x16 wordrg6 = eaxw;
  vw_20 = edxw;
  vw_38 = ebxw;
  vw_0c = ecxw;
  ddata.v1e1020 = con(0x0);
  bool vbool_00 = false;
  x16 vw_14 = con(0x0);
  vw_28 = ddata.v1d3248;
  vw_30 = ddata.v1d3248;
  bool vbool_04;
  bool vbool_08;
  if (wordrg6 != con(0xffffffff))
  {
    vbool_04 = SKW_IS_OBJECT_FLOATING(wordrg6);
    vw_2c = urshift(wordrg6 & con(0x3c00), con(0xa));
    vw_1c = con(0x3);
    if (vw_2c != con(0x4))
    {
      if (vw_2c == con(0xe))
        ddata.v1e1024 = ulrshift(ddata.savegametimarrp[SKW_GET_ADDRESS_OF_RECORD(wordrg6)->u6.w].v.w_08, con(0x4), con(0xe));
    }
    else
    {
      if (SKW_QUERY_GDAT_DBSPEC_WORD_VALUE(wordrg6, con(0x1e)) == con(0x0))
        vw_1c = con(0x1);
      else
        vw_1c = con(0x2);
    }
    vbool_08 = false;
  }
  else
  {
    if (ddata.v1e03a8)
    {
      ddata.v1e03a8 = false;
      SKW_29ee_000f();
    }
    R_3B001(vw_0c, argw0);
    vw_1c = con(0x2);
    if (ddata.v1e0976 != con(0x0) || ddata.v1e0238)
      vbool_08 = false;
    else
      vbool_08 = true;
    vw_2c = con(0xffffffff);
    vbool_04 = false;
  }
  x16 vw_3c = con(0x32);
  // M_3AD30:
  for(;;)
  {
    flag = --vw_3c != con(0x0);
    if (flag)
    {
      bptrrg1 = ddata.savegamepp1[vw_0c];
      x16 wordrg4 = unsignedword(bptrrg1[argw0]);
      x8 byterg14 = ubrshift(bptrrg1[argw0], con(0x5));
      x16 vw_34_1 = unsignedword(byterg14);
      wordrg5 = unsignedword(byterg14);
      x16 wordrg199 = wordrg4 & con(0x8);
      if (wordrg5 != con(0x5))
      {
        if (vw_34_1 != con(0x2) || vbool_04 || wordrg199 == con(0x0) || (wordrg4 & con(0x1)) != con(0x0))
        {
          if (vw_34_1 != con(0x3) || wordrg6 == con(0xffffffff) || vw_2c == con(0xe) || vw_2c == con(0x4))
            break;
          wordrg4 &= con(0x4);
          if (wordrg4 == con(0x0))
          {
            vw_30 = SKW_LOCATE_OTHER_LEVEL(vw_30, &vw_0c, &argw0, con(0x1), NULL);
            SKW_CHANGE_CURRENT_MAP_TO(vw_30);
          }
          wordrg5 = SKW_0cee_06dc(vw_0c, argw0);
          vw_0c += table1d27fc[wordrg5];
          argw0 += table1d2804[wordrg5];
          wordrg5 += con(0x2);
          wordrg5 &= con(0x3);
          x16 wordrg21 = ((urshift(wordrg6, con(0xe)) - wordrg5 + con(0x1)) & con(0x2)) >> con(0x1);
          wordrg6 &= con(0xffff3fff);
          wordrg6 |= ((wordrg5 + wordrg21) & con(0x3)) << con(0xe);
          continue;
        }
        x16 wordrg31 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x6a), CUTX8(ulrshift(ddata.v1e03c0->we, con(0x8), con(0xc))));
        if (wordrg31 == con(0x0) || vw_2c != con(0x4))
        {
          if (vbool_08 && wordrg31 == con(0x0) && ddata.v1e102e == con(0x0))
          {
            vbool_08 = dm2_dballochandler.v1e13fe[0] != con(0x0);
            if (vw_14 != con(0x0))
            {
              SKW_LOAD_LOCALLEVEL_GRAPHICS_TABLE(vw_0c, vw_30, argw0);
              SKW_LOAD_LOCALLEVEL_DYN();
            }
            wordrg5 = ddata.v1e025c;
            ddata.v1e025c = con(0x0);
            SKW_DISPLAY_VIEWPORT(ddata.v1e0258, argw0, vw_0c);
            SKW_CHANGE_VIEWPORT_TO_INVENTORY(true);
            ddata.v1e025c = wordrg5;
          }
          if (wordrg31 == con(0x0))
          {
            vw_14++;
            vw_30 = SKW_LOCATE_OTHER_LEVEL(vw_30, &vw_0c, &argw0, con(0x1), NULL);
          }
          else
          {
            x16 wordrg3 = con(0x0);
            x16 wordrg43 = SKW_GET_TILE_RECORD_LINK(vw_0c, argw0);
            // M_3A98F: // co-label M_3A9FF
            for (;; wordrg43 = SKW_GET_NEXT_RECORD_LINK(wordrg43))
            {
              if (wordrg43 == con(0xfffffffe) == con(0x0))
                break;
              vw_2c = urshift(wordrg43 & con(0x3c00), con(0xa));
              if (vw_2c > con(0x3))
                break;
              if (vw_2c != con(0x2) || (recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg43), (recoptrrg1->u2.w & con(0x6)) != con(0x2)))
                continue;
              x16 wordrg115 = urshift(recoptrrg1->u2.w, con(0x3));
              if ((urshift(wordrg115, con(0x8)) & con(0x1f)) != con(0xc))
                continue;
              wordrg3 = unsignedword(CUTX8(wordrg115));
              break;
            }
            // M_3AA0B:
            vw_30 = R_3D93B(con(0x2), wordrg3, &vw_0c, SKW_RAND16(R_3D93B(con(0x3), wordrg3, &vw_0c, con(0x0), &argw0)) + con(0x1), &argw0);
          }
          // M_3AA6C:
          SKW_CHANGE_CURRENT_MAP_TO(vw_30);
          if (wordrg6 == con(0xffffffff))
          {
            R_3B001(vw_0c, argw0);
            if (UI16CAST(ddata.savegamew2) > UI16CAST(con(0x0)))
            {
              if (ddata.v1e102e == con(0x0))
              {
                heroptrrg5 = ddata.hero;
                for (x16 vw_34 = ddata.v1e102e; vw_34 < ddata.savegamew2; vw_34++)
                {
                  if (heroptrrg5->w36 != con(0x0))
                  {
                    SKW_WOUND_PLAYER(vw_34, con(0x30), con(0x2), (SKW_RAND02() + DM2_MIN(heroptrrg5->w38 >> con(0x2), con(0x11))) * vw_14);
                    SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x87), con(0xfe), heroptrrg5->b101, ddata.v1e0270, ddata.v1e0272, con(0xffff), con(0xbe), con(0xff));
                  }
                  vbool_00 = true;
                  heroptrrg5++;
                }
              }
              else
              {
                if ((dm2_dballochandler.v1e13fe[0] == con(0x0)) || (ddata.v1e0976 != con(0x0)) || ddata.v1e0238)
                  vbool_08 = false;
                else
                  vbool_08 = true;
                heroptrrg5 = ddata.hero;
                for (x16 vw_34 = con(0x0); vw_34 < ddata.savegamew2; vw_34++)
                {
                  if (heroptrrg5->w36 != con(0x0))
                  {
                    x16 wordrg45 = 25 * SKW_GET_PLAYER_WEIGHT(vw_34);
                    x16 wordrg27 = SKW_MAX_LOAD(heroptrrg5);
                    SKW_ADJUST_STAMINA(vw_34, (wordrg45 / wordrg27) + con(0x1));
                  }
                  heroptrrg5++;
                }
              }
            }
            ddata.v1e102e = con(0x0);
            continue;
          }
          if (vw_2c != con(0x4) || !argbool1)
            continue;
          if (vw_20 >= con(0x0))
          {
            SKW_CHANGE_CURRENT_MAP_TO(vw_28);
            SKW_ATTACK_CREATURE(wordrg6, vw_38, con(0x0), vw_20, con(0x0), con(0x14));
          }
        }
        else
        {
          recoptrrg5 = SKW_GET_ADDRESS_OF_RECORD(wordrg6);
          vw_0c = recoptrrg5->uc.w & con(0x1f);
          argw0 = ulrshift(recoptrrg5->uc.w, con(0x6), con(0xb));
          vw_30 = urshift(recoptrrg5->uc.w, con(0xa));
        }
        SKW_CHANGE_CURRENT_MAP_TO(vw_30);
        continue;
      }
      if (wordrg199 == con(0x0))
        break;
      recoptrrg5 = SKW_GET_ADDRESS_OF_TILE_RECORD(vw_0c, argw0);
      if ((recoptrrg5->u2.w & con(0x6000)) == con(0x2000) && vw_2c != con(0x4))
        break;
      if (vw_1c == con(0x3) || (vw_1c & urshift(2 * recoptrrg5->u2.w, con(0xe))) != con(0x0))
      {
        bool boolrg7;
        // M_3A5DC:
        if ((recoptrrg5->u2.w & con(0x1f)) != vw_0c)
          boolrg7 = false;
        else
        {
          if (ulrshift(recoptrrg5->u2.w, con(0x6), con(0xb)) != argw0 || urshift(recoptrrg5->u4.w, con(0x8)) != vw_30)
            boolrg7 = false;
          else
            boolrg7 = true;
        }
        vw_0c = recoptrrg5->u2.w & con(0x1f);
        argw0 = ulrshift(recoptrrg5->u2.w, con(0x6), con(0xb));
        ddata.v1e1020 = urshift(recoptrrg5->u2.w, con(0xf));
        vw_30 = urshift(recoptrrg5->u4.w, con(0x8));
        SKW_CHANGE_CURRENT_MAP_TO(vw_30);
        if (wordrg6 != con(0xffffffff))
        {
          if (vw_2c != con(0x4) || !argbool1)
          {
            if (vw_2c != con(0xe))
            {
              if (((recoptrrg5->u2.b.b1 & con(0x10)) == con(0x0)) && vw_20 != con(0xfffffffe))
              {
                x16 wordrg20 = wordrg6 >> con(0xe);
                x16 wordrg41 = ((ulrshift(recoptrrg5->u2.w, con(0x4), con(0xe)) + wordrg20) & con(0x3)) << con(0xe);
                wordrg6 = (wordrg6 & con(0x3fff)) | wordrg41;
              }
            }
            else
              wordrg6 = SKW_ROTATE_RECORD_BY_TELEPORTER(recoptrrg5, wordrg6);
          }
          else
          {
            if ((recoptrrg5->u2.b.b1 & con(0xffffff80)) != con(0x0))
            {
              if (ddata.v1d3248 != vw_28)
              {
                vw_18 = ddata.v1d3248;
                SKW_CHANGE_CURRENT_MAP_TO(vw_28);
                SKW_QUEUE_NOISE_GEN1(con(0x18), con(0x89), con(0x61), con(0x0), con(0x80), vw_20, vw_38, con(0x1));
                SKW_CHANGE_CURRENT_MAP_TO(vw_18);
              }
              SKW_QUEUE_NOISE_GEN1(con(0x18), con(0x89), con(0x61), con(0x0), con(0x80), vw_0c, argw0, con(0x1));
            }
            x16 wordrg21 = ulrshift(recoptrrg5->u2.w, con(0x4), con(0xe));
            SKW_ROTATE_CREATURE(wordrg6, wordrg21, ulrshift(recoptrrg5->u2.w, con(0x3), con(0xf)) != con(0x0));
          }
        }
        else
        {
          R_3B001(vw_0c, argw0);
          if ((recoptrrg5->u2.b.b1 & con(0xffffff80)) != con(0x0))
            SKW_QUEUE_NOISE_GEN1(con(0x18), con(0x89), con(0x61), con(0x0), con(0x80), ddata.v1e0270, ddata.v1e0272, con(0xffff));
          if (vw_28 != vw_30)
            vbool_08 &= dm2_dballochandler.v1e13fe[0] != con(0x0);
          x16 wordrg184;
          if ((recoptrrg5->u2.b.b1 & con(0x10)) == con(0x0))
            wordrg184 = ddata.v1e0258;
          else
            wordrg184 = con(0x0);
          wordrg184 += ulrshift(recoptrrg5->u2.w, con(0x4), con(0xe));
          wordrg184 &= con(0x3);
          SKW_ROTATE_SQUAD(wordrg184);
        }
        if (boolrg7)
          break;
        continue;
      }
    }
    break; // TODO: ugly loopform
  }
  // M_3AD40:
  ddata.v1e102a = vw_0c;
  ddata.v1e1028 = argw0;
  ddata.v1e102c = vw_30;
  ddata.v1e1026 = urshift(wordrg6, con(0xe));
  if (vw_14 != con(0x0) && argbool1)
    if (wordrg6 != con(0xffffffff))
    {
      byterg5 = SKW_QUERY_CLS2_FROM_RECORD(wordrg6);
      SKW_QUEUE_NOISE_GEN2(SKW_QUERY_CLS1_FROM_RECORD(wordrg6), con(0x85), con(0xfe), byterg5, vw_0c, argw0, con(0x1), con(0x3a), con(0x80));
    }
  if (vbool_00)
  {
    vw_18 = ddata.v1d3248;
    vw_10 = (ddata.v1e0266);
    vw_24 = (ddata.v1e0270);
    x16 wordrg61 = ddata.v1e0272;
    ddata.v1d3248 = con(0xffffffff);
    SKW_LOAD_LOCALLEVEL_GRAPHICS_TABLE(vw_0c, vw_30, argw0);
    heroptrrg5 = ddata.hero;
    for (x16 vw_34 = con(0x0); vw_34 < ddata.savegamew2; vw_34++)
    {
      if (heroptrrg5->w36 != con(0x0))
        SKW_QUEUE_NOISE_GEN2(con(0x16), con(0x82), con(0xfe), heroptrrg5->b101, vw_0c, argw0, con(0x2), con(0x69), con(0xc8));
      heroptrrg5++;
    }
    SKW_LOAD_LOCALLEVEL_GRAPHICS_TABLE(vw_24, vw_10, wordrg61);
    SKW_CHANGE_CURRENT_MAP_TO(vw_18);
  }
  // M_3AEAE:
  SKW_CHANGE_CURRENT_MAP_TO(vw_28);
  SKW_482b_05bf(true);
  return vbool_04;
}

// TODO init problem inside
bool SKW_19f0_2165(x8 eaxb, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1, x16 argw2)
{
  x16 wordrg5;
  x16 vw_0c;
  x16 vw_10;
  x8 vb_14; // and8(0x14, con(0x7f));

  vb_14 = eaxb;
  wordrg5 = ecxw;
  x16 wordrg6 = argw0;
  vw_0c = unsignedword(eaxb & con(0xffffff80));
  if (vw_0c != con(0x0))
  {
    vb_14 &= con(0x7f);
    vw_10 = con(0xffffffff);
  }
  if (ddata.s350.v1e057c == con(0x0))
    goto M_false;
  bool boolrg7;
  if (wordrg5 != con(0xffffffff))
  {
    if (edxw != wordrg5 || ebxw != wordrg6)
      boolrg7 = false;
    else
      boolrg7 = true;
    if (!boolrg7 && argw1 == con(0xffffffff))
      argw1 = SKW_CALC_VECTOR_DIR(edxw, wordrg5, wordrg6, ebxw);
  }
  else
  {
    boolrg7 = false;
    wordrg5 = table1d27fc[argw1];
    wordrg5 += edxw;
    wordrg6 = table1d2804[argw1] + ebxw;
  }
  SKW_19f0_045a(wordrg5, wordrg6);
  if ((vb_14 == con(0x0)) && ((ddata.v1e08ae & con(0x10)) == con(0x0)))
    goto M_false;
  x16 vw_08; // TODO: always initialized?
  if (CUTX8(urshift(ddata.v1e08ae, con(0x5))) != con(0x0))
  {
    if (ddata.v1e08be == con(0xffffffff))
    {
      ddata.v1e08be = con(0x0);
      ddata.v1e08c0[0] = con(0xffffffff);
    }
    if (boolrg7 && (ddata.v1d3248 == ddata.v1e08d6) && wordrg5 == ddata.v1e08d8 && wordrg6 == ddata.v1e08d4)
      goto M_false;
    x16 wordrg163;
    if (!boolrg7)
      wordrg163 = con(0x2a);
    else
      wordrg163 = con(0x1);
    if ((wordrg163 & ddata.s350.v1e057c) == con(0x0))
      goto M_false;
    if (vb_14 != con(0x1))
    {
      wordrg5 = SKW_19f0_04bf();
      // M_1EE05: // co-label M_1EF0B
      for (;; wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5))
      {
        if (wordrg5 == con(0xfffffffe))
          goto M_false;
        vw_08 = wordrg5 >> con(0xe);
        x16 wordrg63 = urshift(wordrg5 & con(0x3c00), con(0xa));
        if (wordrg63 < con(0x4) || wordrg63 >= con(0xe))
          continue;
        if (wordrg63 == con(0x4) || SKW_1c9a_0006(wordrg5, argw2) == con(0x0))
        {
          vw_08 = SKW_19f0_2024(wordrg5, argw1, argw2);
          if (vw_08 == con(0xffffffff))
            continue;
        }
        if (vw_08 < con(0x8))
        {
          if (ddata.v1e08c0[0] == con(0xffffffff))
          {
            x16 wordrg2;
            ui8 ubyterg4;
            if (!boolrg7)
            {
              ubyterg4 = con(0xc);
              wordrg2 = argw1;
            }
            else
            {
              if (argw1 != con(0xffffffff))
              {
                ubyterg4 = con(0x3);
                wordrg2 = argw1;
              }
              else
              {
                ubyterg4 = con(0xf);
                wordrg2 = con(0x0);
              }
            }
            x16 wordrg188 = con(0x0);
            while (wordrg188 < con(0x4))
            {
              ddata.v1e08c0[wordrg2] = ubyterg4 & con(0x1);
              wordrg2++;
              wordrg2 &= con(0x3);
              ubyterg4 >>= con(0x1);
              wordrg188++;
            }
          }
          if (ddata.v1e08c0[vw_08] == con(0x0))
          {
            ddata.v1e08be = con(0x1);
            continue;
          }
        }
        else
        {
          vw_10 = con(0x18);
          vw_08 &= con(0x3);
        }
        break;
      }
    }
    else if (!boolrg7)
      vw_10 = con(0x17);
  }
  else
  {
    if (ddata.v1e08be == con(0xffffffff))
    {
      ddata.v1e08be = con(0x0);
      ddata.v1e08bf = con(0x0);
      if (!boolrg7 && (ddata.s350.v1e057c & con(0x4)) != con(0x0))
      {
        ddata.v1e08c0[0] = (CUTX8(argw1) + con(0x2)) & con(0x3);
        if (ddata.v1e08b0 == con(0xffffffff))
          ddata.v1e08b0 = SKW_GET_TILE_RECORD_LINK(wordrg5, wordrg6);
        wordrg5 = ddata.v1e08b0;
        for(;;)
        {
          if (wordrg5 == con(0xfffffffe))
            break;
          if (urshift(wordrg5 & con(0x3c00), con(0xa)) > con(0x3))
            break;
          x32 longrg3 = unsignedlong(wordrg5);
          if (SKW_IS_WALL_ORNATE_ALCOVE_FROM_RECORD(ddata.v1e08b0, wordrg5))
          {
            longrg3 >>= con(0xe);
            if (longrg3 != signedlong(ddata.v1e08c0[0]))
              ddata.v1e08be = con(0x1);
            else
              ddata.v1e08bf = con(0x1);
          }
          wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5);
        }
        ddata.v1e08b2 = wordrg5;
      }
    }
    if (ddata.v1e08bf == con(0x0))
      goto M_false;
    if (vb_14 != con(0x1))
    {
      vw_10 = con(0x1a);
      vw_08 = signedword(ddata.v1e08c0[0]);
      wordrg5 = ddata.v1e08b2;
      // M_1ED01: // co-label M_1ED6C
      for (;; wordrg5 = SKW_GET_NEXT_RECORD_LINK(wordrg5))
      {
        if (wordrg5 == con(0xfffffffe))
          goto M_false;
        x16 wordrg3 = wordrg5;
        if (urshift(wordrg3, con(0xe)) != vw_08)
          continue;
        x16 wordrg181 = urshift(wordrg5 & con(0x3c00), con(0xa));
        if (wordrg181 == con(0x4) || wordrg181 >= con(0xe))
          continue;
        if (SKW_1c9a_0006(wordrg3, argw2) != con(0x0))
          break;
        if (SKW_19f0_2024(wordrg3, argw1, argw2) != con(0xffffffff))
          break;
      }
    }
    else
      vw_10 = con(0x19);
  }
  // M_1EF30:
  if (vw_0c == con(0x0))
    return true;
  if (argw1 == con(0xffffffff))
    argw1 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  if (!boolrg7)
    if (SKW_19f0_0559(argw1))
      return true;
  ddata.s350.v1e0556->u.v.b1d = CUTX8(argw1);
  if (vb_14 != con(0x1))
  {
    if (vw_10 == con(0xffffffff))
    {
      x16 wordrg180 = (vw_08 - unsignedword(ddata.s350.v1e0556->u.v.b1d) + con(0x1)) & con(0x3);
      if (boolrg7)
      {
        bool skip = false;
        vw_10 = ((wordrg180 >= con(0x2)) ? 1 : 0) + con(0xc);
        x8 byterg42;
        if (wordrg180 != con(0x0))
        {
          if (wordrg180 != con(0x3))
            skip = true;
          else
            byterg42 = ddata.s350.v1e0556->u.v.b1d + con(0x1);
        }
        else
          byterg42 = ddata.s350.v1e0556->u.v.b1d - con(0x1);
        if (!skip)
        {
          byterg42 &= con(0x3);
          ddata.s350.v1e0556->u.v.b1d = byterg42;
        }
        if ((table1d607e[ddata.s350.v1e0584].u.b[1] & con(0x10)) != con(0x0))
        {
          x16 wordrg21 = unsignedword(ddata.s350.v1e0556->u.v.b1d);
          if (wordrg21 != ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)))
          {
            SKW_19f0_0559(unsignedword(CUTX8(wordrg21)));
            return true;
          }
        } 
      }
      else
      {
        if (wordrg180 >= con(0x2))
          vw_10 = con(0x2c);
        else
          vw_10 = con(0x2b);
      }
    }
  }
  else if (vw_10 == con(0x19))
    vw_08 = argw1;
  else if (vw_10 != con(0x17))
  {
    x16 wordrg15 = SKW_RAND01();
    if (!boolrg7)
      wordrg15 += con(0x2);
    vw_08 = (argw1 + wordrg15) & con(0x3);
    vw_10 = table1d6299[wordrg15];
  }
  else
  {
    x16 wordrg22 = unsignedword(SKW_48ae_01af(SKW_0cee_2df4(SKW_19f0_050f()), argw1));
    if (wordrg22 == con(0x0))
      goto M_false;
    x16 wordrg41 = SKW_RAND16(SKW_1c9a_0598(wordrg22)) + con(0x1); // BUGFIX 2/2014
    x16 wordrg19 = SKW_COMPUTE_POWER_4_WITHIN(wordrg22, wordrg41);
    vw_08 = con(0x0);
    for(;;)
    {
      if ((wordrg19 & con(0x1)) != con(0x0))
        break;
      wordrg19 >>= con(0x1);
      vw_08++;
    }
  }
  ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
  ddata.s350.v1e0556->u.v.u18.w |= ddata.v1e08a8 & con(0x1f);
  ddata.s350.v1e0556->u.v.u18.w = (ddata.s350.v1e0556->u.v.u18.w & con(0xfffffc1f)) | ((ddata.v1e08aa & con(0x1f)) << con(0x5));
  ddata.s350.v1e0556->u.v.u18.b.b1 &= con(0x3);
  ddata.s350.v1e0556->u.v.u18.w |= ((ddata.v1e08ac & con(0x3f)) << con(0xa));
  ddata.s350.v1e0556->u.v.b1c = CUTX8(vw_08);
  ddata.s350.v1e0556->u.v.b1e = CUTX8(argw2);
  ddata.s350.v1e0556->u.v.b20 = vb_14;
  ddata.s350.v1e0556->u.v.b1a = CUTX8(vw_10);
  ddata.s350.v1e056f = con(0xfffffffc);
  return true;

M_false: // M_1EF1A:
  if (vw_0c != con(0x0))
    ddata.s350.v1e056f = con(0xfffffffd);
  return false;
}

void SKW_14cd_09e2(void)
{
  x8 byterg4h;
  x16 wordrg5;
  const s_seven* s7ptrrg2;
  c_5bytes vs_00;
  x16 vw_08;
  c_record* prec_0c;
  x8 vb_18;
  x8 vb_1c;
  x8 vb_20;

	// SPX: moved variable before goto
  x8 byterg41;

  prec_0c = ddata.s350.v1e054e;
  SKW_SELECT_CREATURE_37FC();
  vw_08 = CUTX16(table1d607e[ddata.s350.v1e0584].u.l);
  if ((vw_08 & con(0x40)) == con(0x0))
    ddata.s350.v1e07ed = (((vw_08 & con(0x20)) == con(0x0)) ? 1 : 0) + con(0x4);
  else
    ddata.s350.v1e07ed = con(0x0);
  if (ddata.s350.v1e0588->p2 == getadr_u1d439d())
  {
    ddata.s350.v1e0556->u.v.b1a = con(0x0);
    return;
  }
  // M_16410:
  if (ddata.s350.v1e0588->p2 == getadr_u1d4396())
  {
    vb_1c = CUTX8(SKW_RAND()) & con(0x7);
    if (vb_1c > con(0x3))
    {
      ddata.s350.v1e0556->u.v.b1a = con(0x0);
      return;
    }
    if (vb_1c == con(0x0))
    {
      SKW_19f0_0559(CUTX16(ddata.longmallocx) & con(0x3));
      return;
    }
    ddata.s350.v1e0556->u.v.b1b = CUTX8(ulrshift(prec_0c->ue.w, con(0x6), con(0xe)));
    x16 wordrg45 = (unsignedword(ddata.s350.v1e0562.u.b.b_06) + table1d27fc[ulrshift(prec_0c->ue.w, con(0x6), con(0xe))]) & con(0x1f);
    ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
    x16 wordrg3 = ddata.s350.v1e0556->u.v.u18.w | wordrg45;
    ddata.s350.v1e0556->u.v.u18.w = wordrg3;
    x16 wordrg44 = ((unsignedword(ddata.s350.v1e0562.u.b.b_07) + table1d2804[ulrshift(prec_0c->ue.w, con(0x6), con(0xe))]) & con(0x1f)) << con(0x5);
    x16 wordrg25 = (wordrg3 & con(0xfffffc1f)) | wordrg44;
    ddata.s350.v1e0556->u.v.u18.w = wordrg25;
    x8 byterg123 = (SKW_GET_TILE_VALUE(wordrg25 & con(0x1f), ulrshift(wordrg25, con(0x6), con(0xb))) & con(0xff)) >> con(0x5);
    if (byterg123 == con(0x0) || byterg123 == con(0x7))
    {
      ddata.s350.v1e0556->u.v.b1a = con(0x0);
      return;
    }
    if (byterg123 == con(0x5))
    {
      x16 wordrg24 = ulrshift(ddata.s350.v1e0556->u.v.u18.w, con(0x6), con(0xb));
      if (SKW_GET_TELEPORTER_DETAIL(&vs_00, wordrg24, ddata.s350.v1e0556->u.v.u18.w & con(0x1f)))
        if (!SKW_IS_CREATURE_ALLOWED_ON_LEVEL(ddata.s350.v1e054c, unsignedword(vs_00.b_04)))
        {
          ddata.s350.v1e0556->u.v.b1a = con(0x0);
          return;
        }
    }
    ddata.s350.v1e0556->u.v.b1a = con(0x2);
    return;
  }
  SKW_13e4_01a3();
  ddata.s350.v1e0898 = UPCAST(x8, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x100)));
  x16 vw_10 = (SKW_RAND02() == con(0x0)) ? 1 : 0;
  if ((vw_08 & con(0x40)) == con(0x0))
  {
    x16 wordrg23 = unsignedword(ddata.s350.v1e0562.u.b.b_07);
    if (!SKW_CREATURE_GO_THERE(ddata.s350.v1e07ed, wordrg23, unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_06), wordrg23, con(0xffffffff)))
    {
      bool boolrg19;
      bool skip = false; // added
      if (ddata.s350.v1e07ed == con(0x5))
      {
        if (SKW_19f0_13aa(unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07)))
        {
          boolrg19 = true;
          skip = true;
        }
      }
      if (!skip)
      {
        if (ddata.s350.v1e058d == con(0x0))
          boolrg19 = true;
        else
        {
          x16 wordrg22 = unsignedword(ddata.s350.v1e0562.u.b.b_07);
          if (!SKW_19f0_0891(con(0x0), wordrg22, con(0xffffffff), unsignedword(ddata.s350.v1e0562.u.b.b_06), con(0xffffffff), ulrshift(prec_0c->ue.w, con(0x6), con(0xe))))
            boolrg19 = true;
          else
            boolrg19 = SKW_RAND16(((ddata.s350.v1e0552->u18.w >> con(0x8)) & con(0xf)) / 4 + con(0x1)) <= con(0x1);
        }
      }
      // M_16648:
      if (boolrg19)
      {
        prec_0c->ua.b.b1 |= con(0x20);
        // M_16657:
        for(;;)
        {
          if ((vw_08 & con(0x10)) != con(0x0))
            if (((prec_0c->ua.w & con(0x8)) != con(0x0) && SKW_RAND02() != con(0x0)) || ((prec_0c->ua.w & con(0x40)) != con(0x0) && SKW_RAND01() != con(0x0)) || SKW_RAND02() == con(0x0))
              // M_166A3:
              if (SKW_19f0_13aa(unsignedword(ddata.s350.v1e0562.u.b.b_06), unsignedword(ddata.s350.v1e0562.u.b.b_07)))
              {
                ddata.s350.v1e0556->u.v.b12 = con(0xffffffff);
                ddata.s350.v1e0556->u.v.b13 = con(0x0);
                ddata.s350.v1e0556->u.v.b1a = con(0x55);
                goto M_exit;
              }
          // M_166CC:
          wordrg5 = con(0x4);
          if (SKW_1c9a_381c() <= con(0x0))
          {
            if (SKW_RAND01() == con(0x0))
              vb_20 = CUTX8(SKW_RAND02());
            else
              vb_20 = CUTX8((ulrshift(prec_0c->ue.w, con(0x6), con(0xe)) + con(0x2)) & con(0x3));
          }
          else
            vb_20 = ddata.s350.v1e0556->u.v.b1b;
          if (SKW_RAND01() == con(0x0))
            vb_1c = con(0xffffffff);
          else
            vb_1c = con(0x1);
          // M_16725:
          bool brk = false; // added
          for(;;)
          {
            wordrg5--;
            if (wordrg5 == con(0xffffffff))
            {
              if (++vw_10 != con(0x1) || SKW_RAND01() == con(0x0))
                brk = true; // break to M_1679C:
              break; // or without brk to goto M_16657:
            }
            x16 wordrg21 = unsignedword(ddata.s350.v1e0562.u.b.b_07);
            x8 wordrg41 = unsignedword(ddata.s350.v1e0562.u.b.b_06);
            if (SKW_CREATURE_GO_THERE(vw_10 == con(0x0) ? ddata.s350.v1e07ed | con(0xffffff80) : con(0xffffff80), wordrg21, con(0xffffffff), wordrg41, con(0xffffffff), unsignedword(vb_20)))
            {
              ddata.s350.v1e0556->u.v.b12 = con(0xffffffff);
              ddata.s350.v1e0556->u.v.b13 = con(0x0);
              goto M_exit;
            }
            vb_20 = (vb_20 + vb_1c) & con(0x3);
          }
          if (brk)
            break;
        }
      }
    }
  }
  // M_1679C:
  ddata.s350.v1e0556->u.v.b1a = con(0xffffffff);
   byterg41 = SKW_14cd_0684();
  if (byterg41 != con(0xfffffffd))
  {
    if (byterg41 < con(0x0) || byterg41 >= con(0x3f))
    {
      byterg41 = ddata.s350.v1e0556->u.v.b12;
      vb_1c = ddata.s350.v1e0556->u.v.b13;
    }
    else
    {
      ddata.s350.v1e0556->u.v.b12 = byterg41;
      vb_1c = con(0x0);
      ddata.s350.v1e0556->u.v.b13 = con(0x0);
    }
    s7ptrrg2 = table1d5f82[byterg41];
    byterg4h = s7ptrrg2[vb_1c].b0[con(0x5)] & con(0x1f);
    vb_18 = s7ptrrg2[vb_1c].b0[con(0x6)];
    wordrg5 = con(0x0);
    bool vbool_10_1 = false;
    // M_1682F:
    for(;;)
    {
      vb_1c = ddata.s350.v1e0556->u.v.b13;
      s7ptrrg2 = table1d5f82[ddata.s350.v1e0556->u.v.b12];
      if (vbool_10_1)
      {
        vb_20 = s7ptrrg2[vb_1c].b0[con(0x5)] & con(0x1f);
        bool boolrg1;
        if ((byterg4h == vb_20 && vb_20 != con(0x1)) || vb_20 == con(0x0))
          boolrg1 = false;
        else
        {
          if ((byterg4h != con(0x1)) || (vb_20 != byterg4h))
            boolrg1 = true;
          else
            boolrg1 = s7ptrrg2[vb_1c].b0[con(0x6)] != vb_18;
        }
        if (boolrg1)
        {
          ddata.s350.v1e0556->u.v.b1a = con(0x33);
          goto M_exit;
        }
      }
      x8 byterg4 = SKW_PROCEED_XACT(SKW_DECIDE_NEXT_XACT());
      if (byterg4 != con(0xfffffffc))
        vbool_10_1 |= SKW_14cd_08f5(byterg4);
      if (vbool_10_1)
        ddata.s350.v1e07d8.b1 = con(0x0);
      if (wordrg5++ > con(0x20))
        ddata.s350.v1e0556->u.v.b1a = con(0x0);
      if (ddata.s350.v1e0556->u.v.b1a == con(0xffffffff) && byterg4 != con(0xfffffffc))
        if (ddata.s350.v1e0556->u.v.b12 == con(0xffffffff))
          ddata.s350.v1e0556->u.v.b1a = con(0x0);
      if (ddata.s350.v1e0556->u.v.b1a != con(0xffffffff))
        goto M_exit;
    }
    // unreachable
  }
  if ((ddata.s350.v1e07ec & con(0xffffff80)) != con(0x0))
  {
    if (SKW_14cd_08f5(con(0xfffffffd)))
      ddata.s350.v1e07d8.b1 = con(0x0);
    ddata.s350.v1e0556->u.v.b1a = con(0x33);
  }
  else
    ddata.s350.v1e0556->u.v.b1a = con(0x0);
M_exit: // M_1690B:
  ddata.s350.v1e0898 = NULL;
  DM2_DEALLOC_LOBIGPOOL(con(0x100));
}

void SKW_LOAD_LOCALLEVEL_DYN(void)
{
  x16 wordrg5;
  c_record* recoptrrg1;
  c_record* recoptrrg2;
  s_size10* s10ptrrg1;
  x8* bptrrg7;
  x8* bptrrg11;
  x8* bptrrg12;
  x8* bptrrg13;
  x8* bptrrg2;
  t_gfxdata* gptrrg5; // kind of a bytearray
  x8* bptrrg4;
  t_gfxdata* gptrrg41;
  x16* pw_00;
  x8* pb_04;
  x8* pb_0c;
  x8* pb_10;
  x16 vw_14;
  x16 vw_18;
  x16 vw_20;
  x16 vw_24;
  x16 vw_30;
  x8 vb_34;
  bool flag;

  ui16 vuw_1c;

  bool vbool_08 = false;
  ddata.v1e09a4 = con(0x0);
  ddata.v1e09a0 = UPCAST(x16, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x960)));
  gptrrg5 = UPCAST(t_gfxdata, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0xfa), true));
  pb_0c = DM2_ALLOC_LOBIGPOOL_MEMORY(con(0xfa), true);
  pb_10 = DM2_ALLOC_LOBIGPOOL_MEMORY(con(0xfa), true);
  SKW_MARK_DYN_LOAD(con(0x1ff02ff));
  SKW_MARK_DYN_LOAD(con(0x18ff02ff));
  SKW_MARK_DYN_LOAD(con(0x7ff02ff));
  if (dm2_dballochandler.v1e13fe[0] == con(0x0))
  {
    SKW_MARK_DYN_LOAD(con(0xd0002ff));
    ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x1))] = con(0x1);
    SKW_MARK_DYN_LOAD(con(0xd2f02ff));
    SKW_MARK_DYN_LOAD(con(0xd7e02ff));
    ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x1))] = con(0x1);
    SKW_MARK_DYN_LOAD(con(0xd9f02ff));
  }
  else
    SKW_MARK_DYN_LOAD(con(0xdff02ff));
  SKW_MARK_DYN_LOAD(con(0x10ff02ff));
  ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x1))] = con(0x1);
  SKW_MARK_DYN_LOAD(con(0x15ff02ff));
  SKW_MARK_DYN_LOAD(con(0x30002ff));
  SKW_MARK_DYN_LOAD(con(0x8fe02ff));
  SKW_MARK_DYN_LOAD(con(0x16fe02ff));
  SKW_MARK_DYN_LOAD(con(0x9fe02ff));
  SKW_MARK_DYN_LOAD(con(0xafe02ff));
  SKW_MARK_DYN_LOAD(con(0xfff08fb));
  SKW_MARK_DYN_LOAD(con(0xfff07fc));
  SKW_MARK_DYN_LOAD(con(0x1ffffff));
  SKW_MARK_DYN_LOAD(con(0x1000400));
  ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x1))] |= con(0x8000);
  SKW_MARK_DYN_LOAD(con(0x1000600));
  ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x1))] |= con(0x8000);
  SKW_MARK_DYN_LOAD(con(0x100070a));
  ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x1))] |= con(0x8000);
  SKW_MARK_DYN_LOAD(con(0x1a80ffff));
  SKW_MARK_DYN_LOAD(con(0x1a81ffff));
  SKW_MARK_DYN_LOAD(con(0x300ffff));
  SKW_MARK_DYN_LOAD(con(0x700ffff));
  if (dm2_dballochandler.v1e13fe[0] == con(0x0))
  {
    SKW_MARK_DYN_LOAD(con(0xd00ffff));
    ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x1))] = con(0x1);
    SKW_MARK_DYN_LOAD(con(0xd2fffff));
    SKW_MARK_DYN_LOAD(con(0xd7effff));
    ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x1))] = con(0x1);
    SKW_MARK_DYN_LOAD(con(0xd9fffff));
  }
  else
    SKW_MARK_DYN_LOAD(con(0xdffffff));
  SKW_MARK_DYN_LOAD(con(0x10ffffff));
  ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x1))] = con(0x1);
  SKW_MARK_DYN_LOAD(con(0x15ffffff));
  SKW_MARK_DYN_LOAD(con(0xffff01f9));
  SKW_2676_008f(con(0xfff0510), con(0x39));
  ddata.v1e09a0[3 * (ddata.v1e09a4 - con(0x2))] &= con(0x7fff);
  SKW_MARK_DYN_LOAD(((signedlong(ddata.v1d3248) + 1) << con(0x10)) + con(0x30002ff));
  pb_04 = *ddata.savegamepp1;
  pw_00 = &ddata.v1e038c[unsignedlong(*ddata.v1e03f4)];
  x16 vw_28 = con(0x0);
  // M_2B1B4:
  x16 vw_2c;
  for(;;)
  {
    if (vw_28 < ddata.savegamewa)
      vw_2c = con(0x0);
    else // TODO: note, in that case, vw_2c is uninitialized - possible?
    {
      SKW_MARK_DYN_LOAD((unsignedlong(table1410ec[ddata.v1d3248]) << con(0x10)) + con(0x4000300));
      if (dm2_dballochandler.v1e13fe[0] == con(0x0))
      {
        for (vuw_1c = con(0x0); vuw_1c < ddata.savegamew2; vuw_1c++)
        {
          x16 wordrg48 = vuw_1c;
          SKW_MARK_DYN_LOAD((unsignedlong(ddata.hero[wordrg48].b101) << con(0x10)) + con(0x16000100));
          SKW_MARK_DYN_LOAD((unsignedlong(ddata.hero[wordrg48].b101) << con(0x10)) + con(0x160002ff));
          SKW_2676_008f((unsignedlong(ddata.hero[wordrg48].b101) << con(0x10)) + con(0x16000508), con(0xb));
          ddata.v1e09a0[3 * (signedlong(ddata.v1e09a4) - con(0x2))] &= con(0x7fff);
        }
      }
      if ((dm2_dballochandler.v1e13fe[0] != con(0x0)) || (dm2_dballochandler.v1e0a84 && ddata.savegamew2 != con(0x4)))
        SKW_MARK_DYN_LOAD(con(0x16ffffff));
      if ((dm2_dballochandler.v1e13fe[0] != con(0x0)) || ((ddata.v1e03c0->u0.u.b.b2 & con(0x20)) != con(0x0)))
        SKW_MARK_DYN_LOAD(con(0x18ffffff));
      if ((ddata.v1e03c0->u0.u.b.b2 & con(0xffffff80)) == con(0x0))
        ddata.v1e040e[0] = con(0xffffffff);
      else
        ddata.v1e040e[0] = CUTX8(ulrshift(ddata.v1e03c0->we, con(0x4), con(0xc)));
      if ((ddata.v1e03c0->u0.u.b.b3 & con(0x1)) == con(0x0))
        ddata.v1e040e[1] = con(0xffffffff);
      else
        ddata.v1e040e[1] = CUTX8(urshift(ddata.v1e03c0->we, con(0xc)));
      bool skip = false; // added
      x32 longrg111;
      bool boolrg6;
      if (dm2_dballochandler.v1e13fe[0] == con(0x0))
      {
        boolrg6 = false;
        bool boolrg7 = false;
        for (x16 vw_1c = con(0x0); vw_1c < con(0x2); vw_1c++)
        {
          vb_34 = ddata.v1e040e[vw_1c];
          if (vb_34 != con(0xffffffff))
          {
            boolrg7 = false;
            if (DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0xe), con(0xb), con(0x40), vb_34) == con(0x0))
              boolrg6 = boolrg7;
            SKW_MARK_DYN_LOAD((unsignedlong(vb_34) << con(0x10)) + con(0xe00ffff));
          }
        }
        if (!boolrg7)
          skip = true;
        else
          longrg111 = con(0xefe02ff);
      }
      else
      {
        boolrg6 = true;
        longrg111 = con(0xeffffff);
      }
      if (!skip)
        SKW_MARK_DYN_LOAD(longrg111);
      // M_2B395:
      vb_34 = CUTX8(ulrshift(ddata.v1e03c0->we, con(0x8), con(0xc)));
      ddata.v1d6c02 = vb_34; // was wordtransfer, but hibyte never read
      ddata.v1d6bfc = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x69), vb_34);
      x16 wordrg168 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x6b), CUTX8(ulrshift(ddata.v1e03c0->we, con(0x8), con(0xc))));
      if (wordrg168 != con(0x0))
      {
        bptrrg12 = &pb_10[CUTX8(wordrg168)];
        *bptrrg12 = con(0x1);
      }
      if (dm2_dballochandler.v1e13fe[0] != con(0x0))
        vb_34 = con(0xffffffff);
      x32 longrg23 = unsignedlong(vb_34) << con(0x10);
      SKW_MARK_DYN_LOAD(longrg23 + con(0x800ffff));
      SKW_MARK_DYN_LOAD(longrg23 + con(0x1700ffff));
      if (dm2_dballochandler.v1e13fe[0] == con(0x0))
      {
        if (!boolrg6)
        {
          SKW_2676_008f(longrg23 + con(0x8000106), con(0x1a));
          SKW_2676_008f(longrg23 + con(0x80001d3), con(0xd8));
        }
        if ((ddata.v1e03c0->u0.u.b.b2 & con(0x1)) == con(0x0))
          SKW_2676_008f((unsignedlong(vb_34) << con(0x10)) + con(0x800016b), con(0x79));
        if ((ddata.v1e03c0->u0.u.b.b2 & con(0x2)) == con(0x0))
          SKW_2676_008f((unsignedlong(vb_34) << con(0x10)) + con(0x8000199), con(0xa0));
        if ((ddata.v1e03c0->u0.u.b.b2 & con(0x4)) == con(0x0))
          SKW_2676_008f((unsignedlong(vb_34) << con(0x10)) + con(0x8000182), con(0x89));
        if ((ddata.v1e03c0->u0.u.b.b2 & con(0x8)) == con(0x0))
          SKW_2676_008f((unsignedlong(vb_34) << con(0x10)) + con(0x80001c7), con(0xcc));
        if ((ddata.v1e03c0->u0.u.b.b2 & con(0x10)) == con(0x0))
          SKW_2676_008f((unsignedlong(vb_34) << con(0x10)) + con(0x80001cd), con(0xd2));
        if ((ddata.v1e03c0->u0.u.b.b2 & con(0x40)) == con(0x0))
          if (!vbool_08)
          {
            x32 longrg44 = unsignedlong(vb_34) << con(0x10);
            SKW_2676_006a(longrg44 + con(0x8000103));
            SKW_2676_008f(longrg44 + con(0x80001fc), con(0xfe));
          }
      }
      ddata.v1e1472 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x66), ddata.v1d6c02);
      if (dm2_dballochandler.v1e13fe[0] == con(0x0))
        if (table1d6b76[4 * ddata.v1e1472 + 0x70] != con(0x0))
          SKW_MARK_DYN_LOAD(con(0xd30ffff));
      bptrrg4 = pb_0c;
      for ( vuw_1c = con(0x0); UI16CAST(ddata.v1e03c0->wa & con(0xf)) > vuw_1c; vuw_1c++)
      {
        bptrrg13 = bptrrg4 + unsignedlong(ddata.v1e02cc[vuw_1c]);
        *bptrrg13 = con(0x1);
      }
      if (dm2_dballochandler.v1e13fe[0] == con(0x0))
      {
        for (x16 vw_1c = con(0x0); vw_1c < con(0xfa); vw_1c++)
        {
          if (pb_0c[vw_1c] != con(0x0))
          {
            SKW_MARK_DYN_LOAD((unsignedlong(vw_1c) << con(0x10)) + con(0x900ffff));
            SKW_2676_00d0(con(0x9), con(0x40), CUTX8(vw_1c));
          }
        }
      }
      else
        SKW_MARK_DYN_LOAD(con(0x9ffffff));
      for ( vuw_1c = con(0x0); UI16CAST(ulrshift(ddata.v1e03c0->wa, con(0x4), con(0xc))) > vuw_1c; vuw_1c++)
        pb_10[ddata.v1e02dc[vuw_1c]] = con(0x1);
      if (dm2_dballochandler.v1e13fe[0] == con(0x0))
      {
        bptrrg7 = pb_10;
        for (x16 vw_1c = con(0x0); vw_1c < con(0xfa); vw_1c++)
        {
          if (bptrrg7[vw_1c] != con(0x0))
            SKW_MARK_DYN_LOAD((unsignedlong(vw_1c) << con(0x10)) + con(0xa00ffff));
          SKW_2676_00d0(con(0xa), con(0x40), CUTX8(vw_1c));
        }
      }
      else
        SKW_MARK_DYN_LOAD(con(0xaffffff));
      if (dm2_dballochandler.v1e13fe[0] == con(0x0))
      {
        for ( vuw_1c = con(0x0); UI16CAST(ddata.v1e03c0->wc & con(0xf)) > vuw_1c; vuw_1c++)
          SKW_MARK_DYN_LOAD((unsignedlong(ddata.v1e0414[vuw_1c]) << con(0x10)) + con(0xb00ffff));
      }
      else
        SKW_MARK_DYN_LOAD(con(0xbffffff));
      if ((dm2_dballochandler.v1e13fe[0] != con(0x0)) || boolrg6)
        SKW_MARK_DYN_LOAD(con(0xcffffff));
      for ( vuw_1c = con(0x0); ulrshift(ddata.v1e03c0->wc, con(0x8), con(0xc)) > vuw_1c; vuw_1c++)
        gptrrg5[ddata.v1e03c4[vuw_1c]] = con(0x1);
      if (dm2_dballochandler.v1e13fe[0] != con(0x0))
        SKW_MARK_DYN_LOAD(con(0xfffffff));
      vb_34 = con(0x0);
      while (UI8CAST(vb_34) < UI8CAST(con(0xfffffffa)))
      {
        if (SKW_QUERY_GDAT_CREATURE_WORD_VALUE(vb_34, con(0x6)) != con(0x0))
          gptrrg5[vb_34] = con(0x1);
        gptrrg41 = gptrrg5 + unsignedlong(vb_34);
        if ((*gptrrg41 != con(0x0)) && (dm2_dballochandler.v1e13fe[0] == con(0x0)))
        {
          x32 longrg21 = unsignedlong(vb_34) << con(0x10);
          SKW_MARK_DYN_LOAD(longrg21 + con(0xf0007fd));
          SKW_MARK_DYN_LOAD(longrg21 + con(0xf0007fe));
          if ((*gptrrg41 & con(0x1)) == con(0x0) && dm2_dballochandler.v1e13fe[1] == con(0x0))
          {
            SKW_2676_008f(longrg21 + con(0xf00fffa), con(0xfd));
            ddata.v1e09a0[3 * (signedlong(ddata.v1e09a4) - con(0x2))] &= con(0x7fff);
          }
          else
          {
            x32 longrg45 = unsignedlong(vb_34) << con(0x10);
            SKW_MARK_DYN_LOAD(longrg45 + con(0xf00ffff));
            SKW_2676_008f(longrg45 + con(0xf0001fa), con(0xfd));
            SKW_2676_00d0(con(0xf), con(0x40), vb_34);
          }
        }
        vb_34++;
      }
      if (!dm2_dballochandler.v1e0a84)
        SKW_482b_060e();
      SKW_LOAD_DYN4(UPCAST(s_hex6, DOWNCAST(x16, ddata.v1e09a0)), ddata.v1e09a4);
      if (!dm2_dballochandler.v1e0a84)
        SKW_LOAD_MISCITEM();
      // TODO: some bools here
      ddata.v1e1481 = SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x17), con(0x1), con(0x64), ddata.v1d6c02) ? 1 : 0;
      ddata.v1e1479 = SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x17), con(0x1), con(0x6a), ddata.v1d6c02) ? 1 : 0;
      ddata.v1e147a = SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x17), con(0x1), con(0x67), ddata.v1d6c02) ? 1 : 0;
      ddata.v1e147c = SKW_QUERY_GDAT_ENTRY_IF_LOADABLE(con(0x17), con(0x1), con(0x71), ddata.v1d6c02) ? 1 : 0;
      ddata.v1d6c00 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x64), ddata.v1d6c02);
      ddata.v1e12d6 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x65), ddata.v1d6c02);
      ddata.v1e03f8 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x6d), ddata.v1d6c02);
      ddata.v1e0400 = DM2_QUERY_GDAT_ENTRY_DATA_INDEX(con(0x8), con(0xb), con(0x72), ddata.v1d6c02);
      if (ddata.v1e0400 == con(0x0))
        ddata.v1e0400 = con(0x1);
      DM2_DEALLOC_LOBIGPOOL(con(0xfa));
      DM2_DEALLOC_LOBIGPOOL(con(0xfa));
      DM2_DEALLOC_LOBIGPOOL(con(0xfa));
      DM2_DEALLOC_LOBIGPOOL(con(0x960));
      bool boolrg2 = dm2_dballochandler.v1e0a84 ? 1 : 0;
      if (!boolrg2)
      {
        SKW_QUERY_GDAT_IMAGE_METRICS(con(0x8), boolrg2 ? 1 : 0, &vw_14, ddata.v1d6c02, &vw_30);
        wordrg5 = vw_14 * vw_30;
        SKW_QUERY_GDAT_IMAGE_METRICS(con(0x8), con(0x1), &vw_24, ddata.v1d6c02, &vw_18);
        x16 wordrg11 = ddata.v1d2708 - vw_24 * vw_18;
        ddata.backbuff1 = wordrg11;
        if (wordrg5 >= wordrg11)
          ddata.backbuff1 = con(0x0);
        else
        {
          ddata.backbuff1 = wordrg11 - wordrg5;
          SKW_SET_SRECT(&ddata.backbuffrect, con(0x0), vw_18, ddata.vx1d270a, ddata.vx1d270c - (vw_18 + vw_30));
        }
        ddata.backbuff2 = con(0x1);
        SKW_UPDATE_WEATHER(false);
        ddata.v1e0390.l0 = con(0x1);
        SKW_CHECK_RECOMPUTE_LIGHT();
      }
      return;
    }
    // M_2B19F: co-label M_2B19B
    for (;; vw_2c++)
    {
      if (vw_2c >= ddata.savegamewb)
        break;
      x16 wordrg6 = unsignedword(*pb_04);
      pb_04++;
      if ((CUTX8(wordrg6) & con(0x10)) != con(0x0))
      {
        x16 wordrg3 = *pw_00++;
        // M_2AF58:
        do
        {
          bool doit1 = false; // added
          bool doit2 = false; // added
          ui16 uwordrg100 = urshift(wordrg3 & con(0x3c00), con(0xa));
          ui16 uwordrg41; // TODO set unlucky halfways...
          if (uwordrg100 < con(0x2))
          {
            ;
          }
          else if (uwordrg100 <= con(0x2))
          {
            recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(wordrg3);
            if ((recoptrrg2->u2.w & con(0x6)) == con(0x2))
            {
              ui16 uwordrg190 = urshift(recoptrrg2->u2.w, con(0xb)) & con(0x1f);
              if (uwordrg190 < con(0xd))
              {
                if (uwordrg190 < con(0x2))
                {
                  flag = uwordrg190 == con(0x0);
                  doit1 = true;
                }
                else if (uwordrg190 <= con(0x2))
                  doit2 = true;
                else if (uwordrg190 < con(0x4))
                {
                  ;
                }
                else if (uwordrg190 <= con(0x8))
                  doit2 = true;
                else
                {
                  flag = uwordrg190 == con(0xa);
                  doit1 = true;
                }
                if (doit1)
                  // M_2B129:
                  if (flag)
                    doit2 = true;
              }
              else if (uwordrg190 <= con(0xd))
                doit2 = true;
              else if (uwordrg190 < con(0xf))
                vbool_08 = true;
              else if (uwordrg190 <= con(0x11))
                doit2 = true;
              else if (uwordrg190 >= con(0x13) && (uwordrg190 <= con(0x13) || (uwordrg190 >= con(0x15) && uwordrg190 <= con(0x16))))
                gptrrg5[CUTX8(urshift(recoptrrg2->u2.w, con(0x3)))] = con(0x1);
            }
            if (doit2)
            {
              //M_2B13B:
              if (CUTX8(wordrg6 >> con(0x5)) != con(0x0))
                bptrrg11 = &pb_10[CUTX8(urshift(recoptrrg2->u2.w, con(0x3)))];
              else
                bptrrg11 = &pb_0c[CUTX8(urshift(recoptrrg2->u2.w, con(0x3)))];
              *bptrrg11 = con(0x1);
            }
          }
          else if (uwordrg100 != con(0x3) || dm2_dballochandler.v1e13fe[0] != con(0x0)) // TODO: v1e13fe probably a bool-array
          {
            ;
          }
          else if (recoptrrg1 = SKW_GET_ADDRESS_OF_RECORD(wordrg3), uwordrg41 = recoptrrg1->u2.w & con(0x7f), uwordrg41 < UI16CAST(con(0x2e)))
          {
            if (uwordrg41 == con(0x27))
            {
              if (((wordrg6 >> con(0x5)) & con(0xff)) == con(0x5))
              {
                x16 wordrg21 = urshift(recoptrrg1->u2.w, con(0x7)) - con(0x1);
                if (wordrg21 != ddata.v1d3248)
                {
                  s10ptrrg1 = &ddata.v1e03c8[wordrg21];
                  vw_20 = ulrshift(ddata.v1e03c8[wordrg21].w8, con(0x5), con(0xb));
                  x16 wordrg42 = vw_20;
                  wordrg21 *= con(0x4);
                  vw_20 = urshift(ddata.v1e03c8[wordrg21].w8, con(0xb));
                  x8** hlpptr1 = ddata.v1e03cc[wordrg21 / 4];
                  x8* hlpptr2 = hlpptr1[wordrg42];
                  bptrrg2 = &hlpptr2[vw_20];
                  bptrrg2++;
                  x16 wordrg41 = ulrshift(ddata.v1e03c8[wordrg21].wc, con(0x8), con(0xc)) - con(0x1);
                  while (wordrg41 >= con(0x0))
                  {
                    gptrrg5[bptrrg2[wordrg41]] |= con(0x2);
                    wordrg41--;
                  }
                }
              }
            }
          }
          else if (uwordrg41 <= con(0x2e))
          {
            if (CUTX8(wordrg6 >> con(0x5)) == con(0x0))
              gptrrg5[urshift(recoptrrg1->u2.w, con(0x7))] = con(0x1);
          }
          else if (uwordrg41 == con(0x7e))
            SKW_MARK_DYN_LOAD((unsignedlong(CUTX8(urshift(recoptrrg1->u2.w, con(0x7)))) << con(0x10)) + con(0x1600ffff));
          // M_2B185:
          wordrg3 = SKW_GET_NEXT_RECORD_LINK(wordrg3);
        } while (wordrg3 != con(0xfffffffe));
        continue;
      }
    }
    vw_28++;
  }
}

bool SKW_19f0_0891(x8 eaxb, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1)
{
  x16 wordrg5;
  x16 vw_00;
  x16 vw_04;
  x16 vw_08;
  x16 vw_14;
  x8 vb_18; // and8(0x18, con(0x7f));
  bool flag;

  // SPX: moved variables before goto
  x16 vw_0c;
  x16 wordrg3;
  x8 byterg2;
  ui16 uwordrg1;
  bool skip = false;

  vb_18 = eaxb;
  vw_00 = ebxw;
  vw_08 = ecxw;
  vw_04 = unsignedword(eaxb & con(0xffffff80));
  if (vw_04 != con(0x0))
    vb_18 &= con(0x7f);
  x16 vw_10 = ddata.s350.v1e0578;
  if (vw_10 == con(0x0))
    goto M_false;
  if (vw_08 == con(0xffffffff))
  {
    vw_08 = table1d27fc[argw1] + edxw;
    argw0 = vw_00 + table1d2804[argw1];
  }
  if (vw_08 < con(0x0) || vw_08 >= ddata.savegamewa)
    goto M_false;
  if (argw0 < con(0x0) || argw0 >= ddata.savegamewb)
    goto M_false;
  if (edxw != vw_08 && vw_00 != argw0)
    goto M_false;
   vw_0c = SKW_CALC_SQUARE_DISTANCE(edxw, vw_08, argw0, vw_00);
  if (vw_0c > con(0x1))
  {
    wordrg5 = vw_10 & con(0xff8);
    flag = wordrg5 == con(0x0);
    vw_10 = wordrg5;
    if (flag)
      goto M_false;
  }
  if (vw_0c == con(0x0))
  {
    vw_10 &= con(0x7);
    if (vw_10 == con(0x0))
      goto M_false;
  }
  if (vw_0c > urshift(ddata.s350.v1e0552->w14, con(0xc)))
    goto M_false;
  wordrg5 = vw_0c;
  if (wordrg5 == con(0x0))
  {
    while (wordrg5 < con(0x4))
    {
      x16 wordrg24 = table1d27fc[wordrg5] + edxw;
      if (SKW_CREATURE_GO_THERE(con(0x0), vw_00, wordrg24, edxw, vw_00 + table1d2804[wordrg5], wordrg5))
        break;
      wordrg5++;
    }
    if (wordrg5 < con(0x4))
      goto M_false;
  }
  if (UI8CAST(vb_18) <= UI8CAST(con(0x1)))
  {
    if (ddata.v1d3248 != ddata.v1e08d6 || vw_08 != ddata.v1e08d8 || argw0 != ddata.v1e08d4)
      goto M_false;
  }
  else
  {
    if (vb_18 == con(0x2))
    {
      SKW_19f0_045a(vw_08, argw0);
      if (SKW_19f0_050f() == con(0xfffffffe))
        goto M_false;
    }
  }
  if (vw_0c > con(0x1))
    if (SKW_19f0_0207(edxw, vw_08, argw0, vw_00, R_1BAAD) == con(0x0))
      goto M_false;
  if ((vw_10 & con(0x4)) != con(0x0))
  {
    vw_14 = con(0xffffffff);
    wordrg5 = con(0x0);
    // M_1C7E0: // co-label M_1C7DF
    for (;; wordrg5++)
    {
      if (wordrg5 < con(0x4))
      {
        x16 wordrg22 = SKW_2c1d_028c(edxw, wordrg5, vw_00);
        x16 wordrg45 = wordrg22;
        if (wordrg45 == con(0xffffffff))
          continue;
        x16 wordrg44 = ddata.hero[wordrg45].warrc3[1];
        if ((wordrg44 == con(0xffffffff)) || SKW_1c9a_0006(wordrg44, con(0xb)) == con(0x0))
        {
          x16 wordrg43 = ddata.hero[wordrg22].warrc3[0];
          if (wordrg43 == con(0xffffffff) || SKW_1c9a_0006(wordrg43, con(0xb)) == con(0x0))
            continue;
        }
        if (vw_14 < con(0x0) || SKW_RAND01() != con(0x0))
          vw_14 = unsignedword(ddata.hero[wordrg22].b1d);
        continue;
      }
      if (vw_14 >= con(0x0))
        break;
      vw_10 &= con(0xfffffffb);
      if (vw_10 == con(0x0))
        goto M_false;
      break;
    }
  }
  // M_1C805:
  if ((table1d607e[ddata.s350.v1e0584].u.b[1] & con(0x2)) != con(0x0))
  {
    SKW_19f0_045a(vw_08, argw0);
    x16 wordrg42 = SKW_19f0_04bf();
    bool skip = false;
    for(;;)
    {
      if (wordrg42 == con(0xfffffffe))
      {
        skip = true;
        break;
      }
      if (urshift(wordrg42 & con(0x3c00), con(0xa)) == con(0xf) && (SKW_GET_ADDRESS_OF_RECORD(wordrg42)->u2.w & con(0x7f)) == con(0xe))
        break;
      wordrg42 = SKW_GET_NEXT_RECORD_LINK(wordrg42);
    }
    if (!skip)
    {
      wordrg5 = vw_10;
      wordrg5 &= con(0x7);
      flag = wordrg5 == con(0x0);
      vw_10 = wordrg5;
      if (flag)
        goto M_false;
    }
  }
  if (ddata.v1e08d6 == ddata.v1d3248 && (table1d607e[ddata.s350.v1e0584].u.b[1] & con(0x40)) != con(0x0) && (ddata.s350.v1e0552->u0.b.b0 & con(0x20)) == con(0x0))
  {
    if (unsignedword(ddata.s350.v1e0562.u.b.b_06) != edxw || unsignedword(ddata.s350.v1e0562.u.b.b_07) != vw_00 || unsignedword(ddata.s350.v1e0571) != ddata.v1d3248)
    {
      wordrg5 = edxw;
      if ((((SKW_GET_TILE_VALUE(wordrg5, vw_00) & con(0xff)) >> con(0x5)) & con(0xff)) == con(0x4))
        if (SKW_CALC_SQUARE_DISTANCE(wordrg5, ddata.v1e08d8, ddata.v1e08d4, vw_00) < con(0x2) && SKW_RAND02() != con(0x0))
          goto M_false;
    }
  }
  if (vw_04 == con(0x0))
    return true;
  if (argw1 == con(0xffffffff))
  {
    if (vw_0c != con(0x0) || ddata.v1d3248 != ddata.v1e08d6 || vw_08 != ddata.v1e08d8 || argw0 != ddata.v1e08d4)
      argw1 = SKW_CALC_VECTOR_DIR(edxw, vw_08, argw0, vw_00);
    else
      argw1 = (ddata.v1e0258 + con(0x2)) & con(0x3);
  }
  if (SKW_19f0_0559(argw1))
    return true;
   wordrg3 = SKW_RAND01();
   byterg2;
  if (vw_0c <= con(0x1) && (vw_10 & con(0x7)) != con(0x0) && ((vw_10 & con(0xff8)) == con(0x0) || SKW_RAND01() != con(0x0)))
  {
    vw_10 &= con(0x7);
    x16 wordrg41;
    if (UI8CAST(vb_18) <= UI8CAST(con(0x1)) && (wordrg41 = SKW_2c1d_028c(edxw, con(0xff), vw_00), wordrg41 != con(0xffffffff)))
      byterg2 = ddata.hero[wordrg41].b1d;
    else
      byterg2 = CUTX8((wordrg3 + con(0x2) + argw1) & con(0x3));
  }
  else
  {
    vw_10 &= con(0xff8);
    if (UI8CAST(vb_18) <= UI8CAST(con(0x1)) && SKW_RAND02() != con(0x0))
    {
      wordrg3 = SKW_RAND01();
      x16 wordrg21;
      if (wordrg3 == con(0x0))
        wordrg21 = argw1;
      else
        wordrg21 = (argw1 + con(0x2)) & con(0x3);
      if (SKW_GET_PLAYER_AT_POSITION(wordrg21) == con(0xffffffff))
      {
        wordrg21 += con(0x3);
        wordrg21 &= con(0x3);
        if (SKW_GET_PLAYER_AT_POSITION(wordrg21) == con(0xffffffff))
          wordrg3 = con(0x1) - wordrg3;
      }
    }
    byterg2 = CUTX8((argw1 + wordrg3) & con(0x3));
  }
   skip = false;
  wordrg5 = vw_10;
   uwordrg1 = SKW_COMPUTE_POWER_4_WITHIN(wordrg5, SKW_RAND16(SKW_1c9a_0598(wordrg5)) + con(0x1));
  if (uwordrg1 < con(0x20))
  {
    if (uwordrg1 < con(0x4))
    {
      if (uwordrg1 >= con(0x1))
      {
        if (uwordrg1 <= con(0x1))
          ddata.s350.v1e0556->u.v.b1a = con(0x8);
        else
        {
          if (uwordrg1 == con(0x2))
            ddata.s350.v1e0556->u.v.b1a = con(0x26);
        }
      }
      skip = true;
    }
    else if (uwordrg1 <= con(0x4))
    {
      ddata.s350.v1e0556->u.v.b1a = con(0xa);
      ddata.s350.v1e0556->u.v.b1e = con(0xb);
      skip = true;
    }
    else if (uwordrg1 < con(0x8))
      skip = true;
    else if (uwordrg1 <= con(0x8))
    {
      ddata.s350.v1e0556->u.v.b1a = ((wordrg3 != con(0x0)) ? 1 : 0) + con(0xe);
      skip = true;
    }
    else if (uwordrg1 == con(0x10))
      vw_0c = con(0xffffff80);
    else
      skip = true;
  }
  else if (uwordrg1 <= con(0x20))
    vw_0c = con(0xffffff83);
  else if (uwordrg1 < con(0x100))
  {
    if (uwordrg1 < con(0x40))
      skip = true;
    else if (uwordrg1 <= con(0x40))
      vw_0c = con(0xffffff82);
    else if (uwordrg1 == con(0x80))
      vw_0c = con(0xffffff87);
    else
      skip = true;
  }
  else if (uwordrg1 <= con(0x100))
    vw_0c = con(0xffffff86);
  else if (uwordrg1 < con(0x400))
  {
    if (uwordrg1 == con(0x200))
      vw_0c = con(0xffffff81);
    else
      skip = true;
  }
  else if (uwordrg1 <= con(0x400))
    vw_0c = con(0xffffff89);
  else if (uwordrg1 == con(0x800))
    vw_0c = con(0xffffff8a);
  else
    skip = true;
  if (!skip)
  {
    ddata.s350.v1e0556->u.v.b1e = CUTX8(vw_0c);
    ddata.s350.v1e0556->u.v.b1a = ((wordrg3 != con(0x0)) ? 1 : 0) + con(0x27);
  }
  ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
  ddata.s350.v1e0556->u.v.u18.w |= vw_08 & con(0x1f);
  wordrg5 = ddata.s350.v1e0556->u.v.u18.w & con(0xfffffc1f);
  ddata.s350.v1e0556->u.v.u18.w = wordrg5 | ((argw0 & con(0x1f)) << con(0x5));
  ddata.s350.v1e0556->u.v.u18.b.b1 &= con(0x3);
  ddata.s350.v1e0556->u.v.u18.w |= ((ddata.v1d3248 & con(0x3f)) << con(0xa));
  ddata.s350.v1e0556->u.v.b1b = CUTX8(argw1);
  if (ddata.s350.v1e0556->u.v.b1a == con(0xa))
    byterg2 = CUTX8(vw_14);
  ddata.s350.v1e0556->u.v.b1c = byterg2;
  ddata.s350.v1e0556->u.v.b20 = vb_18;
  ddata.s350.v1e056f = con(0xfffffffc);
  return true;

M_false: // M_1CCD9:
  if (vw_04 != con(0x0))
    ddata.s350.v1e056f = con(0xfffffffd);
  return false;
}

bool SKW_19f0_0d10(x8 eaxb, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1)
{
  x16 wordrg5;
  bool boolrg1;
  c_record* recoptrrg2;
  c_record* recoptrrg7;
  x16 vw_00;
  x16 vw_04;
  x16 vw_08;
  x16 vw_0c;
  x16 vw_10;
  x16 vw_18;
  x8 vb_1c; // and8(0x1c, con(0x7f));
  bool flag;

	// SPX: moved variables before goto
	x16 wordrg188;
	bool pass = false; // added

  vb_1c = eaxb;
  vw_08 = edxw;
  vw_0c = ebxw;
  vw_10 = ecxw;
  vw_04 = con(0x0);
  vw_18 = unsignedword(eaxb & con(0xffffff80));
  if (vw_18 != con(0x0))
    vb_1c &= con(0x7f);
  x16 wordrg184;
  if (vb_1c != con(0x0))
    wordrg184 = con(0x73);
  else
    wordrg184 = con(0x6f);
  wordrg184 &= unsignedword(ddata.s350.v1e057a);
  x16 vw_14 = wordrg184;
  if (vw_14 == con(0x0))
    goto M_false;
  wordrg5 = vw_10;
  if (wordrg5 != con(0xffffffff))
  {
    if (argw1 != con(0xffffffff))
    {
      if (wordrg5 == vw_08)
        if (vw_0c == argw0)
          goto M_false;
    }
    else
      argw1 = SKW_CALC_VECTOR_DIR(vw_08, vw_10, argw0, vw_0c);
  }
  else
  {
    vw_10 = vw_08 + table1d27fc[argw1];
    wordrg5 = table1d2804[argw1];
    argw0 = vw_0c + wordrg5;
  }
  if (vw_10 < con(0x0) || vw_10 >= ddata.savegamewa)
    goto M_false;
  if (argw0 < con(0x0) || argw0 >= ddata.savegamewb)
    goto M_false;
  if (vw_08 != vw_10 && vw_0c != argw0)
    goto M_false;
  SKW_19f0_045a(vw_10, argw0);
  if ((((unsignedlong(ddata.v1e08ae) >> con(0x5)) & con(0xff)) != con(0x4)))
    goto M_false;
   pass = false; // added
   wordrg188 = unsignedword(CUTX8(ddata.v1e08ae) & con(0x7));
  if (vb_1c != con(0x0))
  {
    if (wordrg188 == con(0x5))
      goto M_false;
    flag = wordrg188 != con(0x4);
  }
  else
    flag = wordrg188 != con(0x0);
  if (flag)
  {
    if (ddata.v1e08b0 == con(0xffffffff))
      ddata.v1e08b0 = SKW_GET_TILE_RECORD_LINK(vw_10, argw0);
    recoptrrg7 = SKW_GET_ADDRESS_OF_RECORD(ddata.v1e08b0);
    if ((vb_1c == con(0x2)) && ((recoptrrg7->u2.b.b1 & con(0x10)) == con(0x0)))
      goto M_false;
    if ((recoptrrg7->u2.b.b1 & con(0x4)) == con(0x0))
    {
      ;
    }
    else if ((recoptrrg7->u2.b.b1 & con(0x2)) == con(0x0))
    {
      if (vb_1c != con(0x0))
      {
        vw_04 = con(0x2);
        pass = true;
      }
      else
      {
        vw_14 &= con(0xfffffff3);
        if (vw_14 == con(0x0))
          goto M_false;
      }
    }
    else if (vb_1c != con(0x0))
    {
      ;
    }
    else
    {
      vw_04 = con(0x2);
      pass = true;
    }
  }
  else
  {
    vw_04 = con(0x1);
    pass = true;
  }
  if (!pass)
  {
    vw_00 = SKW_CALC_SQUARE_DISTANCE(vw_08, vw_10, argw0, vw_0c);
    x16 wordrg42 = vw_00;
    if (wordrg42 != con(0x1))
    {
      if (wordrg42 > urshift(ddata.s350.v1e0552->w14, con(0xc)))
        goto M_false;
      bool boolrg101;
      if ((vw_14 & con(0x1)) != con(0x0) && (((recoptrrg7->u2.b.b0 & con(0x40)) != con(0x0)) || ((recoptrrg7->u2.b.b1 & con(0x20)) != con(0x0))))
        boolrg101 = false;
      else if (vb_1c != con(0x0))
        boolrg101 = true;
      else
      {
        if ((vw_14 & con(0x4)) != con(0x0) && ((recoptrrg7->u2.b.b0 & con(0xffffff80)) != con(0x0)))
          boolrg101 = false;
        else
          boolrg101 = true;
      }
      if (boolrg101)
        goto M_false;
      if (SKW_19f0_0207(vw_08, vw_10, argw0, vw_0c, R_1BAAD) == con(0x0))
        goto M_false;
    }
    else
    {
      if (((vw_14 & con(0x3)) == con(0x0) || (((recoptrrg7->u2.b.b0 & con(0x40)) == con(0x0)) && ((recoptrrg7->u2.b.b1 & con(0x20)) == con(0x0)))) && (vb_1c != con(0x0) || (((vw_14 & con(0x4)) == con(0x0) || ((recoptrrg7->u2.b.b0 & con(0xffffff80)) == con(0x0))) && ((vw_14 & con(0x8)) == con(0x0) || ((recoptrrg7->u2.b.b1 & con(0x1)) == con(0x0))))))
        if ((vw_14 & con(0x40)) == con(0x0))
          goto M_false;
    }
    if ((vw_14 & con(0x1)) != con(0x0))
    {
      x16 wordrg6 = vw_08;
      x16 wordrg3 = vw_0c;
      wordrg5 = vw_00;
      // M_1D155:
      for(;;)
      {
        bool farbreak = false; // added
        if (wordrg5 < con(0x0))
          break;
        x16 wordrg190 = SKW_GET_WALL_TILE_ANYITEM_RECORD(wordrg6, wordrg3);
        // M_1D093: // co-label M_1D12E
        x16 wordrg41;
        for (;; wordrg190 = SKW_GET_NEXT_RECORD_LINK(wordrg41))
        {
          wordrg41 = wordrg190;
          if (wordrg41 == con(0xfffffffe))
          {
            wordrg6 += table1d27fc[argw1];
            wordrg3 += table1d2804[argw1];
            wordrg5--;
            break;
          }
          x16 wordrg191 = urshift(wordrg41 & con(0x3c00), con(0xa));
          if (wordrg191 != con(0xe))
          {
            if (wordrg191 != con(0xf))
              continue;
            x16 wordrg192 = SKW_GET_ADDRESS_OF_RECORD(wordrg41)->u2.w & con(0x7f);
            if (wordrg192 != con(0xd))
            {
              flag = wordrg192 != con(0x4);
              if (flag)
                continue;
            }
          }
          else
          {
            recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(wordrg41);
            x16 wordrg192 = recoptrrg2->u2.w;
            if (wordrg192 != con(0xffffff8d) && wordrg192 != con(0xffffff84))
              continue;
            flag = ulrshift(ddata.savegametimarrp[recoptrrg2->u6.w].v.w_08, con(0x4), con(0xe)) != argw1;
            if (flag)
              continue;
          }
          vw_04 = con(0x2);
          farbreak = true;
          break;
        }
        if (farbreak)
          break;
      }
    }
  }
  if ((vw_04 != con(0x0)) && (vb_1c == con(0x2)))
    goto M_false;
  if (vw_18 == con(0x0))
    return true;
  if (argw1 == con(0xffffffff))
    argw1 = SKW_CALC_VECTOR_DIR(vw_08, vw_10, argw0, vw_0c);
  if (vw_04 == con(0x1))
  {
    ddata.s350.v1e056f = con(0xfffffffe);
    return true;
  }
  if (vw_04 == con(0x2))
  {
    ddata.s350.v1e0556->u.v.b1a = con(0x0);
    ddata.s350.v1e056f = con(0xfffffffc);
    return true;
  }
  if (SKW_19f0_0559(argw1))
    return true;
  if ((vw_14 & con(0x20)) != con(0x0))
  {
    vw_14 &= con(0xffffffdf);
    if (vb_1c == con(0x0))
      recoptrrg7->u2.b.b1 |= con(0x10);
  }
  if (vw_00 > con(0x1))
    vw_14 &= con(0x5);
  if ((vw_14 & con(0x42)) != con(0x0) && ((vw_14 & con(0xffffffbd)) == con(0x0) || SKW_RAND02() != con(0x0)))
    ddata.s350.v1e0556->u.v.b1a = con(0xb);
  else
  {
    if ((vw_14 & con(0x1)) == con(0x0) || ((vw_14 & con(0xffffffbc)) != con(0x0) && SKW_RAND02() != con(0x0)))
    {
      wordrg5 = ddata.s350.v1e0578;
      if ((vw_14 & con(0x8)) == con(0x0) || (wordrg5 & con(0x1)) == con(0x0) || ((vw_14 & con(0xffffffb4)) != con(0x0) && SKW_RAND01() == con(0x0)))
      {
        if ((vw_14 & con(0x4)) == con(0x0))
          goto M_false;
        ddata.s350.v1e0578 &= con(0x50);
      }
      else
        ddata.s350.v1e0578 &= con(0x1);
      boolrg1 = SKW_19f0_0891(con(0x84), vw_0c, vw_10, vw_08, argw0, argw1);
      ddata.s350.v1e0578 = wordrg5;
      return boolrg1;
    }
    ddata.s350.v1e0556->u.v.b1a = ((SKW_RAND01() != con(0x0)) ? 1 : 0) + con(0x27);
    if (vb_1c != con(0x0))
      ddata.s350.v1e0556->u.v.b1e = con(0x84);
    else
      ddata.s350.v1e0556->u.v.b1e = con(0x8d);
  }
  ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
  ddata.s350.v1e0556->u.v.u18.w |= vw_10 & con(0x1f);
  wordrg5 = ddata.s350.v1e0556->u.v.u18.w & con(0xfffffc1f);
  ddata.s350.v1e0556->u.v.u18.w = wordrg5 | ((argw0 & con(0x1f)) << con(0x5));
  ddata.s350.v1e0556->u.v.u18.b.b1 &= con(0x3);
  ddata.s350.v1e0556->u.v.u18.w |= (ddata.v1d3248 & con(0x3f)) << con(0xa);
  ddata.s350.v1e0556->u.v.b1d = CUTX8(argw1);
  ddata.s350.v1e0556->u.v.b1b = CUTX8(argw1);
  ddata.s350.v1e0556->u.v.b1c = (CUTX8(SKW_RAND01()) + CUTX8(argw1)) & con(0x3);
  ddata.s350.v1e0556->u.v.b20 = vb_1c;
  ddata.s350.v1e056f = con(0xfffffffc);
  return true;

M_false: // M_1CFBF:
  if (vw_18 != con(0x0))
    ddata.s350.v1e056f = con(0xfffffffd);
  return false;
}

// lots of calls, but it seems that the return is checked against 0 only
bool SKW_CREATURE_GO_THERE(x8 eaxb, x16 ebxw, x16 ecxw, x16 edxw, x16 argw0, x16 argw1)
{
  x16 wordrg5;
  c_record* recoptrrg2;
  c_record* prec_00 = NULL; // TODO: serious!
  x16 vw_20;
  x16 vw_24;
  x16 vw_28;
  x16 vw_2c;
  x16 vw_30;
  x16 vw_38;
  x16 vw_3c;
  x16 vw_40;
  x16 vw_4c;
  x8 vb_50;
  x8 vb_54;
  bool flag;

	// SPX: moved variables before goto
	x16 wordrg188;
	x16 vw_44;
	x16 wordrg2;
	bool vbool_0c;

  vb_54 = eaxb;
  vw_28 = edxw;
  vw_24 = ebxw;
  wordrg5 = ecxw;
  x16 vw_48; // multipurpose temporary?!?
  bool vbool_10 = false;
  bool vbool_08 = false;
  x16 vw_14 = con(0x0);
  bool vbool_18 = false;
  vw_30 = unsignedword(eaxb & con(0xffffff80));
  if (vw_30 != con(0x0))
    vw_38 = con(0xffffffff);
  vw_20 = unsignedword(vb_54 & con(0x40));
  x16 wordrg6 = unsignedword(vb_54 & con(0x20));
  vb_54 &= con(0x1f);
  if (vb_54 == con(0x2) || ((vb_50 = table1d6290[vb_54], vb_50 == con(0x0)) && ddata.s350.v1e0576 == con(0x0)))
    goto M_preexit;
   vw_44 = argw1;
   wordrg2 = argw1;

  if (wordrg2 != con(0x6))
  {
    if (wordrg2 < con(0x4))
    {
      if (wordrg5 != con(0xffffffff))
      {
        if (wordrg5 != vw_28 || vw_24 != argw0)
          vbool_0c = false;
        else
          vbool_0c = true;
        if (!vbool_0c && argw1 == con(0xffffffff))
        {
          argw1 = SKW_CALC_VECTOR_DIR(vw_28, wordrg5, argw0, vw_24);
          // M_1DC07:
          vw_44 = argw1;
        }
      }
      else
      {
        vbool_0c = false;
        wordrg5 = vw_28 + table1d27fc[wordrg2];
        argw0 = vw_24 + table1d2804[wordrg2];
      }
    }
    else
    {
      vbool_0c = false;
      if ((ddata.s350.v1e0576 & con(0x2000)) == con(0x0))
        goto M_preexit;
      vw_40 = con(0x0);
      x16 wordrg47 = unsignedword(SKW_GET_TILE_VALUE(vw_28, vw_24));
      vw_48 = wordrg47;
      ui16 opt; // added
      ui8 ubyterg11 = ubrshift(CUTX8(wordrg47), con(0x5)) - con(0x1);
      if (ubyterg11 > con(0x5))
        opt = 2;
      else
      {
        switch (ubyterg11)
        {
          case 0:
          case 4:
          case 5:
            opt = 0;
          break;

          case 1:
            if (wordrg2 != con(0x5) || (wordrg47 & con(0x8)) == con(0x0) || (wordrg47 & con(0x1)) != con(0x0))
              opt = 0;
            else
            {
              vw_40 = con(0x8);
              vw_38 = con(0x38);
              // M_1D974:
              vw_44 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
              opt = 2;
            }
          break;

          case 2:
            if ((wordrg47 & con(0x4)) == con(0x0))
            {
              // M_1DA21:
              if (wordrg2 != con(0x5))
                opt = 2;
              else
              {
                vw_38 = con(0x36);
                opt = 1;
              }
            }
            else
            {
              if (wordrg2 != con(0x4))
                opt = 2;
              else
              {
                vw_38 = con(0x35);
                opt = 1;
              }
            }
          break;

          case 3:
            opt = 2;
          break;

          default: throw(THROW_DMABORT);
        }
      }
      switch (opt)
      {
        case 0:
          // M_1D98D:
          if ((vw_48 & con(0x2)) != con(0x0))
          {
            vw_44 = SKW_FIND_LADDAR_AROUND(vw_28, (argw1 != con(0x4)) ? con(0x1) : con(0xffffffff), &prec_00, vw_24);
            if (vw_44 < con(0x0))
            {
              vw_38 = con(0x37);
              vw_40 = con(0x10);
              // M_1D974:
              vw_44 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
            }
            else
            {
              vw_38 = ((argw1 != con(0x4)) ? 1 : 0) + con(0x39);
              // M_1D9EE:
              vw_40 = con(0x100);
            }
          }
        break;

        case 1:
          // M_1DA2C:
          vw_44 = (SKW_0cee_06dc(vw_28, vw_24) + con(0x2)) & con(0x3);
          // M_1D9EE:
          vw_40 = con(0x100);
        break;

        case 2:
        break;
      }
      // M_1DA4C:
      if ((vw_40 & ddata.s350.v1e0576) == con(0x0))
        goto M_preexit;
      vw_2c = ddata.v1d3248;
      if (prec_00 == NULL || (vw_38 != con(0x39) && vw_38 != con(0x3a)))
      {
        // M_1DAB8:
        x16 wordrg107;
        if (argw1 != con(0x4))
          wordrg107 = con(0x1);
        else
          wordrg107 = con(0xffffffff);
        vw_4c = SKW_LOCATE_OTHER_LEVEL(ddata.v1d3248, &vw_28, &vw_24, wordrg107, NULL);
        if (vw_4c < con(0x0))
          goto M_preexit;
        if (vw_38 == con(0x37))
        {
          x8*** hlpptr1 = &ddata.v1e03cc[vw_4c];
          x8** hlpptr2 = *hlpptr1 + vw_28;
          x8* hlpptr3 = *hlpptr2 + vw_24;
          x16 wordrg46 = unsignedword(*hlpptr3);
          vw_48 = wordrg46;
          if (ubrshift(*hlpptr3, con(0x5)) != con(0x2) || ((wordrg46 & con(0x8)) == con(0x0)))
            goto M_preexit;
        }
      }
      else
      {
        vw_28 = ulrshift(prec_00->u6.w, con(0x5), con(0xb));
        vw_24 = urshift(prec_00->u6.w, con(0xb));
        vw_4c = urshift(prec_00->u2.w, con(0x7));
      }
      // M_1DB51:
      if (!SKW_IS_CREATURE_ALLOWED_ON_LEVEL(ddata.s350.v1e054c, vw_4c))
        goto M_preexit;
      vbool_08 = true;
      SKW_1c9a_0648(vw_4c);
      wordrg5 = vw_28; // adj
      argw0 = vw_24;
      vw_24 = con(0xffffffff);
      vw_28 = con(0xffffffff);
    }
  }
  else
  {
    vbool_0c = false;
    // M_1DC07:
    vw_44 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
  }
  // M_1DC0B:
  // M_1DC19:
  // M_1DC22:
  if (wordrg5 < con(0x0) || wordrg5 >= ddata.savegamewa)
    goto M_preexit;
  if ((argw0 < con(0x0)) || argw0 >= ddata.savegamewb)
    // M_1DC3B:
    // M_1DC40:
    goto M_preexit;
  if (vb_50 != con(0x0))
  {
    if (UI8CAST(vb_54) < UI8CAST(con(0x7)))
    {
      if (vb_54 == con(0x3))
      {
        SKW_19f0_045a(wordrg5, argw0);
        vw_48 = ddata.v1e08ae;
        x8 byterg144 = CUTX8(urshift(vw_48, con(0x5)));
        if (byterg144 != con(0x0) && (byterg144 != con(0x6) || (vw_48 & con(0x5)) != con(0x0)))
          // M_1DE90:
          vbool_10 = true;
        goto M_exit;
      }
    }
    else if (UI8CAST(vb_54) <= UI8CAST(con(0x7)))
    {
      vbool_10 = !R_1BA1B(wordrg5, argw0);
      flag = !vbool_10;
      if (!flag)
        SKW_19f0_045a(wordrg5, argw0);
      goto M_exit;
    }
    else if (vb_54 == con(0x8))
    {
      x16 wordrg3 = wordrg5;
      SKW_19f0_045a(wordrg3, argw0);
      ui8 byterg100 = CUTX8(urshift(ddata.v1e08ae, con(0x5)));
      if (byterg100 <= con(0x7))
      {
        switch (byterg100)
        {
          case 1:
          case 2:
            // M_1DE90:
            vbool_10 = true;
          goto M_exit;

          case 3:
          case 7:
          goto M_exit;

          case 4:
            vw_48 = unsignedword(CUTX8(ddata.v1e08ae) & con(0x7));
            if (vw_48 != con(0x0))
            {
              wordrg5 = vw_48;
              if (wordrg5 != con(0x5) && wordrg5 != con(0x1))
              {
                ddata.v1e08c4 = SKW_QUERY_DOOR_STRENGTH(SKW_IS_REBIRTH_ALTAR(SKW_GET_ADDRESS_OF_TILE_RECORD(wordrg3, argw0)));
                if (wordrg5 != con(0x4))
                {
                  x16 wordrg44 = ddata.v1e08c4;
                  if (wordrg44 > con(0x1))
                  {
                    x16 wordrg23 = ddata.v1e08c4 >> con(0x1);
                    if (wordrg5 != con(0x2))
                    {
                      if (wordrg44 > con(0x3))
                        ddata.v1e08c4 = wordrg23;
                      else
                        // M_1DE8A:
                        ddata.v1e08c4--;
                    }
                    else if (wordrg44 > con(0x3))
                    {
                      // ddata.v1e08c4 = wordrg23; overwritten in next line
                      // M_1DE8A:
                      ddata.v1e08c4 = wordrg23 / 2; // was full - half
                    }
                    else
                      ddata.v1e08c4 = con(0x1);
                  }
                }
              }
            }
            // M_1DE90:
            vbool_10 = true;
          goto M_exit;

          case 5:
            if ((ddata.v1e08ae & con(0x8)) == con(0x0))
            {
              ddata.v1e08b7 = SKW_GET_TELEPORTER_DETAIL(&ddata.v1e08b8, argw0, wordrg3) ? 1 : 0;
              if (ddata.v1e08b7 == con(0x0) || unsignedword(ddata.v1e08b8.b_04) == ddata.v1e0266 || unsignedword(ddata.v1e08b8.b_04) == ddata.v1e027c)
                // M_1DE90:
                vbool_10 = con(0x1);
            }
            else
            {
              recoptrrg2 = R_D283(wordrg3, argw0);
              if (recoptrrg2 == NULL)
                // M_1DE90:
                vbool_10 = true;
              else
              {
                vw_48 = urshift(recoptrrg2->u4.w, con(0x8));
                if (vw_48 == ddata.v1e0266 || vw_48 == ddata.v1e027c)
                {
                  // M_1DD7F:
                  vw_4c = ddata.v1d3248;
                  SKW_1c9a_0648(vw_48);
                  x16 wordrg112 = ulrshift(recoptrrg2->u2.w, con(0x6), con(0xb));
                  x16 wordrg45 = recoptrrg2->u2.w & con(0x1f);
                  vbool_10 = SKW_CREATURE_GO_THERE(vb_54, wordrg112, wordrg45, wordrg45, wordrg112, con(0x6));
                  SKW_1c9a_0648(vw_4c);
                }
                else
                  // M_1DE90:
                  vbool_10 = true;
              }
            }
          goto M_exit;

          case 6:
            if ((ddata.v1e08ae & con(0x5)) != con(0x0))
            {
              // M_1DE90:
              vbool_10 = true;
              goto M_exit;
            }
          case 0: // no break before
            // M_1DEBE:
            if (ddata.v1e0400 < con(0x32))
            {
              // M_1DE8A:
              ddata.v1e08c4 = ddata.v1e0400;
              // M_1DE90:
              vbool_10 = true;
            }
            else
              ddata.v1e08b6 = con(0x1);
          goto M_exit;

          default: throw(THROW_DMABORT);
        }
      }
    }
  }
  // M_1DEDF:
  SKW_19f0_045a(wordrg5, argw0);
   wordrg188; // TODO: really ugly
  if (ddata.s350.v1e0582 == con(0x0) || argw1 == con(0x6) || (wordrg188 = SKW_1c9a_1a48(con(0x1), ddata.s350.v1e0582), wordrg188 == con(0xffffffff)) || ((wordrg188 & (con(0x1) << ((argw1 + con(0x2)) & con(0x3)))) == con(0x0)))
  {
    bool doit = false;
    // M_1DF2D:
    if (vb_54 == con(0x4) || vb_54 == con(0x5))
    {
      // M_1DF3A:
      if (ddata.s350.v1e0552->b2 == con(0xff))
        vb_54 = con(0x0);
    }
    // M_1DF53:
    vw_48 = ddata.v1e08ae;
    ui8 bytrg100 = CUTX8(urshift(vw_48, con(0x5)));
    if (bytrg100 <= con(0x7))
    {
      x16 wordrg22 = vw_48 & con(0x1);
      x16 wordrg43 = vw_48 & con(0x8);
      switch (bytrg100)
      {
        case 0:
          vw_40 = con(0x1);
          doit = true;
        break;

        case 1:
          vw_40 = con(0x2);
          doit = true;
        break;

        case 2:
          if (wordrg43 == con(0x0))
            vw_40 = con(0x6);
          else if (wordrg22 == con(0x0))
          {
            if (!vbool_08)
              vw_40 = con(0x800c);
            else
              vw_40 = con(0xc);
          }
          else
            vw_40 = con(0x8024);
          doit = true;
        break;

        case 3:
          vw_40 = con(0x100);
          doit = true;
        break;

        case 4:
          vw_48 &= con(0x7);
          if (vw_48 != con(0x0) || (vb_54 == con(0x4)) || vb_54 == con(0x5))
          {
            // M_1E00C:
            if (vw_48 == con(0x5))
              vw_40 = con(0x2);
            else if (vw_48 != con(0x4))
            {
              if (ddata.v1e08b0 == con(0xffffffff))
                ddata.v1e08b0 = SKW_GET_TILE_RECORD_LINK(wordrg5, argw0);
              recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(ddata.v1e08b0);
              if (vw_20 == con(0x0) || ((recoptrrg2->u2.b.b1 & con(0x4)) == con(0x0)))
              {
                if ((recoptrrg2->u2.b.b1 & con(0x4)) == con(0x0) || (recoptrrg2->u2.b.b1 & con(0x2)) != con(0x0))
                {
                  x16 wordrg182;
                  if ((recoptrrg2->u2.b.b0 & con(0x20)) == con(0x0))
                    wordrg182 = con(0x1);
                  else
                    wordrg182 = urshift(ddata.s350.v1e0552->u0.w, con(0x6)) & con(0x3);
                  if (vw_48 > wordrg182)
                    vw_40 = con(0x4200);
                  else
                    vw_40 = con(0x2);
                }
                else
                  vw_40 = con(0x200);
              }
              else
              {
                if ((recoptrrg2->u2.b.b1 & con(0x2)) != con(0x0))
                  vw_40 = con(0x2);
                else
                  vw_40 = con(0x4200);
              }
            }
            else
              vw_40 = con(0x4200);
          }
          else
            vw_40 = con(0x2);
          doit = true;
        break;

        case 5:
          if (wordrg43 != con(0x0))
          {
            if (ddata.v1e08b0 == con(0xffffffff))
              ddata.v1e08b0 = SKW_GET_TILE_RECORD_LINK(wordrg5, argw0);
            vw_48 = ulrshift(SKW_GET_ADDRESS_OF_RECORD(ddata.v1e08b0)->u2.w, con(0x1), con(0xe));
            if (vw_48 == con(0x1) || vw_48 == con(0x3))
              vw_40 = con(0x400);
            else
              vw_40 = con(0x2);
            doit = true;
          }
          else
          {
            if (!SKW_GET_TELEPORTER_DETAIL(&ddata.v1e08b8, argw0, wordrg5))
            {
              vw_40 = con(0x402);
              doit = true;
            }
            else
            {
              ddata.v1e08b7 = con(0x1);
              if (SKW_IS_CREATURE_ALLOWED_ON_LEVEL(ddata.s350.v1e054c, unsignedword(ddata.v1e08b8.b_04)))
              {
                vw_40 = con(0x2000);
                doit = true;
              }
              // else don't do it
            }
          }
        break;

        case 6:
          if ((vw_48 & con(0x4)) != con(0x0))
            vw_40 = con(0x2);
          else
          {
            if (wordrg22 == con(0x0))
              vw_40 = con(0x40);
            else
              vw_40 = con(0x80);
          }
          doit = true;
        break;

        case 7:
        // don't do it
        break;

        default: throw(THROW_DMABORT);
      }
    }
    if (doit)
    {
      // M_1E1A2:
      x16 wordrg21 = vw_40 & ddata.s350.v1e0576;
      flag = wordrg21 == con(0x0);
      vw_40 = wordrg21;
      if (flag || (vb_54 == con(0x1) && ((DM2_ABS(argw0 - ddata.v1e08d4) + DM2_ABS(wordrg5 - ddata.v1e08d8)) <= con(0x1))))
        goto M_preexit;
      // M_1E1EB:
      x16 vw_34 = con(0x0);
      if (ddata.v1d3248 == ddata.v1e08d6 && wordrg5 == ddata.v1e08d8 && argw0 == ddata.v1e08d4)
        vw_34 |= con(0x800);
      if (!vbool_0c)
      {
        x16 wordrg31 = SKW_19f0_050f();
        if (wordrg31 != con(0xfffffffe) && (vw_20 == con(0x0) || SKW_QUERY_CREATURE_AI_SPEC_FROM_TYPE(wordrg31)->wa == con(0x0)))
          if (wordrg6 == con(0x0) || vbool_08 || (vw_14 = SKW_19f0_1511(wordrg31), vw_14 == con(0x0))) // TODO: silly vw_14-assignment
            // M_1E26A:
            // M_1E273:
            vw_34 |= con(0x1000);
      }
      // M_1E27B:
      if ((ddata.s350.v1e0576 & vw_34) != vw_34)
        goto M_preexit;
      if ((vb_54 == con(0x4)) || vb_54 == con(0x5))
      {
        // M_1E2A5:
        x16 wordrg3 = SKW_19f0_04bf();
        // M_1E2AA:
        for (;; wordrg3 = SKW_GET_NEXT_RECORD_LINK(wordrg3))
        {
          if (wordrg3 == con(0xfffffffe))
          {
            if (vb_54 != con(0x5) || vbool_18 || !SKW_19f0_13aa(wordrg5, argw0))
              break;
            goto M_preexit;
          }
          x16 wordrg42 = con(0x0);
          x16 vw_48_3 = urshift(wordrg3 & con(0x3c00), con(0xa));
          if (vw_48_3 != con(0xf))
          {
            if (vw_48_3 == con(0xe))
            {
              if (wordrg5 != unsignedword(ddata.s350.v1e0562.u.b.b_06) || unsignedword(ddata.s350.v1e0562.u.b.b_07) != argw0)
                // M_1E340:
                // M_1E347:
                // M_1E349:
              {
                recoptrrg2 = SKW_GET_ADDRESS_OF_RECORD(wordrg3);
                if (argw1 != con(0x6))
                  // M_1E369:
                  vw_3c = argw1;
                else
                  vw_3c = vw_44;
                // M_1E36C:
                if (ulrshift(ddata.savegametimarrp[recoptrrg2->u6.w].v.w_08, con(0x4), con(0xe)) != vw_3c)
                  // M_1E3AA:
                  wordrg42 = SKW_075f_06bd(recoptrrg2, recoptrrg2->u2.w);
              }
            }
          }
          else
          {
            x16 wordrg190 = SKW_GET_ADDRESS_OF_RECORD(wordrg3)->u2.w & con(0x7f);
            if (wordrg190 != con(0x7))
            {
              if (wordrg190 == con(0xe))
                vbool_18 = true;
            }
            else
              // M_1E3AA:
              wordrg42 = SKW_CALC_CLOUD_DAMAGE(wordrg3, ddata.s350.v1e054c);
          }
          // M_1E3AC:
          if (wordrg42 != con(0x0))
            goto M_preexit;
        }
      }
      // M_1E3E6:
      bool skip = false;
      if (vbool_0c)
      {
        ;
      }
      else if (ddata.v1e08d6 != ddata.v1d3248)
      {
        ;
      }
      else if ((table1d607e[ddata.s350.v1e0584].u.b[1] & con(0x40)) == con(0x0))
      {
        ;
      }
      else if ((ddata.s350.v1e0552->u0.b.b0 & con(0x20)) != con(0x0))
      {
        ;
      }
      else if ((urshift(ddata.v1e08ae, con(0x5)) & con(0xff)) != con(0x4))
      {
        ;
      }
      else if (SKW_CALC_SQUARE_DISTANCE(wordrg5, ddata.v1e08d8, ddata.v1e08d4, argw0) >= con(0x2))
      {
        ;
      }
      else if ((unsignedword(ddata.s350.v1e0562.u.b.b_06) == vw_28) && ((unsignedword(ddata.s350.v1e0562.u.b.b_07) == vw_24) && SKW_RAND02() == con(0x0)))
      {
        ;
      }
      else
        skip = true;
      if (!skip)
      {
        // M_1E490:
        vbool_10 = true;
        if (vbool_08 || (wordrg6 = vw_40, wordrg6 == con(0x400))) // TODO: wordrg6 ugly transfer here
        {
          SKW_2fcf_0434(ddata.s350.v1e054c, vw_24, wordrg5, vw_28, signedlong(argw0), false);
          if (ddata.v1d3248 != ddata.v1e102c || wordrg5 != ddata.v1e102a || ddata.v1e1028 != argw0)
          {
            // M_1E507:
            vw_4c = ddata.v1d3248;
            bool doit = false;
            if (vw_4c == ddata.v1e102c)
              doit = true;
            else if ((ddata.s350.v1e0576 & con(0x2000)) != con(0x0) && SKW_IS_CREATURE_ALLOWED_ON_LEVEL(ddata.s350.v1e054c, ddata.v1e102c))
            {
              SKW_1c9a_0648(ddata.v1e102c);
              doit = true;
            }
            if (doit)
            {
              // M_1E55E:
              vbool_10 = SKW_CREATURE_GO_THERE(vb_54 | CUTX8(vw_20), ddata.v1e1028, ddata.v1e102a, ddata.v1e102a, ddata.v1e1028, con(0x6));
              SKW_1c9a_0648(vw_4c);
            }
            else
              vbool_10 = false;
          }
        }
        else if (!vbool_0c)
        {
          if (wordrg6 == con(0x4000))
            return SKW_19f0_0d10(CUTX8(vw_30), vw_24, wordrg5, vw_28, argw0, vw_44);
          if ((wordrg6 & con(0x8000)) != con(0x0))
          {
            if (vb_54 != con(0x6))
            {
              x16 wordrg101 = ddata.s350.v1e0576;
              vw_34 = wordrg101;
              wordrg101 &= con(0xffff7db7);
              ddata.s350.v1e0576 = wordrg101;
              vbool_10 = SKW_CREATURE_GO_THERE(vb_54 | CUTX8(vw_20), argw0, table1d27fc[vw_44] + wordrg5, wordrg5, argw0 + table1d2804[vw_44], vw_44);
              ddata.s350.v1e0576 = vw_34;
            }
            else
              vbool_10 = false;
            if (!vbool_10)
            {
              if ((ddata.s350.v1e0576 & con(0x8)) != con(0x0))
              {
                ddata.s350.v1e0576 &= con(0x7fff);
                vbool_10 = SKW_CREATURE_GO_THERE(vb_54 | CUTX8(vw_20), vw_24, wordrg5, vw_28, argw0, vw_44);
                if (vbool_10)
                  vw_38 = con(0x38);
                ddata.s350.v1e0576 = vw_34;
              }
            }
            else
              vw_38 = con(0x5);
            if (!vbool_10)
              ddata.v1e08b6 = con(0x1);
          }
        }
      }
    }
  }

M_preexit: // M_1E6C7:
  if (vw_30 == con(0x0))
    goto M_exit;
  if (vbool_10)
  {
    if (!vbool_0c)
    {
      if (vw_14 == con(0x0) || !SKW_19f0_0891(con(0x82), vw_24, wordrg5, vw_28, argw0, con(0xffffffff)))
      {
        // M_1E726:
        if ((ddata.s350.v1e057a & con(0x20)) != con(0x0))
        {
          // M_1E7B2: // co-label M_1E7AE
          for (x16 vw_48_1 = con(0x0); vw_48_1 <= con(0x3); vw_48_1++)
          {
            if (vw_48_1 == vw_44)
              continue;
            x16 wordrg41 = vw_28 + table1d27fc[vw_48_1];
            x16 wordrg29 = vw_24 + table1d2804[vw_48_1];
            if ((((SKW_GET_TILE_VALUE(wordrg41, wordrg29) & con(0xff)) >> con(0x5)) & con(0xff)) != con(0x4))
              continue;
            if (!SKW_19f0_0d10(con(0x82), vw_24, wordrg41, vw_28, wordrg29, vw_48_1))
              continue;
            goto M_exit;
          }
        }
        // M_1E7BD:
        if (vb_54 != con(0x6))
        {
          if (vw_38 == con(0xffffffff))
          {
            if ((DM2_ABS(vw_24 - argw0) + DM2_ABS(vw_28 - wordrg5)) > con(0x1))
              vw_38 = con(0x1);
            else
              vw_38 = con(0x2);
          }
        }
        else
        {
          vw_44 = (vw_44 + con(0x2)) & con(0x3);
          vw_38 = con(0x9);
        }
        x16 vw_48_2 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
        if (vw_48_2 == vw_44 || (vw_48_2 != ((vw_44 + con(0x2)) & con(0x3)) && vw_38 == con(0x2)))
        {
          // M_1E89A:
          x16 wordrg109 = vw_48_2;
          if (wordrg109 == vw_44 || vw_38 == con(0x9))
          {
            if ((table1d613a[ddata.s350.v1e056e] & con(0x2)) != con(0x0) && vb_54 != con(0x6) && !vbool_08)
            {
              vw_38 = con(0x0);
            }
          }
          else
          {
            wordrg109++;
            wordrg109 &= con(0x3);
            if (wordrg109 != vw_44)
              vw_38 = con(0x3);
            else
              vw_38 = con(0x4);
          }
        }
        // M_1E856:
        else if ((vb_54 == con(0x4) || vb_54 == con(0x5)) && (table1d607e[ddata.s350.v1e0584].u.b[1] & con(0x1)) == con(0x0) && SKW_RAND02() != con(0x0))
        {
          // M_1E863:
          vw_38 = con(0x9);
        }
        else
        {
          SKW_19f0_0559(vw_44);
          goto M_exit;
        }
        // M_1E8F6:
        wordrg5 &= con(0x1f);
        ddata.s350.v1e0556->u.v.u18.b.b0 &= con(0xffffffe0);
        ddata.s350.v1e0556->u.v.u18.w |= wordrg5;
        wordrg5 = (ddata.s350.v1e0556->u.v.u18.w & con(0xfffffc1f)) | ((argw0 & con(0x1f)) << con(0x5));
        ddata.s350.v1e0556->u.v.u18.w = wordrg5;
        ddata.s350.v1e0556->u.v.u18.b.b1 &= con(0x3);
        ddata.s350.v1e0556->u.v.u18.w |= (ddata.v1d3248 & con(0x3f)) << con(0xa);
        ddata.s350.v1e0556->u.v.b1b = CUTX8(argw1);
        ddata.s350.v1e0556->u.v.b1d = CUTX8(vw_44);
        ddata.s350.v1e0556->u.v.b20 = vb_54;
        ddata.s350.v1e0556->u.v.b1a = CUTX8(vw_38);
        ddata.s350.v1e056f = con(0xfffffffc);
        goto M_exit;
      }
    }
    else
      ddata.s350.v1e056f = con(0xfffffffe);
  }
  else
    ddata.s350.v1e056f = con(0xfffffffd);
M_exit: // M_1E977:
  if (vbool_08)
    SKW_1c9a_0648(vw_2c);
  return vbool_10;
}

// Note: SKW_CHECK_RECOMPUTE_LIGHT called it with s_len8* args1 only
// extended this struct there, but first comparison seems to filter that
// M_226D1: code copied
// M_226CB: code copied
// M_233C9: code copied
// M_227E7: code copied
// M_21D48: code copied
// M_21C39: code copied
// M_22A07: code copied
// M_22D0C: code copied
// M_22CFB: code copied
// M_22A13: code copied
// M_22836: code copied
// M_22B26: code copied
// M_2283E: code copied
// M_236CC: code copied
// back == 1: to M_23A0E
// back == 2: to M_23A30
// back == 3: to M_22602
x8 SKW_1c9a_1bd8(x16 eaxw, x8 ebxb, x16 edxw, x16 argw0, c_sizex16* argp1, u_bbw* argp2)
{
  x16 wordrg5;
  t_gfxdata* gptrrg1;
  c_record* recoptrrg4;
  s_4bytearray* s4baptrrg1;
  x16* wptrrg11;
  t_gfxdata** gpptrrg12;
  s_4bytearray* s4baptrrg13;
  s_4bytearray* s4baptrrg14;
  x8* bptrrg16;
  t_gfxdata* gptrrg17;
  t_gfxdata* gptrrg18;
  s_32bytes* sptrrg21;
  s_32bytes* sptrrg4;
  t_gfxdata* gptrrg41;
  t_gfxdata* gptrrg42;
  t_gfxdata* criticalptrrg1; // TODO HERE
  c_sizex16* sx16ptrrg11;
  c_sizex16* sx16ptrrg12;
  x16 vw_04;
  x8 vba_08[0x33];
  x16 vw_44;
  s_4bytearray* p4ba_68;
  s_4bytearray* p4ba_78;
  t_gfxdata** ppg_8c;
  s_4bytearray* p4ba_90;
  x16* pw_98;
  x16 vw_a8;
  u_bbwlong vs_ac;
  //  x8 vb_ad;  PART OF v_ac! TO BE ADJUSTED!
  //  o32 vae;
  c_sizex16* psx16_b4;
  t_gfxdata* pg_bc;
  x16 vw_c8;
  x16 vw_d0;
  x16 vw_d4;
  x16 vw_d8;
  x16 vw_e4;
  x16 vw_104;
  x16 vw_108;
  x16 vw_110;
  x16 vw_114;
  x16 vw_118;
  x16 vw_11c;
  x16 vw_120;
  x16 vw_124;
  x16 vw_128;
  x16 vw_130;
  x16 vw_134;
  x8 vb_138;
  x8 vb_13c;
  x8 vb_140; // or8
  x8 vb_144;
  x8 vb_148; // or8
  x16 parw04;
  x16 parw05;
  bool flag;

	// SPX: moved variables before goto
	x16 vw_f4_1;
	x32* hlpptr2;
	x32 hlpidx2;
	x16 wordrg41;

  vw_04 = eaxw;
  vb_148 = ebxb;
  if (argp1->s_00.b_07 == con(0x0))
  {
    argp1->s_00.u_02.b.b0 &= con(0xffffffe0);
    wordrg5 = argp1->s_00.u_02.w | (vw_04 & con(0x1f));
    argp1->s_00.u_02.w = (wordrg5 & con(0xfffffc1f)) | ((edxw & con(0x1f)) << con(0x5));
    argp1->s_00.u_02.b.b1 &= con(0x3);
    argp1->s_00.u_02.w = argp1->s_00.u_04.w = argp1->s_00.u_02.w | ((ddata.v1d3248 & con(0x3f)) << con(0xa));
    argp1->s_00.b_06 = con(0x0);
    return con(0x0);
  }
  x32 vl_3c = signedlong(argw0) << con(0x2);
  p4ba_68 = UPCAST(s_4bytearray, DM2_ALLOC_LOBIGPOOL_MEMORY(vl_3c, true));
  p4ba_90 = UPCAST(s_4bytearray, DM2_ALLOC_LOBIGPOOL_MEMORY(con(0x400)));
  x32 vl_7c = 4 * unsignedlong(CUTX8(ddata.savegamep4->w0[con(0x2)]));
  ppg_8c = UPCAST(t_gfxdata*, DM2_ALLOC_LOBIGPOOL_MEMORY(vl_7c, true));
  x32 vl_9c_1 = 2 * unsignedlong(CUTX8(ddata.savegamep4->w0[2]));
  vl_7c += vl_9c_1;
  pw_98 = UPCAST(x16, DM2_ALLOC_LOBIGPOOL_MEMORY(vl_9c_1));
  bool vbool_a0 = false;
  DM2_FILL_I16TABLE(pw_98, con(0xffffffff), unsignedlong(CUTX8(ddata.savegamep4->w0[con(0x2)])));
  x32 vl_9c = signedlong(ddata.savegamewa) << con(0x7);
  pg_bc = UPCAST(t_gfxdata, DM2_ALLOC_LOBIGPOOL_MEMORY(vl_9c));
  vw_e4 = ddata.v1d3248;
  ppg_8c[vw_e4] = pg_bc;
  vl_7c += vl_3c + vl_9c + con(0x400);
  bool vbool_48 = false;
  bool vbool_40 = false;
  bool vbool_a4 = false;
  vw_d8 = con(0xffffffff);
  vb_140 = con(0x0);
  vw_d4 = con(0x0);
  vb_138 = table1d6290[vb_148];
  bool vbool_50;
  if (vb_138 != con(0x0))
    vbool_50 = false;
  else
    vbool_50 = (table1d607e[ddata.s350.v1e0584].u.l & con(0x2000)) != con(0x0); // made that bool, checked only vs. 0
  bool vbool_60 = (vb_148 & con(0xffffff1f)) == con(0x5);
  p4ba_78 = p4ba_68;
  psx16_b4 = argp1;
  // M_21FFD:
  x16 wordrg6;
  x16 vw_70; // TODO: initialized for sure?
  x16 vw_74; // TODO: initialized for sure?
  x16 vw_94; // TODO: initialized for sure?
  x16 vw_f4;
  bool vbool_b8; // TODO: initialized for sure?
  x16 vw_c4; // TODO: initialized for sure?
  x16 vw_cc;
  x16 vw_dc;
  x16 vw_e0 = con(0x0); // TODO: ATTENTION! ORIGINAL BUG? WAS UNINITIALIZED!
  x16 vw_e8;
  x16 vw_ec;
  x16 vw_f0;
  x16 vw_f8;
  x16 vw_fc;
  x16 vw_100;
  x16 vw_10c;
  x16 vw_12c;
  for (vw_10c = con(0x0); ; p4ba_78++, psx16_b4++, vw_10c++)
  {
    if (vw_10c >= argw0)
    {
      x16 wordrg15 = ddata.s350.v1e0576 & con(0x2000);
      flag = wordrg15 == con(0x0);
      vw_94 = wordrg15;
      if (!flag)
      {
        x16 wordrg14 = ddata.s350.v1e0576 & con(0x118);
        flag = wordrg14 == con(0x0);
        vw_94 = wordrg14;
        if (!flag)
        {
          vw_74 = ddata.s350.v1e0576 & con(0x110);
          vw_70 = ddata.s350.v1e0576 & con(0x108);
        }
      }
      // M_2205D:
      if (vbool_40 || (vw_d4 != con(0x0)))
        // M_2206D:
        DM2_ZERO_MEMORY(DOWNCAST(t_gfxdata, pg_bc), vl_9c);
      // M_22078:
      vw_cc = con(0x0);
      wordrg6 = con(0x0);
      flag = (vb_148 & con(0xffffff1f)) != con(0x8);
      vbool_b8 = !flag;
      if (!flag)
      {
        wordrg5 = con(0x0);
        DM2_ZERO_MEMORY(DOWNCAST(x8, vba_08), con(0x33));
        vba_08[0x32] = con(0xffffffff);
      }
      vw_e8 = con(0x0);
      vw_dc = ddata.v1d3248;
      vw_c8 = ddata.v1d3248;
      vw_f4 = vw_04;
      vw_100 = vw_04;
      vw_12c = edxw;
      vw_ec = edxw;
      vw_130 = con(0x1);
      vw_f8 = con(0xffffffff);
      vb_144 = con(0x0);
      vw_f0 = con(0xffffffff);
      SKW_19f0_045a(vw_04, edxw);
      if (vbool_48)
      {
        ddata.v1e08b7 = SKW_GET_TELEPORTER_DETAIL(&ddata.v1e08b8, edxw, vw_04) ? 1 : 0;
        if (ddata.v1e08b7 != con(0x0))
        {
          vw_f0 = unsignedword(ddata.v1e08b8.b_04);
          vw_108 = unsignedword(ddata.v1e08b8.b_02);
          vw_128 = unsignedword(ddata.v1e08b8.b_03);
        }
      }
      break;
    }
    psx16_b4->s_00.b_06 = con(0xffffffff);
    p4ba_78->barr_00[con(0x0)] = CUTX8(psx16_b4->w_0c) & con(0x1f);
    p4ba_78->barr_00[con(0x1)] = CUTX8(ulrshift(psx16_b4->w_0c, con(0x6), con(0xb)));
    p4ba_78->barr_00[con(0x2)] = CUTX8(urshift(psx16_b4->w_0c, con(0xa)));
    x8 byterg4 = table1d62ee[psx16_b4->s_00.b_07];
    psx16_b4->b_0e[con(0x2)] = byterg4;
    vb_140 |= byterg4;
    ui8 ubyterg1 = psx16_b4->s_00.b_07;
    if (ubyterg1 < con(0xa))
    {
      if (ubyterg1 < con(0x5))
      {
        if (ubyterg1 >= con(0x1))
        {
          if (ubyterg1 <= con(0x1))
          {
            vw_114 = ddata.s350.v1e054e->uc.w & con(0x1f);
            vw_118 = ulrshift(ddata.s350.v1e054e->uc.w, con(0x6), con(0xb));
            vw_110 = urshift(ddata.s350.v1e054e->uc.w, con(0xa));
            // M_21C39:
            vbool_48 = true;
          }
          else if (ubyterg1 == con(0x3))
          {
            vw_134 = ddata.s350.v1e0556->u0c.w & con(0x1f);
            vw_d0 = ulrshift(ddata.s350.v1e0556->u0c.w, con(0x6), con(0xb));
            vw_11c = urshift(ddata.s350.v1e0556->u0c.w, con(0xa));
            if (vw_134 == ddata.v1e08d6)
              if (vw_d0 == ddata.v1e08d8)
              {
                if (vw_11c == ddata.v1e08d4)
                {
                  byterg4 ^= con(0x3);
                  psx16_b4->b_0e[con(0x2)] = byterg4;
                }
              }
            // M_21C39:
            vbool_48 = true;
          }
        }
      }
      else if (ubyterg1 <= con(0x5))
      {
        wordrg6 = psx16_b4->u_08.w;
        x16 vw_88;
        if (ddata.v1d3248 != ddata.v1e08d6)
          vw_88 = con(0x64);
        else
          vw_88 = SKW_CALC_SQUARE_DISTANCE(unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.v1e08d8, ddata.v1e08d4, unsignedword(ddata.s350.v1e0562.u.b.b_07));
        p4ba_78->barr_00[con(0x3)] = CUTX8(DM2_MAX(vw_88, wordrg6));
      }
      else
      {
        if (ubyterg1 > con(0x7))
          vbool_40 = true;
        // M_21D48:
        vw_c4 = ddata.s350.v1e0578;
      }
    }
    else if (ubyterg1 <= con(0xa))
      // M_21D48:
      vw_c4 = ddata.s350.v1e0578;
    else if (ubyterg1 < con(0x17))
    {
      if (ubyterg1 <= con(0xb))
        // M_21C39:
        vbool_48 = true;
      else if (ubyterg1 == con(0xc))
      {
        if (signedword(p4ba_78->barr_00[con(0x2)]) != ddata.v1d3248)
          vw_44 = con(0x64);
        else
        {
          x16 wordrg48 = SKW_CALC_SQUARE_DISTANCE(unsignedword(ddata.s350.v1e0562.u.b.b_06), signedword(p4ba_78->barr_00[con(0x0)]), p4ba_78->barr_00[con(0x1)], unsignedword(ddata.s350.v1e0562.u.b.b_07));
          vw_44 = DM2_MAX(con(0x1), wordrg48);
        }
        p4ba_78->barr_00[con(0x3)] = CUTX8(vw_44);
        // M_21C39:
        vbool_48 = true;
      }
    }
    else if (ubyterg1 <= con(0x17))
    {
      ddata.s350.v1e0576 = con(0x227);
      wordrg6 = con(0x0);
      ddata.v1e0974 = con(0x0);
      ddata.v1e0978 = con(0x0);
    }
    else if (ubyterg1 <= con(0x18))
      p4ba_78->barr_00[con(0x3)] = con(0x7f);
    else if (ubyterg1 == con(0x1b))
      ddata.s350.v1e0576 = con(0x36e7);
    // M_21D80:
    vw_124 = con(0x0);
    if (vb_138 == con(0x0) && (table1d62ee[psx16_b4->s_00.b_07] & con(0x20)) != con(0x0))
    {
      if (ddata.savegames1.b2 == con(0x0) || ((ddata.s350.v1e0552->u0.b.b1 & con(0x4)) != con(0x0)))
        // M_21DC6:
        vw_120 = con(0x0);
      else
        vw_120 = con(0x1);
      // M_21DC8:
      bool skip2 = false;
      if (vw_120 == con(0x0))
      {
        if (ddata.v1e0286 == con(0x0) || ddata.savegames1.w0 >= con(0x0) || ((ddata.s350.v1e0552->u0.b.b1 & con(0x8)) != con(0x0)))
          // M_21DF6:
          vw_124 = con(0x0);
        else
          vw_124 = con(0x1);
        // M_21DF8:
        if (vw_124 == con(0x0))
          skip2 = true;
      }
      if (!skip2)
      {
        // M_21E04:
        x16 wordrg32;
        x16 wordrg46;
        if (ddata.s350.v1e0571 != ddata.v1e08d6)
        {
          wordrg32 = unsignedword(ddata.v1e03c8[ddata.v1e08d6].b4[con(0x3)]) + ddata.v1e08d4;
          x16 wordrg210 = unsignedword(ddata.v1e03c8[ddata.v1e08d6].b4[con(0x2)]) + ddata.v1e08d8;
          vw_104 = (unsignedword(ddata.v1e03c8[ddata.s350.v1e0571].b4[con(0x3)]));
          x16 wordrg47 = unsignedword(ddata.s350.v1e0562.u.b.b_07) + vw_104;
          vw_104 = unsignedword(ddata.v1e03c8[ddata.s350.v1e0571].b4[con(0x2)]);
          wordrg46 = SKW_CALC_SQUARE_DISTANCE(unsignedword(ddata.s350.v1e0562.u.b.b_06) + vw_104, wordrg210, wordrg32, wordrg47);
        }
        else
        {
          wordrg32 = ddata.v1e08d4;
          wordrg46 = SKW_CALC_SQUARE_DISTANCE(unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.v1e08d8, wordrg32, unsignedword(ddata.s350.v1e0562.u.b.b_07));
        }
        vw_fc = wordrg46;
        bool doit = false;
        x16 wordrg11 = CUTX16(SKW_RAND());
        wordrg6 = wordrg11;
        wordrg11 &= con(0x8000);
        if (wordrg11 != con(0x0))
          doit = true;
        else
        {
          if (wordrg46 == con(0x0))
            // M_21F0C:
            wordrg11 = con(0x0);
          else
          {
            bool skip = false;
            wordrg11 = wordrg46;
            if (wordrg11 == con(0x1))
            {
              vw_104 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
              wordrg11 = SKW_CALC_VECTOR_DIR(unsignedword(ddata.s350.v1e0562.u.b.b_06), ddata.v1e08d8, ddata.v1e08d4, unsignedword(ddata.s350.v1e0562.u.b.b_07));
              if (wordrg11 == vw_104)
              {
                // M_21F0C: (copied)
                wordrg11 = con(0x0);
                skip = true;
              }
            }
            if (!skip)
              // M_21F05:
              wordrg11 = con(0x1);
          }
          // M_21F0E:
          if (wordrg11 != con(0x0))
            doit = true;
        }
        if (doit)
        {
          // M_21F16:
          if (vw_fc > con(0x4) || (vw_120 != con(0x0) && (((lextended(wordrg6 & con(0xf)) - (con(0x4) - vw_fc)) > lextended(ddata.s350.v1e0552->w14 & con(0xf))) || ((wordrg6 & con(0x4000)) != con(0x0)))) || (vw_124 != con(0x0) && ((signedlong(vw_fc) * signedlong(ddata.v1e0286) - ((unsignedlong(wordrg6) >> con(0x8)) & con(0x7))) > lextended(ddata.s350.v1e0552->w14 & con(0xf)))))
          {
            // M_21FA4:
            wordrg6 &= con(0x70);
            if (wordrg6 == con(0x0))
              psx16_b4->s_00.b_00 >>= con(0x3);
            else
              psx16_b4->s_00.b_00 = con(0xffffffff);
          }
        }
      }
    }
    // M_21FBE:
    vw_e8 = signedword(psx16_b4->s_00.b_00);
    if ((psx16_b4->b_0e[con(0x2)] & con(0x2)) != con(0x0))
      vw_e8++;
    vw_d4 = DM2_MAX(vw_d4, vw_e8);
  }
  // M_22602:
  for(;;)
  { 
    x16 back; // added
    x16 vw_c0 = ddata.v1d3248;
    if ((vb_140 & con(0x1)) != con(0x0))
    {
      p4ba_78 = p4ba_68;
      psx16_b4 = argp1;
      // M_2310B: co-label M_230FF
      for (vw_10c = con(0x0); vw_10c < argw0; vw_10c++, psx16_b4++, p4ba_78++)
      {
        x16 wordrg3 = vw_e8;
        if (signedword(psx16_b4->s_00.b_00) < wordrg3 || ((psx16_b4->b_0e[con(0x2)] & con(0x1)) == con(0x0)))
          continue;
        ui8 ubyterg157 = psx16_b4->s_00.b_07;
        x16 mode = 0; // jumptarget of the switch-gate, default = 0 to M_23D06, added
        if (ubyterg157 <= con(0x1b))
        {
          switch (ubyterg157)
          {
            case 0:
              // M_226D1:
              vbool_a4 = true;
            break;

            case 1:
              if (vw_c0 != vw_110 || vw_f4 != vw_114 || vw_12c != vw_118)
              {
                // M_22EF1:
                if (vw_f0 == vw_110 && vw_108 == vw_114)
                {
                  flag = vw_128 != vw_118;
                  // M_226CB:
                  if (!flag)
                    // M_226D1:
                    vbool_a4 = true;
                }
              }
              else
                // M_226D1:
                vbool_a4 = true;
            break;

            case 2:
              {
                ui16 uwordrg1 = psx16_b4->u_08.w;
                if (uwordrg1 < con(0x2))
                {
                  if (uwordrg1 == con(0x0) && ddata.v1d3248 == ddata.v1e08d6 && vw_f4 == ddata.v1e08d8)
                  {
                    flag = vw_12c != ddata.v1e08d4;
                    // M_226CB:
                    if (!flag)
                      // M_226D1:
                      vbool_a4 = true;
                  }
                }
                else if (uwordrg1 <= con(0x2))
                {
                  if (SKW_CALC_VECTOR_DIR(ddata.v1e08d8, vw_f4, vw_12c, ddata.v1e08d4) == ddata.v1e08da)
                  {
                    x16 wordrg196 = SKW_19f0_0207(ddata.v1e08d8, vw_f4, vw_12c, ddata.v1e08d4, R_1BA1B);
                    vw_fc = wordrg196;
                    if (wordrg196 > con(0x0))
                      if (wordrg196 <= psx16_b4->u_0a.w)
                        // M_226D1:
                        vbool_a4 = true;
                  }
                }
                else if (uwordrg1 == con(0x4))
                {
                  if (SKW_CALC_SQUARE_DISTANCE(vw_f4, ddata.v1e08d8, ddata.v1e08d4, vw_12c) == psx16_b4->u_0a.w)
                  {
                    bool skip = false;
                    bool boolrg19;
                    if (vw_f4 == ddata.v1e08d8 || vw_12c == ddata.v1e08d4)
                    {
                      // M_227B0:
                      if (SKW_19f0_0207(ddata.v1e08d8, vw_f4, vw_12c, ddata.v1e08d4, SKW_1c9a_1bae) != con(0x0))
                      {
                        boolrg19 = false;
                        skip = true;
                      }
                    }
                    // M_227DC:
                    if (!skip)
                      boolrg19 = true;
                    // M_227E5:
                    flag = !boolrg19;
                    // M_227E7:
                    if (!flag)
                      // M_226D1:
                      vbool_a4 = true;
                  }
                }
              }
            break;

            case 3:
              if (vw_c0 != vw_11c || vw_f4 != vw_134 || vw_12c != vw_d0)
              {
                // M_22E4A:
                if (vw_f0 == vw_11c && vw_108 == vw_134)
                {
                  flag = vw_128 != vw_d0;
                  // M_226CB:
                  if (!flag)
                    // M_226D1:
                    vbool_a4 = true;
                }
              }
              else
                // M_226D1:
                vbool_a4 = true;
            break;

            case 4:
              if (vw_c0 == ddata.v1e08d6)
              {
                flag = SKW_CALC_SQUARE_DISTANCE(vw_f4, ddata.v1e08d8, ddata.v1e08d4, vw_12c) != con(0x2);
                // M_226CB:
                if (!flag)
                  // M_226D1:
                  vbool_a4 = true;
              }
            break;

            case 5:
              if (psx16_b4->w_0c != con(0xffffffff))
                mode = 2;
              else
              {
                bool boolrg18;
                if (psx16_b4->s_00.b_06 > con(0x0))
                {
                  if ((ddata.v1d62ec & con(0x1)) == con(0x0))
                    ddata.v1d62ec >>= con(0x1);
                  else
                    ddata.v1d62ec = (ddata.v1d62ec / 2) ^ con(0xb400);
                  boolrg18 = (ddata.v1d62ec & con(0x7)) == con(0x0);
                }
                else
                  boolrg18 = true;
                if (boolrg18)
                {
                  x32 longrg111;
                  if (vw_c0 != ddata.v1e08d6)
                  {
                    vw_a8 = ((ddata.v1e03c8[vw_c0].w8 & con(0x3f)) != (ddata.v1e03c8[ddata.v1e08d6].w8 & con(0x3f))) ? 1 : 0;
                    x16 wordrg31 = unsignedword(ddata.v1e03c8[ddata.v1e08d6].b4[con(0x3)]) + ddata.v1e08d4;
                    vw_104 = unsignedword(ddata.v1e03c8[vw_c0].b4[con(0x3)]) + vw_12c;
                    longrg111 = signedlong(SKW_CALC_SQUARE_DISTANCE(unsignedword(ddata.v1e03c8[vw_c0].b4[con(0x2)]) + vw_f4, unsignedword(ddata.v1e03c8[ddata.v1e08d6].b4[con(0x2)]) + ddata.v1e08d8, wordrg31, vw_104)) << CUTX8(vw_a8); // BUGFIX 4/2014
                  }
                  else
                    longrg111 = signedlong(SKW_CALC_SQUARE_DISTANCE(vw_f4, ddata.v1e08d8, ddata.v1e08d4, vw_12c));
                  vw_fc = CUTX16(longrg111);
                  if (signedword(p4ba_78->barr_00[con(0x3)]) >= vw_fc)
                  {
                    ;
                  }
                  else if (vw_c0 != ddata.v1e08d6)
                  {
                    // M_22D0C:
                    vbool_a4 = true;
                    // M_22A13:
                    p4ba_78->barr_00[con(0x3)] = CUTX8(vw_fc);
                  }
                  else if (vw_fc >= con(0x5) || (vw_f4 != ddata.v1e08d8 && vw_12c != ddata.v1e08d4))
                    // M_22CFB:
                    mode = 3;
                  else
                  {
                    // M_22CCF:
                    if (SKW_19f0_0207(ddata.v1e08d8, vw_f4, vw_12c, ddata.v1e08d4, SKW_1c9a_1bae) != con(0x0))
                      mode = 5;
                    else
                      // M_22CFB:
                      mode = 3;
                  }
                }
              }
            break;

            case 6:
              if (vw_c0 == ddata.v1e08d6)
              {
                ddata.s350.v1e0578 &= psx16_b4->u_0a.w;
                // M_22836:
                vbool_a4 = SKW_19f0_0891(con(0x1), vw_12c, ddata.v1e08d8, vw_f4, ddata.v1e08d4, con(0xffffffff));
                // M_2283E:
                ddata.s350.v1e0578 = vw_c4;
              }
            break;

            case 7:
              if (vw_c0 == ddata.v1e08d6)
              {
                ddata.s350.v1e0578 &= psx16_b4->u_0a.w;
                parw05 = con(0xffffffff);
                parw04 = ddata.v1e08d4;
                wordrg3 = ddata.v1e08d8;
                mode = 1;
              }
            break;

            case 8:
            case 9:
              if (signedword(psx16_b4->s_00.b_00) == vw_e8)
              {
                ddata.s350.v1e0578 &= psx16_b4->u_0a.w;
                vbool_a4 = SKW_19f0_05e8(psx16_b4->u_08.w, &psx16_b4->s_00.u_02.w, vw_f4, pg_bc, vw_12c, con(0xffffffff), psx16_b4->s_00.b_07 == con(0x9));
                if (vbool_a4)
                {
                  psx16_b4->s_00.u_04.b.b0 &= con(0xffffffe0);
                  x16 wordrg31 = psx16_b4->s_00.u_04.w | (ddata.v1e08a8 & con(0x1f));
                  psx16_b4->s_00.u_04.w = wordrg31;
                  psx16_b4->s_00.u_04.w = (wordrg31 & con(0xfffffc1f)) | (ddata.v1e08aa & con(0x1f)) << con(0x5);
                  psx16_b4->s_00.u_04.b.b1 &= con(0x3);
                  psx16_b4->s_00.u_04.w |= (ddata.v1e08ac & con(0x3f)) << con(0xa);
                  x8 byterg156;
                  if (ddata.v1e08a8 != vw_f4 || ddata.v1e08aa != vw_12c || ddata.v1e08ac != vw_c0)
                  {
                    // M_2296B:
                    gptrrg17 = ppg_8c[ddata.v1e08ac];
                    gptrrg42 = gptrrg17 + (signedlong(ddata.v1e08a8) << con(0x7));
                    byterg156 = gptrrg42[4 * ddata.v1e08aa] - con(0x1);
                  }
                  else
                    byterg156 = CUTX8(vw_e8);
                  // M_22996:
                  psx16_b4->s_00.b_06 = byterg156;
                }
                // M_2283E:
                ddata.s350.v1e0578 = vw_c4;
              }
            break;

            case 10:
              if (vw_c0 == ddata.v1e08d6 && (table1d613a[ddata.s350.v1e056e] & con(0x3)) == con(0x0))
              {
                ddata.s350.v1e0578 &= psx16_b4->u_0a.w;
                parw05 = ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe));
                parw04 = con(0xffffffff);
                wordrg3 = con(0xffffffff);
                mode = 1;
              }
            break;

            case 11:
              mode = 2;
            break;

            case 12:
              if (signedword(p4ba_78->barr_00[con(0x2)]) == vw_c0)
              {
                vw_104 = signedword(p4ba_78->barr_00[con(0x3)]);
                vw_fc = SKW_CALC_SQUARE_DISTANCE(vw_f4, signedword(p4ba_78->barr_00[con(0x0)]), signedword(p4ba_78->barr_00[con(0x1)]), vw_12c);
                if (vw_104 > vw_fc)
                {
                  mode = 4;
                  break; // !!
                }
              }
              // M_22DC5:
              if (signedword(p4ba_78->barr_00[con(0x2)]) == vw_f0)
              {
                vw_104 = signedword(p4ba_78->barr_00[con(0x3)]);
                vw_fc = SKW_CALC_SQUARE_DISTANCE(vw_108, signedword(p4ba_78->barr_00[con(0x0)]), p4ba_78->barr_00[con(0x1)], vw_128);
                if (vw_fc < vw_104)
                  mode = 4;
              }
            break;

            case 13:
              if (psx16_b4->w_0c != con(0xffffffff))
                mode = 2;
              else if (wordrg3 > con(0x0))
              {
                if (psx16_b4->s_00.b_06 <= con(0x0))
                  // M_226D1:
                  vbool_a4 = true;
                else
                {
                  if ((ddata.v1d62ec & con(0x1)) == con(0x0))
                    ddata.v1d62ec >>= con(0x1);
                  else
                    ddata.v1d62ec = (ddata.v1d62ec / 2) ^ con(0xb400);
                  flag = (ddata.v1d62ec & con(0x7)) != con(0x0);
                  // M_226CB:
                  if (!flag)
                    // M_226D1:
                    vbool_a4 = true;
                }
              }
            break;

            case 14:
              {
                x16 wordrg190 = psx16_b4->u_08.w;
                vw_fc = wordrg190;
                if (wordrg190 >= con(0x0))
                {
                  if (wordrg190 > con(0x0))
                  {
                    flag = SKW_RAND16(vw_fc) != con(0x0);
                    // M_226CB:
                    if (!flag)
                      // M_226D1:
                      vbool_a4 = true;
                  }
                }
                else
                {
                  flag = SKW_RAND16(-wordrg190) == con(0x0);
                  // M_227E7:
                  if (!flag)
                    // M_226D1:
                    vbool_a4 = true;
                }
              }
            break;

            case 15:
            case 16:
              // M_22B26:
              vbool_a4 = SKW_19f0_2165(con(0x0), vw_12c, vw_f4, vw_f4, vw_12c, con(0xffffffff), psx16_b4->u_08.w);
            break;

            case 17:
            case 18:
            case 19:
            case 22:
            case 26:
            break;

            case 20:
              // M_22F8F:
              // M_22F98:
              if (vw_f4 != vw_04 || vw_12c != edxw)
              {
                x16 wordrg117 = SKW_19f0_050f();
                if (wordrg117 != con(0xfffffffe))
                  if (SKW_1c9a_0006(wordrg117, psx16_b4->u_08.w) != con(0x0))
                  {
                    SKW_1c9a_19d4(wordrg117, vw_12c, psx16_b4->u_0a.w, vw_f4);
                    // M_226D1:
                    vbool_a4 = true;
                  }
              }
            break;

            case 21:
              // M_22B26:
              vbool_a4 = SKW_CREATURE_GO_THERE(psx16_b4->u_08.b.b0, vw_12c, vw_f4, vw_f4, vw_12c, con(0xffffffff));
            break;

            case 23:
              if ((ddata.v1e08ae & con(0x10)) != con(0x0))
              {
                x16 wordrg184 = vw_f8;
                if (wordrg184 == con(0xffffffff))
                  wordrg184 = ddata.v1e0258;
                SKW_ADD_BACKGROUND_LIGHT_FROM_TILE(vw_e8, vw_f4, vw_12c, wordrg184, con(0x3));
              }
            break;

            case 24:
              if ((ddata.v1e08ae & con(0x10)) != con(0x0))
              {
                x16 wordrg157 = SKW_1c9a_1b16(psx16_b4->u_08.w, psx16_b4->u_0a.w);
                vw_fc = wordrg157;
                if (wordrg157 != con(0xffffffff))
                {
                  if (wordrg157 < signedword(p4ba_78->barr_00[con(0x3)]))
                  {
                    if (wordrg157 == con(0x0) || signedword(p4ba_78->barr_00[con(0x3)]) < con(0x7f) || (psx16_b4->s_00.b_00 == con(0x0)))
                    {
                      // M_22A00:
                      vbool_a4 = true;
                      // M_22A07:
                      psx16_b4->b_0e[con(0x2)] &= con(0xfffffffb);
                    }
                    else
                      p4ba_78->barr_00[con(0x3)] = CUTX8(vw_fc);
                  }
                }
              }
            break;

            case 25:
              if (vw_f8 != con(0xffffffff))
              {
                if ((ddata.v1e08ae & con(0x10)) != con(0x0))
                {
                  x16 wordrg184 = SKW_1c9a_1a48(con(0x1), ddata.s350.v1e0582);
                  if (wordrg184 != con(0xffffffff))
                  {
                    x32 wordrg421 = con(0x1) << ((vw_f8 + con(0x2)) & con(0x3));
                    flag = (wordrg184 & wordrg421) != con(0x0);
                    // M_226CB:
                    if (!flag)
                      // M_226D1:
                      vbool_a4 = true;
                  }
                }
              }
            break;

            case 27:
              {
                x8 byterg41 = CUTX8(vw_e8) + con(0x1);
                if (vw_c0 != ddata.v1d62a4)
                {
                  if (vw_f0 >= con(0x0) && vw_f0 == ddata.v1d62a4)
                  {
                    sptrrg21 = &ddata.v1e08cc[vw_108];
                    sptrrg21->barr_00[vw_128] = byterg41;
                  }
                }
                else
                {
                  sptrrg21 = &ddata.v1e08cc[vw_f4];
                  sptrrg21->barr_00[vw_12c] = byterg41;
                }
                // M_23086:
                x8 byterg42 = CUTX8(vw_e8) + con(0x1);
                if (vw_c0 != ddata.v1d62a6)
                {
                  if (vw_f0 >= con(0x0) && vw_f0 == ddata.v1d62a6)
                  {
                    sptrrg21 = &ddata.v1e08c8[vw_108];
                    sptrrg21->barr_00[vw_128] = byterg42;
                  }
                }
                else
                {
                  sptrrg21 = &ddata.v1e08c8[vw_f4];
                  sptrrg21->barr_00[vw_12c] = byterg42;
                }
              }
            break;

            default: throw(THROW_DMABORT);
          }
        }
        switch (mode)
        {
          case 1:
            // M_22828:
            // M_22836:
            vbool_a4 = SKW_19f0_0891(con(0x0), vw_12c, wordrg3, vw_f4, parw04, parw05);
            // M_2283E:
            ddata.s350.v1e0578 = vw_c4;
          break;

          case 2:
            // M_22D18:
            if (signedword(p4ba_78->barr_00[con(0x2)]) != vw_c0 || signedword(p4ba_78->barr_00[con(0x0)]) != vw_f4 || signedword(p4ba_78->barr_00[con(0x1)]) != vw_12c)
            {
              // M_22D45:
              if (signedword(p4ba_78->barr_00[con(0x2)]) == vw_f0 && signedword(p4ba_78->barr_00[con(0x0)]) == vw_108)
              {
                flag = signedword(p4ba_78->barr_00[con(0x1)]) != vw_128;
                // M_226CB:
                if (!flag)
                  // M_226D1:
                  vbool_a4 = true;
              }
            }
            else
              // M_226D1:
              vbool_a4 = true;
          break;

          case 3: // see also mode 5
            // M_22D04:
            // M_22D0C:
            vbool_a4 = true;
            // M_22A13:
            p4ba_78->barr_00[con(0x3)] = CUTX8(vw_fc);
          break;

          case 4:
            // M_22E0E:
            vbool_a4 = true;
            p4ba_78->barr_00[con(0x3)] = CUTX8(vw_fc);
            if (CUTX8(vw_fc) == con(0x0))
              // M_22A07:
              psx16_b4->b_0e[con(0x2)] &= con(0xfffffffb);
          break;

          case 5: // is mode 3 with flag not set
          break;
        }
        // M_230D6:
        if (!vbool_a4)
          continue;
        if (!vbool_50 || ddata.v1d3248 == vw_c8 || ddata.v1d3248 == ddata.v1e08d6)
          break;
        vbool_a4 = false;
      }
    }
    // M_2311B:
    x16 wordrg45 = vw_e8 + ddata.v1e08c4;
    if (wordrg45 <= vw_d4)
    {
      s4baptrrg1 = &p4ba_90[wordrg6];
      s4baptrrg1->barr_00[con(0x0)] = CUTX8(vw_f4);
      s4baptrrg1->barr_00[con(0x1)] = CUTX8(vw_12c);
      s4baptrrg1->barr_00[con(0x2)] = CUTX8(vw_c0);
      wordrg6++;
      wordrg6 = unsignedword(CUTX8(wordrg6));
      vba_08[wordrg45]++;
    }
    vs_ac.u.b_00 = CUTX8(wordrg45);
    vs_ac.u.b_01 = CUTX8(vw_f8);
    vs_ac.u.w_02 &= con(0x3ff);
    vs_ac.u.w_02 |= (vw_dc & con(0x3f)) << con(0xa);
    vs_ac.u.w_02 &= con(0xffe0);
    x16 wordrg29 = vs_ac.u.w_02 | (vw_100 & con(0x1f));
    vs_ac.u.w_02 = wordrg29;
    vs_ac.u.w_02 = wordrg29 & con(0xfffffc1f);
    vs_ac.u.w_02 |= (vw_ec & con(0x1f)) << con(0x5);
    x32* hlpptr = UPCAST(x32, pg_bc);
    x32 hlpidx = ((signedlong(vw_f4) << con(0x7)) + 4 * signedlong(vw_12c)) / 4;
    hlpptr[hlpidx] = vs_ac.l_00;
    // M_23A30:
    for(;;)
    {
      back = 0;
      if (vbool_a4)
      {
        if ((psx16_b4->b_0e[con(0x2)] & con(0x10)) == con(0x0))
        {
          x16 wordrg176;
          if ((psx16_b4->b_0e[con(0x2)] & con(0x20)) == con(0x0))
          {
            psx16_b4->s_00.u_02.b.b0 &= con(0xffffffe0);
            x16 wordrg28 = psx16_b4->s_00.u_02.w | (vw_f4 & con(0x1f));
            psx16_b4->s_00.u_02.w = (wordrg28 & con(0xfffffc1f)) | ((vw_12c & con(0x1f)) << con(0x5));
            wordrg176 = vw_c0;
          }
          else
          {
            psx16_b4->s_00.u_02.b.b0 &= con(0xffffffe0);
            x16 wordrg27 = psx16_b4->s_00.u_02.w | (ddata.v1e08d8 & con(0x1f));
            psx16_b4->s_00.u_02.w = wordrg27;
            psx16_b4->s_00.u_02.w = (wordrg27 & con(0xfffffc1f)) | ((ddata.v1e08d4 & con(0x1f)) << con(0x5));
            wordrg176 = ddata.v1e08d6;
          }
          wordrg176 &= con(0x3f);
          wordrg176 <<= con(0xa);
          psx16_b4->s_00.u_02.b.b1 &= con(0x3);
          psx16_b4->s_00.u_02.w |= wordrg176;
          if (vb_144 == con(0x0))
            psx16_b4->s_00.b_06 = CUTX8(vw_e8);
          else
          {
            psx16_b4->s_00.b_06 = CUTX8(vw_e8) - con(0x1);
            vw_f4 = vw_100;
            vw_12c = vw_ec;
            vw_c0 = vw_dc;
          }
          psx16_b4->s_00.u_04.b.b0 &= con(0xffffffe0);
          x16 wordrg26 = psx16_b4->s_00.u_04.w | (vw_f4 & con(0x1f));
          psx16_b4->s_00.u_04.w = (wordrg26 & con(0xfffffc1f)) | ((vw_12c & con(0x1f)) << con(0x5));
          psx16_b4->s_00.u_04.b.b1 &= con(0x3);
          psx16_b4->s_00.u_04.w |= (vw_c0 & con(0x3f)) << con(0xa);
        }
        vw_d8 = vw_10c;
        if (vw_10c == con(0x0) && ((psx16_b4->b_0e[con(0x2)] & con(0x4)) == con(0x0) || signedword(psx16_b4->s_00.b_00) <= vw_e8))
          goto M_endpath;
        // M_23B7D:
        argw0 = vw_10c + con(0x1);
        for(;;)
        {
          x16 wordrg25 = vw_10c - con(0x1);
          vw_10c = wordrg25;
          if (argp1[vw_10c].s_00.b_01 >= con(0x0))
          {
            if ((psx16_b4->b_0e[con(0x2)] & con(0x4)) == con(0x0))
              argw0 = wordrg25 + con(0x1);
            if ((psx16_b4->b_0e[con(0x2)] & con(0x40)) == con(0x0))
            {
              x16 wordrg44 = con(0x0);
              x16 wordrg3;
              do
              {
                x16 wordrg143 = signedword(argp1[vw_10c].s_00.b_01);
                vw_f4 = wordrg143;
                if (wordrg143 > con(0x0))
                  wordrg44 += wordrg143;
                sx16ptrrg11 = &argp1[vw_10c];
                wordrg25 = wordrg44 + vw_e8;
                if (wordrg25 < signedword(sx16ptrrg11->s_00.b_00))
                  sx16ptrrg11->s_00.b_00 = CUTX8(vw_e8) + CUTX8(wordrg44);
                wordrg3 = vw_10c - con(0x1);
                vw_10c = wordrg3;
              } while (wordrg3 >= con(0x0));
            }
            break;
          }
          if (wordrg25 == con(0x0))
            goto M_endpath;
        }
        vb_140 = con(0x0);
        vw_d4 = con(0x0);
        
        // M_23CEF:
        for (vw_10c = con(0x0); vw_10c < argw0; vw_10c++)
        {
          sx16ptrrg12 = &argp1[vw_10c];
          vw_fc = unsignedword(sx16ptrrg12->b_0e[con(0x2)]);
          vb_140 |= CUTX8(vw_fc);
          if (vw_10c == con(0x0) || (sx16ptrrg12->s_00.b_06 < con(0x0)))
          {
            // M_23CAA:
            x16 wordrg43 = signedword(argp1[vw_10c].s_00.b_00);
            if ((vw_fc & con(0x2)) != con(0x0))
              wordrg43++;
            x16 wordrg24 = wordrg43;
            vw_d4 = DM2_MAX(wordrg24, vw_d4);
          }
          // M_23CEB:
        }
        vbool_a4 = false;
      }
      // M_23D04:
      for(;;)
      {
        vw_f8 = (vw_f8 + vw_e0) & con(0x3);
        // M_23D12:
        for(;;)
        {
          back = 0;
          x16 wordrg23 = vw_130;
          flag = --wordrg23 == con(0x0);
          vw_130 = wordrg23;
          if (!flag)
          {
            if ((vw_cc != ((wordrg6 + con(0x1)) & con(0xff))))
            {
              x16 wordrg188 = vw_dc;
              if (wordrg188 != ddata.v1d3248)
              {
                SKW_1c9a_0648(vw_dc);
                pg_bc = ppg_8c[vw_dc];
              }
              x16 opt; // pathselector
              if (vw_94 == con(0x0) || (wordrg188 = vw_130, wordrg188 > con(0x2)))
              {
                bool doit = false;
                // M_22343:
                vw_f4 = vw_100 + table1d27fc[vw_f8];
                vw_12c = vw_ec + table1d2804[vw_f8];
                bool boolrg153;
                if (vw_f4 < con(0x0) || vw_f4 >= ddata.savegamewa)
                  // M_2237C:
                  boolrg153 = true;
                else
                  boolrg153 = false;
                // M_22385:
                if (boolrg153)
                  doit = true;
                else
                {
                  if (vw_12c < con(0x0) || vw_12c >= ddata.savegamewb)
                    // M_2239E:
                    boolrg153 = true;
                  // M_223A3:
                  if (boolrg153)
                    doit = true;
                }
                if (doit)
                  opt = 0;
                else
                  opt = 2;
              }
              else if (wordrg188 != con(0x2))
              {
                if (vw_74 == con(0x0))
                  opt = 0;
                else
                {
                  vw_f8 = con(0x4);
                  opt = 1;
                }
              }
              else if (vw_70 == con(0x0))
                opt = 0;
              else
              {
                vw_f8 = con(0x5);
                opt = 1;
              }
              switch (opt)
              {
                case 0:
                break;

                case 1:
                  // M_22333:
                  vw_f4 = vw_100;
                  vw_12c = vw_ec;
                case 2: // no break before
                  // M_223AB:
                  ddata.v1e08b6 = con(0x0);
                  vb_144 = pg_bc[(vw_f4 << con(0x7)) + 4 * vw_12c];
                  if (vb_144 == con(0x0) || vw_f8 >= con(0x4))
                  {
                    // M_223E0:
                    x16 wordrg199;
                    if (SKW_CREATURE_GO_THERE(vb_148, vw_ec, vw_f4, vw_100, vw_12c, vw_f8))
                    {
                      vw_f0 = con(0xffffffff);
                      bool skip = false;
                      wordrg199 = ddata.v1e08ac;
                      if (wordrg199 == ddata.v1d3248)
                      {
                        if (vw_f8 < con(0x4))
                        {
                          if (ddata.v1e08b7 == con(0x0))
                          {
                            if (wordrg199 = ddata.v1e08a8, wordrg199 != vw_f4 || (wordrg199 = ddata.v1e08aa, wordrg199 != vw_12c))
                            {
                              // M_225A9:
                              wordrg199 = ddata.v1d3248;
                              vw_f0 = wordrg199;
                            }
                          }
                          else
                          {
                            vw_f0 = unsignedword(ddata.v1e08b8.b_04);
                            vw_108 = unsignedword(ddata.v1e08b8.b_02);
                            wordrg199 = unsignedword(ddata.v1e08b8.b_03);
                            skip = true;
                          }
                        }
                      }
                      else
                      {
                        if (ppg_8c[ddata.v1e08ac] == NULL)
                        {
                          x32 longrg101 = unsignedlong(ulrshift(ddata.v1e03c8[ddata.v1e08ac].w8, con(0x5), con(0xb))) << con(0x7);
                          vl_9c = longrg101 + con(0x80);
                          longrg101 += con(0x148);
                          if (longrg101 <= dm2_allochandler.bigpool_available)
                          {
                            pg_bc = UPCAST(t_gfxdata, DM2_ALLOC_LOBIGPOOL_MEMORY(vl_9c, true));
                            vl_7c += vl_9c;
                          }
                          else
                          {
                            x16 wordrg3 = SKW_3e74_5888();
                            SKW_ALLOC_CPXHEAP_MEM(wordrg3, vl_9c);
                            for (vw_fc = con(0x0); unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)])) > vw_fc; vw_fc++)
                            {
                              x16 wordrg22 = pw_98[vw_fc];
                              if (wordrg22 >= con(0x0))
                                ppg_8c[vw_fc] = SKW_3e74_5817(wordrg22);
                            }
                            pw_98[ddata.v1e08ac] = wordrg3;
                            vbool_a0 = true;
                            pg_bc = SKW_3e74_5817(wordrg3);
                            DM2_ZERO_MEMORY(DOWNCAST(t_gfxdata, pg_bc), vl_9c);
                          }
                          gpptrrg12 = &ppg_8c[ddata.v1e08ac];
                          *gpptrrg12 = pg_bc;
                        }
                        wordrg199 = vw_f8;
                        if (wordrg199 < con(0x4))
                        {
                          wordrg199 = ddata.v1d3248;
                          vw_f0 = wordrg199;
                        }
                        SKW_1c9a_0648(ddata.v1e08ac);
                        pg_bc = ppg_8c[ddata.v1d3248];
                      }
                      if (!skip)
                      {
                        // M_225B2:
                        vw_108 = vw_f4;
                        wordrg199 = vw_12c;
                      }
                      // M_225BC:
                      vw_128 = wordrg199;
                      vb_144 = con(0x0);
                    }
                    else
                      vb_144 = con(0xffffffff);
                  }
                  // M_225C5:
                  if (vb_144 != con(0x0))
                  {
                    if (vb_144 != con(0xffffffff) || vw_f8 >= con(0x4))
                      back = 2;
                    else
                    {
                      vb_13c = ddata.v1e08b6;
                      vb_144 = CUTX8(vw_e8);
                      if ((vb_140 & con(0x2)) == con(0x0))
                        back = 1;
                      else
                      {
                        if ((vb_140 & con(0x8)) != con(0x0))
                          SKW_19f0_045a(vw_f4, vw_12c);
                        psx16_b4 = argp1;
                        // M_239FE: // co-label M_239F6
                        for (vw_10c = con(0x0); ; vw_10c++, psx16_b4++)
                        {
                          bool dospec = false;
                          bool doctrl = false;
                          bool boolrg1;
                          if (vw_10c >= argw0)
                          {
                            back = 1;
                            break;
                          }
                          x16 vw_58 = vw_e8;
                          if ((psx16_b4->s_00.b_00 + con(0x1)) < vw_e8 || (psx16_b4->b_0e[con(0x2)] & con(0x2)) == con(0x0))
                            continue;
                          ui8 uwordrg100 = psx16_b4->s_00.b_07;
                          if (uwordrg100 < con(0x12))
                          {
                            bool doit = false;
                            if (uwordrg100 < con(0x8))
                            {
                              if (uwordrg100 >= con(0x2))
                              {
                                ;
                              }
                              else if (uwordrg100 <= con(0x2))
                              {
                                if (ddata.v1d3248 != ddata.v1e08d6)
                                {
                                  ;
                                }
                                else if (vw_f4 != ddata.v1e08d8)
                                {
                                  ;
                                }
                                else if (vw_12c != ddata.v1e08d4)
                                {
                                  ;
                                }
                                else
                                {
                                  ui16 uwordrg1 = psx16_b4->u_08.w;
                                  if (uwordrg1 < con(0x1))
                                  {
                                    ;
                                  }
                                  else if (uwordrg1 <= con(0x1))
                                  {
                                    bool skip = false;
                                    if (psx16_b4->u_0a.w != con(0x0))
                                    {
                                      x16 wordrg181 = con(0x1) << (SKW_CALC_VECTOR_DIR(ddata.v1e08d8, vw_100, vw_ec, ddata.v1e08d4) - ddata.v1e08da) & con(0x3);
                                      if ((wordrg181 & psx16_b4->u_0a.w) == con(0x0))
                                      {
                                        // M_236CC:
                                        vb_144 = con(0xffffffff);
                                        skip = true;
                                      }
                                    }
                                    if (!skip)
                                      // M_233C9:
                                      vbool_a4 = true;
                                  }
                                  else if (uwordrg1 == con(0x3))
                                  {
                                    x16 wordrg115 = unsignedword(SKW_GET_TILE_VALUE(vw_f4 + table1d27fc[vw_f8], vw_12c + table1d2804[vw_f8]));
                                    if ((urshift(wordrg115, con(0x5)) & con(0xff)) != con(0x2) || (wordrg115 & con(0x8)) == con(0x0) || (wordrg115 & con(0x1)) != con(0x0)) // BUGFIX 4/2014
                                      // M_236CC:
                                      vb_144 = con(0xffffffff);
                                    else
                                      // M_233C9:
                                      vbool_a4 = true;
                                  }
                                }
                              }
                              else if (uwordrg100 == con(0x3))
                              {
                                bool boolrg16;
                                if (ddata.v1d3248 != ddata.v1e08d6 || vw_f4 != ddata.v1e08d8 || vw_12c != ddata.v1e08d4)
                                  // M_23318:
                                  boolrg16 = false;
                                else
                                  boolrg16 = true;
                                // M_2331A:
                                vbool_a4 = boolrg16;
                              }
                            }
                            else if (uwordrg100 <= con(0x8))
                            {
                              if (CUTX8(urshift(ddata.v1e08ae, con(0x5))) != con(0x0))
                                doit = true;
                            }
                            else if (uwordrg100 < con(0xf))
                            {
                              if (uwordrg100 == con(0x9))
                                doit = true;
                            }
                            else if (uwordrg100 <= con(0xf) || uwordrg100 == con(0x11))
                            {
                              // M_23533:
                              bool boolrg14 = SKW_19f0_2165(con(0x0), vw_ec, vw_f4, vw_100, vw_12c, vw_f8, psx16_b4->u_08.w);
                              vbool_a4 = boolrg14;
                              if (!boolrg14 && ddata.v1e08be != con(0x0))
                                // M_236CC:
                                vb_144 = con(0xffffffff);
                            }
                            if (doit)
                            {
                              // M_23453:
                              ddata.s350.v1e0578 &= psx16_b4->u_0a.w;
                              bool boolrg13 = SKW_19f0_05e8(psx16_b4->u_08.w, &psx16_b4->s_00.u_02.w, vw_100, pg_bc, vw_ec, vw_f8, psx16_b4->s_00.b_07 == con(0x9));
                              vbool_a4 = boolrg13;
                              if (boolrg13)
                              {
                                psx16_b4->s_00.u_04.b.b0 &= con(0xffffffe0);
                                x16 wordrg21 = psx16_b4->s_00.u_04.w | (ddata.v1e08a8 & con(0x1f));
                                psx16_b4->s_00.u_04.w = wordrg21;
                                psx16_b4->s_00.u_04.w = (wordrg21 & con(0xfffffc1f)) | ((ddata.v1e08aa & con(0x1f)) << con(0x5));
                                psx16_b4->s_00.u_04.b.b1 &= con(0x3);
                                psx16_b4->s_00.u_04.w |= ((ddata.v1e08ac & con(0x3f)) << con(0xa));
                                gptrrg18 = ppg_8c[ddata.v1e08ac];
                                gptrrg41 = gptrrg18 + (signedlong(ddata.v1e08a8) << con(0x7));
                                psx16_b4->s_00.b_06 = gptrrg41[4 * ddata.v1e08aa] - con(0x1);
                              }
                              ddata.s350.v1e0578 = vw_c4;
                            }
                          }
                          else if (uwordrg100 <= con(0x12))
                            dospec = true;
                          else if (uwordrg100 < con(0x16))
                          {
                            if (uwordrg100 <= con(0x13))
                            {
                              if (ulrshift(ddata.s350.v1e054e->ue.w, con(0x6), con(0xe)) == vw_f8)
                                dospec = true;
                            }
                            else if (uwordrg100 == con(0x14))
                            {
                              x16 wordrg112 = SKW_19f0_050f();
                              if (wordrg112 != con(0xfffffffe))
                              {
                                if (SKW_1c9a_0006(wordrg112, psx16_b4->u_08.w) != con(0x0))
                                {
                                  SKW_1c9a_19d4(wordrg112, vw_12c, psx16_b4->u_0a.w, vw_f4);
                                  // M_233C9:
                                  vbool_a4 = true;
                                }
                              }
                            }
                          }
                          else if (uwordrg100 <= con(0x16))
                          {
                            if ((ddata.v1e08ae & con(0x10)) != con(0x0))
                            {
                              boolrg1 = SKW_19f0_2813(psx16_b4->u_0a.b.b0, vw_ec, vw_f4, vw_100, vw_12c, vw_f8, psx16_b4->u_08.w);
                              doctrl = true;
                            }
                          }
                          else if (uwordrg100 < con(0x1a))
                          {
                            if (uwordrg100 == con(0x17) && (ddata.v1e08ae & con(0x10)) != con(0x0))
                            {
                              SKW_ADD_BACKGROUND_LIGHT_FROM_TILE(vw_58, vw_f4, vw_12c, vw_f8, con(0x4));
                              // M_236CC:
                              vb_144 = con(0xffffffff);
                            }
                          }
                          else if (uwordrg100 <= con(0x1a))
                          {
                            bool doit = false;
                            if (psx16_b4->u_08.w != con(0x1))
                              doit = true;
                            else
                            {
                              // M_237DB: and M_237E4:
                              if (ddata.v1d3248 == ddata.v1e08d6 && vw_f4 == ddata.v1e08d8 && vw_12c == ddata.v1e08d4)
                                doit = true;
                            }
                            if (doit)
                            {
                              // M_237EC:
                              if (SKW_19f0_0d10(psx16_b4->u_0a.b.b0, vw_ec, vw_f4, vw_100, vw_12c, vw_f8) && (psx16_b4->u_08.w != con(0x2) || SKW_CALC_SQUARE_DISTANCE(vw_f4, ddata.v1e08d8, ddata.v1e08d4, vw_12c) == con(0x1)))
                              {
                                // M_2385B:
                                SKW_19f0_045a(vw_f4, vw_12c);
                                if (psx16_b4->u_0a.w != con(0x0) || ((ddata.v1e08ae & con(0x7)) != con(0x0)))
                                {
                                  // M_23883:
                                  if (psx16_b4->u_0a.w != con(0x1) || (CUTX8(ddata.v1e08ae) & con(0x7)) != con(0x4))
                                  {
                                    // M_238A2:
                                    if (ddata.v1e08b0 == con(0xffffffff))
                                      ddata.v1e08b0 = SKW_GET_TILE_RECORD_LINK(vw_f4, vw_12c);
                                    recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(ddata.v1e08b0);
                                    // from middle M_238F1:
                                    if ((recoptrrg4->u2.b.b1 & con(0x4)) == con(0x0) || (((recoptrrg4->u2.b.b1 & con(0x2)) == con(0x0) || psx16_b4->u_0a.w != con(0x0)) && ((recoptrrg4->u2.b.b1 & con(0x2)) != con(0x0) || psx16_b4->u_0a.w != con(0x1))))
                                      // M_233C9:
                                      vbool_a4 = true;
                                  }
                                }
                              }
                            }
                          }
                          else if (uwordrg100 != con(0x1b))
                          {
                            ;
                          }
                          else
                          {
                            if (vb_13c == con(0x0))
                              vw_fc = vw_e8 + con(0x1);
                            else
                              vw_fc = (con(0x1) << CUTX8(vw_f8)) | con(0x80);
                            if (vw_c0 != ddata.v1d62a4)
                            {
                              if (vw_f0 >= con(0x0) && vw_f0 == ddata.v1d62a4)
                              {
                                bptrrg16 = &ddata.v1e08cc[vw_108].barr_00[vw_128];
                                *bptrrg16 |= CUTX8(vw_fc);
                              }
                            }
                            else
                            {
                              bptrrg16 = &ddata.v1e08cc[vw_f4].barr_00[vw_12c];
                              *bptrrg16 |= CUTX8(vw_fc);
                            }
                            // M_2397D:
                            if (vw_c0 != ddata.v1d62a6)
                            {
                              if (vw_f0 >= con(0x0) && vw_f0 == ddata.v1d62a6)
                              {
                                sptrrg4 = &ddata.v1e08c8[vw_108];
                                sptrrg4->barr_00[vw_128] |= CUTX8(vw_fc);
                              }
                            }
                            else
                            {
                              sptrrg4 = &ddata.v1e08c8[vw_f4];
                              sptrrg4->barr_00[vw_12c] |= CUTX8(vw_fc);
                            }
                          }
                          if (dospec)
                          {
                            // M_2359B:
                            x16 wordrg111 = SKW_19f0_050f();
                            if (wordrg111 != con(0xfffffffe))
                            {
                              recoptrrg4 = SKW_GET_ADDRESS_OF_RECORD(wordrg111);
                              if (unsignedword(recoptrrg4->u4.b.b0) == psx16_b4->u_08.w)
                              {
                                flag = psx16_b4->u_0a.w == con(0x1);
                                vbool_a4 = flag;
                                if (!flag)
                                {
                                  if (psx16_b4->u_0a.w != con(0x2))
                                  {
                                    vw_120 = vw_f4 + table1d27fc[vw_f8];
                                    vw_124 = vw_12c + table1d2804[vw_f8];
                                    if (ddata.v1d3248 != ddata.v1e08d6 || vw_120 != ddata.v1e08d8 || vw_124 != ddata.v1e08d4)
                                    {
                                      // M_2368A:
                                      x16 wordrg10 = SKW_GET_CREATURE_AT(vw_120, vw_124);
                                      if (wordrg10 == con(0xffffffff) || (SKW_QUERY_CREATURE_AI_SPEC_FLAGS(wordrg10) & con(0x1)) != con(0x0))
                                        // M_236BF:
                                        boolrg1 = false;
                                      else
                                        // M_236B8:
                                        boolrg1 = true;
                                    }
                                    else
                                      // M_236B8:
                                      boolrg1 = true;
                                    doctrl = true;
                                  }
                                  else
                                  {
                                    x16 wordrg19 = recoptrrg4->u2.w;
                                    // M_235FA: // co-label M_23631:
                                    for (;; wordrg19 = SKW_GET_NEXT_RECORD_LINK(wordrg19))
                                    {
                                      if (wordrg19 == con(0xfffffffe))
                                        break;
                                      if (urshift(wordrg19 & con(0x3c00), con(0xa)) != con(0xe))
                                      {
                                        if (urshift(wordrg19, con(0xe)) != vw_f8)
                                        {
                                          // M_233C9:
                                          vbool_a4 = true;
                                          break;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          if (doctrl)
                          {
                            // M_236C1:
                            vbool_a4 = boolrg1;
                            if (!boolrg1)
                            {
                              // M_236CC:
                              vb_144 = con(0xffffffff);
                            }
                          }
                          // M_239CD:
                          if (vbool_a4)
                          {
                            if (!vbool_50 || ddata.v1d3248 == vw_c8 || ddata.v1d3248 == ddata.v1e08d6)
                            {
                              back = 1;
                              break;
                            }
                            vbool_a4 = false;
                          }
                        }
                      }
                    }
                  }
                  else
                  {
                    vw_f4 = ddata.v1e08a8;
                    vw_12c = ddata.v1e08aa;
                    if (pg_bc[(signedlong(vw_f4) << con(0x7)) + 4 * signedlong(vw_12c)] == con(0x0))
                      back = 3;
                  }
                break;
              }
              break; // loopout to M_23D04 and backwards
            }
          }
          else
          {
            // M_23D3C:
            if (wordrg6 == vw_cc)
              goto M_preendpath;
            // M_2215D:
            for(;;)
            {
              s4baptrrg14 = &p4ba_90[vw_cc];
              vw_100 = unsignedword(s4baptrrg14->barr_00[con(0x0)]);
              vw_ec = unsignedword(s4baptrrg14->barr_00[con(0x1)]);
              vw_dc = unsignedword(s4baptrrg14->barr_00[con(0x2)]);
              vw_cc = unsignedword(CUTX8(vw_cc + con(0x1)));
              if (vw_dc != ddata.v1d3248)
              {
                SKW_1c9a_0648(vw_dc);
                pg_bc = ppg_8c[vw_dc];
              }
              vw_e8 = unsignedword(pg_bc[(signedlong(vw_100) << con(0x7)) + 4 * signedlong(vw_ec)]);
              bool doit1 = false;
              if (!vbool_b8)
                doit1 = true;
              else
              {
                for(;;)
                {
                  x16 wordrg42 = wordrg5 + con(0x1);
                  if (wordrg5 >= vw_e8)
                  {
                    flag = --vba_08[wordrg5] != con(0x0);
                    if (!flag)
                      wordrg5 = wordrg42;
                    doit1 = true;
                    break;
                  }
                  if (vba_08[wordrg5] != con(0x0))
                    break;
                  wordrg5 = wordrg42;
                }
              }
              if (doit1)
              {
                // M_2222D:
                if (vw_e8 > vw_d4)
                  goto M_preendpath;
                if (vw_e8 > con(0x6))
                  vb_148 |= con(0x40);
                if (vbool_60 && vw_e8 > con(0x1))
                {
                  vb_148 = (vb_148 & con(0xffffffe0)) | con(0x4);
                  vbool_60 = false;
                }
                x16 wordrg18 = ddata.v1d62ec & con(0x1);
                vw_e0 = wordrg18;
                if (wordrg18 == con(0x0))
                  vw_e0 = wordrg18 - con(0x1);
                if ((ddata.v1d62ec & con(0x1)) == con(0x0))
                  ddata.v1d62ec >>= con(0x1);
                else
                  ddata.v1d62ec = (ddata.v1d62ec / 2) ^ con(0xb400);
                vw_f8 = ddata.v1d62ec & con(0x3);
                if (vw_94 == con(0x0))
                  vw_130 = con(0x5);
                else
                  vw_130 = con(0x7);
                break;
              }
              s4baptrrg13 = &p4ba_90[wordrg6];
              s4baptrrg13->barr_00[con(0x0)] = CUTX8(vw_100);
              s4baptrrg13->barr_00[con(0x1)] = CUTX8(vw_ec);
              s4baptrrg13->barr_00[con(0x2)] = CUTX8(vw_dc);
              wordrg6++;
              wordrg6 = unsignedword(CUTX8(wordrg6));
            }
          }
          if (back > 0)
            break;
        }
        if (back > 0)
          break;
      }
      if (back == 1)
      {
        // M_23A0E:
        if (vb_13c == con(0x0))
        {
          gptrrg1 = &pg_bc[(signedlong(vw_f4) << con(0x7))];
          gptrrg1 += vw_12c << con(0x2);
          *gptrrg1 = vb_144;
        }
      }
      if (back == 3)
        break;
    }
  }
  // deadend at this point

M_preendpath: // M_23D46:
  if (vw_d8 == con(0xffffffff))
    goto M_preexit;
M_endpath: // M_23D51:
  psx16_b4 = argp1 + vw_d8;
  vw_100 = psx16_b4->s_00.u_04.w & con(0x1f);
  vw_ec = ulrshift(psx16_b4->s_00.u_04.w, con(0x6), con(0xb));
  vw_dc = urshift(psx16_b4->s_00.u_04.w, con(0xa));
  vw_e8 = signedword(psx16_b4->s_00.b_06);
  for(;;)
  {
    if (--vw_e8 < con(0x0))
      break;
// TODO versionP0 had problems here - solved?
if (vw_dc < con(0x0))
  int stop=1;
   criticalptrrg1 = ppg_8c[vw_dc];
if (criticalptrrg1 == NULL) // that happens!!!
  int stop=1;
     hlpptr2 = UPCAST(x32, criticalptrrg1);
     hlpidx2 = ((signedlong(vw_100) << con(0x7)) + 4 * signedlong(vw_ec)) / 4;
    vs_ac.l_00 = hlpptr2[hlpidx2];
    wptrrg11 = &argp2[vw_e8].w;
    *wptrrg11 &= con(0xfffffff8);
    *wptrrg11 |= unsignedword(vs_ac.u.b_01) & con(0x7);
    *wptrrg11 &= con(0xff07);
    *wptrrg11 |= (vw_100 & con(0x1f)) * con(0x8);
    *wptrrg11 &= con(0xffffe0ff);
    *wptrrg11 |= (vw_ec & con(0x1f)) << con(0x8);
     wordrg41 = urshift(vs_ac.u.w_02, con(0xa));
    if (wordrg41 != vw_dc)
    {
      vw_dc = wordrg41;
      *wptrrg11 |= con(0x2000);
    }
    else
      *wptrrg11 &= con(0xffffdfff);
    vw_100 = vs_ac.u.w_02 & con(0x1f);
    vw_ec = ulrshift(vs_ac.u.w_02, con(0x6), con(0xb));
  }
M_preexit: // M_23E4E:
  if (!vbool_a0)
    goto M_exit;
  // M_23E7B:
  for ( vw_f4_1 = con(0x0); unsignedword(CUTX8(ddata.savegamep4->w0[con(0x2)])) > vw_f4_1; vw_f4_1++)
    if (pw_98[vw_f4_1] >= con(0x0))
      SKW_3e74_58a3(pw_98[vw_f4_1]);
M_exit: // M_23E8B:
  DM2_DEALLOC_LOBIGPOOL(vl_7c);
  SKW_1c9a_0648(vw_e4);
  return CUTX8(vw_d8);
}
